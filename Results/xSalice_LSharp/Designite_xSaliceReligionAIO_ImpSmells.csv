Implementation smell,Namespace,Class,File,Method,Description
Long Method,xSaliceReligionAIO,Initiator,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Initiator.cs,Initiator,The method has 302 lines of code.
Long Method,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The method has 129 lines of code.
Long Method,xSaliceReligionAIO,PluginLoader,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\PluginLoader.cs,PluginLoader,The method has 136 lines of code.
Long Method,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The method has 3184 lines of code.
Long Method,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The method has 100 lines of code.
Long Method,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The method has 116 lines of code.
Long Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The method has 120 lines of code.
Long Method,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The method has 124 lines of code.
Long Method,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The method has 118 lines of code.
Long Method,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The method has 109 lines of code.
Long Method,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The method has 105 lines of code.
Long Method,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The method has 121 lines of code.
Long Method,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The method has 109 lines of code.
Long Method,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The method has 108 lines of code.
Long Method,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The method has 146 lines of code.
Long Method,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The method has 118 lines of code.
Long Method,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastE,The method has 117 lines of code.
Long Method,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The method has 105 lines of code.
Long Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The method has 114 lines of code.
Long Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The method has 157 lines of code.
Long Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The method has 172 lines of code.
Complex Method,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Game_OnGameUpdate,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,OnAttack,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,Obj_SpellMissile_OnCreate,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,Cyclomatic complexity of the method is 16
Complex Method,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,Cyclomatic complexity of the method is 23
Complex Method,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetBestHeroTarget,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,Cyclomatic complexity of the method is 18
Complex Method,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldQ,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldW,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_R,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,UseSpells,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Charge,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Farm,Cyclomatic complexity of the method is 14
Complex Method,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,UseSpells,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Obj_AI_Base_OnProcessSpellCast,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,Cyclomatic complexity of the method is 13
Complex Method,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,Cyclomatic complexity of the method is 17
Complex Method,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 17
Complex Method,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Interrupter_OnPosibleToInterrupt,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Game_OnGameUpdate,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,UseSpells,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_Q,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 22
Complex Method,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,Cyclomatic complexity of the method is 15
Complex Method,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,SmartKs,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,UseSpells,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Game_OnGameUpdate,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Game_OnGameUpdate,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 13
Complex Method,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,UseSpells,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,Cyclomatic complexity of the method is 18
Complex Method,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_E,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Harass,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,Cyclomatic complexity of the method is 26
Complex Method,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,JumpKs,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,UseSpells,Cyclomatic complexity of the method is 17
Complex Method,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,UseSpells,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_W,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_R,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 19
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_Q,Cyclomatic complexity of the method is 8
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Obj_AI_Base_OnProcessSpellCast,Cyclomatic complexity of the method is 14
Complex Method,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 14
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,Cyclomatic complexity of the method is 16
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,Cyclomatic complexity of the method is 10
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LastHit,Cyclomatic complexity of the method is 9
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GameObject_OnCreate,Cyclomatic complexity of the method is 12
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,Cyclomatic complexity of the method is 11
Complex Method,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,Cyclomatic complexity of the method is 13
Long Parameter List,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetP,The method has 5 parameters. Parameters: pos' spell' target' delay' aoe
Long Parameter List,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,CastBasicSkillShot,The method has 5 parameters. Parameters: spell' range' type' hitChance' towerCheck
Long Parameter List,xSaliceReligionAIO,SpellData,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellData.cs,SpellData,The method has 11 parameters. Parameters: championName' spellName' slot' type' delay' range' radius' missileSpeed' addHitbox' fixedRange' defaultDangerValue
Long Parameter List,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The method has 8 parameters. Parameters: useQ' useW' useE' useQ2' useW2' useE2' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SwitchFormCheck,The method has 6 parameters. Parameters: target' useQ' useW' useQ2' useW2' useE2
Long Parameter List,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' source
Long Parameter List,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,UseSpells,The method has 6 parameters. Parameters: useQ' useW' useE' useR' useQe' source
Long Statement,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,AddOffensiveItem,The length of the statement  "                active.AddItem(new MenuItem(item.ActiveName + "always"' "Always use"' true).SetValue(item.Mode == 1 || item.Mode == 2)); " is 120.
Long Statement,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Game_OnGameUpdate,The length of the statement  "                else if (ObjectManager.Player.GetSummonerSpellDamage(Target' Damage.SummonerSpell.Ignite) > Target.Health + 20 && Ignite_Ready()) " is 129.
Long Statement,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The length of the statement  "            foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName))) " is 157.
Long Statement,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Use_Ignite,The length of the statement  "            if (target != null && IgniteSlot != SpellSlot.Unknown && ObjectManager.Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready && ObjectManager.Player.Distance(target.Position) < 650) " is 188.
Long Statement,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GameOnLoad,The length of the statement  "            Game.PrintChat("<font color = \"#87CEEB\">Feel free to donate via Paypal to:</font> <font color = \"#FFFF00\">xSalicez@gmail.com</font>"); " is 138.
Long Statement,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetTargetFocus,The length of the statement  "                if (focusSelected && TargetSelector.GetSelectedTarget().Distance(Player.ServerPosition) < range + 100 && TargetSelector.GetSelectedTarget().Type == GameObjectType.obj_AI_Hero) " is 175.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The length of the statement  "            menuMisc.AddItem(new MenuItem("orb_Misc_AutoWindUp"' "Autoset Windup").SetValue(new KeyBind("O".ToCharArray()[0]' KeyBindType.Press))); " is 135.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The length of the statement  "            menuMisc.AddItem(new MenuItem("orb_Misc_Priority_Unit"' "Priority Unit").SetValue(new StringList(new[] { "Minion"' "Hero" }))); " is 127.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The length of the statement  "                modeLaneClear.AddItem(new MenuItem("LaneClear_Key"' "Key").SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The length of the statement  "                modeLaneFreeze.AddItem(new MenuItem("LaneFreeze_Key"' "Key").SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 125.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnUpdate,The length of the statement  "            if (CurrentMode == Mode.None || MenuGUI.IsChatOpen || CustomOrbwalkMode || MyHero.IsChannelingImportantSpell() || MyHero.HasBuff("katarinarsound"' true)) " is 153.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                Render.Circle.DrawCircle(MyHero.Position' GetAutoAttackRange()' Menu.Item("orb_Draw_AARange").GetValue<Circle>().Color); " is 120.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                        Render.Circle.DrawCircle(enemy.Position' GetAutoAttackRange(enemy' MyHero)' Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Color); " is 138.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                    Render.Circle.DrawCircle(enemy.Position' GetAutoAttackRange(enemy' MyHero)' Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Color); " is 138.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                Render.Circle.DrawCircle(MyHero.Position' Menu.Item("orb_Misc_Holdzone").GetValue<Slider>().Value' Menu.Item("orb_Draw_Holdzone").GetValue<Circle>().Color); " is 156.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth); " is 150.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                        Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color); " is 121.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The length of the statement  "                        Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color); " is 122.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,Orbwalk,The length of the statement  "                Menu.Item("orb_Melee_Prediction").GetValue<bool>() && target is Obj_AI_Hero && Game.CursorPos.Distance(target.Position) < 300) " is 126.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The length of the statement  "                return MyHero.CalcDamage(unit' Damage.DamageType.Magical' dmg) + ((MyHero.CalcDamage(unit' Damage.DamageType.Magical' dmg) * 0.25)*(count - 1)); " is 144.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "            if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze) " is 129.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion) " is 167.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                    foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion)) " is 144.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                        let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed() " is 140.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                        let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value)) " is 134.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                foreach (var minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget(GetAutoAttackRange(MyHero' minion)) && minion.Name != "Beacon" && minion.Team == GameObjectTeam.Neutral).Where(minion => minion.MaxHealth >= maxhealth2[0] || Math.Abs(maxhealth2[0] - float.MaxValue) < float.Epsilon)) " is 311.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                                       let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value)) " is 196.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The length of the statement  "                                   let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay()) " is 139.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,ShouldWait,The length of the statement  "                    minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value)) <= GetAzirAaSandwarriorDamage(minion)); " is 176.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetBestHeroTarget,The length of the statement  "                foreach (var enemy in AllEnemys.Where(hero => hero.IsValidTarget() && InSoldierAttackRange(hero)).Where(enemy => mostdmgenemy[0] == null || GetAzirAaSandwarriorDamage(enemy) > GetAzirAaSandwarriorDamage(mostdmgenemy[0]))) " is 221.
Long Statement,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetBestHeroTarget,The length of the statement  "            return hitsToKill <= 3 ? killableEnemy : TargetSelector.GetTarget(GetAutoAttackRange()' TargetSelector.DamageType.Physical); " is 124.
Long Statement,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The length of the statement  "                    //CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall' }' " is 124.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("charmCombo"' "Q if Charmed in Combo"'true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 134.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The length of the statement  "                if (eTarget.HasBuffOfType(BuffType.Charm) || eTarget.HasBuffOfType(BuffType.Taunt) || !menu.Item("dfgCharm"' true).GetValue<bool>()) " is 132.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage)) " is 158.
Long Statement,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The length of the statement  "            if (menu.Item("rSpeed"' true).GetValue<bool>() && countEnemiesNearPosition(Game.CursorPos' 1500) < 2 && GetComboDamage(target) > target.Health - 100) " is 149.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]'KeyBindType.Toggle))); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]'KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQ"' "Last hit with Q!"'true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_mode"' "Combo Mode"'true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA"}))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_Switch"' "Switch mode Key"'true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The length of the statement  "                comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2; " is 174.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The length of the statement  "                comboDamage += Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,CheckMark,The length of the statement  "            return ObjectManager.Get<Obj_AI_Hero>().FirstOrDefault(x => x.IsValidTarget(range) && HasBuff(x' "AkaliMota") && x.IsVisible); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_Q,The length of the statement  "                if (MinionManager.GetMinions(Player.Position' Q.Range).Any(minion => HasBuff(minion' "AkaliMota") && xSLxOrbwalker.InAutoAttackRange(minion))) " is 142.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_Q,The length of the statement  "                foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion' " is 134.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_Q,The length of the statement  "                foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion' " is 134.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_Q,The length of the statement  "                foreach (var minion in MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.Neutral' MinionOrderTypes.MaxHealth).Where(minion => Player.Distance(minion.Position) <= Q.Range)) " is 206.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_E,The length of the statement  "                if (MinionManager.GetMinions(Player.Position' E.Range).Count >= menu.Item("LaneClear_useE_minHit"' true).GetValue<Slider>().Value) " is 130.
Long Statement,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_E,The length of the statement  "                foreach (var minion in MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All'MinionTeam.Neutral' MinionOrderTypes.MaxHealth).Where(minion => Player.Distance(minion.Position) <= E.Range)) " is 205.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("escape"' "RUN FOR YOUR LIFE!"'true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,DetonateQ,The length of the statement  "            foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && x.Distance(_qMissle.Position) < 200).OrderByDescending(GetComboDamage)) " is 170.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,CheckR,The length of the statement  "            int hit = ObjectManager.Get<Obj_AI_Hero>().Count(x => _rObj.Position.Distance(x.ServerPosition) < 475 && x.IsValidTarget(R.Range + 500)); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Escape,The length of the statement  "            List<Obj_AI_Hero> enemy = (from champ in ObjectManager.Get<Obj_AI_Hero>() where champ.IsValidTarget(1500) select champ).ToList(); " is 129.
Long Statement,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,GameObject_OnCreate,The length of the statement  "                if (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active || menu.Item("LaneClearActive"' true).GetValue<KeyBind>().Active || menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active) " is 190.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQ"' "Last hit with Q!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQToggle"' "Last hit with Q (Toggle)"' true).SetValue(new KeyBind("J".ToCharArray()[0]' KeyBindType.Toggle))); " is 142.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("FlashKILL"' "Flash KILL"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("ChargeStun"' "Charge Stun (toggle)!"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 135.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                    rMenu.AddItem(new MenuItem("R_Mode"' "Tibber Mode"' true).SetValue(new StringList(new[] { "Follow Target"' "Follow Me" }))); " is 124.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("R_Killable"' "Only R When Killable"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle))); " is 136.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,R_MEC,The length of the statement  "                Select(target => R.GetPrediction(target' true)).Where(pred => pred.Hitchance >= HitChance.High && pred.AoeTargetsHitCount >= minRHit)) " is 134.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,W_MEC,The length of the statement  "                Select(target => W.GetPrediction(target' true)).Where(pred => pred.Hitchance >= HitChance.High && pred.AoeTargetsHitCount >= minWHit)) " is 134.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Charge,The length of the statement  "            if (Player.ManaPercent < menu.Item("chargeMana"' true).GetValue<Slider>().Value || Player.IsRecalling() || !menu.Item("ChargeStun"' true).GetValue<KeyBind>().Active) " is 165.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage)) " is 161.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range'MinionTypes.All' MinionTeam.NotAlly); " is 125.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsW = MinionManager.GetMinions(Player.ServerPosition' W.Range'MinionTypes.All' MinionTeam.NotAlly); " is 125.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LastHit,The length of the statement  "            foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion' " is 134.
Long Statement,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Game_OnGameUpdate,The length of the statement  "                if (menu.Item("LastHitQ"' true).GetValue<KeyBind>().Active || menu.Item("LastHitQToggle"' true).GetValue<KeyBind>().Active) " is 123.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("insec"' "Insec Selected target"'true).SetValue(new KeyBind("J".ToCharArray()[0]' KeyBindType.Press))); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("qeCombo"' "Q->E stun Nearest target"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("qMulti"' "Q if 2+ Soilder"'true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 124.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("point"' "Escape Point Tag(Delay Escape Only)"' true).SetValue(new KeyBind("M".ToCharArray()[0]' KeyBindType.Press))); " is 143.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 130.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 130.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,The length of the statement  "            if (soilderCount() == 0 && useQ && useW && W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed) && menu.Item("wQ"' true).GetValue<bool>()) " is 155.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage)) " is 178.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The length of the statement  "                    if ((Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 20 && Player.Distance(target.Position) < R.Range && menu.Item("rKS"' true).GetValue<bool>()) " is 159.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The length of the statement  "                    if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && Player.Distance(target.Position) < Q.Range && menu.Item("qeKS"' true).GetValue<bool>()) " is 205.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The length of the statement  "                        if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady()) " is 120.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The length of the statement  "                        if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping) " is 157.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The length of the statement  "                        if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed)) " is 123.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The length of the statement  "                if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero) " is 189.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The length of the statement  "                if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance()) " is 197.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The length of the statement  "                            if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance()) " is 127.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQ,The length of the statement  "                    if (Q.IsReady() && Player.Distance(target.Position) > 800 && qPred.Hitchance >= getQHitchance() && menu.Item("qExtend"' true).GetValue<bool>()) " is 143.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastE,The length of the statement  "                    Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()' slave.Position.To2D()' ePred.UnitPosition.To2D()); " is 130.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Farm,The length of the statement  "            var allMinionsQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range + Q.Width' MinionTypes.All' MinionTeam.NotAlly); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,The length of the statement  "                foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team && enemy.IsValid && !enemy.IsDead)) " is 131.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,The length of the statement  "                    Drawing.DrawText(wtsz[0]' wtsz[1]' Color.White' "AA To Kill: " + Math.Ceiling((enemy.Health / xSLxOrbwalker.GetAzirAaSandwarriorDamage(enemy)))); " is 145.
Long Statement,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,The length of the statement  "                    vecPoint = GetNearestSoilderToMouse().Position + Vector3.Normalize(_point - GetNearestSoilderToMouse().Position) * Q.Range; " is 123.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("S".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("panic"' "Panic Key(no spell)"'true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The length of the statement  "            if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range && target != null && (Q.GetPrediction(target).Hitchance >= GetHitchance(source) || ShouldUseQ(target)) && UseQonEnemy(target)) " is 197.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The length of the statement  "            if (useE && target != null && E.IsReady() && Player.Distance(target.Position) < 300 && !menu.Item("resetE"' true).GetValue<bool>()) " is 131.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,AutoQ,The length of the statement  "            var nearChamps = (from champ in ObjectManager.Get<Obj_AI_Hero>() where champ.IsValidTarget(Q.Range) select champ).ToList(); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,CheckRMec,The length of the statement  "                if (R.IsReady() && enemy.Distance(Player.ServerPosition) <= R.Width && prediction.CastPosition.Distance(Player.ServerPosition) <= R.Width && prediction.Hitchance >= HitChance.High) " is 180.
Long Statement,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,AfterAttack,The length of the statement  "                if (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active || menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active) " is 126.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Combo,The length of the statement  "            UseSpells(menu.Item("UseQCombo"' true).GetValue<bool>()' menu.Item("UseECombo"' true).GetValue<bool>()' menu.Item("UseRCombo"' true).GetValue<bool>()' "Combo"); " is 160.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Harass,The length of the statement  "            UseSpells(menu.Item("UseQHarass"' true).GetValue<bool>()' menu.Item("UseEHarass"' true).GetValue<bool>()' menu.Item("UseRHarass"' true).GetValue<bool>()' "Harass"); " is 164.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Farm,The length of the statement  "                int allMinionECount = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All'MinionTeam.NotAlly).Count; " is 121.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Cast_R,The length of the statement  "            if (mode == "Combo" && menu.Item("ComboR_Limit"' true).GetValue<Slider>().Value < Player.Spellbook.GetSpell(SpellSlot.R).Ammo) " is 126.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Cast_R,The length of the statement  "            else if (mode == "Harass" && menu.Item("HarassR_Limit"' true).GetValue<Slider>().Value < Player.Spellbook.GetSpell(SpellSlot.R).Ammo) " is 133.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Cast_R,The length of the statement  "            else if (mode == "Farm" && menu.Item("LaneClearR_Limit"' true).GetValue<Slider>().Value < Player.Spellbook.GetSpell(SpellSlot.R).Ammo) " is 134.
Long Statement,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Drawing_OnDraw,The length of the statement  "                    Render.Circle.DrawCircle(Player.Position' Player.HasBuff("CorkiMissileBarrageCounterBig") ? R.Range : 1300' R.IsReady() ? Color.Green : Color.Red); " is 147.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitKey"' "Last Hit!"'true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Combo_Switch"' "Switch mode Key"'true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 129.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name'true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name'true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name'true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name'true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_mode"' "Combo Mode"'true).SetValue(new StringList(new[] { "Normal"' "Q-AA-Q-AA-Ult" }))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsE = MinionManager.GetMinions(Player.ServerPosition' Player.AttackRange + Player.BoundingRadius' " is 123.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q.Range) && !x.IsDead && !x.HasBuffOfType(BuffType.Invulnerability))) " is 160.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,SmartKs,The length of the statement  "                if (Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health && Player.Distance(target.Position) < Q.Range && Q.IsReady()) " is 126.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,SmartKs,The length of the statement  "                if (Player.GetSpellDamage(target' SpellSlot.Q) > target.Health && Player.Distance(target.Position) < Q.Range && Q.IsReady()) " is 124.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,The length of the statement  "                if (Q.IsReady() && Environment.TickCount - Q.LastCastAttemptT > 4000 && Player.Distance(target.Position) < Q.Range && Player.Distance(target.Position) > Player.AttackRange) " is 172.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q_Last_Hit,The length of the statement  "            var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range + Player.BoundingRadius' MinionTypes.All' MinionTeam.NotAlly); " is 135.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,AfterAttack,The length of the statement  "                if ((menu.Item("ComboActive"' true).GetValue<KeyBind>().Active || menu.Item("HarassActive"' true).GetValue<KeyBind>().Active ) " is 126.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                    (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady() && menu.Item("UseWCombo"' true).GetValue<bool>()) || " is 126.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,The length of the statement  "                foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health)) " is 139.
Long Statement,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,The length of the statement  "                    if (Player.GetSpellDamage(target' SpellSlot.R) / countEnemiesNearPosition(target.ServerPosition' R.Range) > target.Health) " is 122.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Flee"' "Escape with E"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                    rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_mode"' "Combo Mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 1))); " is 165.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_Switch"' "Switch mode Key"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The length of the statement  "            foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage)) " is 125.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The length of the statement  "                    if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +  " is 131.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The length of the statement  "                        if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady()) " is 123.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The length of the statement  "                    if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) + " is 192.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The length of the statement  "                    if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2) " is 159.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastQ,The length of the statement  "            if (Player.Distance(target.Position) > menu.Item("Q_Min_Dist"' true).GetValue<Slider>().Value && Player.Distance(target.Position) < Q.Range) " is 140.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastE,The length of the statement  "            if (Player.Distance(target.Position) > menu.Item("E_Min_Dist"' true).GetValue<Slider>().Value && Player.Distance(target.Position) < E.Range*2 - 50) " is 147.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Flee,The length of the statement  "            foreach (var minion in ObjectManager.Get<Obj_AI_Minion>().Where(x => x.Distance(Player.Position) < Q.Range && !x.IsAlly).OrderBy(x => x.Distance(Game.CursorPos))) " is 162.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                        var vec = _qVec + Vector3.Normalize(Prediction.GetPrediction((Obj_AI_Hero)args.Target' _qDelay).CastPosition - _qVec) * 600; " is 124.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 1)); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 2)); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" })); " is 130.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("S".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("Y".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("shootMouse"' "Shoot QE Mouse"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("qSpeed"' "QE Speed' Higher = Faster' Lower = Accurate"' true).SetValue(new Slider(1600' 400' 2500))); " is 129.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Combo,The length of the statement  "                menu.Item("UseECombo"' true).GetValue<bool>()' menu.Item("UseQComboHam"' true).GetValue<bool>()' menu.Item("UseWComboHam"' true).GetValue<bool>()' " is 146.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Harass,The length of the statement  "                menu.Item("UseEHarass"' true).GetValue<bool>()' menu.Item("UseQHarassHam"' true).GetValue<bool>()' menu.Item("UseWHarassHam"' true).GetValue<bool>()' " is 149.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The length of the statement  "                        if (useE2 && ECheck(e2Target' useQ' useW) && Player.Distance(e2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady()) " is 134.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The length of the statement  "            foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage)) " is 167.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The length of the statement  "                if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range) " is 190.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The length of the statement  "                if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range) " is 165.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The length of the statement  "                if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius) " is 163.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The length of the statement  "                if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius) " is 160.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,CastQCannon,The length of the statement  "            if ((menu.Item("UseQAlways"' true).GetValue<bool>() || !useE) && _canQcd == 0 && Q.GetPrediction(target).Hitchance >= HitChance.High && Player.Distance(target.ServerPosition) <= Q.Range && Q.IsReady()) " is 201.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,The length of the statement  "                if (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active || menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active) " is 126.
Long Statement,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,The length of the statement  "                    if (_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady() && target is Obj_AI_Hero) " is 130.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                keys.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                keys.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("S".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                keys.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("Y".ToCharArray()[0]' KeyBindType.Toggle))); " is 134.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                keys.AddItem(new MenuItem("wTar"' "Cast W On Selected"' true).SetValue(new KeyBind("W".ToCharArray()[0]' KeyBindType.Press))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                keys.AddItem(new MenuItem("lastHitQ"' "Last Hith Q"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                keys.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("X".ToCharArray()[0]' KeyBindType.Press))); " is 124.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                    //qMenu.AddItem(new MenuItem("qAA"' "Auto Q AAing target"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 130.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,The length of the statement  "            if (useE && E.IsReady() && Player.Distance(eTar.Position) < E.Range && ESpell.ToggleState == 1 && HasManaForE(source) && Environment.TickCount - E.LastCastAttemptT > 500) " is 170.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,DrawEnemyKillable,The length of the statement  "                        Packet.S2C.Ping.Encoded(new Packet.S2C.Ping.Struct(enemy.ServerPosition.X'enemy.ServerPosition.Y' 0' 0' Packet.PingType.Normal)).Process(); " is 139.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,AutoQ,The length of the statement  "                if ((Q.GetPrediction(target).Hitchance == HitChance.Immobile || IsStunned(target)) && qImmo && Player.Distance(target.Position) < Q.Range) " is 138.
Long Statement,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,CheckUnderTower,The length of the statement  "            foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.Distance(x.Position) < W.Range && x.IsValidTarget(W.Range) && !x.IsDead && x.IsEnemy && x.IsVisible)) " is 174.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("S".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("Y".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("stunMelles"' "Stun Enemy Melle Range"' true).SetValue(new KeyBind("M".ToCharArray()[0]' KeyBindType.Toggle))); " is 136.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("stunTowers"' "Stun Enemy under Tower"' true).SetValue(new KeyBind("J".ToCharArray()[0]' KeyBindType.Toggle))); " is 136.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("alwaysR"' "Always Cast R"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle))); " is 124.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQQ"' "Last hit with Q"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 129.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1000) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage)) " is 178.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= Q.Range && (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20) " is 123.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20) " is 123.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= W.Range && (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20) " is 123.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The length of the statement  "            if (enemy.ServerPosition.Distance(_eMissle.Position) < 110 && _eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady()) " is 148.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The length of the statement  "            else if (_eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && menu.Item("UseEGap"' true).GetValue<bool>() " is 126.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The length of the statement  "                if (_eMissle.EndPosition.Distance(_eMissle.Position) < 400 && enemy.Distance(_eMissle.Position) < enemy.Distance(_eMissle.EndPosition)) " is 135.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,GapClose,The length of the statement  "            if (Player.Distance(target.ServerPosition) >= distance && target.IsValidTarget(E.Range) && !_eCreated && E.GetPrediction(target).Hitchance >= HitChance.Medium && E.IsReady()) " is 174.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LastHit,The length of the statement  "                    if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Damage.GetSpellDamage(Player' minion' SpellSlot.Q) - 10) " is 188.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,Farm,The length of the statement  "            var allMinionsE = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' E.Range + E.Width' MinionTypes.All' MinionTeam.NotAlly); " is 136.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CheckUnderTower,The length of the statement  "                    if (ObjectManager.Get<Obj_AI_Turret>().Where(turret => turret != null && turret.IsValid && turret.IsAlly && turret.Health > 0).Any(turret => Vector2.Distance(enemy.Position.To2D()' turret.Position.To2D()) < 750 && R.IsReady())) " is 227.
Long Statement,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,Game_OnGameUpdate,The length of the statement  "                foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage)) " is 177.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Combo,The length of the statement  "            UseSpells(menu.Item("UseQCombo"' true).GetValue<bool>()' menu.Item("UseWCombo"' true).GetValue<bool>()' menu.Item("UseECombo"' true).GetValue<bool>()' menu.Item("UseRCombo"' true).GetValue<bool>()' "Combo"); " is 207.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Harass,The length of the statement  "            UseSpells(menu.Item("UseQHarass"' true).GetValue<bool>()' menu.Item("UseWHarass"' true).GetValue<bool>()' menu.Item("UseEHarass"' true).GetValue<bool>()' false' "Harass"); " is 171.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(QExtend.Range) && !x.IsDead && !x.HasBuffOfType(BuffType.Invulnerability))) " is 166.
Long Statement,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Farm,The length of the statement  "                var minion = allMinions.FirstOrDefault(minionn => minionn.Distance(Player.Position) <= Q.Range && HealthPrediction.LaneClearHealthPrediction(minionn' 500) > 0); " is 160.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitE"' "Last hit with E!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("UseMecR"' "Force Best Mec Ult"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                miscMenu.AddItem(new MenuItem("Stay_Danger"' "Stay In Danger Zone"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 139.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The length of the statement  "                comboDamage += GetCurrentHeat() > 50 ? Player.GetSpellDamage(target' SpellSlot.Q) * 2 : Player.GetSpellDamage(target' SpellSlot.Q); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The length of the statement  "                comboDamage += GetCurrentHeat() > 50 ? Player.GetSpellDamage(target' SpellSlot.E) * 1.5: Player.GetSpellDamage(target' SpellSlot.E); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldQ,The length of the statement  "            if (GetCurrentHeat() > 80 && !(Player.GetSpellDamage(target' SpellSlot.Q' 1) + Player.GetAutoAttackDamage(target) * 2 > target.Health)) " is 135.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldE,The length of the statement  "            if (GetCurrentHeat() > 80 && !(Player.GetSpellDamage(target' SpellSlot.E' 1) + Player.GetAutoAttackDamage(target) * 2 > target.Health)) " is 135.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,StayInDangerZone,The length of the statement  "                var enemy = ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy).OrderBy(x => Player.Distance(x.Position)).FirstOrDefault(); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,StayInDangerZone,The length of the statement  "                var enemy = ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy && !x.IsDead).OrderBy(x => Player.Distance(x.Position)).FirstOrDefault(); " is 139.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The length of the statement  "            foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage)) " is 127.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The length of the statement  "                foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900) " is 170.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The length of the statement  "                    if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2) " is 140.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The length of the statement  "                        foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000)) " is 207.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The length of the statement  "                    if (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && maxHit >= menu.Item("R_If_Enemy_Count_Combo"' true).GetValue<Slider>().Value) " is 142.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "            if (unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && W.IsReady() && menu.Item("W_Block_Spell"' true).GetValue<bool>()) " is 128.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The length of the statement  "                //-----------------------------------------------------------------Draw Ult Mec----------------------------------------------- " is 126.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The length of the statement  "                foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage)) " is 127.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The length of the statement  "                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2) " is 140.
Long Statement,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The length of the statement  "                            foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000)) " is 207.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("S".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("Y".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQQ"' "Last hit with Q"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQQ2"' "Last hit with Q(Togg)"' true).SetValue(new KeyBind("J".ToCharArray()[0]' KeyBindType.Toggle))); " is 135.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("wPoke"' "Cast W Only on Stun"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The length of the statement  "               MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The length of the statement  "                        HealthPrediction.GetHealthPrediction(minion' (int)((minion.Distance(Player.Position) / 1500) * 1000 + .25f * 1000)' 100) < " is 122.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("R_Mouse"' "R To Mouse"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The length of the statement  "                        rMenu.SubMenu("DontUlt").AddItem(new MenuItem("DontUlt" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false)); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,The length of the statement  "            useR = (menu.Item("DontUlt" + target.BaseSkinName' true) != null && menu.Item("DontUlt" + target.BaseSkinName' true).GetValue<bool>() == false) && useR; " is 152.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(Q.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage)) " is 166.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 30) " is 168.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Spellbook_OnUpdateChargedSpell,The length of the statement  "            args.Process = !(menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && menu.Item("UseRCombo"' true).GetValue<bool>() && menu.Item("smartKS"' true).GetValue<bool>() " is 170.
Long Statement,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Spellbook_OnUpdateChargedSpell,The length of the statement  "                        && menu.Item("HarassActive"' true).GetValue<KeyBind>().Active && menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active && menu.Item("R_Mouse"' true).GetValue<KeyBind>().Active); " is 183.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitKey"' "Last Hit!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("StackE"' "StackE (toggle)!"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LastHit,The length of the statement  "                    if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Player.GetSpellDamage(minion' SpellSlot.Q) - 10) " is 180.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(1300)).OrderByDescending(GetComboDamage)) " is 137.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)  > target.Health && Q.IsReady() && E.IsReady()) " is 192.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) > target.Health && Q.IsReady()) " is 131.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.E) > target.Health && E.IsReady()) " is 131.
Long Statement,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= R.Range && Player.GetSpellDamage(target' SpellSlot.R) > target.Health && R.IsReady() && menu.Item("R_KS"' true).GetValue<bool>()) " is 175.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The length of the statement  "                //key.AddItem(new MenuItem("qAA"' "Auto Q Enemy During AA Windup"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Escape"' "Escape with E"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.NotAlly); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsE = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(E.Range)).OrderByDescending(GetComboDamage)) " is 140.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E) > target.Health && Q.IsReady() && E.IsReady()) " is 191.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health && Q.IsReady() && W.IsReady()) " is 148.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) > target.Health && Q.IsReady()) " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.E) > target.Health && E.IsReady()) " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The length of the statement  "                if (Player.Distance(target.ServerPosition) <= R.Range && Player.GetSpellDamage(target' SpellSlot.R) > target.Health && R.IsReady() && menu.Item("R_KS"' true).GetValue<bool>()) " is 175.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,AutoBloom,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(Q.Range)).OrderByDescending(GetComboDamage)) " is 140.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,AutoBloom,The length of the statement  "                foreach (Obj_AI_Minion plants in ObjectManager.Get<Obj_AI_Minion>().Where(x => x.Name == "Zyra" && x.Distance(Player.Position) < Q.Range)) " is 138.
Long Statement,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Game_OnGameUpdate,The length of the statement  "                foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(E.Range)).OrderBy(x => x.Distance(Player.Position))) " is 148.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 121.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("R_Nearest_Killable"' "R Nearest Killable"'true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Force_R"' "Force R Lowest"'true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 137.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R,The length of the statement  "            foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage)) " is 125.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R,The length of the statement  "                if (Player.Distance(unit.Position) > minRange && pred.AoeTargetsHitCount >= minHit && pred.Hitchance >= HitChance.Medium) " is 121.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R_Killable,The length of the statement  "            foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health)) " is 138.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,AutoQ,The length of the statement  "                if (Q.GetPrediction(target).Hitchance >= HitChance.High && (target.HasBuffOfType(BuffType.Stun) || target.HasBuffOfType(BuffType.Snare)) && menu.Item("Auto_Q_Slow"' true).GetValue<bool>()) " is 188.
Long Statement,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Drawing_OnDraw,The length of the statement  "                foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health)) " is 138.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitKey"' "Last Hit!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The length of the statement  "                //miscMenu.AddItem(new MenuItem("Cast_EQ"' "Cast EQ nearest target"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 139.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The length of the statement  "                        if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range && target.Distance(minion.Position) < target.Distance(Player.Position) && dmg > minion.Health + 40) " is 192.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The length of the statement  "                if (Player.Distance(target.Position) > minDistance && Player.Distance(target.Position) < Q.Range + target.BoundingRadius) " is 121.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q_Last_Hit,The length of the statement  "            var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range + Player.BoundingRadius' MinionTypes.All' MinionTeam.NotAlly); " is 135.
Long Statement,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The length of the statement  "                foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health)) " is 139.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Wardjump"' "Escape/Ward jump"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                killSteal.AddItem(new MenuItem("KS_With_E"' "Don't KS with E Toggle!"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle))); " is 142.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255)))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The length of the statement  "                    if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&  " is 122.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The length of the statement  "                    if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 && " is 122.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LastHit,The length of the statement  "                if (allMinions.Where(minion => minion.IsValidTarget(W.Range) && minion.Health < Player.GetSpellDamage(minion' SpellSlot.W) - 35).Any(minion => Player.Distance(minion.ServerPosition) < W.Range)) " is 193.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage)) " is 178.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The length of the statement  "                    bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0; " is 122.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The length of the statement  "                        (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +  " is 138.
Long Statement,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The length of the statement  "                Obj_AI_Hero hero in ObjectManager.Get<Obj_AI_Hero>().Where(hero => hero.Distance(Game.CursorPos) < 250 && !hero.IsDead)) " is 120.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQQ"' "Last hit with Q"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("escape"' "RUN FOR YOUR LIFE!"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                    rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle))); " is 130.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The length of the statement  "                drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255)))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastQ,The length of the statement  "            if (Q.IsReady() && prediction.Hitchance >= GetHitchance(source) && Player.Distance(target.Position) <= Q.Range + Q.Width) " is 121.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckWMec,The length of the statement  "            int hit = (from x in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie)  " is 133.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckWMec,The length of the statement  "                       where x != null select GetPCircle(_currentBallPosition' W' x' true)).Count(prediction => W.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) < W.Width); " is 170.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckRMec,The length of the statement  "            int hit = (from x in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie) " is 133.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckRMec,The length of the statement  "                       select GetPCircle(_currentBallPosition' R' x' true)).Count(prediction => R.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) < R.Width); " is 154.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckRMecGlobal,The length of the statement  "            int hit = (from x in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie) " is 133.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckRMecGlobal,The length of the statement  "                       select GetPCircle(_currentBallPosition' R' x' true)).Count(prediction => R.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) < R.Width); " is 154.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CountR,The length of the statement  "            return (from enemy in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie)  " is 134.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CountR,The length of the statement  "                    where enemy != null select GetPCircle(_currentBallPosition' R' enemy' true)).Count(prediction => R.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) <= R.Width); " is 179.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                            .Where(x => Player.Distance(x.Position) < E.Range && Player.Distance(unit.Position) < 1500 && x.IsAlly && !x.IsDead).OrderBy(x => x.Distance(args.End))) " is 152.
Long Statement,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                if (Initiator.InitatorList.Where(spell => args.SData.Name == spell.SDataName).Where(spell => menu.Item(spell.SpellName' true).GetValue<bool>()).Any(spell => E.IsReady() && Player.Distance(unit.Position) < E.Range)) " is 214.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Misc_QE_Mouse"' "QE to Nearest Target To Mouse"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 145.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Misc_QE_Mouse2"' "QE to Mouse"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("forceR"' "Force R to best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press))); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                //key.AddItem(new MenuItem("qAA"' "Auto Q AAing target"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Combo,The length of the statement  "                menu.Item("UseECombo"' true).GetValue<bool>()' menu.Item("UseRCombo"' true).GetValue<bool>()' menu.Item("UseQECombo"' true).GetValue<bool>()' "Combo"); " is 151.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SmartKs,The length of the statement  "             foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qe.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage)) " is 163.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The length of the statement  "                if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width)) " is 149.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The length of the statement  "                if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width + target.BoundingRadius)) " is 173.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The length of the statement  "                foreach (var wts in from unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(2000) && !x.IsDead && x.IsEnemy).OrderByDescending(GetComboDamage) " is 159.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,getOrbCount,The length of the statement  "                ObjectManager.Get<Obj_AI_Minion>().Count(obj => obj.IsValid && obj.Team == ObjectManager.Player.Team && obj.Name == "Seed"); " is 124.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,getOrb,The length of the statement  "            return ObjectManager.Get<Obj_AI_Minion>().Where(obj => obj.IsValid && obj.Team == ObjectManager.Player.Team && obj.Name == "Seed").ToList(); " is 140.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Get_Current_Orb,The length of the statement  "            var orb = ObjectManager.Get<Obj_AI_Minion>().FirstOrDefault(x => x.Team == Player.Team && x.Name == "Seed" && !x.IsTargetable); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Get_Current_Orb,The length of the statement  "            var minion = ObjectManager.Get<Obj_AI_Minion>().FirstOrDefault(x => x.IsInvulnerable && x.Name != "Seed" && x.Name != "k"); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LastHitQ"' "Last hit with Q!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Switch_1"' "Line Mode"' true).SetValue(new KeyBind("U".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Switch_2"' "Coax Mode"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Escape"' "W To Mouse Escape"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press))); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false)); " is 179.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false)); " is 179.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false)); " is 179.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                            dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false)); " is 179.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_mode"' "Combo Mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }))); " is 160.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                combo.AddItem(new MenuItem("Combo_Switch"' "Switch mode Key"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press))); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The length of the statement  "                    if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark")) " is 193.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The length of the statement  "                        menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The length of the statement  "                    if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark")) " is 193.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The length of the statement  "            if (WShadow != null && HasEnergy(Q.IsReady() && useQ' false' E.IsReady() && useE) && Environment.TickCount - _coaxDelay > 0) " is 124.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The length of the statement  "                    Utility.DelayAction.Add(300' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }))); " is 164.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,The length of the statement  "                    if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - R.LastCastAttemptT > 0 && Environment.TickCount - W.LastCastAttemptT > Game.Ping) " is 151.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,The length of the statement  "                            Utility.DelayAction.Add(400' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }))); " is 164.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetMarked,The length of the statement  "            return ObjectManager.Get<Obj_AI_Hero>().FirstOrDefault(x => x.IsValidTarget(W.Range + Q.Range) && HasBuff(x' "zedulttargetmark") && x.IsVisible); " is 145.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(W.Range + Q.Range) && !x.IsDead && !x.HasBuffOfType(BuffType.Invulnerability))) " is 170.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,The length of the statement  "                if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && W.IsReady() && Q.IsReady() && E.IsReady()) " is 160.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LastHitQ,The length of the statement  "            List<Obj_AI_Base> allMinionsQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.NotAlly); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LastHitQ,The length of the statement  "                var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / Q.Speed)); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.NotAlly); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Farm,The length of the statement  "            List<Obj_AI_Base> allMinionsE = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly); " is 126.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1)); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2)); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1)); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2)); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3)); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4)); " is 131.
Long Statement,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The length of the statement  "                    menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })); " is 128.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press))); " is 122.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle))); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press))); " is 123.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                key.AddItem(new MenuItem("Flee"' "Escape with E"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press))); " is 120.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                    qMenu.AddItem(new MenuItem("Q_Auto"' "Auto Q Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle))); " is 125.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                    qMenu.AddItem(new MenuItem("Q_Stack"' "Auto 3rd Q stack Toggle"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle))); " is 136.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "W_Wall"' q.MissileSpellName' true).SetValue(false)); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "W_Wall"' w.MissileSpellName' true).SetValue(false)); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "W_Wall"' e.MissileSpellName' true).SetValue(false)); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "W_Wall"' r.MissileSpellName' true).SetValue(false)); " is 132.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                 dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false)); " is 178.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "E"' q.MissileSpellName' true).SetValue(false)); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false)); " is 173.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "E"' w.MissileSpellName' true).SetValue(false)); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false)); " is 173.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "E"' e.MissileSpellName' true).SetValue(false)); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false)); " is 173.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "E"' r.MissileSpellName' true).SetValue(false)); " is 127.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                                dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false)); " is 173.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                    eMenu.AddItem(new MenuItem("E_Turret"' "Don't E into Turret Toggle"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle))); " is 140.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The length of the statement  "                MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4))); " is 138.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The length of the statement  "            if (Player.ServerPosition.To2D().Distance(target.ServerPosition.To2D()) <= menu.Item("E_Min_Dist"' true).GetValue<Slider>().Value) " is 130.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The length of the statement  "                        if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && target.Distance(bestVec) > target.Distance(dashVec)) " is 124.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The length of the statement  "            if (Player.ServerPosition.To2D().Distance(target.ServerPosition.To2D()) > menu.Item("E_Min_Dist"' true).GetValue<Slider>().Value && Player.Distance(target.Position) < E.Range + target.BoundingRadius)  " is 199.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_R,The length of the statement  "                hit += ObjectManager.Get<Obj_AI_Hero>().Count(x => x.ChampionName != target.ChampionName && target.Distance(x.Position) < 400 && isKnockedUp(x)); " is 145.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_MecR,The length of the statement  "                hit += ObjectManager.Get<Obj_AI_Hero>().Count(x => x.ChampionName != target.ChampionName && target.Distance(x.Position) < 400 && isKnockedUp(x)); " is 145.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,BuffDurationLeft,The length of the statement  "            var firstOrDefault = target.Buffs.FirstOrDefault(buff => buff.Type.Equals(BuffType.Knockback) || buff.Type.Equals(BuffType.Knockup)); " is 133.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,AutoQ,The length of the statement  "            if (!Q.IsReady() || !menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active || Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping) " is 138.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,AutoQ,The length of the statement  "                    CastBasicSkillShot(Q' Q.Range' TargetSelector.DamageType.Physical' GetHitchance("Combo")' menu.Item("Q_UnderTower"' true).GetValue<bool>()); " is 140.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,AutoQ,The length of the statement  "                    CastBasicSkillShot(Q2' Q2.Range' TargetSelector.DamageType.Physical' GetHitchance("Combo")' menu.Item("Q_UnderTower"' true).GetValue<bool>()); " is 142.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Escape,The length of the statement  "            foreach (var m in minion.Where(x=> CanCastE(x) && x.Distance(Game.CursorPos) < 500).OrderBy(x => x.Distance(Game.CursorPos))) " is 125.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The length of the statement  "            foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q2.Range) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage)) " is 182.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The length of the statement  "                    if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) > " is 148.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The length of the statement  "                    if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && EturretCheck(target)) " is 147.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Interrupter_OnPosibleToInterrupt,The length of the statement  "            if (spell.DangerLevel < Interrupter2.DangerLevel.Medium || unit.IsAlly || !Q.IsReady() || !ThirdQ() || !menu.Item("Interrupt"' true).GetValue<bool>()) " is 150.
Long Statement,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The length of the statement  "                    if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000)) " is 136.
Complex Conditional,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Use_Ignite,The conditional expression  "target != null && IgniteSlot != SpellSlot.Unknown && ObjectManager.Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready && ObjectManager.Player.Distance(target.Position) < 650"  is complex.
Complex Conditional,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,IsStunned,The conditional expression  "target.HasBuffOfType(BuffType.Stun) || target.HasBuffOfType(BuffType.Snare) ||                  target.HasBuffOfType(BuffType.Suppression) || target.HasBuffOfType(BuffType.Taunt)"  is complex.
Complex Conditional,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnUpdate,The conditional expression  "CurrentMode == Mode.None || MenuGUI.IsChatOpen || CustomOrbwalkMode || MyHero.IsChannelingImportantSpell() || MyHero.HasBuff("katarinarsound"' true)"  is complex.
Complex Conditional,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,Orbwalk,The conditional expression  "target != null && (CanAttack() || HaveCancled()) && IsAllowedToAttack()"  is complex.
Complex Conditional,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,Orbwalk,The conditional expression  "MyHero.IsMelee() && target != null && target.Distance(MyHero.Position) < GetAutoAttackRange(MyHero' target) &&                  Menu.Item("orb_Melee_Prediction").GetValue<bool>() && target is Obj_AI_Hero && Game.CursorPos.Distance(target.Position) < 300"  is complex.
Complex Conditional,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The conditional expression  "CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze"  is complex.
Complex Conditional,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,GetBySpeed,The conditional expression  "spellData.ChampionName == ChampionName && spellData.MissileSpeed == speed &&                      (spellData.Id == -1 || id == spellData.Id)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The conditional expression  "useW && W.IsReady() && Player.Distance(eTarget.Position) <= W.Range - 100 &&                  ShouldW(eTarget' source)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The conditional expression  "useQ && Q.IsReady() && Player.Distance(eTarget.Position) <= Q.Range &&                      ShouldQ(eTarget' source) && Player.Distance(eTarget.Position) > 600"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The conditional expression  "useQ && Q.IsReady() && Player.Distance(eTarget.Position) <= Q.Range &&                       ShouldQ(eTarget' source)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                           Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && Q.IsReady() && Q.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health && R.IsReady() && _rOn &&                          target.Distance(dashVector) < 425 && R.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The conditional expression  "useE && E.IsReady() && Player.Distance(target.Position) < E.Range && ShouldE(target)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The conditional expression  "useQ && Q.IsReady() && Player.Distance(Q.GetPrediction(target).CastPosition) <= Q.Range &&                  Q.GetPrediction(target).Hitchance >= GetHitchance(source) && ShouldQ()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The conditional expression  "useW && W.IsReady() && Player.Distance(target.Position) <= W.Range && ShouldUseW(target)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The conditional expression  "useR && R.IsReady() && Player.Distance(target.Position) < R.Range &&                  R.GetPrediction(target).Hitchance >= HitChance.High"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Snipe,The conditional expression  "!W.IsReady() && Q.IsReady() && Player.Distance(qTarget.ServerPosition) < Q.Range &&                  Q.GetPrediction(qTarget).Hitchance >= HitChance.High && ShouldQ()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,CheckR,The conditional expression  "hit < 1 && R.IsReady() && _rFirstCreated && R.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Escape,The conditional expression  "Q.IsReady() && Player.Distance(enemy.FirstOrDefault().Position) <= Q.Range &&                  Q.GetPrediction(enemy.FirstOrDefault()).Hitchance >= HitChance.High && ShouldQ()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Game_OnGameUpdate,The conditional expression  "rCheck && _rFirstCreated && !menu.Item("LaneClearActive"' true).GetValue<KeyBind>().Active && _rByMe"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,UseSpells,The conditional expression  "useE && StunCount() == 3 && E.IsReady() && menu.Item("E_Stun"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunCondition,The conditional expression  "Player.Distance(target.Position) > 600 && FullManaCast() && Flash_Ready() && dmg > target.Health"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Game_OnGameUpdate,The conditional expression  "Tibbers == null || !Tibbers.IsValid || Tibbers.IsDead || Tibbers.Health < 0"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,The conditional expression  "useR && R.IsReady() && ShouldR(qTarget) && Player.Distance(qTarget.Position) < R.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,The conditional expression  "soilderCount() == 0 && useQ && useW && W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed) && menu.Item("wQ"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The conditional expression  "(QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady())"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The conditional expression  "Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The conditional expression  "(Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The conditional expression  "Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The conditional expression  "(Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQ,The conditional expression  "Q.IsReady() && Player.Distance(target.Position) > 800 && qPred.Hitchance >= getQHitchance() && menu.Item("qExtend"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastE,The conditional expression  "E.IsReady() && isOnseg && pointLine.Distance(ePred.UnitPosition.To2D()) < E.Width && ShouldE(target)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The conditional expression  "useW && target != null && W.IsReady() && Player.Distance(target.Position) <= 500"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The conditional expression  "useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range && target != null && (Q.GetPrediction(target).Hitchance >= GetHitchance(source) || ShouldUseQ(target)) && UseQonEnemy(target)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The conditional expression  "useE && target != null && E.IsReady() && Player.Distance(target.Position) < 300 && !menu.Item("resetE"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The conditional expression  "useR && target != null && R.IsReady() && Player.Distance(target.Position) < R.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,CheckRMec,The conditional expression  "R.IsReady() && enemy.Distance(Player.ServerPosition) <= R.Width && prediction.CastPosition.Distance(Player.ServerPosition) <= R.Width && prediction.Hitchance >= HitChance.High"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,The conditional expression  "Q.IsReady() && Environment.TickCount - Q.LastCastAttemptT > 4000 && Player.Distance(target.Position) < Q.Range && Player.Distance(target.Position) > Player.AttackRange"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Obj_AI_Base_OnProcessSpellCast,The conditional expression  "menu.Item("W_Incoming"' true).GetValue<bool>() ||                      (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady() && menu.Item("UseWCombo"' true).GetValue<bool>()) ||                      (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active && menu.Item("UseWHarass"' true).GetValue<bool>())"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The conditional expression  "Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The conditional expression  "Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,GetComboDamage,The conditional expression  "_canQcd == 0 && _canEcd == 0 && Q.Level > 0 && E.Level > 0"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The conditional expression  "useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The conditional expression  "useE2 && ECheck(e2Target' useQ' useW) && Player.Distance(e2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The conditional expression  "useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,ECheck,The conditional expression  "((_canQcd == 0 && useQ) || (_canWcd == 0 && useW)) && _hamQcd != 0 && _hamWcd != 0"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The conditional expression  "(Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The conditional expression  "(Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The conditional expression  "(Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SwitchFormCheck,The conditional expression  "(_canQcd != 0 || !useQ) &&                      (_canWcd != 0 && !HyperCharged() || !useW) && R.IsReady() &&                       HammerAllReady() && !_hammerTime && Player.Distance(target.ServerPosition) < 650 &&                       (useQ2 || useW2 || useE2)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SwitchFormCheck,The conditional expression  "((_canQcd == 0 && useQ) || (_canWcd == 0 && useW) && R.IsReady())                  && _hammerTime"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SwitchFormCheck,The conditional expression  "_hamQcd != 0 && _hamWcd != 0 && _hamEcd != 0 && _hammerTime && R.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,CastQCannon,The conditional expression  "tarPred.Hitchance >= HitChance.High && _canQcd == 0 && _canEcd == 0 && useE"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,CastQCannon,The conditional expression  "(menu.Item("UseQAlways"' true).GetValue<bool>() || !useE) && _canQcd == 0 && Q.GetPrediction(target).Hitchance >= HitChance.High && Player.Distance(target.ServerPosition) <= Q.Range && Q.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,The conditional expression  "_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,The conditional expression  "_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady() && target is Obj_AI_Hero"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Interrupter_OnPosibleToInterrupt,The conditional expression  "unit != null && Player.Distance(unit.Position) < Q2.Range + unit.BoundingRadius && _hamQcd == 0 && _hamEcd == 0"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,The conditional expression  "useW && W.IsReady() && Player.Distance(target.Position) <= W.Range && ShouldW() &&                  W.GetPrediction(target).Hitchance >= HitChance.High"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,The conditional expression  "useE && E.IsReady() && Player.Distance(eTar.Position) < E.Range && ESpell.ToggleState == 1 && HasManaForE(source) && Environment.TickCount - E.LastCastAttemptT > 500"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,AutoQ,The conditional expression  "(Q.GetPrediction(target).Hitchance == HitChance.Immobile || IsStunned(target)) && qImmo && Player.Distance(target.Position) < Q.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,CheckUnderTower,The conditional expression  "turret != null && turret.IsValid && turret.IsAlly && turret.Health > 0"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Farm,The conditional expression  "useE && allMinionsE.Count > 0 && E.IsReady() && ESpell.ToggleState == 1"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,UseSpells,The conditional expression  "useE && eTarget != null && E.IsReady() && Player.Distance(eTarget.Position) < E.Range && ShouldE(eTarget)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,UseSpells,The conditional expression  "useR && qTarget != null && R.IsReady() && Player.Distance(qTarget.Position) < R.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The conditional expression  "enemy.ServerPosition.Distance(_eMissle.Position) < 110 && _eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The conditional expression  "_eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && menu.Item("UseEGap"' true).GetValue<bool>()                  && Player.Distance(enemy.Position) > enemy.Distance(_eMissle.Position) && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,GapClose,The conditional expression  "Player.Distance(target.ServerPosition) >= distance && target.IsValidTarget(E.Range) && !_eCreated && E.GetPrediction(target).Hitchance >= HitChance.Medium && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CheckUnderTower,The conditional expression  "ObjectManager.Get<Obj_AI_Turret>().Where(turret => turret != null && turret.IsValid && turret.IsAlly && turret.Health > 0).Any(turret => Vector2.Distance(enemy.Position.To2D()' turret.Position.To2D()) < 750 && R.IsReady())"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Obj_AI_Base_OnProcessSpellCast,The conditional expression  "unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && W.IsReady() && menu.Item("W_Block_Spell"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,The conditional expression  "useW && target != null && Player.Distance(target.Position) <= W.Range && W.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,The conditional expression  "useE && target != null && E.IsReady() && Player.Distance(target.Position) < E.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,The conditional expression  "target != null && dfgMode == 0 && source == "Combo" && hasMana"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,The conditional expression  "useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range && target != null"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,CastR,The conditional expression  "Dfg.IsReady() && R.IsReady() && Player.Distance(target.ServerPosition) < R.Range &&                  Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                  (Player.GetSpellDamage(target' SpellSlot.R) * 1.2) > target.Health + 50"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,The conditional expression  "useW && W.IsReady() && Player.Distance(target.Position) <= W.Range &&                  W.GetPrediction(target).Hitchance >= HitChance.High"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,The conditional expression  "useE && E.IsReady() && Player.Distance(target.Position) < E.Range &&                  E.GetPrediction(target).Hitchance >= HitChance.High"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)  > target.Health && Q.IsReady() && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= R.Range && Player.GetSpellDamage(target' SpellSlot.R) > target.Health && R.IsReady() && menu.Item("R_KS"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E) > target.Health && Q.IsReady() && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health && Q.IsReady() && W.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The conditional expression  "Player.Distance(target.ServerPosition) <= R.Range && Player.GetSpellDamage(target' SpellSlot.R) > target.Health && R.IsReady() && menu.Item("R_KS"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,AutoQ,The conditional expression  "Q.GetPrediction(target).Hitchance >= HitChance.High && (target.HasBuffOfType(BuffType.Stun) || target.HasBuffOfType(BuffType.Snare)) && menu.Item("Auto_Q_Slow"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The conditional expression  "target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range && target.Distance(minion.Position) < target.Distance(Player.Position) && dmg > minion.Health + 40"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The conditional expression  "useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The conditional expression  "menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0))"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The conditional expression  "useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The conditional expression  "menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0))"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Farm,The conditional expression  "useQ && allMinionsQ.Count > 0 && Q.IsReady() && allMinionsQ[0].IsValidTarget(Q.Range)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Farm,The conditional expression  "useE && allMinionsQ.Count > 0 && E.IsReady() && allMinionsQ[0].IsValidTarget(E.Range)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,JungleFarm,The conditional expression  "useQ && allMinionsQ.Count > 0 && Q.IsReady() && allMinionsQ[0].IsValidTarget(Q.Range)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The conditional expression  "Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,AutoW,The conditional expression  "target != null && !target.IsDead && target.IsEnemy &&                      Player.Distance(target.ServerPosition) <= W.Range && target.IsValidTarget(W.Range)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Drawing_OnDraw,The conditional expression  "(spell.Slot == SpellSlot.R && menuItem.Active) || (spell.Slot == SpellSlot.W && menuItem.Active)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Obj_AI_Base_OnProcessSpellCast,The conditional expression  "!unit.IsMe || !E.IsReady() || (spell.SData.Name != "SyndraQ") ||                  Environment.TickCount - _qe.LastCastAttemptT >= 300"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The conditional expression  "HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The conditional expression  "menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark")"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The conditional expression  "HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The conditional expression  "menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark")"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The conditional expression  "WShadow != null && HasEnergy(Q.IsReady() && useQ' false' E.IsReady() && useE) && Environment.TickCount - _coaxDelay > 0"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,The conditional expression  "WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - R.LastCastAttemptT > 0 && Environment.TickCount - W.LastCastAttemptT > Game.Ping"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Harass,The conditional expression  "HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE)"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,The conditional expression  "(Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && W.IsReady() && Q.IsReady() && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,The conditional expression  "Q.IsKillable(target) && Player.Distance(target.Position) > Q.Range && Q.IsReady() && W.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,The conditional expression  "E.IsKillable(target) && Player.Distance(target.Position) > E.Range && E.IsReady() && W.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The conditional expression  "(!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(target.Position) < W.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The conditional expression  "(!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(vec) < W.Range"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The conditional expression  "useQ && useE && Q.IsReady() && E.IsReady()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Interrupter_OnPosibleToInterrupt,The conditional expression  "spell.DangerLevel < Interrupter2.DangerLevel.Medium || unit.IsAlly || !Q.IsReady() || !ThirdQ() || !menu.Item("Interrupt"' true).GetValue<bool>()"  is complex.
Complex Conditional,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The conditional expression  "menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady() &&                          (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000)"  is complex.
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3144'                  ActiveName = "Bilgewater Cutlass"'                  Type = "Offensive"'                  Range = 450'                  Mode = 0'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3144'                  ActiveName = "Bilgewater Cutlass"'                  Type = "Offensive"'                  Range = 450'                  Mode = 0'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3153'                  ActiveName = "Blade of the Ruined King"'                  Type = "Offensive"'                  Range = 450'                  Mode = 0'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3153'                  ActiveName = "Blade of the Ruined King"'                  Type = "Offensive"'                  Range = 450'                  Mode = 0'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3146'                  ActiveName = "Hextech Gunblade"'                  Type = "Offensive"'                  Range = 700'                  Mode = 0'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3146'                  ActiveName = "Hextech Gunblade"'                  Type = "Offensive"'                  Range = 700'                  Mode = 0'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3042'                  ActiveName = "Muramana"'                  Type = "Offensive"'                  Range = int.MaxValue'                  Mode = 2'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3042'                  ActiveName = "Muramana"'                  Type = "Offensive"'                  Range = int.MaxValue'                  Mode = 2'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3074'                  ActiveName = "Ravenous Hydra"'                  Type = "Offensive"'                  Range = 400'                  Mode = 1'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3074'                  ActiveName = "Ravenous Hydra"'                  Type = "Offensive"'                  Range = 400'                  Mode = 1'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3077'                  ActiveName = "Tiamat"'                  Type = "Offensive"'                  Range = 400'                  Mode = 1'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3077'                  ActiveName = "Tiamat"'                  Type = "Offensive"'                  Range = 400'                  Mode = 1'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3142'                  ActiveName = "Youmuu's Ghostblade"'                  Type = "Offensive"'                  Range = (int) (ObjectManager.Player.AttackRange * 2)'                  Mode = 1'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CreateList,The following statement contains a magic number: ItemList.Add(new ActiveItems              {                  ActiveId = 3142'                  ActiveName = "Youmuu's Ghostblade"'                  Type = "Offensive"'                  Range = (int) (ObjectManager.Player.AttackRange * 2)'                  Mode = 1'              });
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,AddOffensiveItem,The following statement contains a magic number: {                  active.AddItem(new MenuItem(item.ActiveName' item.ActiveName' true).SetValue(true));                  active.AddItem(new MenuItem(item.ActiveName + "dmgCalc"' "Add to damage Calculation"' true).SetValue(true));                  active.AddItem(new MenuItem(item.ActiveName + "killAble"' "Use only if enemy is killable"' true).SetValue(false));                  active.AddItem(new MenuItem(item.ActiveName + "always"' "Always use"' true).SetValue(item.Mode == 1 || item.Mode == 2));                  active.AddItem(new MenuItem(item.ActiveName + "myHP"' "Use if HP <= %"' true).SetValue(new Slider(25)));                  active.AddItem(new MenuItem(item.ActiveName + "enemyHP"' "Use if target HP <= %"' true).SetValue(new Slider(50)));                    subMenu.AddSubMenu(active);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,AddOffensiveItem,The following statement contains a magic number: {                  active.AddItem(new MenuItem(item.ActiveName' item.ActiveName' true).SetValue(true));                  active.AddItem(new MenuItem(item.ActiveName + "dmgCalc"' "Add to damage Calculation"' true).SetValue(true));                  active.AddItem(new MenuItem(item.ActiveName + "killAble"' "Use only if enemy is killable"' true).SetValue(false));                  active.AddItem(new MenuItem(item.ActiveName + "always"' "Always use"' true).SetValue(item.Mode == 1 || item.Mode == 2));                  active.AddItem(new MenuItem(item.ActiveName + "myHP"' "Use if HP <= %"' true).SetValue(new Slider(25)));                  active.AddItem(new MenuItem(item.ActiveName + "enemyHP"' "Use if target HP <= %"' true).SetValue(new Slider(50)));                    subMenu.AddSubMenu(active);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,AddOffensiveItem,The following statement contains a magic number: {                  active.AddItem(new MenuItem(item.ActiveName' item.ActiveName' true).SetValue(true));                  active.AddItem(new MenuItem(item.ActiveName + "dmgCalc"' "Add to damage Calculation"' true).SetValue(true));                  active.AddItem(new MenuItem(item.ActiveName + "killAble"' "Use only if enemy is killable"' true).SetValue(false));                  active.AddItem(new MenuItem(item.ActiveName + "always"' "Always use"' true).SetValue(item.Mode == 1 || item.Mode == 2));                  active.AddItem(new MenuItem(item.ActiveName + "myHP"' "Use if HP <= %"' true).SetValue(new Slider(25)));                  active.AddItem(new MenuItem(item.ActiveName + "enemyHP"' "Use if target HP <= %"' true).SetValue(new Slider(50)));                    subMenu.AddSubMenu(active);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Game_OnGameUpdate,The following statement contains a magic number: if (ObjectManager.Player.HasBuff("Muramana") && Items.CanUseItem(3042) && Environment.TickCount - lastMura > 5000)              {                  Items.UseItem(3042);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Game_OnGameUpdate,The following statement contains a magic number: if (ObjectManager.Player.HasBuff("Muramana") && Items.CanUseItem(3042) && Environment.TickCount - lastMura > 5000)              {                  Items.UseItem(3042);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Game_OnGameUpdate,The following statement contains a magic number: if (ObjectManager.Player.HasBuff("Muramana") && Items.CanUseItem(3042) && Environment.TickCount - lastMura > 5000)              {                  Items.UseItem(3042);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Game_OnGameUpdate,The following statement contains a magic number: if (_myMenu.Item("ignite"' true).GetValue<bool>())              {                   //ignite                  int igniteMode = _myMenu.Item("igniteMode"' true).GetValue<StringList>().SelectedIndex;                    if (KillableTarget && igniteMode == 0 && Ignite_Ready())                      Use_Ignite(Target);                  else if (ObjectManager.Player.GetSummonerSpellDamage(Target' Damage.SummonerSpell.Ignite) > Target.Health + 20 && Ignite_Ready())                      Use_Ignite(Target);              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,OnAttack,The following statement contains a magic number: foreach (var item in ItemList.Where(x => x.Mode == 2 && Items.CanUseItem(x.ActiveId) && ShouldUse(x.ActiveName)))              {                  if (!ObjectManager.Player.HasBuff("Muramana"))                  {                      //Game.PrintChat("RAWR");                      if (AlwaysUse(item.ActiveName))                      {                          Items.UseItem(item.ActiveId);                          lastMura = Environment.TickCount;                      }                        if (KillableTarget)                      {                          Items.UseItem(item.ActiveId' Target);                          lastMura = Environment.TickCount;                      }                        if (ObjectManager.Player.HealthPercent <= UseAtMyHp(item.ActiveName) && !OnlyIfKillable(item.ActiveName))                      {                          Items.UseItem(item.ActiveId);                          lastMura = Environment.TickCount;                      }                        if (Target.HealthPercent <= UseAtEnemyHp(item.ActiveName) && !OnlyIfKillable(item.ActiveName))                      {                          Items.UseItem(item.ActiveId);                          lastMura = Environment.TickCount;                      }                  }                  else if (ObjectManager.Player.HasBuff("Muramana"))                  {                      lastMura = Environment.TickCount;                  }              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,CalcDamage,The following statement contains a magic number: foreach (var item in ItemList.Where(x => Items.HasItem(x.ActiveId) && ShouldUse(x.ActiveName) && Items.CanUseItem(x.ActiveId) && AddToDmgCalc(x.ActiveName)))              {                  //bilge                  if (item.ActiveId == 3144)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Bilgewater);                    //Botrk                  if (item.ActiveId == 3153)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Botrk);                    //hextech                  if (item.ActiveId == 3146)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hexgun);                    //hydra                  if (item.ActiveId == 3074)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Hydra);                    //tiamat                  if (item.ActiveId == 3077)                      dmg += ObjectManager.Player.GetItemDamage(target' Damage.DamageItems.Tiamat);                    //sheen                  if (Items.HasItem(3057))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Physical' SheenDamage());                    //lich bane                  if (Items.HasItem(3100))                      dmg += ObjectManager.Player.CalcDamage(target' Damage.DamageType.Magical' LichDamage());              }
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,LichDamage,The following statement contains a magic number: dmg += .75 * ObjectManager.Player.FlatPhysicalDamageMod;
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,LichDamage,The following statement contains a magic number: dmg += .5 * ObjectManager.Player.FlatMagicDamageMod;
Magic Number,xSaliceReligionAIO,ActiveItems,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\ActiveItems.cs,Use_Ignite,The following statement contains a magic number: if (target != null && IgniteSlot != SpellSlot.Unknown && ObjectManager.Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready && ObjectManager.Player.Distance(target.Position) < 650)                  ObjectManager.Player.Spellbook.CastSpell(IgniteSlot' target);
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,Use_DFG,The following statement contains a magic number: if (target != null && Player.Distance(target.Position) < 750 && Items.CanUseItem(Dfg.Id))                  Items.UseItem(Dfg.Id' target);
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,IsPassWall,The following statement contains a magic number: for (uint i = 0; i <= count; i += 25)              {                  Vector2 pos = start.To2D().Extend(Player.ServerPosition.To2D()' -i);                  if (IsWall(pos))                      return true;              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,VectorPointProjectionOnLineSegment,The following statement contains a magic number: float rL = ((cx - ax) * (bx - ax) + (cy - ay) * (by - ay)) /                         ((float)Math.Pow(bx - ax' 2) + (float)Math.Pow(by - ay' 2));
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,VectorPointProjectionOnLineSegment,The following statement contains a magic number: float rL = ((cx - ax) * (bx - ax) + (cy - ay) * (by - ay)) /                         ((float)Math.Pow(bx - ax' 2) + (float)Math.Pow(by - ay' 2));
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,CastBasicFarm,The following statement contains a magic number: if (spell.Type == SkillshotType.SkillshotCircle)              {                  spell.UpdateSourcePosition();                    var predPosition = spell.GetCircularFarmLocation(minion);                    if (predPosition.MinionsHit >= 2)                  {                      spell.Cast(predPosition.Position' Player.ChampionName == "Kartus" || packets());                  }              }              else if (spell.Type == SkillshotType.SkillshotLine)              {                  spell.UpdateSourcePosition();                    var predPosition = spell.GetLineFarmLocation(minion);                    if(predPosition.MinionsHit >= 2)                      spell.Cast(predPosition.Position' packets());              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,CastBasicFarm,The following statement contains a magic number: if (spell.Type == SkillshotType.SkillshotCircle)              {                  spell.UpdateSourcePosition();                    var predPosition = spell.GetCircularFarmLocation(minion);                    if (predPosition.MinionsHit >= 2)                  {                      spell.Cast(predPosition.Position' Player.ChampionName == "Kartus" || packets());                  }              }              else if (spell.Type == SkillshotType.SkillshotLine)              {                  spell.UpdateSourcePosition();                    var predPosition = spell.GetLineFarmLocation(minion);                    if(predPosition.MinionsHit >= 2)                      spell.Cast(predPosition.Position' packets());              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetTargetFocus,The following statement contains a magic number: if (TargetSelector.GetSelectedTarget() != null)                  if (focusSelected && TargetSelector.GetSelectedTarget().Distance(Player.ServerPosition) < range + 100 && TargetSelector.GetSelectedTarget().Type == GameObjectType.obj_AI_Hero)                  {                      //Game.PrintChat("Focusing: " + TargetSelector.GetSelectedTarget().Name);                      return TargetSelector.GetSelectedTarget();                  }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following statement contains a magic number: if (source == "Combo")              {                  switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }              else if (source == "Harass")              {                  switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following statement contains a magic number: if (source == "Combo")              {                  switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }              else if (source == "Harass")              {                  switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following statement contains a magic number: if (source == "Combo")              {                  switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }              else if (source == "Harass")              {                  switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following statement contains a magic number: if (source == "Combo")              {                  switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }              else if (source == "Harass")              {                  switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following statement contains a magic number: if (source == "Combo")              {                  switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }              else if (source == "Harass")              {                  switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }
Magic Number,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following statement contains a magic number: if (source == "Combo")              {                  switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }              else if (source == "Harass")              {                  switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }              }
Magic Number,xSaliceReligionAIO,DamageIndicator,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\DamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(h => h.IsValid && h.IsHPBarRendered && h.IsEnemy))              {                  var barPos = unit.HPBarPosition;                  var damage = _damageToUnit(unit);                  var percentHealthAfterDamage = Math.Max(0' unit.Health - damage) / unit.MaxHealth;                  var yPos = barPos.Y + YOffset;                  var xPosDamage = barPos.X + XOffset + Width * percentHealthAfterDamage;                  var xPosCurrentHp = barPos.X + XOffset + Width * unit.Health/unit.MaxHealth;                    if (damage > unit.Health)                  {                      Text.X = (int)barPos.X + XOffset;                      Text.Y = (int)barPos.Y + YOffset - 13;                      Text.text = ((int)(unit.Health - damage)).ToString();                      Text.OnEndScene();                  }                    Drawing.DrawLine(xPosDamage' yPos' xPosDamage' yPos + Height' 2' Color);                    if (Fill)                  {                      float differenceInHP = xPosCurrentHp - xPosDamage;                      var pos1 = barPos.X + 9 + (107*percentHealthAfterDamage);                        for (int i = 0; i < differenceInHP; i++)                      {                          Drawing.DrawLine(pos1 + i' yPos' pos1 + i' yPos + Height' 1' FillColor);                      }                  }              }
Magic Number,xSaliceReligionAIO,DamageIndicator,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\DamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(h => h.IsValid && h.IsHPBarRendered && h.IsEnemy))              {                  var barPos = unit.HPBarPosition;                  var damage = _damageToUnit(unit);                  var percentHealthAfterDamage = Math.Max(0' unit.Health - damage) / unit.MaxHealth;                  var yPos = barPos.Y + YOffset;                  var xPosDamage = barPos.X + XOffset + Width * percentHealthAfterDamage;                  var xPosCurrentHp = barPos.X + XOffset + Width * unit.Health/unit.MaxHealth;                    if (damage > unit.Health)                  {                      Text.X = (int)barPos.X + XOffset;                      Text.Y = (int)barPos.Y + YOffset - 13;                      Text.text = ((int)(unit.Health - damage)).ToString();                      Text.OnEndScene();                  }                    Drawing.DrawLine(xPosDamage' yPos' xPosDamage' yPos + Height' 2' Color);                    if (Fill)                  {                      float differenceInHP = xPosCurrentHp - xPosDamage;                      var pos1 = barPos.X + 9 + (107*percentHealthAfterDamage);                        for (int i = 0; i < differenceInHP; i++)                      {                          Drawing.DrawLine(pos1 + i' yPos' pos1 + i' yPos + Height' 1' FillColor);                      }                  }              }
Magic Number,xSaliceReligionAIO,DamageIndicator,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\DamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(h => h.IsValid && h.IsHPBarRendered && h.IsEnemy))              {                  var barPos = unit.HPBarPosition;                  var damage = _damageToUnit(unit);                  var percentHealthAfterDamage = Math.Max(0' unit.Health - damage) / unit.MaxHealth;                  var yPos = barPos.Y + YOffset;                  var xPosDamage = barPos.X + XOffset + Width * percentHealthAfterDamage;                  var xPosCurrentHp = barPos.X + XOffset + Width * unit.Health/unit.MaxHealth;                    if (damage > unit.Health)                  {                      Text.X = (int)barPos.X + XOffset;                      Text.Y = (int)barPos.Y + YOffset - 13;                      Text.text = ((int)(unit.Health - damage)).ToString();                      Text.OnEndScene();                  }                    Drawing.DrawLine(xPosDamage' yPos' xPosDamage' yPos + Height' 2' Color);                    if (Fill)                  {                      float differenceInHP = xPosCurrentHp - xPosDamage;                      var pos1 = barPos.X + 9 + (107*percentHealthAfterDamage);                        for (int i = 0; i < differenceInHP; i++)                      {                          Drawing.DrawLine(pos1 + i' yPos' pos1 + i' yPos + Height' 1' FillColor);                      }                  }              }
Magic Number,xSaliceReligionAIO,DamageIndicator,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\DamageIndicator.cs,Drawing_OnDraw,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(h => h.IsValid && h.IsHPBarRendered && h.IsEnemy))              {                  var barPos = unit.HPBarPosition;                  var damage = _damageToUnit(unit);                  var percentHealthAfterDamage = Math.Max(0' unit.Health - damage) / unit.MaxHealth;                  var yPos = barPos.Y + YOffset;                  var xPosDamage = barPos.X + XOffset + Width * percentHealthAfterDamage;                  var xPosCurrentHp = barPos.X + XOffset + Width * unit.Health/unit.MaxHealth;                    if (damage > unit.Health)                  {                      Text.X = (int)barPos.X + XOffset;                      Text.Y = (int)barPos.Y + YOffset - 13;                      Text.text = ((int)(unit.Health - damage)).ToString();                      Text.OnEndScene();                  }                    Drawing.DrawLine(xPosDamage' yPos' xPosDamage' yPos + Height' 2' Color);                    if (Fill)                  {                      float differenceInHP = xPosCurrentHp - xPosDamage;                      var pos1 = barPos.X + 9 + (107*percentHealthAfterDamage);                        for (int i = 0; i < differenceInHP; i++)                      {                          Drawing.DrawLine(pos1 + i' yPos' pos1 + i' yPos + Height' 1' FillColor);                      }                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuDrawing.AddItem(new MenuItem("orb_Draw_MinionHPBar_thickness"' "^ HPBar Thickness").SetValue(new Slider(1' 1' 3)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_Holdzone"' "Hold Position").SetValue(new Slider(50' 0' 200)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_Holdzone"' "Hold Position").SetValue(new Slider(50' 0' 200)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_Farmdelay"' "Farm Delay").SetValue(new Slider(0' 0' 300)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: if(MyHero.ChampionName == "Azir")                  menuMisc.AddItem(new MenuItem("azir_Misc_Farmdelay"' "Soilder Farm Delay").SetValue(new Slider(0' 0' 300)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_ExtraWindUp"' "Extra Winduptime").SetValue(new Slider(80' 200' 0)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_ExtraWindUp"' "Extra Winduptime").SetValue(new Slider(80' 200' 0)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_Humanizer"' "Humanizer Delays").SetValue(new Slider(50' 0' 500)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: menuMisc.AddItem(new MenuItem("orb_Misc_Humanizer"' "Humanizer Delays").SetValue(new Slider(50' 0' 500)));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,AddToMenu,The following statement contains a magic number: {                  var modeCombo = new Menu("Combo"' "orb_Modes_Combo");                  modeCombo.AddItem(new MenuItem("Combo_Key"' "Key").SetValue(new KeyBind(32' KeyBindType.Press)));                  modeCombo.AddItem(new MenuItem("Combo_move"' "Movement").SetValue(true));                  modeCombo.AddItem(new MenuItem("Combo_attack"' "Attack").SetValue(true));                  menuModes.AddSubMenu(modeCombo);                    var modeHarass = new Menu("Harass"' "orb_Modes_Harass");                  modeHarass.AddItem(new MenuItem("Harass_Key"' "Key").SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  modeHarass.AddItem(new MenuItem("Harass_move"' "Movement").SetValue(true));                  modeHarass.AddItem(new MenuItem("Harass_attack"' "Attack").SetValue(true));                  modeHarass.AddItem(new MenuItem("Harass_Lasthit"' "Lasthit Minions").SetValue(true));                  menuModes.AddSubMenu(modeHarass);                    var modeLaneClear = new Menu("LaneClear"' "orb_Modes_LaneClear");                  modeLaneClear.AddItem(new MenuItem("LaneClear_Key"' "Key").SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  modeLaneClear.AddItem(new MenuItem("LaneClear_move"' "Movement").SetValue(true));                  modeLaneClear.AddItem(new MenuItem("LaneClear_attack"' "Attack").SetValue(true));                  menuModes.AddSubMenu(modeLaneClear);                    var modeLaneFreeze = new Menu("LaneFreeze"' "orb_Modes_LaneFreeze");                  modeLaneFreeze.AddItem(new MenuItem("LaneFreeze_Key"' "Key").SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  modeLaneFreeze.AddItem(new MenuItem("LaneFreeze_move"' "Movement").SetValue(true));                  modeLaneFreeze.AddItem(new MenuItem("LaneFreeze_attack"' "Attack").SetValue(true));                  menuModes.AddSubMenu(modeLaneFreeze);                    var modeLasthit = new Menu("LastHit"' "orb_Modes_LastHit");                  modeLasthit.AddItem(new MenuItem("LastHit_Key"' "Key").SetValue(new KeyBind("X".ToCharArray()[0]' KeyBindType.Press)));                  modeLasthit.AddItem(new MenuItem("LastHit_move"' "Movement").SetValue(true));                  modeLasthit.AddItem(new MenuItem("LastHit_attack"' "Attack").SetValue(true));                  menuModes.AddSubMenu(modeLasthit);                    var modeFlee = new Menu("Flee"' "orb_Modes_Flee");                  modeFlee.AddItem(new MenuItem("Flee_Key"' "Key").SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  menuModes.AddSubMenu(modeFlee);              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_hitbox").GetValue<Circle>().Active)              {                  foreach (var enemy in AllEnemys.Where(enemy => enemy.IsValidTarget(1500)))                  {                      if (Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Active)                          Render.Circle.DrawCircle(enemy.Position' GetAutoAttackRange(enemy' MyHero)' Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Color);                      if (Menu.Item("orb_Draw_hitbox").GetValue<Circle>().Active)                          Render.Circle.DrawCircle(enemy.Position' enemy.BoundingRadius' Menu.Item("orb_Draw_hitbox").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Active)              {                  foreach (var enemy in AllEnemys.Where(enemy => enemy.IsValidTarget(1500)))                  {                      Render.Circle.DrawCircle(enemy.Position' GetAutoAttackRange(enemy' MyHero)' Menu.Item("orb_Draw_AARange_Enemy").GetValue<Circle>().Color);                    }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnDraw,The following statement contains a magic number: if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active ||                  Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active)              {                  var minionList = MinionManager.GetMinions(MyHero.Position' GetAutoAttackRange() + 500' MinionTypes.All' MinionTeam.Enemy' MinionOrderTypes.MaxHealth);                  foreach (var minion in minionList.Where(minion => minion.IsValidTarget(GetAutoAttackRange() + 500)))                  {                      var attackToKill = Math.Ceiling(minion.MaxHealth / MyHero.GetAutoAttackDamage(minion' true));                      var hpBarPosition = minion.HPBarPosition;                      var barWidth = minion.IsMelee() ? 75 : 80;                      if (minion.HasBuff("turretshield"' true))                          barWidth = 70;                      var barDistance = (float)(barWidth / attackToKill);                      if (Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Active)                      {                          for (var i = 1; i < attackToKill; i++)                          {                              var startposition = hpBarPosition.X + 45 + barDistance * i;                              Drawing.DrawLine(                                  new Vector2(startposition' hpBarPosition.Y + 18)'                                  new Vector2(startposition' hpBarPosition.Y + 23)'                                  Menu.Item("orb_Draw_MinionHPBar_thickness").GetValue<Slider>().Value'                                  Menu.Item("orb_Draw_MinionHPBar").GetValue<Circle>().Color);                          }                      }                      if (Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Active &&                          minion.Health <= MyHero.GetAutoAttackDamage(minion' true))                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_Lasthit").GetValue<Circle>().Color);                      else if (Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Active &&                               minion.Health <= MyHero.GetAutoAttackDamage(minion' true) * 2)                          Render.Circle.DrawCircle(minion.Position' minion.BoundingRadius' Menu.Item("orb_Draw_nearKill").GetValue<Circle>().Color);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,Orbwalk,The following statement contains a magic number: if (target != null && (CanAttack() || HaveCancled()) && IsAllowedToAttack())              {                  _disableNextAttack = false;                  FireBeforeAttack(target);                  if (!_disableNextAttack)                  {                      if (CurrentMode != Mode.Harass || !target.IsMinion || Menu.Item("Harass_Lasthit").GetValue<bool>())                      {                          MyHero.IssueOrder(GameObjectOrder.AttackUnit' target);                          _lastAATick = Environment.TickCount + Game.Ping / 2;                      }                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,Orbwalk,The following statement contains a magic number: if (MyHero.IsMelee() && target != null && target.Distance(MyHero.Position) < GetAutoAttackRange(MyHero' target) &&                  Menu.Item("orb_Melee_Prediction").GetValue<bool>() && target is Obj_AI_Hero && Game.CursorPos.Distance(target.Position) < 300)              {                  _movementPrediction.Delay = MyHero.BasicAttack.SpellCastTime;                  _movementPrediction.Speed = MyHero.BasicAttack.MissileSpeed;                  MoveTo(_movementPrediction.GetPrediction(target).UnitPosition);                  R.LastCastAttemptT = 0;              }              else                  MoveTo(goalPosition);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,MoveTo,The following statement contains a magic number: if (Environment.TickCount - _lastCast < 500)                  return;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,MoveTo,The following statement contains a magic number: var point = MyHero.ServerPosition +              300 * (position.To2D() - MyHero.ServerPosition.To2D()).Normalized().To3D();
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnProcessSpell,The following statement contains a magic number: if (IsAutoAttackReset(spell.SData.Name) && unit.IsMe)                  Utility.DelayAction.Add(100' ResetAutoAttackTimer);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe)              {                  _lastAATick = Environment.TickCount - Game.Ping / 2; // need test todo                  // ReSharper disable once CanBeReplacedWithTryCastAndCheckForNull                  if (spell.Target is Obj_AI_Base)                  {                      FireOnTargetSwitch((Obj_AI_Base)spell.Target);                      _lastTarget = (Obj_AI_Base)spell.Target;                  }                  if (unit.IsMelee())                      Utility.DelayAction.Add(                          (int)(unit.AttackCastDelay * 1000 + Game.Ping * 0.5) + 50' () => FireAfterAttack(unit' _lastTarget));                    FireOnAttack(unit' _lastTarget);              }              else              {                  if (spell.Target is Obj_AI_Base)                  {                      FireOnAttack(unit' (Obj_AI_Base)spell.Target);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe)              {                  _lastAATick = Environment.TickCount - Game.Ping / 2; // need test todo                  // ReSharper disable once CanBeReplacedWithTryCastAndCheckForNull                  if (spell.Target is Obj_AI_Base)                  {                      FireOnTargetSwitch((Obj_AI_Base)spell.Target);                      _lastTarget = (Obj_AI_Base)spell.Target;                  }                  if (unit.IsMelee())                      Utility.DelayAction.Add(                          (int)(unit.AttackCastDelay * 1000 + Game.Ping * 0.5) + 50' () => FireAfterAttack(unit' _lastTarget));                    FireOnAttack(unit' _lastTarget);              }              else              {                  if (spell.Target is Obj_AI_Base)                  {                      FireOnAttack(unit' (Obj_AI_Base)spell.Target);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe)              {                  _lastAATick = Environment.TickCount - Game.Ping / 2; // need test todo                  // ReSharper disable once CanBeReplacedWithTryCastAndCheckForNull                  if (spell.Target is Obj_AI_Base)                  {                      FireOnTargetSwitch((Obj_AI_Base)spell.Target);                      _lastTarget = (Obj_AI_Base)spell.Target;                  }                  if (unit.IsMelee())                      Utility.DelayAction.Add(                          (int)(unit.AttackCastDelay * 1000 + Game.Ping * 0.5) + 50' () => FireAfterAttack(unit' _lastTarget));                    FireOnAttack(unit' _lastTarget);              }              else              {                  if (spell.Target is Obj_AI_Base)                  {                      FireOnAttack(unit' (Obj_AI_Base)spell.Target);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,OnProcessSpell,The following statement contains a magic number: if (unit.IsMe)              {                  _lastAATick = Environment.TickCount - Game.Ping / 2; // need test todo                  // ReSharper disable once CanBeReplacedWithTryCastAndCheckForNull                  if (spell.Target is Obj_AI_Base)                  {                      FireOnTargetSwitch((Obj_AI_Base)spell.Target);                      _lastTarget = (Obj_AI_Base)spell.Target;                  }                  if (unit.IsMelee())                      Utility.DelayAction.Add(                          (int)(unit.AttackCastDelay * 1000 + Game.Ping * 0.5) + 50' () => FireAfterAttack(unit' _lastTarget));                    FireOnAttack(unit' _lastTarget);              }              else              {                  if (spell.Target is Obj_AI_Base)                  {                      FireOnAttack(unit' (Obj_AI_Base)spell.Target);                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var damagelist = new List<int> { 50' 55' 60' 65' 70' 75' 80' 85' 90' 95' 100' 110' 120' 130' 140' 150' 160' 170 };
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var dmg = damagelist[MyHero.Level - 1] + (MyHero.BaseAbilityDamage * 0.6);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: var count = Soilders.Count(obj => obj.Position.Distance(unit.Position) < 390);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetAzirAaSandwarriorDamage,The following statement contains a magic number: if (count > 1)                  return MyHero.CalcDamage(unit' Damage.DamageType.Magical' dmg) + ((MyHero.CalcDamage(unit' Damage.DamageType.Magical' dmg) * 0.25)*(count - 1));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,InSoldierAttackRange,The following statement contains a magic number: return target != null && Soilders.Count(obj => obj.Position.Distance(target.Position) < 390) > 0;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.Harass || CurrentMode == Mode.Lasthit || CurrentMode == Mode.LaneClear || CurrentMode == Mode.LaneFreeze)              {                  foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InAutoAttackRange(minion)                  && minion.Health < 2 * (MyHero.BaseAttackDamage + MyHero.FlatPhysicalDamageMod))                                         let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 +                                                 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                                         let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay())                                         where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                               predHealth <= MyHero.GetAutoAttackDamage(minion' true)                                         select minion)                      return minion;                    if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                      foreach (var minion in from minion in minions.Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                          let t = (int)(MyHero.AttackCastDelay * 1000) - 100 + Game.Ping / 2 + 1000 * (int)MyHero.Distance(minion.Position) / (int)MyProjectileSpeed()                          let predHealth = HealthPrediction.GetHealthPrediction(minion' t' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                          where minion.Team != GameObjectTeam.Neutral && predHealth > 0 &&                                predHealth <= GetAzirAaSandwarriorDamage(minion)                          select minion)                          return minion;                  }              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (CurrentMode == Mode.LaneClear || CurrentMode == Mode.Harass || CurrentMode == Mode.LaneFreeze)              {                  if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)                  {                      maxhealth = new float[] { 0 };                      var maxhealth1 = maxhealth;                      var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.Neutral);                      foreach (                          var minion in                              minions                                  .Where(minion => InSoldierAttackRange(minion) && minion.Name != "Beacon" && minion.IsValidTarget())                                  .Where(minion => minion.MaxHealth >= maxhealth1[0] || Math.Abs(maxhealth1[0] - float.MaxValue) < float.Epsilon))                      {                          tempTarget = minion;                          maxhealth[0] = minion.MaxHealth;                      }                      if (tempTarget != null)                          return tempTarget;                  }                    maxhealth = new float[] { 0 };                  var maxhealth2 = maxhealth;                  foreach (var minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion => minion.IsValidTarget(GetAutoAttackRange(MyHero' minion)) && minion.Name != "Beacon" && minion.Team == GameObjectTeam.Neutral).Where(minion => minion.MaxHealth >= maxhealth2[0] || Math.Abs(maxhealth2[0] - float.MaxValue) < float.Epsilon))                  {                      tempTarget = minion;                      maxhealth[0] = minion.MaxHealth;                  }                  if (tempTarget != null)                      return tempTarget;              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)              {                  maxhealth = new float[] { 0 };                  float[] maxhealth1 = maxhealth;                  var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                  foreach (var minion in from minion in minions                      .Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                                         let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                                         where predHealth >=                                               GetAzirAaSandwarriorDamage(minion) + MyHero.GetAutoAttackDamage(minion' true) ||                                               Math.Abs(predHealth - minion.Health) < float.Epsilon                                         where minion.Health >= maxhealth1[0] || Math.Abs(maxhealth1[0] - float.MaxValue) < float.Epsilon                                         select minion)                  {                      tempTarget = minion;                      maxhealth[0] = minion.MaxHealth;                  }                  if (tempTarget != null)                      return tempTarget;              }              else {               maxhealth = new float[] { 0 };              foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>()                  .Where(minion => minion.IsValidTarget(GetAutoAttackRange(MyHero' minion)) && minion.Name != "Beacon")                                     let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay())                                     where predHealth >=                                           2 * MyHero.GetAutoAttackDamage(minion' true) ||                                           Math.Abs(predHealth - minion.Health) < float.Epsilon                                     where minion.Health >= maxhealth[0] || Math.Abs(maxhealth[0] - float.MaxValue) < float.Epsilon                                     select minion)              {                  tempTarget = minion;                  maxhealth[0] = minion.MaxHealth;              }              if (tempTarget != null)                  return tempTarget;              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)              {                  maxhealth = new float[] { 0 };                  float[] maxhealth1 = maxhealth;                  var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                  foreach (var minion in from minion in minions                      .Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                                         let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                                         where predHealth >=                                               GetAzirAaSandwarriorDamage(minion) + MyHero.GetAutoAttackDamage(minion' true) ||                                               Math.Abs(predHealth - minion.Health) < float.Epsilon                                         where minion.Health >= maxhealth1[0] || Math.Abs(maxhealth1[0] - float.MaxValue) < float.Epsilon                                         select minion)                  {                      tempTarget = minion;                      maxhealth[0] = minion.MaxHealth;                  }                  if (tempTarget != null)                      return tempTarget;              }              else {               maxhealth = new float[] { 0 };              foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>()                  .Where(minion => minion.IsValidTarget(GetAutoAttackRange(MyHero' minion)) && minion.Name != "Beacon")                                     let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay())                                     where predHealth >=                                           2 * MyHero.GetAutoAttackDamage(minion' true) ||                                           Math.Abs(predHealth - minion.Health) < float.Epsilon                                     where minion.Health >= maxhealth[0] || Math.Abs(maxhealth[0] - float.MaxValue) < float.Epsilon                                     select minion)              {                  tempTarget = minion;                  maxhealth[0] = minion.MaxHealth;              }              if (tempTarget != null)                  return tempTarget;              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)              {                  maxhealth = new float[] { 0 };                  float[] maxhealth1 = maxhealth;                  var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                  foreach (var minion in from minion in minions                      .Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                                         let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                                         where predHealth >=                                               GetAzirAaSandwarriorDamage(minion) + MyHero.GetAutoAttackDamage(minion' true) ||                                               Math.Abs(predHealth - minion.Health) < float.Epsilon                                         where minion.Health >= maxhealth1[0] || Math.Abs(maxhealth1[0] - float.MaxValue) < float.Epsilon                                         select minion)                  {                      tempTarget = minion;                      maxhealth[0] = minion.MaxHealth;                  }                  if (tempTarget != null)                      return tempTarget;              }              else {               maxhealth = new float[] { 0 };              foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>()                  .Where(minion => minion.IsValidTarget(GetAutoAttackRange(MyHero' minion)) && minion.Name != "Beacon")                                     let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay())                                     where predHealth >=                                           2 * MyHero.GetAutoAttackDamage(minion' true) ||                                           Math.Abs(predHealth - minion.Health) < float.Epsilon                                     where minion.Health >= maxhealth[0] || Math.Abs(maxhealth[0] - float.MaxValue) < float.Epsilon                                     select minion)              {                  tempTarget = minion;                  maxhealth[0] = minion.MaxHealth;              }              if (tempTarget != null)                  return tempTarget;              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetPossibleTarget,The following statement contains a magic number: if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)              {                  maxhealth = new float[] { 0 };                  float[] maxhealth1 = maxhealth;                  var minions = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 800' MinionTypes.All' MinionTeam.NotAlly);                  foreach (var minion in from minion in minions                      .Where(minion => minion.IsValidTarget() && minion.Name != "Beacon" && InSoldierAttackRange(minion))                                         let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value))                                         where predHealth >=                                               GetAzirAaSandwarriorDamage(minion) + MyHero.GetAutoAttackDamage(minion' true) ||                                               Math.Abs(predHealth - minion.Health) < float.Epsilon                                         where minion.Health >= maxhealth1[0] || Math.Abs(maxhealth1[0] - float.MaxValue) < float.Epsilon                                         select minion)                  {                      tempTarget = minion;                      maxhealth[0] = minion.MaxHealth;                  }                  if (tempTarget != null)                      return tempTarget;              }              else {               maxhealth = new float[] { 0 };              foreach (var minion in from minion in ObjectManager.Get<Obj_AI_Minion>()                  .Where(minion => minion.IsValidTarget(GetAutoAttackRange(MyHero' minion)) && minion.Name != "Beacon")                                     let predHealth = HealthPrediction.LaneClearHealthPrediction(minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay())                                     where predHealth >=                                           2 * MyHero.GetAutoAttackDamage(minion' true) ||                                           Math.Abs(predHealth - minion.Health) < float.Epsilon                                     where minion.Health >= maxhealth[0] || Math.Abs(maxhealth[0] - float.MaxValue) < float.Epsilon                                     select minion)              {                  tempTarget = minion;                  maxhealth[0] = minion.MaxHealth;              }              if (tempTarget != null)                  return tempTarget;              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,ShouldWait,The following statement contains a magic number: if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)              {                  return ObjectManager.Get<Obj_AI_Minion>()                      .Any(                      minion =>                      minion.IsValidTarget() && minion.Team != GameObjectTeam.Neutral &&                      InSoldierAttackRange(minion) &&                      HealthPrediction.LaneClearHealthPrediction(                      minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay(Menu.Item("azir_Misc_Farmdelay").GetValue<Slider>().Value)) <= GetAzirAaSandwarriorDamage(minion));              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,ShouldWait,The following statement contains a magic number: return ObjectManager.Get<Obj_AI_Minion>()              .Any(              minion =>              minion.IsValidTarget() && minion.Team != GameObjectTeam.Neutral &&              InAutoAttackRange(minion) &&              HealthPrediction.LaneClearHealthPrediction(              minion' (int)((MyHero.AttackDelay * 1000) * LaneClearWaitTimeMod)' FarmDelay()) <= MyHero.GetAutoAttackDamage(minion));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetNextAATime,The following statement contains a magic number: return (_lastAATick + MyHero.AttackDelay * 1000) - (Environment.TickCount + Game.Ping / 2 + 25);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetNextAATime,The following statement contains a magic number: return (_lastAATick + MyHero.AttackDelay * 1000) - (Environment.TickCount + Game.Ping / 2 + 25);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetNextAATime,The following statement contains a magic number: return (_lastAATick + MyHero.AttackDelay * 1000) - (Environment.TickCount + Game.Ping / 2 + 25);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CanAttack,The following statement contains a magic number: if (_lastAATick <= Environment.TickCount)                  return Environment.TickCount + Game.Ping / 2 + 25 >= _lastAATick + MyHero.AttackDelay * 1000 && _attack;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CanAttack,The following statement contains a magic number: if (_lastAATick <= Environment.TickCount)                  return Environment.TickCount + Game.Ping / 2 + 25 >= _lastAATick + MyHero.AttackDelay * 1000 && _attack;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CanAttack,The following statement contains a magic number: if (_lastAATick <= Environment.TickCount)                  return Environment.TickCount + Game.Ping / 2 + 25 >= _lastAATick + MyHero.AttackDelay * 1000 && _attack;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,HaveCancled,The following statement contains a magic number: if (_lastAATick - Environment.TickCount > MyHero.AttackCastDelay * 1000 + 25)                  return lastRealAttack < _lastAATick;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,HaveCancled,The following statement contains a magic number: if (_lastAATick - Environment.TickCount > MyHero.AttackCastDelay * 1000 + 25)                  return lastRealAttack < _lastAATick;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CanMove,The following statement contains a magic number: if (_lastAATick <= Environment.TickCount)                  return Environment.TickCount + Game.Ping / 2 >= _lastAATick + MyHero.AttackCastDelay * 1000 + _windup && _movement;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CanMove,The following statement contains a magic number: if (_lastAATick <= Environment.TickCount)                  return Environment.TickCount + Game.Ping / 2 >= _lastAATick + MyHero.AttackCastDelay * 1000 + _windup && _movement;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetBestHeroTarget,The following statement contains a magic number: if (MyHero.ChampionName == "Azir" && Soilders.Count > 0)              {                  foreach (var enemy in AllEnemys.Where(hero => hero.IsValidTarget() && InSoldierAttackRange(hero)))                  {                      var killHits = CountKillhitsAzirSoldier(enemy);                      if (killableEnemy != null && (!(killHits < hitsToKill) || enemy.HasBuffOfType(BuffType.Invulnerability)))                          continue;                      killableEnemy = enemy;                      hitsToKill = killHits;                  }                  if (hitsToKill <= 4)                      return killableEnemy;                  Obj_AI_Hero[] mostdmgenemy = { null };                  foreach (var enemy in AllEnemys.Where(hero => hero.IsValidTarget() && InSoldierAttackRange(hero)).Where(enemy => mostdmgenemy[0] == null || GetAzirAaSandwarriorDamage(enemy) > GetAzirAaSandwarriorDamage(mostdmgenemy[0])))                  {                      mostdmgenemy[0] = enemy;                  }                  if (mostdmgenemy[0] != null)                      return mostdmgenemy[0];              }
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,GetBestHeroTarget,The following statement contains a magic number: return hitsToKill <= 3 ? killableEnemy : TargetSelector.GetTarget(GetAutoAttackRange()' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (Game.Ping >= 100)                  additional = Game.Ping / 100 * 5;              else if (Game.Ping > 40 && Game.Ping < 100)                  additional = Game.Ping / 100 * 10;              else if (Game.Ping <= 40)                  additional = +20;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (windUp < 40)                  windUp = 40;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: if (windUp < 40)                  windUp = 40;
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: Menu.Item("orb_Misc_ExtraWindUp").SetValue(windUp < 200 ? new Slider(windUp' 200' 0) : new Slider(200' 200' 0));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: Menu.Item("orb_Misc_ExtraWindUp").SetValue(windUp < 200 ? new Slider(windUp' 200' 0) : new Slider(200' 200' 0));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: Menu.Item("orb_Misc_ExtraWindUp").SetValue(windUp < 200 ? new Slider(windUp' 200' 0) : new Slider(200' 200' 0));
Magic Number,xSaliceReligionAIO,xSLxOrbwalker,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Orbwalker.cs,CheckAutoWindUp,The following statement contains a magic number: Menu.Item("orb_Misc_ExtraWindUp").SetValue(windUp < 200 ? new Slider(windUp' 200' 0) : new Slider(200' 200' 0));
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 650'                      Radius = 250'                      MissileSpeed = 2000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 650'                      Radius = 250'                      MissileSpeed = 2000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 650'                      Radius = 250'                      MissileSpeed = 2000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 650'                      Radius = 250'                      MissileSpeed = 2000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 650'                      Radius = 250'                      MissileSpeed = 2000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1075'                      Radius = 35'                      MissileSpeed = 1250'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "AatroxEConeMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1075'                      Radius = 35'                      MissileSpeed = 1250'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "AatroxEConeMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1075'                      Radius = 35'                      MissileSpeed = 1250'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "AatroxEConeMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1075'                      Radius = 35'                      MissileSpeed = 1250'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "AatroxEConeMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Aatrox"'                      SpellName = "AatroxE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1075'                      Radius = 35'                      MissileSpeed = 1250'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "AatroxEConeMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbofDeception"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 2500'                      MissileAccel = -3200'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "AhriOrbMissile"'                      CanBeRemoved = true'                      ForceRemove = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriOrbReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 100'                      MissileSpeed = 60'                      MissileAccel = 1900'                      MissileMinSpeed = 60'                      MissileMaxSpeed = 2600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileFollowsUnit = true'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "AhriOrbReturn"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriSeduce"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "AhriSeduceMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriSeduce"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "AhriSeduceMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriSeduce"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "AhriSeduceMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriSeduce"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "AhriSeduceMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ahri"'                      SpellName = "AhriSeduce"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "AhriSeduceMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "BandageToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SadMummyBandageToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "BandageToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SadMummyBandageToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "BandageToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SadMummyBandageToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "BandageToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SadMummyBandageToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "BandageToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SadMummyBandageToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "CurseoftheSadMummy"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 550'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "CurseoftheSadMummy"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 550'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Amumu"'                      SpellName = "CurseoftheSadMummy"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 550'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Anivia"'                      SpellName = "FlashFrost"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "FlashFrostSpell"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Anivia"'                      SpellName = "FlashFrost"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "FlashFrostSpell"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Anivia"'                      SpellName = "FlashFrost"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "FlashFrostSpell"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Anivia"'                      SpellName = "FlashFrost"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "FlashFrostSpell"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Anivia"'                      SpellName = "FlashFrost"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "FlashFrostSpell"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "Incinerate"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCone'                      Delay = 250'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "Incinerate"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCone'                      Delay = 250'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "Incinerate"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCone'                      Delay = 250'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "Incinerate"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCone'                      Delay = 250'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "InfernalGuardian"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 251'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "InfernalGuardian"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 251'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "InfernalGuardian"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 251'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Annie"'                      SpellName = "InfernalGuardian"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 251'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "VolleyAttack"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VolleyAttack"'                      MultipleNumber = 7'                      MultipleAngle = 9.58f * (float)Math.PI / 180'                      CanBeRemoved = false'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "EnchantedCrystalArrow"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 20000'                      Radius = 130'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EnchantedCrystalArrow"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "EnchantedCrystalArrow"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 20000'                      Radius = 130'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EnchantedCrystalArrow"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "EnchantedCrystalArrow"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 20000'                      Radius = 130'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EnchantedCrystalArrow"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "EnchantedCrystalArrow"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 20000'                      Radius = 130'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EnchantedCrystalArrow"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ashe"'                      SpellName = "EnchantedCrystalArrow"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 20000'                      Radius = 130'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EnchantedCrystalArrow"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "RocketGrab"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "RocketGrabMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "RocketGrab"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "RocketGrabMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "RocketGrab"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "RocketGrabMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "RocketGrab"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "RocketGrabMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "RocketGrab"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "RocketGrabMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "StaticField"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 600'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "StaticField"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 600'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Blitzcrank"'                      SpellName = "StaticField"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 600'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandBlaze"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BrandBlazeMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandBlaze"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BrandBlazeMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandBlaze"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BrandBlazeMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandBlaze"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BrandBlazeMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandBlaze"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BrandBlazeMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandFissure"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 850'                      Range = 900'                      Radius = 240'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandFissure"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 850'                      Range = 900'                      Radius = 240'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandFissure"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 850'                      Range = 900'                      Radius = 240'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Brand"'                      SpellName = "BrandFissure"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 850'                      Range = 900'                      Radius = 240'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BraumQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BraumQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BraumQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BraumQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BraumQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1200'                      Radius = 115'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "braumrmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1200'                      Radius = 115'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "braumrmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1200'                      Radius = 115'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "braumrmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1200'                      Radius = 115'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "braumrmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Braum"'                      SpellName = "BraumRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1200'                      Radius = 115'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "braumrmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynPiltoverPeacemaker"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 625'                      Range = 1300'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CaitlynPiltoverPeacemaker"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynPiltoverPeacemaker"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 625'                      Range = 1300'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CaitlynPiltoverPeacemaker"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynPiltoverPeacemaker"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 625'                      Range = 1300'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CaitlynPiltoverPeacemaker"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynPiltoverPeacemaker"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 625'                      Range = 1300'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CaitlynPiltoverPeacemaker"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynPiltoverPeacemaker"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 625'                      Range = 1300'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CaitlynPiltoverPeacemaker"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynEntrapment"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 80'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 1'                      IsDangerous = false'                      MissileSpellName = "CaitlynEntrapmentMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynEntrapment"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 80'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 1'                      IsDangerous = false'                      MissileSpellName = "CaitlynEntrapmentMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynEntrapment"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 80'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 1'                      IsDangerous = false'                      MissileSpellName = "CaitlynEntrapmentMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Caitlyn"'                      SpellName = "CaitlynEntrapment"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 80'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 1'                      IsDangerous = false'                      MissileSpellName = "CaitlynEntrapmentMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaNoxiousBlast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 850'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CassiopeiaNoxiousBlast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaNoxiousBlast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 850'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CassiopeiaNoxiousBlast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaNoxiousBlast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 850'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CassiopeiaNoxiousBlast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaNoxiousBlast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 850'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "CassiopeiaNoxiousBlast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaPetrifyingGaze"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCone'                      Delay = 600'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "CassiopeiaPetrifyingGaze"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaPetrifyingGaze"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCone'                      Delay = 600'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "CassiopeiaPetrifyingGaze"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaPetrifyingGaze"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCone'                      Delay = 600'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "CassiopeiaPetrifyingGaze"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Cassiopeia"'                      SpellName = "CassiopeiaPetrifyingGaze"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCone'                      Delay = 600'                      Range = 825'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "CassiopeiaPetrifyingGaze"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Chogath"'                      SpellName = "Rupture"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 950'                      Radius = 250'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "Rupture"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Chogath"'                      SpellName = "Rupture"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 950'                      Radius = 250'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "Rupture"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Chogath"'                      SpellName = "Rupture"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 950'                      Radius = 250'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "Rupture"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Chogath"'                      SpellName = "Rupture"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 950'                      Radius = 250'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "Rupture"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "PhosphorusBomb"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 300'                      Range = 825'                      Radius = 250'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "PhosphorusBombMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "PhosphorusBomb"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 300'                      Range = 825'                      Radius = 250'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "PhosphorusBombMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "PhosphorusBomb"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 300'                      Range = 825'                      Radius = 250'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "PhosphorusBombMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "PhosphorusBomb"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 300'                      Range = 825'                      Radius = 250'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "PhosphorusBombMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "PhosphorusBomb"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 300'                      Range = 825'                      Radius = 250'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "PhosphorusBombMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1300'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1300'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1300'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1300'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1300'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage2"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile2"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage2"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile2"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage2"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile2"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage2"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile2"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Corki"'                      SpellName = "MissileBarrage2"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "MissileBarrageMissile2"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Darius"'                      SpellName = "DariusAxeGrabCone"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCone'                      Delay = 300'                      Range = 550'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DariusAxeGrabCone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Darius"'                      SpellName = "DariusAxeGrabCone"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCone'                      Delay = 300'                      Range = 550'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DariusAxeGrabCone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Darius"'                      SpellName = "DariusAxeGrabCone"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCone'                      Delay = 300'                      Range = 550'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DariusAxeGrabCone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Darius"'                      SpellName = "DariusAxeGrabCone"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCone'                      Delay = 300'                      Range = 550'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DariusAxeGrabCone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "DrMundo"'                      SpellName = "InfectedCleaverMissileCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "InfectedCleaverMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "DrMundo"'                      SpellName = "InfectedCleaverMissileCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "InfectedCleaverMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "DrMundo"'                      SpellName = "InfectedCleaverMissileCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "InfectedCleaverMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "DrMundo"'                      SpellName = "InfectedCleaverMissileCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "InfectedCleaverMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "DrMundo"'                      SpellName = "InfectedCleaverMissileCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "InfectedCleaverMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenDoubleShot"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 130'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DravenDoubleShotMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenDoubleShot"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 130'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DravenDoubleShotMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenDoubleShot"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 130'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DravenDoubleShotMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenDoubleShot"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 130'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DravenDoubleShotMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenDoubleShot"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 130'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DravenDoubleShotMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenRCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "DravenR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenRCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "DravenR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenRCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "DravenR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenRCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "DravenR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Draven"'                      SpellName = "DravenRCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "DravenR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Elise"'                      SpellName = "EliseHumanE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 55'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "EliseHumanE"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Elise"'                      SpellName = "EliseHumanE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 55'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "EliseHumanE"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Elise"'                      SpellName = "EliseHumanE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 55'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "EliseHumanE"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Elise"'                      SpellName = "EliseHumanE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 55'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "EliseHumanE"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Elise"'                      SpellName = "EliseHumanE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 55'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = true'                      MissileSpellName = "EliseHumanE"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Evelynn"'                      SpellName = "EvelynnR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 650'                      Radius = 350'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EvelynnR"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Evelynn"'                      SpellName = "EvelynnR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 650'                      Radius = 350'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EvelynnR"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Evelynn"'                      SpellName = "EvelynnR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 650'                      Radius = 350'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EvelynnR"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Evelynn"'                      SpellName = "EvelynnR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 650'                      Radius = 350'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "EvelynnR"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealMysticShotMissile"'                      ExtraMissileNames = new[] { "EzrealMysticShotPulseMissile" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      Id = 229'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealMysticShotMissile"'                      ExtraMissileNames = new[] { "EzrealMysticShotPulseMissile" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      Id = 229'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealMysticShotMissile"'                      ExtraMissileNames = new[] { "EzrealMysticShotPulseMissile" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      Id = 229'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealMysticShotMissile"'                      ExtraMissileNames = new[] { "EzrealMysticShotPulseMissile" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      Id = 229'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealMysticShotMissile"'                      ExtraMissileNames = new[] { "EzrealMysticShotPulseMissile" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      Id = 229'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealMysticShotMissile"'                      ExtraMissileNames = new[] { "EzrealMysticShotPulseMissile" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      Id = 229'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealEssenceFlux"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealEssenceFluxMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealEssenceFlux"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealEssenceFluxMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealEssenceFlux"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealEssenceFluxMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealEssenceFlux"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealEssenceFluxMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealEssenceFlux"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "EzrealEssenceFluxMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealTrueshotBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 1000'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "EzrealTrueshotBarrage"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      Id = 245'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealTrueshotBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 1000'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "EzrealTrueshotBarrage"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      Id = 245'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealTrueshotBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 1000'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "EzrealTrueshotBarrage"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      Id = 245'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealTrueshotBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 1000'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "EzrealTrueshotBarrage"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      Id = 245'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealTrueshotBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 1000'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "EzrealTrueshotBarrage"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      Id = 245'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ezreal"'                      SpellName = "EzrealTrueshotBarrage"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 1000'                      Range = 20000'                      Radius = 160'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "EzrealTrueshotBarrage"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      Id = 245'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Fizz"'                      SpellName = "FizzMarinerDoom"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 120'                      MissileSpeed = 1350'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "FizzMarinerDoomMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Fizz"'                      SpellName = "FizzMarinerDoom"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 120'                      MissileSpeed = 1350'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "FizzMarinerDoomMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Fizz"'                      SpellName = "FizzMarinerDoom"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 120'                      MissileSpeed = 1350'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "FizzMarinerDoomMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Fizz"'                      SpellName = "FizzMarinerDoom"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 120'                      MissileSpeed = 1350'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "FizzMarinerDoomMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Fizz"'                      SpellName = "FizzMarinerDoom"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 120'                      MissileSpeed = 1350'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "FizzMarinerDoomMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioResoluteSmite"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 200'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioResoluteSmite"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioResoluteSmite"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 200'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioResoluteSmite"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioResoluteSmite"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 200'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioResoluteSmite"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioResoluteSmite"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 200'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioResoluteSmite"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioResoluteSmite"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 200'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioResoluteSmite"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioRighteousGust"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 120'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioRighteousGust"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioRighteousGust"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 120'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioRighteousGust"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioRighteousGust"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 120'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioRighteousGust"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioRighteousGust"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 120'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioRighteousGust"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioRighteousGust"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 120'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GalioRighteousGust"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioIdolOfDurand"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 550'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioIdolOfDurand"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 550'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Galio"'                      SpellName = "GalioIdolOfDurand"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 550'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1125'                      Radius = 60'                      MissileSpeed = 2500'                      MissileAccel = -3000'                      MissileMaxSpeed = 2500'                      MissileMinSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "gnarqmissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 2500'                      Radius = 75'                      MissileSpeed = 60'                      MissileAccel = 800'                      MissileMaxSpeed = 2600'                      MissileMinSpeed = 60'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      CanBeRemoved = true'                      ForceRemove = true'                      MissileSpellName = "GnarQMissileReturn"'                      DisableFowDetection = false'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigW"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigW"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigW"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigW"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 473'                      Radius = 150'                      MissileSpeed = 903'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 473'                      Radius = 150'                      MissileSpeed = 903'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 473'                      Radius = 150'                      MissileSpeed = 903'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 473'                      Radius = 150'                      MissileSpeed = 903'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 475'                      Radius = 200'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 475'                      Radius = 200'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 475'                      Radius = 200'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 475'                      Radius = 200'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarBigE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 475'                      Radius = 200'                      MissileSpeed = 1000'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GnarBigE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 500'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 500'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gnar"'                      SpellName = "GnarR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 500'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasQMissile"'                      ExtraDuration = 4500'                      ToggleParticleName = "Gragas_"'                      DontCross = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasQMissile"'                      ExtraDuration = 4500'                      ToggleParticleName = "Gragas_"'                      DontCross = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasQMissile"'                      ExtraDuration = 4500'                      ToggleParticleName = "Gragas_"'                      DontCross = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasQMissile"'                      ExtraDuration = 4500'                      ToggleParticleName = "Gragas_"'                      DontCross = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasQMissile"'                      ExtraDuration = 4500'                      ToggleParticleName = "Gragas_"'                      DontCross = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasQMissile"'                      ExtraDuration = 4500'                      ToggleParticleName = "Gragas_"'                      DontCross = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 950'                      Radius = 200'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasE"'                      CanBeRemoved = true'                      ExtraRange = 300'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 950'                      Radius = 200'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasE"'                      CanBeRemoved = true'                      ExtraRange = 300'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 950'                      Radius = 200'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasE"'                      CanBeRemoved = true'                      ExtraRange = 300'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 950'                      Radius = 200'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasE"'                      CanBeRemoved = true'                      ExtraRange = 300'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 950'                      Radius = 200'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GragasE"'                      CanBeRemoved = true'                      ExtraRange = 300'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1050'                      Radius = 375'                      MissileSpeed = 1800'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GragasRBoom"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1050'                      Radius = 375'                      MissileSpeed = 1800'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GragasRBoom"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1050'                      Radius = 375'                      MissileSpeed = 1800'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GragasRBoom"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1050'                      Radius = 375'                      MissileSpeed = 1800'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GragasRBoom"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Gragas"'                      SpellName = "GragasR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1050'                      Radius = 375'                      MissileSpeed = 1800'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GragasRBoom"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesClusterShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 50'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "GravesClusterShotAttack"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesChargeShot"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 100'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GravesChargeShotShot"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesChargeShot"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 100'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GravesChargeShotShot"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesChargeShot"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 100'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GravesChargeShotShot"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesChargeShot"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 100'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GravesChargeShotShot"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Graves"'                      SpellName = "GravesChargeShot"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 100'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "GravesChargeShotShot"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "Heimerdingerwm"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HeimerdingerWAttack2"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "Heimerdingerwm"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HeimerdingerWAttack2"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "Heimerdingerwm"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HeimerdingerWAttack2"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "Heimerdingerwm"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HeimerdingerWAttack2"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "Heimerdingerwm"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 70'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HeimerdingerWAttack2"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "HeimerdingerE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 925'                      Radius = 100'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "heimerdingerespell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "HeimerdingerE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 925'                      Radius = 100'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "heimerdingerespell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "HeimerdingerE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 925'                      Radius = 100'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "heimerdingerespell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "HeimerdingerE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 925'                      Radius = 100'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "heimerdingerespell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Heimerdinger"'                      SpellName = "HeimerdingerE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 925'                      Radius = 100'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "heimerdingerespell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Irelia"'                      SpellName = "IreliaTranscendentBlades"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1200'                      Radius = 65'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "IreliaTranscendentBlades"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Irelia"'                      SpellName = "IreliaTranscendentBlades"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1200'                      Radius = 65'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "IreliaTranscendentBlades"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Irelia"'                      SpellName = "IreliaTranscendentBlades"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1200'                      Radius = 65'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "IreliaTranscendentBlades"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Irelia"'                      SpellName = "IreliaTranscendentBlades"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1200'                      Radius = 65'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "IreliaTranscendentBlades"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Janna"'                      SpellName = "JannaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1700'                      Radius = 150'                      MissileSpeed = 900'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HowlingGaleSpell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Janna"'                      SpellName = "JannaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1700'                      Radius = 150'                      MissileSpeed = 900'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HowlingGaleSpell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Janna"'                      SpellName = "JannaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1700'                      Radius = 150'                      MissileSpeed = 900'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HowlingGaleSpell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Janna"'                      SpellName = "JannaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1700'                      Radius = 150'                      MissileSpeed = 900'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HowlingGaleSpell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Janna"'                      SpellName = "JannaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1700'                      Radius = 150'                      MissileSpeed = 900'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "HowlingGaleSpell"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDragonStrike"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 880'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JarvanIVDragonStrike"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDragonStrike"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 880'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JarvanIVDragonStrike"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDragonStrike"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 880'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JarvanIVDragonStrike"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDragonStrike"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 880'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JarvanIVDragonStrike"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDragonStrike"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 880'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JarvanIVDragonStrike"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDemacianStandard"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 860'                      Radius = 175'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JarvanIVDemacianStandard"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDemacianStandard"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 860'                      Radius = 175'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JarvanIVDemacianStandard"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDemacianStandard"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 860'                      Radius = 175'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JarvanIVDemacianStandard"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "JarvanIV"'                      SpellName = "JarvanIVDemacianStandard"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 860'                      Radius = 175'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JarvanIVDemacianStandard"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "jayceshockblast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "jayceshockblast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "jayceshockblast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "jayceshockblast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "jayceshockblast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "JayceQAccel"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 2350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastWallMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "JayceQAccel"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 2350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastWallMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "JayceQAccel"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 2350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastWallMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "JayceQAccel"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 2350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastWallMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jayce"'                      SpellName = "JayceQAccel"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 2350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "JayceShockBlastWallMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 1500'                      Radius = 60'                      MissileSpeed = 3300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JinxWMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 1500'                      Radius = 60'                      MissileSpeed = 3300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JinxWMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 1500'                      Radius = 60'                      MissileSpeed = 3300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JinxWMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 1500'                      Radius = 60'                      MissileSpeed = 3300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JinxWMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 1500'                      Radius = 60'                      MissileSpeed = 3300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JinxWMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 20000'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "JinxR"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 20000'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "JinxR"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 20000'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "JinxR"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 20000'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "JinxR"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Jinx"'                      SpellName = "JinxRWrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 600'                      Range = 20000'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "JinxR"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kalista"'                      SpellName = "KalistaMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 40'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "kalistamysticshotmis"'                      ExtraMissileNames = new[] { "kalistamysticshotmistrue" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kalista"'                      SpellName = "KalistaMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 40'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "kalistamysticshotmis"'                      ExtraMissileNames = new[] { "kalistamysticshotmistrue" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kalista"'                      SpellName = "KalistaMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 40'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "kalistamysticshotmis"'                      ExtraMissileNames = new[] { "kalistamysticshotmistrue" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kalista"'                      SpellName = "KalistaMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 40'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "kalistamysticshotmis"'                      ExtraMissileNames = new[] { "kalistamysticshotmistrue" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kalista"'                      SpellName = "KalistaMysticShot"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 40'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "kalistamysticshotmis"'                      ExtraMissileNames = new[] { "kalistamysticshotmistrue" }'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQMantra"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 80'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissileMantra"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQMantra"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 80'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissileMantra"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQMantra"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 80'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissileMantra"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQMantra"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 80'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissileMantra"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karma"'                      SpellName = "KarmaQMantra"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 80'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KarmaQMissileMantra"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karthus"'                      SpellName = "KarthusLayWasteA2"'                      ExtraSpellNames =                          new[]                          {                              "karthuslaywastea3"' "karthuslaywastea1"' "karthuslaywastedeada1"' "karthuslaywastedeada2"'                              "karthuslaywastedeada3"                          }'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 625'                      Range = 875'                      Radius = 160'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karthus"'                      SpellName = "KarthusLayWasteA2"'                      ExtraSpellNames =                          new[]                          {                              "karthuslaywastea3"' "karthuslaywastea1"' "karthuslaywastedeada1"' "karthuslaywastedeada2"'                              "karthuslaywastedeada3"                          }'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 625'                      Range = 875'                      Radius = 160'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karthus"'                      SpellName = "KarthusLayWasteA2"'                      ExtraSpellNames =                          new[]                          {                              "karthuslaywastea3"' "karthuslaywastea1"' "karthuslaywastedeada1"' "karthuslaywastedeada2"'                              "karthuslaywastedeada3"                          }'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 625'                      Range = 875'                      Radius = 160'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Karthus"'                      SpellName = "KarthusLayWasteA2"'                      ExtraSpellNames =                          new[]                          {                              "karthuslaywastea3"' "karthuslaywastea1"' "karthuslaywastedeada1"' "karthuslaywastedeada2"'                              "karthuslaywastedeada3"                          }'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 625'                      Range = 875'                      Radius = 160'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kassadin"'                      SpellName = "RiftWalk"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 700'                      Radius = 270'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RiftWalk"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kassadin"'                      SpellName = "RiftWalk"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 700'                      Radius = 270'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RiftWalk"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kassadin"'                      SpellName = "RiftWalk"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 700'                      Radius = 270'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RiftWalk"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kassadin"'                      SpellName = "RiftWalk"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 700'                      Radius = 270'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RiftWalk"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kennen"'                      SpellName = "KennenShurikenHurlMissile1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1050'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KennenShurikenHurlMissile1"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kennen"'                      SpellName = "KennenShurikenHurlMissile1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1050'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KennenShurikenHurlMissile1"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kennen"'                      SpellName = "KennenShurikenHurlMissile1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1050'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KennenShurikenHurlMissile1"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kennen"'                      SpellName = "KennenShurikenHurlMissile1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1050'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KennenShurikenHurlMissile1"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kennen"'                      SpellName = "KennenShurikenHurlMissile1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1050'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KennenShurikenHurlMissile1"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixW"'                      ExtraSpellNames = new[] { "khazixwlong" }'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 73'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixWMissile"'                      CanBeRemoved = true'                      MultipleNumber = 3'                      MultipleAngle = 22f * (float)Math.PI / 180'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 300'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 300'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 300'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 300'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Khazix"'                      SpellName = "KhazixE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 600'                      Radius = 300'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KhazixE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 70'                      MissileSpeed = 1650'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawQMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 70'                      MissileSpeed = 1650'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawQMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 70'                      MissileSpeed = 1650'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawQMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 70'                      MissileSpeed = 1650'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawQMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 70'                      MissileSpeed = 1650'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawQMis"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawVoidOoze"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1360'                      Radius = 120'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawVoidOozeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawVoidOoze"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1360'                      Radius = 120'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawVoidOozeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawVoidOoze"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1360'                      Radius = 120'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawVoidOozeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawVoidOoze"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1360'                      Radius = 120'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawVoidOozeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawVoidOoze"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1360'                      Radius = 120'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawVoidOozeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawLivingArtillery"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 1800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawLivingArtillery"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawLivingArtillery"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 1800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawLivingArtillery"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawLivingArtillery"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 1800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawLivingArtillery"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Kogmaw"'                      SpellName = "KogMawLivingArtillery"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1200'                      Range = 1800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "KogMawLivingArtillery"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlide"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlide"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlide"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlide"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlide"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlide"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlide"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlide"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlideM"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlideM"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlideM"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlideM"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlideM"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlideM"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSlideM"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 600'                      Radius = 220'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LeblancSlideM"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackle"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackle"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackle"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackle"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackle"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackle"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackle"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackle"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackle"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackle"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackleM"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackleM"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackleM"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackleM"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackleM"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackleM"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackleM"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackleM"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leblanc"'                      SpellName = "LeblancSoulShackleM"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeblancSoulShackleM"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "LeeSin"'                      SpellName = "BlindMonkQOne"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 65'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BlindMonkQOne"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "LeeSin"'                      SpellName = "BlindMonkQOne"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 65'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BlindMonkQOne"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "LeeSin"'                      SpellName = "BlindMonkQOne"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 65'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BlindMonkQOne"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "LeeSin"'                      SpellName = "BlindMonkQOne"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 65'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BlindMonkQOne"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "LeeSin"'                      SpellName = "BlindMonkQOne"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 65'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "BlindMonkQOne"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaZenithBlade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 905'                      Radius = 100'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeonaZenithBladeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaZenithBlade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 905'                      Radius = 100'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeonaZenithBladeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaZenithBlade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 905'                      Radius = 100'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeonaZenithBladeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaZenithBlade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 905'                      Radius = 100'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeonaZenithBladeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaZenithBlade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 905'                      Radius = 100'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LeonaZenithBladeMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaSolarFlare"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1200'                      Radius = 300'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LeonaSolarFlare"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaSolarFlare"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1200'                      Radius = 300'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LeonaSolarFlare"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaSolarFlare"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1200'                      Radius = 300'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LeonaSolarFlare"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Leona"'                      SpellName = "LeonaSolarFlare"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1200'                      Radius = 300'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LeonaSolarFlare"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 75'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 75'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 75'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 75'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 75'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQShards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "lissandraqshards"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQShards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "lissandraqshards"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQShards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "lissandraqshards"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQShards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "lissandraqshards"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraQShards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 700'                      Radius = 90'                      MissileSpeed = 2200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "lissandraqshards"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 125'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraEMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 125'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraEMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 125'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraEMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 125'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraEMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lissandra"'                      SpellName = "LissandraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1025'                      Radius = 125'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LissandraEMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lucian"'                      SpellName = "LucianQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 1300'                      Radius = 65'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LucianQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lucian"'                      SpellName = "LucianQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 1300'                      Radius = 65'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LucianQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lucian"'                      SpellName = "LucianQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 1300'                      Radius = 65'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LucianQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lucian"'                      SpellName = "LucianQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 1300'                      Radius = 65'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LucianQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lulu"'                      SpellName = "LuluQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuluQMissile"'                      ExtraMissileNames = new[] { "LuluQMissileTwo" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lulu"'                      SpellName = "LuluQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuluQMissile"'                      ExtraMissileNames = new[] { "LuluQMissileTwo" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lulu"'                      SpellName = "LuluQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuluQMissile"'                      ExtraMissileNames = new[] { "LuluQMissileTwo" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lulu"'                      SpellName = "LuluQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuluQMissile"'                      ExtraMissileNames = new[] { "LuluQMissileTwo" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lulu"'                      SpellName = "LuluQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1450'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuluQMissile"'                      ExtraMissileNames = new[] { "LuluQMissileTwo" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightBinding"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LuxLightBindingMis"'                      //CanBeRemoved = true'                      //CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall' }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightBinding"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LuxLightBindingMis"'                      //CanBeRemoved = true'                      //CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall' }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightBinding"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LuxLightBindingMis"'                      //CanBeRemoved = true'                      //CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall' }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightBinding"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LuxLightBindingMis"'                      //CanBeRemoved = true'                      //CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall' }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightBinding"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 70'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "LuxLightBindingMis"'                      //CanBeRemoved = true'                      //CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall' }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightStrikeKugel"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuxLightStrikeKugel"'                      ExtraDuration = 5500'                      ToggleParticleName = "LuxLightstrike_tar"'                      DontCross = true'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightStrikeKugel"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuxLightStrikeKugel"'                      ExtraDuration = 5500'                      ToggleParticleName = "LuxLightstrike_tar"'                      DontCross = true'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightStrikeKugel"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuxLightStrikeKugel"'                      ExtraDuration = 5500'                      ToggleParticleName = "LuxLightstrike_tar"'                      DontCross = true'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightStrikeKugel"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuxLightStrikeKugel"'                      ExtraDuration = 5500'                      ToggleParticleName = "LuxLightstrike_tar"'                      DontCross = true'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightStrikeKugel"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuxLightStrikeKugel"'                      ExtraDuration = 5500'                      ToggleParticleName = "LuxLightstrike_tar"'                      DontCross = true'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxLightStrikeKugel"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 275'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "LuxLightStrikeKugel"'                      ExtraDuration = 5500'                      ToggleParticleName = "LuxLightstrike_tar"'                      DontCross = true'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxMaliceCannon"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 3500'                      Radius = 190'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LuxMaliceCannon"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxMaliceCannon"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 3500'                      Radius = 190'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LuxMaliceCannon"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxMaliceCannon"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 3500'                      Radius = 190'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LuxMaliceCannon"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Lux"'                      SpellName = "LuxMaliceCannon"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 3500'                      Radius = 190'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "LuxMaliceCannon"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malphite"'                      SpellName = "UFSlash"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1000'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "UFSlash"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malphite"'                      SpellName = "UFSlash"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1000'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "UFSlash"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malphite"'                      SpellName = "UFSlash"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1000'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "UFSlash"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malphite"'                      SpellName = "UFSlash"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1000'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "UFSlash"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malzahar"'                      SpellName = "AlZaharCalloftheVoid"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 900'                      Radius = 85'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DontCross = true'                      MissileSpellName = "AlZaharCalloftheVoid"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malzahar"'                      SpellName = "AlZaharCalloftheVoid"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 900'                      Radius = 85'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DontCross = true'                      MissileSpellName = "AlZaharCalloftheVoid"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malzahar"'                      SpellName = "AlZaharCalloftheVoid"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 900'                      Radius = 85'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DontCross = true'                      MissileSpellName = "AlZaharCalloftheVoid"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Malzahar"'                      SpellName = "AlZaharCalloftheVoid"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 1000'                      Range = 900'                      Radius = 85'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DontCross = true'                      MissileSpellName = "AlZaharCalloftheVoid"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Morgana"'                      SpellName = "DarkBindingMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DarkBindingMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Morgana"'                      SpellName = "DarkBindingMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DarkBindingMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Morgana"'                      SpellName = "DarkBindingMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DarkBindingMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Morgana"'                      SpellName = "DarkBindingMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DarkBindingMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Morgana"'                      SpellName = "DarkBindingMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1300'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "DarkBindingMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1625'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "namiqmissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1625'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "namiqmissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1625'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "namiqmissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 1625'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "namiqmissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 2750'                      Radius = 260'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "NamiRMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 2750'                      Radius = 260'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "NamiRMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 2750'                      Radius = 260'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "NamiRMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 2750'                      Radius = 260'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "NamiRMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nami"'                      SpellName = "NamiR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 2750'                      Radius = 260'                      MissileSpeed = 850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "NamiRMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nautilus"'                      SpellName = "NautilusAnchorDrag"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "NautilusAnchorDragMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      //walls?                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nautilus"'                      SpellName = "NautilusAnchorDrag"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "NautilusAnchorDragMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      //walls?                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nautilus"'                      SpellName = "NautilusAnchorDrag"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "NautilusAnchorDragMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      //walls?                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nautilus"'                      SpellName = "NautilusAnchorDrag"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "NautilusAnchorDragMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      //walls?                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nautilus"'                      SpellName = "NautilusAnchorDrag"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 90'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "NautilusAnchorDragMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                      //walls?                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nidalee"'                      SpellName = "JavelinToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JavelinToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nidalee"'                      SpellName = "JavelinToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JavelinToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nidalee"'                      SpellName = "JavelinToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JavelinToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nidalee"'                      SpellName = "JavelinToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JavelinToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Nidalee"'                      SpellName = "JavelinToss"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1500'                      Radius = 40'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "JavelinToss"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Olaf"'                      SpellName = "OlafAxeThrowCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      ExtraRange = 150'                      Radius = 105'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "olafaxethrow"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Olaf"'                      SpellName = "OlafAxeThrowCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      ExtraRange = 150'                      Radius = 105'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "olafaxethrow"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Olaf"'                      SpellName = "OlafAxeThrowCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      ExtraRange = 150'                      Radius = 105'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "olafaxethrow"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Olaf"'                      SpellName = "OlafAxeThrowCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      ExtraRange = 150'                      Radius = 105'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "olafaxethrow"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Olaf"'                      SpellName = "OlafAxeThrowCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      ExtraRange = 150'                      Radius = 105'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "olafaxethrow"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Olaf"'                      SpellName = "OlafAxeThrowCast"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      ExtraRange = 150'                      Radius = 105'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "olafaxethrow"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaizuna"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaizuna"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaizuna"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaizuna"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannaQend"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1500'                      Radius = 90'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannaQend"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1500'                      Radius = 90'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannaQend"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1500'                      Radius = 90'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannaQend"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 1500'                      Radius = 90'                      MissileSpeed = 1200'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OrianaDissonanceCommand"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 255'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "OrianaDissonanceCommand"'                      FromObject = "yomu_ring_"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OrianaDissonanceCommand"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 255'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "OrianaDissonanceCommand"'                      FromObject = "yomu_ring_"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OrianaDissonanceCommand"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 0'                      Radius = 255'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "OrianaDissonanceCommand"'                      FromObject = "yomu_ring_"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 85'                      MissileSpeed = 1850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaredact"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 85'                      MissileSpeed = 1850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaredact"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 85'                      MissileSpeed = 1850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaredact"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OriannasE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1500'                      Radius = 85'                      MissileSpeed = 1850'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "orianaredact"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OrianaDetonateCommand"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 0'                      Radius = 410'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "OrianaDetonateCommand"'                      FromObject = "yomu_ring_"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OrianaDetonateCommand"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 0'                      Radius = 410'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "OrianaDetonateCommand"'                      FromObject = "yomu_ring_"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Orianna"'                      SpellName = "OrianaDetonateCommand"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 0'                      Radius = 410'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "OrianaDetonateCommand"'                      FromObject = "yomu_ring_"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Quinn"'                      SpellName = "QuinnQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1550'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "QuinnQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Quinn"'                      SpellName = "QuinnQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1550'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "QuinnQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Quinn"'                      SpellName = "QuinnQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1550'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "QuinnQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Quinn"'                      SpellName = "QuinnQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1550'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "QuinnQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Quinn"'                      SpellName = "QuinnQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1050'                      Radius = 80'                      MissileSpeed = 1550'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "QuinnQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rengar"'                      SpellName = "RengarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "RengarEFinal"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rengar"'                      SpellName = "RengarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "RengarEFinal"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rengar"'                      SpellName = "RengarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "RengarEFinal"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rengar"'                      SpellName = "RengarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "RengarEFinal"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rengar"'                      SpellName = "RengarE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "RengarEFinal"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "RekSai"'                      SpellName = "reksaiqburrowed"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1625'                      Radius = 60'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "RekSaiQBurrowedMis"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "RekSai"'                      SpellName = "reksaiqburrowed"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1625'                      Radius = 60'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "RekSaiQBurrowedMis"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "RekSai"'                      SpellName = "reksaiqburrowed"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1625'                      Radius = 60'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "RekSaiQBurrowedMis"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "RekSai"'                      SpellName = "reksaiqburrowed"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1625'                      Radius = 60'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "RekSaiQBurrowedMis"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "RekSai"'                      SpellName = "reksaiqburrowed"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1625'                      Radius = 60'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = false'                      MissileSpellName = "RekSaiQBurrowedMis"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Riven"'                      SpellName = "rivenizunablade"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 125'                      MissileSpeed = 2200'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 5'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 15 * (float)Math.PI / 180'                      MissileSpellName = "RivenLightsaberMissile"'                      ExtraMissileNames = new[] { "RivenLightsaberMissileSide" }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RumbleGrenade"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RumbleGrenade"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RumbleGrenade"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RumbleGrenade"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RumbleGrenade"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleCarpetBombM"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      MissileDelayed = true'                      Range = 1200'                      Radius = 200'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = false'                      MissileSpellName = "RumbleCarpetBombMissile"'                      CanBeRemoved = false'                      CollisionObjects = new CollisionObjectTypes[] { }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleCarpetBombM"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      MissileDelayed = true'                      Range = 1200'                      Radius = 200'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = false'                      MissileSpellName = "RumbleCarpetBombMissile"'                      CanBeRemoved = false'                      CollisionObjects = new CollisionObjectTypes[] { }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleCarpetBombM"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      MissileDelayed = true'                      Range = 1200'                      Radius = 200'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = false'                      MissileSpellName = "RumbleCarpetBombMissile"'                      CanBeRemoved = false'                      CollisionObjects = new CollisionObjectTypes[] { }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleCarpetBombM"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      MissileDelayed = true'                      Range = 1200'                      Radius = 200'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = false'                      MissileSpellName = "RumbleCarpetBombMissile"'                      CanBeRemoved = false'                      CollisionObjects = new CollisionObjectTypes[] { }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Rumble"'                      SpellName = "RumbleCarpetBombM"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 400'                      MissileDelayed = true'                      Range = 1200'                      Radius = 200'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 4'                      IsDangerous = false'                      MissileSpellName = "RumbleCarpetBombMissile"'                      CanBeRemoved = false'                      CollisionObjects = new CollisionObjectTypes[] { }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniArcticAssault"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 900'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniArcticAssault"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 900'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniArcticAssault"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 900'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniArcticAssault"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 900'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniArcticAssault"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 900'                      Radius = 70'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = ""'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniGlacialPrisonStart"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "sejuaniglacialprison"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniGlacialPrisonStart"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "sejuaniglacialprison"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniGlacialPrisonStart"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "sejuaniglacialprison"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniGlacialPrisonStart"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "sejuaniglacialprison"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sejuani"'                      SpellName = "SejuaniGlacialPrisonStart"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 110'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "sejuaniglacialprison"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sion"'                      SpellName = "SionE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SionEMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sion"'                      SpellName = "SionE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SionEMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sion"'                      SpellName = "SionE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SionEMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sion"'                      SpellName = "SionE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SionEMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sion"'                      SpellName = "SionE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1800'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SionEMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.Minion' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Soraka"'                      SpellName = "SorakaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 950'                      Radius = 300'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Soraka"'                      SpellName = "SorakaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 950'                      Radius = 300'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Soraka"'                      SpellName = "SorakaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 950'                      Radius = 300'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Soraka"'                      SpellName = "SorakaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 950'                      Radius = 300'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Soraka"'                      SpellName = "SorakaQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 950'                      Radius = 300'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shen"'                      SpellName = "ShenShadowDash"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 650'                      Radius = 50'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShenShadowDash"'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shen"'                      SpellName = "ShenShadowDash"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 650'                      Radius = 50'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShenShadowDash"'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shen"'                      SpellName = "ShenShadowDash"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 650'                      Radius = 50'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShenShadowDash"'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shen"'                      SpellName = "ShenShadowDash"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 650'                      Radius = 50'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShenShadowDash"'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shen"'                      SpellName = "ShenShadowDash"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 650'                      Radius = 50'                      MissileSpeed = 1600'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShenShadowDash"'                      ExtraRange = 200'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaFireball"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ShyvanaFireballMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaFireball"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ShyvanaFireballMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaFireball"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ShyvanaFireballMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaFireball"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ShyvanaFireballMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaFireball"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 950'                      Radius = 60'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ShyvanaFireballMissile"'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaTransformCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 150'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShyvanaTransformCast"'                      ExtraRange = 200'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaTransformCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 150'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShyvanaTransformCast"'                      ExtraRange = 200'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaTransformCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 150'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShyvanaTransformCast"'                      ExtraRange = 200'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaTransformCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 150'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShyvanaTransformCast"'                      ExtraRange = 200'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaTransformCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 150'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShyvanaTransformCast"'                      ExtraRange = 200'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Shyvana"'                      SpellName = "ShyvanaTransformCast"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 150'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ShyvanaTransformCast"'                      ExtraRange = 200'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1250'                      Radius = 100'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissileReturn"'                      DisableFowDetection = false'                      MissileFollowsUnit = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1250'                      Radius = 100'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissileReturn"'                      DisableFowDetection = false'                      MissileFollowsUnit = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1250'                      Radius = 100'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissileReturn"'                      DisableFowDetection = false'                      MissileFollowsUnit = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQReturn"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 1250'                      Radius = 100'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissileReturn"'                      DisableFowDetection = false'                      MissileFollowsUnit = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1250'                      Radius = 90'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1250'                      Radius = 90'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1250'                      Radius = 90'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1250'                      Radius = 90'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sivir"'                      SpellName = "SivirQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1250'                      Radius = 90'                      MissileSpeed = 1350'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SivirQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Skarner"'                      SpellName = "SkarnerFracture"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SkarnerFractureMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Skarner"'                      SpellName = "SkarnerFracture"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SkarnerFractureMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Skarner"'                      SpellName = "SkarnerFracture"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SkarnerFractureMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Skarner"'                      SpellName = "SkarnerFracture"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SkarnerFractureMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Skarner"'                      SpellName = "SkarnerFracture"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 70'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SkarnerFractureMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sona"'                      SpellName = "SonaR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 140'                      MissileSpeed = 2400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "SonaR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sona"'                      SpellName = "SonaR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 140'                      MissileSpeed = 2400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "SonaR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sona"'                      SpellName = "SonaR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 140'                      MissileSpeed = 2400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "SonaR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sona"'                      SpellName = "SonaR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 140'                      MissileSpeed = 2400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "SonaR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Sona"'                      SpellName = "SonaR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 140'                      MissileSpeed = 2400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 5'                      IsDangerous = true'                      MissileSpellName = "SonaR"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Swain"'                      SpellName = "SwainShadowGrasp"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1100'                      Range = 900'                      Radius = 180'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SwainShadowGrasp"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Swain"'                      SpellName = "SwainShadowGrasp"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1100'                      Range = 900'                      Radius = 180'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SwainShadowGrasp"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Swain"'                      SpellName = "SwainShadowGrasp"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1100'                      Range = 900'                      Radius = 180'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SwainShadowGrasp"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Swain"'                      SpellName = "SwainShadowGrasp"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1100'                      Range = 900'                      Radius = 180'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "SwainShadowGrasp"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SyndraQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SyndraQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SyndraQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 150'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SyndraQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrawcast"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 950'                      Radius = 210'                      MissileSpeed = 1450'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrawcast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrawcast"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 950'                      Radius = 210'                      MissileSpeed = 1450'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrawcast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrawcast"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 950'                      Radius = 210'                      MissileSpeed = 1450'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrawcast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrawcast"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 950'                      Radius = 210'                      MissileSpeed = 1450'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrawcast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrawcast"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 950'                      Radius = 210'                      MissileSpeed = 1450'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrawcast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrae5"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrae5"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrae5"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrae5"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrae5"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrae5"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrae5"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrae5"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "syndrae5"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "syndrae5"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DisableFowDetection = true'                      MissileSpellName = "SyndraE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DisableFowDetection = true'                      MissileSpellName = "SyndraE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DisableFowDetection = true'                      MissileSpellName = "SyndraE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DisableFowDetection = true'                      MissileSpellName = "SyndraE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Syndra"'                      SpellName = "SyndraE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 300'                      Range = 950'                      Radius = 90'                      MissileSpeed = 1601'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      DisableFowDetection = true'                      MissileSpellName = "SyndraE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRake"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 2300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissileone"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Talon"'                      SpellName = "TalonRakeReturn"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 800'                      Radius = 80'                      MissileSpeed = 1850'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MultipleNumber = 3'                      MultipleAngle = 20 * (float)Math.PI / 180'                      MissileSpellName = "talonrakemissiletwo"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1100'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ThreshQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1100'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ThreshQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1100'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ThreshQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1100'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ThreshQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1100'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ThreshQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshEFlay"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1075'                      Radius = 110'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      Centered = true'                      MissileSpellName = "ThreshEMissile1"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshEFlay"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1075'                      Radius = 110'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      Centered = true'                      MissileSpellName = "ThreshEMissile1"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshEFlay"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1075'                      Radius = 110'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      Centered = true'                      MissileSpellName = "ThreshEMissile1"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshEFlay"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1075'                      Radius = 110'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      Centered = true'                      MissileSpellName = "ThreshEMissile1"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Thresh"'                      SpellName = "ThreshEFlay"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1075'                      Radius = 110'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      Centered = true'                      MissileSpellName = "ThreshEMissile1"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tristana"'                      SpellName = "RocketJump"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RocketJump"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tristana"'                      SpellName = "RocketJump"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RocketJump"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tristana"'                      SpellName = "RocketJump"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RocketJump"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tristana"'                      SpellName = "RocketJump"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RocketJump"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tristana"'                      SpellName = "RocketJump"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 270'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "RocketJump"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tryndamere"'                      SpellName = "slashCast"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 660'                      Radius = 93'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "slashCast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tryndamere"'                      SpellName = "slashCast"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 660'                      Radius = 93'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "slashCast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tryndamere"'                      SpellName = "slashCast"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 660'                      Radius = 93'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "slashCast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Tryndamere"'                      SpellName = "slashCast"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 0'                      Range = 660'                      Radius = 93'                      MissileSpeed = 1300'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "slashCast"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "TwistedFate"'                      SpellName = "WildCards"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1450'                      Radius = 40'                      MissileSpeed = 1000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "SealFateMissile"'                      MultipleNumber = 3'                      MultipleAngle = 28 * (float)Math.PI / 180'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Twitch"'                      SpellName = "TwitchVenomCask"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 275'                      MissileSpeed = 1400'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "TwitchVenomCaskMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Twitch"'                      SpellName = "TwitchVenomCask"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 275'                      MissileSpeed = 1400'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "TwitchVenomCaskMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Twitch"'                      SpellName = "TwitchVenomCask"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 275'                      MissileSpeed = 1400'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "TwitchVenomCaskMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Twitch"'                      SpellName = "TwitchVenomCask"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 275'                      MissileSpeed = 1400'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "TwitchVenomCaskMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Twitch"'                      SpellName = "TwitchVenomCask"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 900'                      Radius = 275'                      MissileSpeed = 1400'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "TwitchVenomCaskMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotHeatseekingLineMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotHeatseekingLineMissile"'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotHeatseekingLineMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotHeatseekingLineMissile"'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotHeatseekingLineMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotHeatseekingLineMissile"'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotHeatseekingLineMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotHeatseekingLineMissile"'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotHeatseekingLineMissile"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 125'                      Range = 1000'                      Radius = 60'                      MissileSpeed = 1600'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotHeatseekingLineMissile"'                      CanBeRemoved = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotPlasmaGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 210'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotPlasmaGrenadeBoom"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotPlasmaGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 210'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotPlasmaGrenadeBoom"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotPlasmaGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 210'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotPlasmaGrenadeBoom"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotPlasmaGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 210'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotPlasmaGrenadeBoom"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Urgot"'                      SpellName = "UrgotPlasmaGrenade"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1100'                      Radius = 210'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "UrgotPlasmaGrenadeBoom"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusQMissilee"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1800'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusQMissilee"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1800'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusQMissilee"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1800'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusQMissilee"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1800'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusQMissilee"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1800'                      Radius = 70'                      MissileSpeed = 1900'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusQMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 925'                      Radius = 235'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 925'                      Radius = 235'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 925'                      Radius = 235'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 925'                      Radius = 235'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1000'                      Range = 925'                      Radius = 235'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VarusE"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 100'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "VarusRMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 100'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "VarusRMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 100'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "VarusRMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 100'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "VarusRMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Varus"'                      SpellName = "VarusR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 100'                      MissileSpeed = 1950'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "VarusRMissile"'                      CanBeRemoved = true'                      CollisionObjects = new[] { CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarDarkMatter"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1350'                      Range = 900'                      Radius = 225'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarDarkMatter"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1350'                      Range = 900'                      Radius = 225'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarDarkMatter"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1350'                      Range = 900'                      Radius = 225'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarDarkMatter"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 1350'                      Range = 900'                      Radius = 225'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarEventHorizon"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotRing'                      Delay = 250'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      DontAddExtraDuration = true'                      RingRadius = 350'                      ExtraDuration = 3000'                      DontCross = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarEventHorizon"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotRing'                      Delay = 250'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      DontAddExtraDuration = true'                      RingRadius = 350'                      ExtraDuration = 3000'                      DontCross = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarEventHorizon"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotRing'                      Delay = 250'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      DontAddExtraDuration = true'                      RingRadius = 350'                      ExtraDuration = 3000'                      DontCross = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarEventHorizon"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotRing'                      Delay = 250'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      DontAddExtraDuration = true'                      RingRadius = 350'                      ExtraDuration = 3000'                      DontCross = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarEventHorizon"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotRing'                      Delay = 250'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      DontAddExtraDuration = true'                      RingRadius = 350'                      ExtraDuration = 3000'                      DontCross = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Veigar"'                      SpellName = "VeigarEventHorizon"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotRing'                      Delay = 250'                      Range = 600'                      Radius = 80'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 3'                      IsDangerous = true'                      DontAddExtraDuration = true'                      RingRadius = 350'                      ExtraDuration = 3000'                      DontCross = true'                      MissileSpellName = ""'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 50'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 50'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 50'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 50'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1100'                      Radius = 50'                      MissileSpeed = 1300'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQSplit"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 900'                      Radius = 55'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissileSplit"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQSplit"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 900'                      Radius = 55'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissileSplit"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQSplit"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 900'                      Radius = 55'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissileSplit"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQSplit"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 900'                      Radius = 55'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissileSplit"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozQSplit"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 900'                      Radius = 55'                      MissileSpeed = 2100'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozQMissileSplit"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 88'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozWMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 88'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozWMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 88'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozWMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 88'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozWMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1200'                      Radius = 88'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozWMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 800'                      Radius = 225'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozEMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 800'                      Radius = 225'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozEMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 800'                      Radius = 225'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozEMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 800'                      Radius = 225'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozEMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Velkoz"'                      SpellName = "VelkozE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 800'                      Radius = 225'                      MissileSpeed = 1500'                      FixedRange = false'                      AddHitbox = false'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "VelkozEMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Vi"'                      SpellName = "Vi-q"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ViQMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Vi"'                      SpellName = "Vi-q"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ViQMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Vi"'                      SpellName = "Vi-q"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ViQMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Vi"'                      SpellName = "Vi-q"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ViQMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Vi"'                      SpellName = "Vi-q"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1000'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ViQMissile"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Viktor"'                      SpellName = "Laser"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 780'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ViktorDeathRayFixMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Viktor"'                      SpellName = "Laser"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 780'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ViktorDeathRayFixMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Viktor"'                      SpellName = "Laser"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 780'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ViktorDeathRayFixMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Viktor"'                      SpellName = "Laser"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 780'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ViktorDeathRayFixMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Viktor"'                      SpellName = "Laser"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1500'                      Radius = 80'                      MissileSpeed = 780'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ViktorDeathRayFixMissile"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xeratharcanopulse2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 1600'                      Radius = 100'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "xeratharcanopulse2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xeratharcanopulse2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 1600'                      Radius = 100'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "xeratharcanopulse2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xeratharcanopulse2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 1600'                      Radius = 100'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "xeratharcanopulse2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xeratharcanopulse2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 600'                      Range = 1600'                      Radius = 100'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "xeratharcanopulse2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathArcaneBarrage2"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 1000'                      Radius = 200'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "XerathArcaneBarrage2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathArcaneBarrage2"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 1000'                      Radius = 200'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "XerathArcaneBarrage2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathArcaneBarrage2"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 1000'                      Radius = 200'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "XerathArcaneBarrage2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathArcaneBarrage2"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 1000'                      Radius = 200'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "XerathArcaneBarrage2"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathMageSpear"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1150'                      Radius = 60'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "XerathMageSpearMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathMageSpear"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1150'                      Radius = 60'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "XerathMageSpearMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathMageSpear"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1150'                      Radius = 60'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "XerathMageSpearMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathMageSpear"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1150'                      Radius = 60'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "XerathMageSpearMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "XerathMageSpear"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 200'                      Range = 1150'                      Radius = 60'                      MissileSpeed = 1400'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "XerathMageSpearMissile"'                      CanBeRemoved = true'                      CollisionObjects =                          new[] { CollisionObjectTypes.Minion' CollisionObjectTypes.Champions' CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xerathrmissilewrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 5600'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "xerathrmissilewrapper"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xerathrmissilewrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 5600'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "xerathrmissilewrapper"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xerathrmissilewrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 5600'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "xerathrmissilewrapper"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Xerath"'                      SpellName = "xerathrmissilewrapper"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 700'                      Range = 5600'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "xerathrmissilewrapper"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq2"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq2"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq2"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq2"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq3w"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "yasuoq3w"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq3w"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "yasuoq3w"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq3w"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "yasuoq3w"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq3w"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "yasuoq3w"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq3w"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 500'                      Range = 1150'                      Radius = 90'                      MissileSpeed = 1500'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "yasuoq3w"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Yasuo"'                      SpellName = "yasuoq"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 400'                      Range = 550'                      Radius = 20'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = true'                      MissileSpellName = "yasuoq"'                      Invert = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zac"'                      SpellName = "ZacQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 550'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZacQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zac"'                      SpellName = "ZacQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 550'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZacQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zac"'                      SpellName = "ZacQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 550'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZacQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zac"'                      SpellName = "ZacQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotLine'                      Delay = 500'                      Range = 550'                      Radius = 120'                      MissileSpeed = int.MaxValue'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZacQ"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zed"'                      SpellName = "ZedShuriken"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 925'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "zedshurikenmisone"'                      FromObjects = new[] { "Zed_Clone_idle.troy"' "Zed_Clone_Idle.troy" }'                      ExtraMissileNames = new[] { "zedshurikenmistwo"' "zedshurikenmisthree" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zed"'                      SpellName = "ZedShuriken"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 925'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "zedshurikenmisone"'                      FromObjects = new[] { "Zed_Clone_idle.troy"' "Zed_Clone_Idle.troy" }'                      ExtraMissileNames = new[] { "zedshurikenmistwo"' "zedshurikenmisthree" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zed"'                      SpellName = "ZedShuriken"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 925'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "zedshurikenmisone"'                      FromObjects = new[] { "Zed_Clone_idle.troy"' "Zed_Clone_Idle.troy" }'                      ExtraMissileNames = new[] { "zedshurikenmistwo"' "zedshurikenmisthree" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zed"'                      SpellName = "ZedShuriken"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 925'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "zedshurikenmisone"'                      FromObjects = new[] { "Zed_Clone_idle.troy"' "Zed_Clone_Idle.troy" }'                      ExtraMissileNames = new[] { "zedshurikenmistwo"' "zedshurikenmisthree" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zed"'                      SpellName = "ZedShuriken"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 925'                      Radius = 50'                      MissileSpeed = 1700'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "zedshurikenmisone"'                      FromObjects = new[] { "Zed_Clone_idle.troy"' "Zed_Clone_Idle.troy" }'                      ExtraMissileNames = new[] { "zedshurikenmistwo"' "zedshurikenmisthree" }'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell"'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell"'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell"'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell"'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQ"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell"'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell2"'                      ExtraMissileNames = new[] { "ZiggsQSpell2" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell2"'                      ExtraMissileNames = new[] { "ZiggsQSpell2" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell2"'                      ExtraMissileNames = new[] { "ZiggsQSpell2" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell2"'                      ExtraMissileNames = new[] { "ZiggsQSpell2" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce1"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 140'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell2"'                      ExtraMissileNames = new[] { "ZiggsQSpell2" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 160'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell3"'                      ExtraMissileNames = new[] { "ZiggsQSpell3" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 160'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell3"'                      ExtraMissileNames = new[] { "ZiggsQSpell3" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 160'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell3"'                      ExtraMissileNames = new[] { "ZiggsQSpell3" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 160'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell3"'                      ExtraMissileNames = new[] { "ZiggsQSpell3" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsQBounce2"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 850'                      Radius = 160'                      MissileSpeed = 1700'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsQSpell3"'                      ExtraMissileNames = new[] { "ZiggsQSpell3" }'                      CanBeRemoved = false'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1000'                      Radius = 275'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsW"'                      DisableFowDetection = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1000'                      Radius = 275'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsW"'                      DisableFowDetection = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1000'                      Radius = 275'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsW"'                      DisableFowDetection = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1000'                      Radius = 275'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsW"'                      DisableFowDetection = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsW"'                      Slot = SpellSlot.W'                      Type = SkillShotType.SkillshotCircle'                      Delay = 250'                      Range = 1000'                      Radius = 275'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsW"'                      DisableFowDetection = true'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 235'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsE"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 235'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsE"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 235'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsE"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 235'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsE"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsE"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotCircle'                      Delay = 500'                      Range = 900'                      Radius = 235'                      MissileSpeed = 1750'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsE"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 5300'                      Radius = 500'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsR"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 5300'                      Radius = 500'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsR"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Ziggs"'                      SpellName = "ZiggsR"'                      Slot = SpellSlot.R'                      Type = SkillShotType.SkillshotCircle'                      Delay = 0'                      Range = 5300'                      Radius = 500'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZiggsR"'                      DisableFowDetection = true'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraQFissure"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 220'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZyraQFissure"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraQFissure"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 220'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZyraQFissure"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraQFissure"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 220'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZyraQFissure"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraQFissure"'                      Slot = SpellSlot.Q'                      Type = SkillShotType.SkillshotCircle'                      Delay = 600'                      Range = 800'                      Radius = 220'                      MissileSpeed = int.MaxValue'                      FixedRange = false'                      AddHitbox = true'                      DangerValue = 2'                      IsDangerous = false'                      MissileSpellName = "ZyraQFissure"'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraGraspingRoots"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1150'                      Radius = 70'                      MissileSpeed = 1150'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ZyraGraspingRoots"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraGraspingRoots"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1150'                      Radius = 70'                      MissileSpeed = 1150'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ZyraGraspingRoots"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraGraspingRoots"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1150'                      Radius = 70'                      MissileSpeed = 1150'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ZyraGraspingRoots"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraGraspingRoots"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1150'                      Radius = 70'                      MissileSpeed = 1150'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ZyraGraspingRoots"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "ZyraGraspingRoots"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 250'                      Range = 1150'                      Radius = 70'                      MissileSpeed = 1150'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "ZyraGraspingRoots"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "zyrapassivedeathmanager"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 700'                      Range = 1474'                      Radius = 70'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "zyrapassivedeathmanager"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "zyrapassivedeathmanager"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 700'                      Range = 1474'                      Radius = 70'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "zyrapassivedeathmanager"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "zyrapassivedeathmanager"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 700'                      Range = 1474'                      Radius = 70'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "zyrapassivedeathmanager"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "zyrapassivedeathmanager"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 700'                      Range = 1474'                      Radius = 70'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "zyrapassivedeathmanager"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO,SpellDatabase,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\SpellDatabase.cs,CreateSpellDatabase,The following statement contains a magic number: Spells.Add(                  new SpellData                  {                      ChampionName = "Zyra"'                      SpellName = "zyrapassivedeathmanager"'                      Slot = SpellSlot.E'                      Type = SkillShotType.SkillshotMissileLine'                      Delay = 700'                      Range = 1474'                      Radius = 70'                      MissileSpeed = 2000'                      FixedRange = true'                      AddHitbox = true'                      DangerValue = 3'                      IsDangerous = true'                      MissileSpellName = "zyrapassivedeathmanager"'                      CollisionObjects = new[] { CollisionObjectTypes.YasuoWall }'                  });
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: QMana = new[] {55' 55' 60' 65' 70' 75};
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: QMana = new[] {55' 55' 60' 65' 70' 75};
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: QMana = new[] {55' 55' 60' 65' 70' 75};
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: QMana = new[] {55' 55' 60' 65' 70' 75};
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: QMana = new[] {55' 55' 60' 65' 70' 75};
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: QMana = new[] {55' 55' 60' 65' 70' 75};
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: WMana = new[] { 50' 50' 50' 50' 50' 50 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: WMana = new[] { 50' 50' 50' 50' 50' 50 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: WMana = new[] { 50' 50' 50' 50' 50' 50 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: WMana = new[] { 50' 50' 50' 50' 50' 50 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: WMana = new[] { 50' 50' 50' 50' 50' 50 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: WMana = new[] { 50' 50' 50' 50' 50' 50 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: EMana = new[] { 85' 85' 85' 85' 85' 85 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: EMana = new[] { 85' 85' 85' 85' 85' 85 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: EMana = new[] { 85' 85' 85' 85' 85' 85 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: EMana = new[] { 85' 85' 85' 85' 85' 85 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: EMana = new[] { 85' 85' 85' 85' 85' 85 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: EMana = new[] { 85' 85' 85' 85' 85' 85 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: RMana = new[] { 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: RMana = new[] { 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: RMana = new[] { 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Ahri,The following statement contains a magic number: RMana = new[] { 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 900);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 650);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 875);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 850);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: Q.SetSkillshot(0.25f' 100' 1600' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: Q.SetSkillshot(0.25f' 100' 1600' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: E.SetSkillshot(0.25f' 60' 1200' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,SetUpSpells,The following statement contains a magic number: E.SetSkillshot(0.25f' 60' 1200' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("charmCombo"' "Q if Charmed in Combo"'true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("selected"' "Focus Selected Target"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/E HitChance"'true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("rSpeed"' "Use All R fast Duel"'true).SetValue(true));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("selected"' "Focus Selected Target"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/E HitChance"'true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("rSpeed"' "Use All R fast Duel"'true).SetValue(true));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                 harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                 harass.AddItem(new MenuItem("qHit2"' "Q/E HitChance"'true).SetValue(new Slider(3' 1' 4)));                 harass.AddItem(new MenuItem("UseWHarass"' "Use W"'true).SetValue(false));                 harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(true));                 harass.AddItem(new MenuItem("longQ"' "Cast Long range Q"'true).SetValue(true));                 harass.AddItem(new MenuItem("charmHarass"' "Only Q if Charmed"'true).SetValue(true));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                 harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                 harass.AddItem(new MenuItem("qHit2"' "Q/E HitChance"'true).SetValue(new Slider(3' 1' 4)));                 harass.AddItem(new MenuItem("UseWHarass"' "Use W"'true).SetValue(false));                 harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(true));                 harass.AddItem(new MenuItem("longQ"' "Cast Long range Q"'true).SetValue(true));                 harass.AddItem(new MenuItem("charmHarass"' "Only Q if Charmed"'true).SetValue(true));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(                          new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("cursor"' "Draw R Dash Range"'true).SetValue(new Circle(false'Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(                          new MenuItem("Draw_Mode"' "Draw E Mode"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,GetComboDamage,The following statement contains a magic number: if (Dfg.IsReady())                  damage += Player.GetItemDamage(enemy' Damage.DamageItems.Dfg) / 1.2;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,GetComboDamage,The following statement contains a magic number: if (_rOn)                  damage += Player.GetSpellDamage(enemy' SpellSlot.R)*RCount();              else if (R.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.R) * 3;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  //items-------                  ActiveItems.Target = eTarget;                    //see if killable                  if (dmg > eTarget.Health - 50)                      ActiveItems.KillableTarget = true;                    //Items                  if (eTarget.HasBuffOfType(BuffType.Charm) || eTarget.HasBuffOfType(BuffType.Taunt) || !menu.Item("dfgCharm"' true).GetValue<bool>())                      ActiveItems.UseTargetted = true;              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The following statement contains a magic number: if (useW && W.IsReady() && Player.Distance(eTarget.Position) <= W.Range - 100 &&                  ShouldW(eTarget' source))              {                  W.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The following statement contains a magic number: if (source == "Harass" && menu.Item("longQ"' true).GetValue<bool>())              {                  if (useQ && Q.IsReady() && Player.Distance(eTarget.Position) <= Q.Range &&                      ShouldQ(eTarget' source) && Player.Distance(eTarget.Position) > 600)                  {                      if (Q.GetPrediction(eTarget).Hitchance >= hitC || predOff)                      {                          Q.Cast(eTarget' packets()' true);                          return;                      }                  }              }              else if (useQ && Q.IsReady() && Player.Distance(eTarget.Position) <= Q.Range &&                       ShouldQ(eTarget' source))              {                  if (Q.GetPrediction(eTarget).Hitchance >= hitC || predOff)                  {                      Q.Cast(eTarget' packets()' true);                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The following statement contains a magic number: if (useR && R.IsReady() && Player.Distance(eTarget.Position) < R.Range)              {                  if (E.IsReady())                  {                      if (CheckReq(rETarget))                          E.Cast(rETarget' packets());                  }                  if (ShouldR(eTarget) && R.IsReady())                  {                      R.Cast(Game.CursorPos' packets());                      _rTimer = Environment.TickCount - 250;                  }                  if (_rTimeLeft > 9500 && _rOn && R.IsReady())                  {                      R.Cast(Game.CursorPos' packets());                      _rTimer = Environment.TickCount - 250;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The following statement contains a magic number: if (useR && R.IsReady() && Player.Distance(eTarget.Position) < R.Range)              {                  if (E.IsReady())                  {                      if (CheckReq(rETarget))                          E.Cast(rETarget' packets());                  }                  if (ShouldR(eTarget) && R.IsReady())                  {                      R.Cast(Game.CursorPos' packets());                      _rTimer = Environment.TickCount - 250;                  }                  if (_rTimeLeft > 9500 && _rOn && R.IsReady())                  {                      R.Cast(Game.CursorPos' packets());                      _rTimer = Environment.TickCount - 250;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,UseSpells,The following statement contains a magic number: if (useR && R.IsReady() && Player.Distance(eTarget.Position) < R.Range)              {                  if (E.IsReady())                  {                      if (CheckReq(rETarget))                          E.Cast(rETarget' packets());                  }                  if (ShouldR(eTarget) && R.IsReady())                  {                      R.Cast(Game.CursorPos' packets());                      _rTimer = Environment.TickCount - 250;                  }                  if (_rTimeLeft > 9500 && _rOn && R.IsReady())                  {                      R.Cast(Game.CursorPos' packets());                      _rTimer = Environment.TickCount - 250;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      if (Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                           Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && Q.IsReady() && Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= Q.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1)) >                          target.Health && Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health & E.IsReady())                      {                          E.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && W.IsReady())                      {                          W.Cast();                          return;                      }                        Vector3 dashVector = Player.Position +                                           Vector3.Normalize(target.ServerPosition - Player.Position) * 425;                      if (Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health && R.IsReady() && _rOn &&                          target.Distance(dashVector) < 425 && R.IsReady())                      {                          R.Cast(dashVector' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      if (Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                           Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && Q.IsReady() && Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= Q.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1)) >                          target.Health && Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health & E.IsReady())                      {                          E.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && W.IsReady())                      {                          W.Cast();                          return;                      }                        Vector3 dashVector = Player.Position +                                           Vector3.Normalize(target.ServerPosition - Player.Position) * 425;                      if (Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health && R.IsReady() && _rOn &&                          target.Distance(dashVector) < 425 && R.IsReady())                      {                          R.Cast(dashVector' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      if (Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                           Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && Q.IsReady() && Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= Q.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1)) >                          target.Health && Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health & E.IsReady())                      {                          E.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.ServerPosition) <= W.Range &&                          (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health && W.IsReady())                      {                          W.Cast();                          return;                      }                        Vector3 dashVector = Player.Position +                                           Vector3.Normalize(target.ServerPosition - Player.Position) * 425;                      if (Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health && R.IsReady() && _rOn &&                          target.Distance(dashVector) < 425 && R.IsReady())                      {                          R.Cast(dashVector' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: Vector3 dashVector = Player.Position + Vector3.Normalize(Game.CursorPos - Player.Position) * 425;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (Player.Distance(Game.CursorPos) < 75 && target.Distance(dashVector) > 525)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (Player.Distance(Game.CursorPos) < 75 && target.Distance(dashVector) > 525)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (menu.Item("rSpeed"' true).GetValue<bool>() && countEnemiesNearPosition(Game.CursorPos' 1500) < 2 && GetComboDamage(target) > target.Health - 100)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (menu.Item("rSpeed"' true).GetValue<bool>() && countEnemiesNearPosition(Game.CursorPos' 1500) < 2 && GetComboDamage(target) > target.Health - 100)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (menu.Item("rSpeed"' true).GetValue<bool>() && countEnemiesNearPosition(Game.CursorPos' 1500) < 2 && GetComboDamage(target) > target.Health - 100)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (countAlliesNearPosition(Game.CursorPos' 1000) > 2 && _rTimeLeft > 3500)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (countAlliesNearPosition(Game.CursorPos' 1000) > 2 && _rTimeLeft > 3500)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (countAlliesNearPosition(Game.CursorPos' 1000) > 2 && _rTimeLeft > 3500)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (Player.GetSpellDamage(target' SpellSlot.R) * 2 > target.Health)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,ShouldR,The following statement contains a magic number: if (_rOn && _rTimeLeft > 9500)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckReq,The following statement contains a magic number: if (Player.Distance(Game.CursorPos) < 75)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckReq,The following statement contains a magic number: if (GetComboDamage(target) > target.Health && !_rOn && countEnemiesNearPosition(Game.CursorPos' 1500) < 3)              {                  if (target.Distance(Game.CursorPos) <= E.Range && E.IsReady())                  {                      Vector3 dashVector = Player.Position + Vector3.Normalize(Game.CursorPos - Player.Position) * 425;                      float addedDelay = Player.Distance(dashVector) / 2200;                        //Game.PrintChat("added delay: " + addedDelay);                        PredictionOutput pred = GetP(Game.CursorPos' E' target' addedDelay' false);                      if (pred.Hitchance >= HitChance.Medium && R.IsReady())                      {                          //Game.PrintChat("R-E Mode Intiate!");                          R.Cast(Game.CursorPos' packets());                          _rTimer = Environment.TickCount - 250;                          return true;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckReq,The following statement contains a magic number: if (GetComboDamage(target) > target.Health && !_rOn && countEnemiesNearPosition(Game.CursorPos' 1500) < 3)              {                  if (target.Distance(Game.CursorPos) <= E.Range && E.IsReady())                  {                      Vector3 dashVector = Player.Position + Vector3.Normalize(Game.CursorPos - Player.Position) * 425;                      float addedDelay = Player.Distance(dashVector) / 2200;                        //Game.PrintChat("added delay: " + addedDelay);                        PredictionOutput pred = GetP(Game.CursorPos' E' target' addedDelay' false);                      if (pred.Hitchance >= HitChance.Medium && R.IsReady())                      {                          //Game.PrintChat("R-E Mode Intiate!");                          R.Cast(Game.CursorPos' packets());                          _rTimer = Environment.TickCount - 250;                          return true;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckReq,The following statement contains a magic number: if (GetComboDamage(target) > target.Health && !_rOn && countEnemiesNearPosition(Game.CursorPos' 1500) < 3)              {                  if (target.Distance(Game.CursorPos) <= E.Range && E.IsReady())                  {                      Vector3 dashVector = Player.Position + Vector3.Normalize(Game.CursorPos - Player.Position) * 425;                      float addedDelay = Player.Distance(dashVector) / 2200;                        //Game.PrintChat("added delay: " + addedDelay);                        PredictionOutput pred = GetP(Game.CursorPos' E' target' addedDelay' false);                      if (pred.Hitchance >= HitChance.Medium && R.IsReady())                      {                          //Game.PrintChat("R-E Mode Intiate!");                          R.Cast(Game.CursorPos' packets());                          _rTimer = Environment.TickCount - 250;                          return true;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckReq,The following statement contains a magic number: if (GetComboDamage(target) > target.Health && !_rOn && countEnemiesNearPosition(Game.CursorPos' 1500) < 3)              {                  if (target.Distance(Game.CursorPos) <= E.Range && E.IsReady())                  {                      Vector3 dashVector = Player.Position + Vector3.Normalize(Game.CursorPos - Player.Position) * 425;                      float addedDelay = Player.Distance(dashVector) / 2200;                        //Game.PrintChat("added delay: " + addedDelay);                        PredictionOutput pred = GetP(Game.CursorPos' E' target' addedDelay' false);                      if (pred.Hitchance >= HitChance.Medium && R.IsReady())                      {                          //Game.PrintChat("R-E Mode Intiate!");                          R.Cast(Game.CursorPos' packets());                          _rTimer = Environment.TickCount - 250;                          return true;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,CheckReq,The following statement contains a magic number: if (GetComboDamage(target) > target.Health && !_rOn && countEnemiesNearPosition(Game.CursorPos' 1500) < 3)              {                  if (target.Distance(Game.CursorPos) <= E.Range && E.IsReady())                  {                      Vector3 dashVector = Player.Position + Vector3.Normalize(Game.CursorPos - Player.Position) * 425;                      float addedDelay = Player.Distance(dashVector) / 2200;                        //Game.PrintChat("added delay: " + addedDelay);                        PredictionOutput pred = GetP(Game.CursorPos' E' target' addedDelay' false);                      if (pred.Hitchance >= HitChance.Medium && R.IsReady())                      {                          //Game.PrintChat("R-E Mode Intiate!");                          R.Cast(Game.CursorPos' packets());                          _rTimer = Environment.TickCount - 250;                          return true;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Farm,The following statement contains a magic number: if (useQ && Q.IsReady())              {                  MinionManager.FarmLocation qPos = Q.GetLineFarmLocation(allMinionsQ);                  if (qPos.MinionsHit >= 3)                  {                      Q.Cast(qPos.Position' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ahri,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ahri.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("cursor"' true).GetValue<Circle>().Active)                  Render.Circle.DrawCircle(Player.Position' 475' Color.Aquamarine);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 600);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,SetSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 700);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 325);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 700);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]'KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]'KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitQ"' "Last hit with Q!"'true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Use W if x Enemys Arround"'true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W if health below"'true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E to KS"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Energy"' "E If energy"' true).SetValue(new Slider(100' 0' 200)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Wait_For_Q"' "Wait for Q Mark"'true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"'true).SetValue(true));                      rMenu.AddItem(new MenuItem("Dont_R_If"' "Do not R if > enemy"'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Min"' "Min range to use R"' true).SetValue(new Slider(400' 50' 700)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"'true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useE_minHit"' "Use E if min. hit"'true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"'true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useE_minHit"' "Use E if min. hit"'true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady())                      comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) +                                      Player.CalcDamage(target' Damage.DamageType.Magical'                                          (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod)));              }              else if (Q.IsReady())              {                  comboDamage += (Player.GetSpellDamage(target' SpellSlot.Q) + Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod))) * 2;              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "AkaliMota"))                  comboDamage += Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod));
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "AkaliMota"))                  comboDamage += Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod));
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "AkaliMota"))                  comboDamage += Player.CalcDamage(target' Damage.DamageType.Magical' (45 + 35 * Q.Level + 0.5 * Player.FlatMagicDamageMod));
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,CalcPassiveDmg,The following statement contains a magic number: return (0.06 + 0.01 * (Player.FlatMagicDamageMod / 6)) * (Player.FlatPhysicalDamageMod + Player.BaseAttackDamage);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,CalcPassiveDmg,The following statement contains a magic number: return (0.06 + 0.01 * (Player.FlatMagicDamageMod / 6)) * (Player.FlatPhysicalDamageMod + Player.BaseAttackDamage);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,CalcPassiveDmg,The following statement contains a magic number: return (0.06 + 0.01 * (Player.FlatMagicDamageMod / 6)) * (Player.FlatPhysicalDamageMod + Player.BaseAttackDamage);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_Q,The following statement contains a magic number: if (combo)              {                  var target = TargetSelector.GetTarget(Q.Range' TargetSelector.DamageType.Magical);                    if (!target.IsValidTarget(Q.Range))                      return;                    if (CheckMark(Q.Range) != null)                      target = CheckMark(Q.Range);                    if (mode == 0)                  {                      Q.Cast(target' packets());                  }                  else if (mode == 1)                  {                      if (!HasBuff(target' "AkaliMota"))                          Q.Cast(target);                  }              }              else              {                  if (MinionManager.GetMinions(Player.Position' Q.Range).Any(minion => HasBuff(minion' "AkaliMota") && xSLxOrbwalker.InAutoAttackRange(minion)))                  {                      return;                  }                    foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion'                          (int)(E.Delay + (minion.Distance(Player.Position) / E.Speed)) * 1000) <                                                               Player.GetSpellDamage(minion' SpellSlot.Q) &&                                                               HealthPrediction.GetHealthPrediction(minion'                                                                   (int)(E.Delay + (minion.Distance(Player.Position) / E.Speed)) * 1000) > 0 &&                                                               xSLxOrbwalker.InAutoAttackRange(minion)))                      Q.Cast(minion);                    foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion'                          (int)(Q.Delay + (minion.Distance(Player.Position) / Q.Speed))) <                                                               Player.GetSpellDamage(minion' SpellSlot.Q)))                      Q.Cast(minion);                    foreach (var minion in MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.Neutral' MinionOrderTypes.MaxHealth).Where(minion => Player.Distance(minion.Position) <= Q.Range))                      Q.Cast(minion);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_Q,The following statement contains a magic number: if (combo)              {                  var target = TargetSelector.GetTarget(Q.Range' TargetSelector.DamageType.Magical);                    if (!target.IsValidTarget(Q.Range))                      return;                    if (CheckMark(Q.Range) != null)                      target = CheckMark(Q.Range);                    if (mode == 0)                  {                      Q.Cast(target' packets());                  }                  else if (mode == 1)                  {                      if (!HasBuff(target' "AkaliMota"))                          Q.Cast(target);                  }              }              else              {                  if (MinionManager.GetMinions(Player.Position' Q.Range).Any(minion => HasBuff(minion' "AkaliMota") && xSLxOrbwalker.InAutoAttackRange(minion)))                  {                      return;                  }                    foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion'                          (int)(E.Delay + (minion.Distance(Player.Position) / E.Speed)) * 1000) <                                                               Player.GetSpellDamage(minion' SpellSlot.Q) &&                                                               HealthPrediction.GetHealthPrediction(minion'                                                                   (int)(E.Delay + (minion.Distance(Player.Position) / E.Speed)) * 1000) > 0 &&                                                               xSLxOrbwalker.InAutoAttackRange(minion)))                      Q.Cast(minion);                    foreach (var minion in MinionManager.GetMinions(Player.Position' Q.Range).Where(minion => HealthPrediction.GetHealthPrediction(minion'                          (int)(Q.Delay + (minion.Distance(Player.Position) / Q.Speed))) <                                                               Player.GetSpellDamage(minion' SpellSlot.Q)))                      Q.Cast(minion);                    foreach (var minion in MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.Neutral' MinionOrderTypes.MaxHealth).Where(minion => Player.Distance(minion.Position) <= Q.Range))                      Q.Cast(minion);              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_W,The following statement contains a magic number: if (menu.Item("useW_enemyCount"' true).GetValue<Slider>().Value > Player.CountEnemiesInRange(400) &&                  menu.Item("useW_Health"' true).GetValue<Slider>().Value < (int)(Player.Health / Player.MaxHealth * 100))                  return;
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_W,The following statement contains a magic number: if (menu.Item("useW_enemyCount"' true).GetValue<Slider>().Value > Player.CountEnemiesInRange(400) &&                  menu.Item("useW_Health"' true).GetValue<Slider>().Value < (int)(Player.Health / Player.MaxHealth * 100))                  return;
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_E,The following statement contains a magic number: if (combo)              {                  var target = TargetSelector.GetTarget(E.Range' TargetSelector.DamageType.Magical);                    if (target == null || !target.IsValidTarget(E.Range))                      return;                    if (CheckMark(E.Range) != null)                      target = CheckMark(Q.Range);                    if (mode == 0)                  {                      if (Player.Mana >= menu.Item("E_Energy"' true).GetValue<Slider>().Value)                          E.Cast();                      else if (E.IsKillable(target) && menu.Item("E_On_Killable"' true).GetValue<bool>())                          E.Cast();                  }                  else if (mode == 1)                  {                      if (HasBuff(target' "AkaliMota"))                          return;                      if (HasBuff(target' "AkaliMota") && !Q.IsReady())                          return;                      if (Player.Mana >= menu.Item("E_Energy"' true).GetValue<Slider>().Value)                          E.Cast();                      if (E.IsKillable(target) && menu.Item("E_On_Killable"' true).GetValue<bool>())                          E.Cast();                  }              }              else              {                  if (MinionManager.GetMinions(Player.Position' E.Range).Count >= menu.Item("LaneClear_useE_minHit"' true).GetValue<Slider>().Value)                      E.Cast();                  foreach (var minion in MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All'MinionTeam.Neutral' MinionOrderTypes.MaxHealth).Where(minion => Player.Distance(minion.Position) <= E.Range))                      if(E.GetDamage(minion) > minion.Health + 35)                          E.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_R,The following statement contains a magic number: if (target.IsValidTarget(R.Range) && R.IsReady())              {                  if (R.IsKillable(target) && menu.Item("R_If_Killable"' true).GetValue<bool>())                      R.Cast(target' packets());                  else if (GetSimpleDmg(target) > target.Health && Player.Distance(target.Position) > Q.Range - 50)                      R.Cast(target' packets());                    if (countEnemiesNearPosition(target.ServerPosition' 500) >=                      menu.Item("Dont_R_If"' true).GetValue<Slider>().Value)                      return;                    if(Player.Distance(target.Position) < menu.Item("R_Min"' true).GetValue<Slider>().Value)                      return;                    if (mode == 0)                  {                      if (menu.Item("R_Wait_For_Q"' true).GetValue<bool>())                      {                          if (HasBuff(target' "AkaliMota"))                          {                              R.Cast(target' packets());                          }                      }                      else                      {                          R.Cast(target' packets());                      }                  }                  else if (mode == 1)                  {                      if (HasBuff(target' "AkaliMota") && Q.IsReady())                      {                          R.Cast(target' packets());                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA" }));                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Cast_R,The following statement contains a magic number: if (target.IsValidTarget(R.Range) && R.IsReady())              {                  if (R.IsKillable(target) && menu.Item("R_If_Killable"' true).GetValue<bool>())                      R.Cast(target' packets());                  else if (GetSimpleDmg(target) > target.Health && Player.Distance(target.Position) > Q.Range - 50)                      R.Cast(target' packets());                    if (countEnemiesNearPosition(target.ServerPosition' 500) >=                      menu.Item("Dont_R_If"' true).GetValue<Slider>().Value)                      return;                    if(Player.Distance(target.Position) < menu.Item("R_Min"' true).GetValue<Slider>().Value)                      return;                    if (mode == 0)                  {                      if (menu.Item("R_Wait_For_Q"' true).GetValue<bool>())                      {                          if (HasBuff(target' "AkaliMota"))                          {                              R.Cast(target' packets());                          }                      }                      else                      {                          R.Cast(target' packets());                      }                  }                  else if (mode == 1)                  {                      if (HasBuff(target' "AkaliMota") && Q.IsReady())                      {                          R.Cast(target' packets());                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA" }));                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Q-Delay-R-AA-Q-AA" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_W"' true).GetValue<bool>())                  if (W.Level > 0)                      Render.Circle.DrawCircle(Player.Position' W.Range - 2' W.IsReady() ? Color.Green : Color.Red);
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Q-Delay-R-AA-Q-AA");              }
Magic Number,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Q-Delay-R-AA-Q-AA");              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: QMana = new[] {80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: QMana = new[] {80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: QMana = new[] {80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: QMana = new[] {80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: QMana = new[] {80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: QMana = new[] {80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: WMana = new[] {70' 70' 70' 70' 70' 70};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: WMana = new[] {70' 70' 70' 70' 70' 70};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: WMana = new[] {70' 70' 70' 70' 70' 70};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: WMana = new[] {70' 70' 70' 70' 70' 70};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: WMana = new[] {70' 70' 70' 70' 70' 70};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: WMana = new[] {70' 70' 70' 70' 70' 70};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: EMana = new[] {80' 50' 60' 70' 80' 90};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: EMana = new[] {80' 50' 60' 70' 80' 90};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: EMana = new[] {80' 50' 60' 70' 80' 90};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: EMana = new[] {80' 50' 60' 70' 80' 90};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: EMana = new[] {80' 50' 60' 70' 80' 90};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: EMana = new[] {80' 50' 60' 70' 80' 90};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: RMana = new[] {75' 75' 75' 75' 75};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: RMana = new[] {75' 75' 75' 75' 75};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: RMana = new[] {75' 75' 75' 75' 75};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: RMana = new[] {75' 75' 75' 75' 75};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Anivia,The following statement contains a magic number: RMana = new[] {75' 75' 75' 75' 75};
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1000);
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 950);
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 650);
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 625);
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("snipe"' "W/Q Snipe"'true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("escape"' "RUN FOR YOUR LIFE!"'true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("qHit"' "Combo HitChance"'true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Harass HitChance"'true).SetValue(new Slider(3' 1' 4)));                      qMenu.AddItem(new MenuItem("detonateQ"' "Auto Detonate Q"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("detonateQ2"' "Pop Q Behind Enemy"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("wallKill"' "Wall Enemy on killable"'true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("checkR"' "Auto turn off R"'true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("qHit"' "Combo HitChance"'true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Harass HitChance"'true).SetValue(new Slider(3' 1' 4)));                      qMenu.AddItem(new MenuItem("detonateQ"' "Auto Detonate Q"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("detonateQ2"' "Pop Q Behind Enemy"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("wallKill"' "Wall Enemy on killable"'true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("checkR"' "Auto turn off R"'true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("qHit"' "Combo HitChance"'true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Harass HitChance"'true).SetValue(new Slider(3' 1' 4)));                      qMenu.AddItem(new MenuItem("detonateQ"' "Auto Detonate Q"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("detonateQ2"' "Pop Q Behind Enemy"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("wallKill"' "Wall Enemy on killable"'true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("checkR"' "Auto turn off R"'true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("qHit"' "Combo HitChance"'true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Harass HitChance"'true).SetValue(new Slider(3' 1' 4)));                      qMenu.AddItem(new MenuItem("detonateQ"' "Auto Detonate Q"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("detonateQ2"' "Pop Q Behind Enemy"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("wallKill"' "Wall Enemy on killable"'true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("checkR"' "Auto turn off R"'true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,GetComboDamage,The following statement contains a magic number: if (E.IsReady() & (Q.IsReady() || R.IsReady()))                  damage += Player.GetSpellDamage(enemy' SpellSlot.E) * 2;              else if (E.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.E);
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.R) * 3;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,The following statement contains a magic number: foreach ( Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300)))              {                  //ER                  if (Player.Distance(target.ServerPosition) <= R.Range && !_rFirstCreated &&                      (Player.GetSpellDamage(target' SpellSlot.R) + Player.GetSpellDamage(target' SpellSlot.E) * 2) >                      target.Health + 50)                  {                      if (R.IsReady() && E.IsReady())                      {                          E.CastOnUnit(target' packets());                          R.CastOnUnit(target' packets());                          return;                      }                  }                    //QR                  if (Player.Distance(target.ServerPosition) <= R.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.R)) >                      target.Health + 30)                  {                      if (W.IsReady() && R.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,The following statement contains a magic number: foreach ( Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300)))              {                  //ER                  if (Player.Distance(target.ServerPosition) <= R.Range && !_rFirstCreated &&                      (Player.GetSpellDamage(target' SpellSlot.R) + Player.GetSpellDamage(target' SpellSlot.E) * 2) >                      target.Health + 50)                  {                      if (R.IsReady() && E.IsReady())                      {                          E.CastOnUnit(target' packets());                          R.CastOnUnit(target' packets());                          return;                      }                  }                    //QR                  if (Player.Distance(target.ServerPosition) <= R.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.R)) >                      target.Health + 30)                  {                      if (W.IsReady() && R.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,The following statement contains a magic number: foreach ( Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300)))              {                  //ER                  if (Player.Distance(target.ServerPosition) <= R.Range && !_rFirstCreated &&                      (Player.GetSpellDamage(target' SpellSlot.R) + Player.GetSpellDamage(target' SpellSlot.E) * 2) >                      target.Health + 50)                  {                      if (R.IsReady() && E.IsReady())                      {                          E.CastOnUnit(target' packets());                          R.CastOnUnit(target' packets());                          return;                      }                  }                    //QR                  if (Player.Distance(target.ServerPosition) <= R.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.R)) >                      target.Health + 30)                  {                      if (W.IsReady() && R.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,The following statement contains a magic number: foreach ( Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300)))              {                  //ER                  if (Player.Distance(target.ServerPosition) <= R.Range && !_rFirstCreated &&                      (Player.GetSpellDamage(target' SpellSlot.R) + Player.GetSpellDamage(target' SpellSlot.E) * 2) >                      target.Health + 50)                  {                      if (R.IsReady() && E.IsReady())                      {                          E.CastOnUnit(target' packets());                          R.CastOnUnit(target' packets());                          return;                      }                  }                    //QR                  if (Player.Distance(target.ServerPosition) <= R.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.R)) >                      target.Health + 30)                  {                      if (W.IsReady() && R.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,The following statement contains a magic number: foreach ( Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300)))              {                  //ER                  if (Player.Distance(target.ServerPosition) <= R.Range && !_rFirstCreated &&                      (Player.GetSpellDamage(target' SpellSlot.R) + Player.GetSpellDamage(target' SpellSlot.E) * 2) >                      target.Health + 50)                  {                      if (R.IsReady() && E.IsReady())                      {                          E.CastOnUnit(target' packets());                          R.CastOnUnit(target' packets());                          return;                      }                  }                    //QR                  if (Player.Distance(target.ServerPosition) <= R.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.R)) >                      target.Health + 30)                  {                      if (W.IsReady() && R.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,SmartKs,The following statement contains a magic number: foreach ( Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1300)))              {                  //ER                  if (Player.Distance(target.ServerPosition) <= R.Range && !_rFirstCreated &&                      (Player.GetSpellDamage(target' SpellSlot.R) + Player.GetSpellDamage(target' SpellSlot.E) * 2) >                      target.Health + 50)                  {                      if (R.IsReady() && E.IsReady())                      {                          E.CastOnUnit(target' packets());                          R.CastOnUnit(target' packets());                          return;                      }                  }                    //QR                  if (Player.Distance(target.ServerPosition) <= R.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.R)) >                      target.Health + 30)                  {                      if (W.IsReady() && R.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && ShouldQ() &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,ShouldQ,The following statement contains a magic number: if (Environment.TickCount - Q.LastCastAttemptT > 2000)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,ShouldE,The following statement contains a magic number: if (R.IsReady() && Player.Distance(target.Position) <= R.Range - 25 && Player.Distance(target.ServerPosition) > 250)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,ShouldE,The following statement contains a magic number: if (R.IsReady() && Player.Distance(target.Position) <= R.Range - 25 && Player.Distance(target.ServerPosition) > 250)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,ShouldUseW,The following statement contains a magic number: if (GetComboDamage(target) >= target.Health - 20 && menu.Item("wallKill"' true).GetValue<bool>())                  return true;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,ShouldUseW,The following statement contains a magic number: if (_rFirstCreated && _rObj != null)              {                  if (_rObj.Position.Distance(target.ServerPosition) > 300)                  {                      return true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,CastW,The following statement contains a magic number: Vector3 castBehind = pred.CastPosition + Vector3.Normalize(vec) * 125;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,CastWEscape,The following statement contains a magic number: Vector3 castBehind = pred.CastPosition - Vector3.Normalize(vec) * 125;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,DetonateQ,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && x.Distance(_qMissle.Position) < 200).OrderByDescending(GetComboDamage))              {                  if (ShouldDetonate(enemy) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                  {                      Q.Cast(_qMissle.Position);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,DetonateQ,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && x.Distance(_qMissle.Position) < 200).OrderByDescending(GetComboDamage))              {                  if (ShouldDetonate(enemy) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                  {                      Q.Cast(_qMissle.Position);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,CheckR,The following statement contains a magic number: int hit = ObjectManager.Get<Obj_AI_Hero>().Count(x => _rObj.Position.Distance(x.ServerPosition) < 475 && x.IsValidTarget(R.Range + 500));
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,CheckR,The following statement contains a magic number: int hit = ObjectManager.Get<Obj_AI_Hero>().Count(x => _rObj.Position.Distance(x.ServerPosition) < 475 && x.IsValidTarget(R.Range + 500));
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Escape,The following statement contains a magic number: List<Obj_AI_Hero> enemy = (from champ in ObjectManager.Get<Obj_AI_Hero>() where champ.IsValidTarget(1500) select champ).ToList();
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,The following statement contains a magic number: if (useQ && Q.IsReady() && ShouldQ())              {                  MinionManager.FarmLocation qPos = Q.GetLineFarmLocation(allMinionsQ);                  if (qPos.MinionsHit >= 3)                  {                      Q.Cast(qPos.Position);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,The following statement contains a magic number: if (!ShouldQ() && _qMissle != null)              {                  if (useQ && Q.IsReady())                  {                      hit += allMinionsQ.Count(enemy => enemy.Distance(_qMissle.Position) < 110);                  }                    if (hit >= 2 && Q.IsReady())                      Q.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,The following statement contains a magic number: if (!ShouldQ() && _qMissle != null)              {                  if (useQ && Q.IsReady())                  {                      hit += allMinionsQ.Count(enemy => enemy.Distance(_qMissle.Position) < 110);                  }                    if (hit >= 2 && Q.IsReady())                      Q.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,The following statement contains a magic number: if (_rFirstCreated)              {                  hit += allMinionsR.Count(enemy => enemy.Distance(_rObj.Position) < 400);                    if (hit < 2 && R.IsReady())                      R.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,Farm,The following statement contains a magic number: if (_rFirstCreated)              {                  hit += allMinionsR.Count(enemy => enemy.Distance(_rObj.Position) < 400);                    if (hit < 2 && R.IsReady())                      R.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,GameObject_OnCreate,The following statement contains a magic number: if (obj.Type != GameObjectType.obj_GeneralParticleEmitter || Player.Distance(obj.Position) > 1500)                  return;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,GameObject_OnDelete,The following statement contains a magic number: if (obj.Type != GameObjectType.obj_GeneralParticleEmitter || Player.Distance(obj.Position) > 1500)                  return;
Magic Number,xSaliceReligionAIO.Champions,Anivia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Anivia.cs,GameObject_OnDelete,The following statement contains a magic number: if (Player.Distance(obj.Position) < 1500)              {                  if (obj.IsValid && obj.Name == "cryo_FlashFrost_Player_mis.troy")                  {                      _qMissle = null;                  }                    //R                  if (obj.IsValid && obj.Name.Contains("cryo_storm"))                  {                      _rObj = null;                      _rFirstCreated = false;                      _rByMe = false;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 625);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadSpell,The following statement contains a magic number: W = new Spell(SpellSlot.W' 550);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadSpell,The following statement contains a magic number: R = new Spell(SpellSlot.R' 600);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadSpell,The following statement contains a magic number: R2 = new Spell(SpellSlot.R' 1000);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadSpell,The following statement contains a magic number: W.SetSkillshot(0.25f' 80' float.MaxValue' false' SkillshotType.SkillshotCone);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitQ"' "Last hit with Q!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitQToggle"' "Last hit with Q (Toggle)"' true).SetValue(new KeyBind("J".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("FlashKILL"' "Flash KILL"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("ChargeStun"' "Charge Stun (toggle)!"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Stun_LastHit"' "Use Q Stun to Last hit"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Auto W If Stun >="' true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("W_charge"' "Use W to charge stun"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Charge"' "Use E to Charge Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Block"' "Use E for incoming AutoAttack"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Stun"' "Use E To Charge stun before Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("useR_enemyCount"' "Auto R If Stun >=' 6 = 0ff"' true).SetValue(new Slider(3' 1' 6)));                      rMenu.AddItem(new MenuItem("R_To_KS"' "Use R To KS"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_OverKill"' "Over Kill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_Mode"' "Tibber Mode"' true).SetValue(new StringList(new[] { "Follow Target"' "Follow Me" })));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Stun_LastHit"' "Use Q Stun to Last hit"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Auto W If Stun >="' true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("W_charge"' "Use W to charge stun"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Charge"' "Use E to Charge Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Block"' "Use E for incoming AutoAttack"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Stun"' "Use E To Charge stun before Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("useR_enemyCount"' "Auto R If Stun >=' 6 = 0ff"' true).SetValue(new Slider(3' 1' 6)));                      rMenu.AddItem(new MenuItem("R_To_KS"' "Use R To KS"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_OverKill"' "Over Kill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_Mode"' "Tibber Mode"' true).SetValue(new StringList(new[] { "Follow Target"' "Follow Me" })));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Stun_LastHit"' "Use Q Stun to Last hit"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Auto W If Stun >="' true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("W_charge"' "Use W to charge stun"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Charge"' "Use E to Charge Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Block"' "Use E for incoming AutoAttack"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Stun"' "Use E To Charge stun before Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("useR_enemyCount"' "Auto R If Stun >=' 6 = 0ff"' true).SetValue(new Slider(3' 1' 6)));                      rMenu.AddItem(new MenuItem("R_To_KS"' "Use R To KS"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_OverKill"' "Over Kill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_Mode"' "Tibber Mode"' true).SetValue(new StringList(new[] { "Follow Target"' "Follow Me" })));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Stun_LastHit"' "Use Q Stun to Last hit"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("useW_enemyCount"' "Auto W If Stun >="' true).SetValue(new Slider(3' 1' 5)));                      wMenu.AddItem(new MenuItem("W_charge"' "Use W to charge stun"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Charge"' "Use E to Charge Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Block"' "Use E for incoming AutoAttack"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Stun"' "Use E To Charge stun before Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("useR_enemyCount"' "Auto R If Stun >=' 6 = 0ff"' true).SetValue(new Slider(3' 1' 6)));                      rMenu.AddItem(new MenuItem("R_To_KS"' "Use R To KS"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_OverKill"' "Over Kill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_Mode"' "Tibber Mode"' true).SetValue(new StringList(new[] { "Follow Target"' "Follow Me" })));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Killable"' "Only R When Killable"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle)));                  combo.AddItem(new MenuItem("useR_enemyCount_Combo"' "R If Stun >="' true).SetValue(new Slider(3' 1' 5)));                  combo.AddItem(new MenuItem("FlashStun"' "Use Flash->R->Stun On Killable"' true).SetValue(true));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Killable"' "Only R When Killable"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle)));                  combo.AddItem(new MenuItem("useR_enemyCount_Combo"' "R If Stun >="' true).SetValue(new Slider(3' 1' 5)));                  combo.AddItem(new MenuItem("FlashStun"' "Use Flash->R->Stun On Killable"' true).SetValue(true));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("Harass_Tower"' "Harass Under Tower"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useW_minHit"' "Use W if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useW_minHit"' "Use W if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("Interrupt"' "Interrupt spells with Stun"' true).SetValue(true));                  misc.AddItem(new MenuItem("W_Gap"' "Use Spell to stun GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("smartKS"' "Smart KS"' true).SetValue(true));                  misc.AddItem(new MenuItem("chargeMana"' "Charge Stun only if Mana >="' true).SetValue(new Slider(30)));                  misc.AddItem(new MenuItem("chargeInFountain"' "Charge In Fountain"' true).SetValue(true));                  misc.AddItem(new MenuItem("disableAA"' "Do not AA when Spells Ready"' true).SetValue(false));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R2"' "Draw Flash-R Range"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("FlashStunTarget"' "Draw Flash Kill Ready"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R2"' "Draw Flash-R Range"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("FlashStunTarget"' "Draw Flash Kill Ready"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R2"' "Draw Flash-R Range"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("FlashStunTarget"' "Draw Flash Kill Ready"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R2"' "Draw Flash-R Range"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("FlashStunTarget"' "Draw Flash Kill Ready"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,UseSpells,The following statement contains a magic number: if (useE && StunCount() == 3 && E.IsReady() && menu.Item("E_Stun"' true).GetValue<bool>())                  E.Cast(packets());
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,R_MEC,The following statement contains a magic number: if (!R.IsReady() || minRHit == 6 || Tibbers != null)                  return;
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,W_MEC,The following statement contains a magic number: if (!W.IsReady() || minWHit == 6)                  return;
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunCondition,The following statement contains a magic number: if (!target.IsValidTarget(1000))                  return false;
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunCondition,The following statement contains a magic number: if(!R.IsReady() && !(StunCount() == 3 && E.IsReady()))                  return false;
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunCondition,The following statement contains a magic number: if (Player.Distance(target.Position) > 600 && FullManaCast() && Flash_Ready() && dmg > target.Health)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunRawr,The following statement contains a magic number: var target = TargetSelector.GetTarget(1000' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunRawr,The following statement contains a magic number: if (Player.Distance(target.Position) > 600)              {                  Player.Spellbook.CastSpell(_flashSlot' pred.CastPosition);                  if (StunCount() == 3)                      E.Cast(packets());                  Utility.DelayAction.Add(50' () => R2.Cast(pred.CastPosition' packets()));                  Utility.DelayAction.Add(100' () => W.Cast(pred.CastPosition' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunRawr,The following statement contains a magic number: if (Player.Distance(target.Position) > 600)              {                  Player.Spellbook.CastSpell(_flashSlot' pred.CastPosition);                  if (StunCount() == 3)                      E.Cast(packets());                  Utility.DelayAction.Add(50' () => R2.Cast(pred.CastPosition' packets()));                  Utility.DelayAction.Add(100' () => W.Cast(pred.CastPosition' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunRawr,The following statement contains a magic number: if (Player.Distance(target.Position) > 600)              {                  Player.Spellbook.CastSpell(_flashSlot' pred.CastPosition);                  if (StunCount() == 3)                      E.Cast(packets());                  Utility.DelayAction.Add(50' () => R2.Cast(pred.CastPosition' packets()));                  Utility.DelayAction.Add(100' () => W.Cast(pred.CastPosition' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,FlashStunRawr,The following statement contains a magic number: if (Player.Distance(target.Position) > 600)              {                  Player.Spellbook.CastSpell(_flashSlot' pred.CastPosition);                  if (StunCount() == 3)                      E.Cast(packets());                  Utility.DelayAction.Add(50' () => R2.Cast(pred.CastPosition' packets()));                  Utility.DelayAction.Add(100' () => W.Cast(pred.CastPosition' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Game_OnGameUpdate,The following statement contains a magic number: var target = TargetSelector.GetTarget(2000' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Game_OnGameUpdate,The following statement contains a magic number: if (mode == 0 && target.IsValidTarget(2000))              {                  Player.IssueOrder(                      Tibbers.Distance(target.Position) > 210 ? GameObjectOrder.MovePet : GameObjectOrder.AutoAttackPet' target);              }              else if(mode == 1)              {                  Player.IssueOrder(GameObjectOrder.MovePet' Player);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Game_OnGameUpdate,The following statement contains a magic number: if (mode == 0 && target.IsValidTarget(2000))              {                  Player.IssueOrder(                      Tibbers.Distance(target.Position) > 210 ? GameObjectOrder.MovePet : GameObjectOrder.AutoAttackPet' target);              }              else if(mode == 1)              {                  Player.IssueOrder(GameObjectOrder.MovePet' Player);              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (menu.Item("E_Block"' true).GetValue<bool>())              {                  if (xSLxOrbwalker.IsAutoAttack(args.SData.Name) && args.Target.IsMe && Player.Distance(args.End) < 450)                  {                      E.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Drawing_OnDraw,The following statement contains a magic number: var target = TargetSelector.GetTarget(1000' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Drawing_OnDraw,The following statement contains a magic number: if (target != null && R.IsReady() && menu.Item("FlashStunTarget"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(target.Position);                    if(FlashStunCondition(target))                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "FLASH KILL NOWZ");              }
Magic Number,xSaliceReligionAIO.Champions,Annie,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Annie.cs,Interrupter_OnPosibleToInterrupt,The following statement contains a magic number: if (menu.Item("Interrupt"' true).GetValue<bool>() && unit.IsValidTarget(Q.Range))              {                  if (StunCount() == 3 && E.IsReady())                      E.Cast();                    if (HasStun())                  {                      if (Q.IsReady())                          Q.Cast(unit);                        if (W.IsReady())                          W.Cast(unit);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 875);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: QExtend = new Spell(SpellSlot.Q' 1150);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: Q2 = new Spell(SpellSlot.Q' 2000);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 350);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 2000);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 450);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: Q.SetSkillshot(0.1f' 100' 1700' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: Q.SetSkillshot(0.1f' 100' 1700' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: QExtend.SetSkillshot(0.1f' 100' 1700' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: QExtend.SetSkillshot(0.1f' 100' 1700' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: E.SetSkillshot(0.25f' 100' 1200' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: E.SetSkillshot(0.25f' 100' 1200' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(0.5f' 700' 1400' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(0.5f' 700' 1400' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("escape"' "Escape"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("insec"' "Insec Selected target"'true).SetValue(new KeyBind("J".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("qeCombo"' "Q->E stun Nearest target"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("qMulti"' "Q if 2+ Soilder"'true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("point"' "Escape Point Tag(Delay Escape Only)"' true).SetValue(new KeyBind("M".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                    var qMenu = new Menu("QSpell"' "QSpell"); {                       qMenu.AddItem(new MenuItem("qOutRange"' "Only Use When target out of range"'true).SetValue(false));                      qMenu.AddItem(new MenuItem("qExtend"' "Use Extended Q Range"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 3)));                      spell.AddSubMenu(qMenu);                  }                  //W Menu                  var wMenu = new Menu("WSpell"' "WSpell"); {                      wMenu.AddItem(new MenuItem("wAtk"' "Always Atk Enemy"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("wQ"' "Use WQ Poke"'true).SetValue(true));                      spell.AddSubMenu(wMenu);                  }                  //E Menu                  var eMenu =  new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("eKill"' "If Killable Combo"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eKnock"' "Always Knockup/DMG"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eHP"' "if HP >"'true).SetValue(new Slider(100)));                      spell.AddSubMenu(eMenu);                  }                  //R Menu                  var rMenu = new Menu("RSpell"' "RSpell");{                      rMenu.AddItem(new MenuItem("rHP"' "if HP <"'true).SetValue(new Slider(20)));                      rMenu.AddItem(new MenuItem("rHit"' "If Hit >= Target"'true).SetValue(new Slider(3' 0' 5)));                      rMenu.AddItem(new MenuItem("rWall"' "R Enemy Into Wall"'true).SetValue(true));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                    var qMenu = new Menu("QSpell"' "QSpell"); {                       qMenu.AddItem(new MenuItem("qOutRange"' "Only Use When target out of range"'true).SetValue(false));                      qMenu.AddItem(new MenuItem("qExtend"' "Use Extended Q Range"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 3)));                      spell.AddSubMenu(qMenu);                  }                  //W Menu                  var wMenu = new Menu("WSpell"' "WSpell"); {                      wMenu.AddItem(new MenuItem("wAtk"' "Always Atk Enemy"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("wQ"' "Use WQ Poke"'true).SetValue(true));                      spell.AddSubMenu(wMenu);                  }                  //E Menu                  var eMenu =  new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("eKill"' "If Killable Combo"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eKnock"' "Always Knockup/DMG"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eHP"' "if HP >"'true).SetValue(new Slider(100)));                      spell.AddSubMenu(eMenu);                  }                  //R Menu                  var rMenu = new Menu("RSpell"' "RSpell");{                      rMenu.AddItem(new MenuItem("rHP"' "if HP <"'true).SetValue(new Slider(20)));                      rMenu.AddItem(new MenuItem("rHit"' "If Hit >= Target"'true).SetValue(new Slider(3' 0' 5)));                      rMenu.AddItem(new MenuItem("rWall"' "R Enemy Into Wall"'true).SetValue(true));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                    var qMenu = new Menu("QSpell"' "QSpell"); {                       qMenu.AddItem(new MenuItem("qOutRange"' "Only Use When target out of range"'true).SetValue(false));                      qMenu.AddItem(new MenuItem("qExtend"' "Use Extended Q Range"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 3)));                      spell.AddSubMenu(qMenu);                  }                  //W Menu                  var wMenu = new Menu("WSpell"' "WSpell"); {                      wMenu.AddItem(new MenuItem("wAtk"' "Always Atk Enemy"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("wQ"' "Use WQ Poke"'true).SetValue(true));                      spell.AddSubMenu(wMenu);                  }                  //E Menu                  var eMenu =  new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("eKill"' "If Killable Combo"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eKnock"' "Always Knockup/DMG"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eHP"' "if HP >"'true).SetValue(new Slider(100)));                      spell.AddSubMenu(eMenu);                  }                  //R Menu                  var rMenu = new Menu("RSpell"' "RSpell");{                      rMenu.AddItem(new MenuItem("rHP"' "if HP <"'true).SetValue(new Slider(20)));                      rMenu.AddItem(new MenuItem("rHit"' "If Hit >= Target"'true).SetValue(new Slider(3' 0' 5)));                      rMenu.AddItem(new MenuItem("rWall"' "R Enemy Into Wall"'true).SetValue(true));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                    var qMenu = new Menu("QSpell"' "QSpell"); {                       qMenu.AddItem(new MenuItem("qOutRange"' "Only Use When target out of range"'true).SetValue(false));                      qMenu.AddItem(new MenuItem("qExtend"' "Use Extended Q Range"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 3)));                      spell.AddSubMenu(qMenu);                  }                  //W Menu                  var wMenu = new Menu("WSpell"' "WSpell"); {                      wMenu.AddItem(new MenuItem("wAtk"' "Always Atk Enemy"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("wQ"' "Use WQ Poke"'true).SetValue(true));                      spell.AddSubMenu(wMenu);                  }                  //E Menu                  var eMenu =  new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("eKill"' "If Killable Combo"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eKnock"' "Always Knockup/DMG"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eHP"' "if HP >"'true).SetValue(new Slider(100)));                      spell.AddSubMenu(eMenu);                  }                  //R Menu                  var rMenu = new Menu("RSpell"' "RSpell");{                      rMenu.AddItem(new MenuItem("rHP"' "if HP <"'true).SetValue(new Slider(20)));                      rMenu.AddItem(new MenuItem("rHit"' "If Hit >= Target"'true).SetValue(new Slider(3' 0' 5)));                      rMenu.AddItem(new MenuItem("rWall"' "R Enemy Into Wall"'true).SetValue(true));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                    var qMenu = new Menu("QSpell"' "QSpell"); {                       qMenu.AddItem(new MenuItem("qOutRange"' "Only Use When target out of range"'true).SetValue(false));                      qMenu.AddItem(new MenuItem("qExtend"' "Use Extended Q Range"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 3)));                      spell.AddSubMenu(qMenu);                  }                  //W Menu                  var wMenu = new Menu("WSpell"' "WSpell"); {                      wMenu.AddItem(new MenuItem("wAtk"' "Always Atk Enemy"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("wQ"' "Use WQ Poke"'true).SetValue(true));                      spell.AddSubMenu(wMenu);                  }                  //E Menu                  var eMenu =  new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("eKill"' "If Killable Combo"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eKnock"' "Always Knockup/DMG"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eHP"' "if HP >"'true).SetValue(new Slider(100)));                      spell.AddSubMenu(eMenu);                  }                  //R Menu                  var rMenu = new Menu("RSpell"' "RSpell");{                      rMenu.AddItem(new MenuItem("rHP"' "if HP <"'true).SetValue(new Slider(20)));                      rMenu.AddItem(new MenuItem("rHit"' "If Hit >= Target"'true).SetValue(new Slider(3' 0' 5)));                      rMenu.AddItem(new MenuItem("rWall"' "R Enemy Into Wall"'true).SetValue(true));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                    var qMenu = new Menu("QSpell"' "QSpell"); {                       qMenu.AddItem(new MenuItem("qOutRange"' "Only Use When target out of range"'true).SetValue(false));                      qMenu.AddItem(new MenuItem("qExtend"' "Use Extended Q Range"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 3)));                      spell.AddSubMenu(qMenu);                  }                  //W Menu                  var wMenu = new Menu("WSpell"' "WSpell"); {                      wMenu.AddItem(new MenuItem("wAtk"' "Always Atk Enemy"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("wQ"' "Use WQ Poke"'true).SetValue(true));                      spell.AddSubMenu(wMenu);                  }                  //E Menu                  var eMenu =  new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("eKill"' "If Killable Combo"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eKnock"' "Always Knockup/DMG"'true).SetValue(false));                      eMenu.AddItem(new MenuItem("eHP"' "if HP >"'true).SetValue(new Slider(100)));                      spell.AddSubMenu(eMenu);                  }                  //R Menu                  var rMenu = new Menu("RSpell"' "RSpell");{                      rMenu.AddItem(new MenuItem("rHP"' "if HP <"'true).SetValue(new Slider(20)));                      rMenu.AddItem(new MenuItem("rHit"' "If Hit >= Target"'true).SetValue(new Slider(3' 0' 5)));                      rMenu.AddItem(new MenuItem("rWall"' "R Enemy Into Wall"'true).SetValue(true));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(false));                  farm.AddItem(new MenuItem("qFarm"' "Only Q if > minion"'true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(false));                  farm.AddItem(new MenuItem("qFarm"' "Only Q if > minion"'true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("UseInt"' "Use E to Interrupt"'true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use R for GapCloser"'true).SetValue(true));                  misc.AddItem(new MenuItem("fastEscape"' "Fast Escape = on' Delay EQ Escape = off"'true).SetValue(true));                  misc.AddItem(new MenuItem("escapeDelay"' "Escape Delay Decrease"' true).SetValue(new Slider(0' 0' 300)));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("QExtendRange"' "Q Extended range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("slaveDmg"' "Draw Slave AA Needed"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,GetComboDamage,The following statement contains a magic number: if (soilderCount() > 0 || W.IsReady())              {                  damage += 2*xSLxOrbwalker.GetAzirAaSandwarriorDamage(enemy);              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,The following statement contains a magic number: var soilderTarget = TargetSelector.GetTarget(1200' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  ActiveItems.Target = soilderTarget;                    //see if killable                  if (dmg > soilderTarget.Health - 50)                      ActiveItems.KillableTarget = true;                    ActiveItems.UseTargetted = true;                                }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //R                      if ((Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 20 && Player.Distance(target.Position) < R.Range && menu.Item("rKS"' true).GetValue<bool>())                      {                          R.Cast(target);                      }                        if (soilderCount() < 1 && !W.IsReady())                          return;                        //WQ                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20 && menu.Item("wqKS"' true).GetValue<bool>())                      {                          CastWq(target);                      }                        //qe                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && Player.Distance(target.Position) < Q.Range && menu.Item("qeKS"' true).GetValue<bool>())                      {                          CastQe(target);                      }                    }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //R                      if ((Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 20 && Player.Distance(target.Position) < R.Range && menu.Item("rKS"' true).GetValue<bool>())                      {                          R.Cast(target);                      }                        if (soilderCount() < 1 && !W.IsReady())                          return;                        //WQ                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20 && menu.Item("wqKS"' true).GetValue<bool>())                      {                          CastWq(target);                      }                        //qe                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && Player.Distance(target.Position) < Q.Range && menu.Item("qeKS"' true).GetValue<bool>())                      {                          CastQe(target);                      }                    }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //R                      if ((Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 20 && Player.Distance(target.Position) < R.Range && menu.Item("rKS"' true).GetValue<bool>())                      {                          R.Cast(target);                      }                        if (soilderCount() < 1 && !W.IsReady())                          return;                        //WQ                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20 && menu.Item("wqKS"' true).GetValue<bool>())                      {                          CastWq(target);                      }                        //qe                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && Player.Distance(target.Position) < Q.Range && menu.Item("qeKS"' true).GetValue<bool>())                      {                          CastQe(target);                      }                    }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //R                      if ((Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 20 && Player.Distance(target.Position) < R.Range && menu.Item("rKS"' true).GetValue<bool>())                      {                          R.Cast(target);                      }                        if (soilderCount() < 1 && !W.IsReady())                          return;                        //WQ                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20 && menu.Item("wqKS"' true).GetValue<bool>())                      {                          CastWq(target);                      }                        //qe                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && Player.Distance(target.Position) < Q.Range && menu.Item("qeKS"' true).GetValue<bool>())                      {                          CastQe(target);                      }                    }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Escape,The following statement contains a magic number: if (menu.Item("fastEscape"' true).GetValue<bool>())              {                  if (W.IsReady() || soilderCount() > 0)                  {                      if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          W.Cast(wVec);                          W.LastCastAttemptT = Environment.TickCount;                      }                        if ((QExtend.IsReady() || QSpell.State == SpellState.Surpressed) &&                          ((Environment.TickCount - E.LastCastAttemptT < Game.Ping + 500 &&                            Environment.TickCount - E.LastCastAttemptT > Game.Ping + 50) || E.IsReady()))                      {                          if (Environment.TickCount - W.LastCastAttemptT > Game.Ping + 300 || ESpell.State == SpellState.Cooldown || !W.IsReady())                          {                              Vector3 qVec = Player.ServerPosition +                                             Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * 800;                                var lastAttempt = (int)qVec.Distance(GetNearestSoilderToMouse().Position) / 1000;                                Q.Cast(qVec' packets());                              Q.LastCastAttemptT = Environment.TickCount + lastAttempt;                              return;                          }                      }                        if ((E.IsReady() || ESpell.State == SpellState.Surpressed))                      {                          if (Player.Distance(Game.CursorPos) > GetNearestSoilderToMouse().Position.Distance(Game.CursorPos) && Environment.TickCount - Q.LastCastAttemptT > Game.Ping)                          {                              E.Cast(GetNearestSoilderToMouse().Position' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr2");                              return;                          }                          if (Environment.TickCount - W.LastCastAttemptT < Game.Ping + 300 && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                          {                              E.Cast(wVec' packets());                              E.LastCastAttemptT = Environment.TickCount - 250;                              //Game.PrintChat("Rawr1");                          }                      }                  }              }              else              {                  if (Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping / 2 && Environment.TickCount - E.LastCastAttemptT > _delay && ESpell.State == SpellState.Cooldown && _point != Vector3.Zero)                  {                      Q2.Cast(_vecPoint' packets());                  }                    if ((E.IsReady() || ESpell.State == SpellState.Surpressed) && _point != Vector3.Zero)                  {                      if(soilderCount() < 1 && W.IsReady())                          W.Cast(wVec);                      else if (soilderCount() < 1 && !W.IsReady())                          return;                        if (GetNearestSoilderToMouse() == null)                          return;                        var nearSlave = GetNearestSoilderToMouse();                        if (E.IsReady() || ESpell.State == SpellState.Surpressed)                          E.Cast(nearSlave.Position' packets());                        if (QExtend.IsReady() || QSpell.State == SpellState.Surpressed)                      {                          _vecPoint = nearSlave.Position + Vector3.Normalize(_point - nearSlave.Position) * 700;                          _delay = (int)(100*(Player.Distance(nearSlave.Position)/800)+ menu.Item("escapeDelay"' true).GetValue<Slider>().Value);                                                    //Game.PrintChat("Delay" + _delay);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (target != null && Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                                if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                              {                                  var vec = target.ServerPosition - Player.ServerPosition;                                  var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  return;                                }                          }                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      Utility.DelayAction.Add(1' () => E.Cast(getNearestSoilderToEnemy(target).Position' packets()));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (target != null && Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                                if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                              {                                  var vec = target.ServerPosition - Player.ServerPosition;                                  var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  return;                                }                          }                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      Utility.DelayAction.Add(1' () => E.Cast(getNearestSoilderToEnemy(target).Position' packets()));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (target != null && Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                                if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                              {                                  var vec = target.ServerPosition - Player.ServerPosition;                                  var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  return;                                }                          }                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      Utility.DelayAction.Add(1' () => E.Cast(getNearestSoilderToEnemy(target).Position' packets()));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (target != null && Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                                if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                              {                                  var vec = target.ServerPosition - Player.ServerPosition;                                  var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  return;                                }                          }                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      Utility.DelayAction.Add(1' () => E.Cast(getNearestSoilderToEnemy(target).Position' packets()));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQe,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (target != null && Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                                if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                              {                                  var vec = target.ServerPosition - Player.ServerPosition;                                  var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  return;                                }                          }                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed) && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      Utility.DelayAction.Add(1' () => E.Cast(getNearestSoilderToEnemy(target).Position' packets()));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Insec,The following statement contains a magic number: if (soilderCount() > 0)              {                  if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && E.IsReady())                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                        foreach (var slave in slaves)                      {                          if (Player.Distance(target.Position) < 800)                          {                              var qPred = GetP(slave.Position' QExtend' target' true);                              var vec = target.ServerPosition - Player.ServerPosition;                              var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                              _rVec = qPred.CastPosition - Vector3.Normalize(vec) * 300;                                if (Q.IsReady() && (E.IsReady() || ESpell.State == SpellState.Surpressed) && R.IsReady() && qPred.Hitchance >= getQHitchance())                              {                                    Q.Cast(castBehind' packets());                                  E.Cast(slave.Position' packets());                                  E.LastCastAttemptT = Environment.TickCount;                              }                          }                      }                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr");                          R.Cast(_rVec);                      }                  }              }              else if (W.IsReady())              {                  Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                    var qPred = GetP(wVec' QExtend' target' true);                    if ((Q.IsReady() || QSpell.State == SpellState.Surpressed) && (E.IsReady() || ESpell.State == SpellState.Surpressed)                      && R.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                  {                      var vec = target.ServerPosition - Player.ServerPosition;                      var castBehind = qPred.CastPosition + Vector3.Normalize(vec) * 75;                      _rVec = Player.Position;                        W.Cast(wVec);                      QExtend.Cast(castBehind' packets());                      E.Cast(getNearestSoilderToEnemy(target).Position' packets());                  }                  if (R.IsReady())                  {                      if (Player.Distance(target.Position) < 200 && Environment.TickCount - E.LastCastAttemptT > Game.Ping + 150)                      {                          //Game.PrintChat("rawr2");                          R.Cast(_rVec);                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastWq,The following statement contains a magic number: if (Player.Distance(target.Position) < 1150 && Player.Distance(target.Position) > W.Range)              {                  if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        var qPred = GetP(wVec' QExtend' target' true);                        if (qPred.Hitchance >= getQHitchance())                      {                          W.Cast(wVec);                          QExtend.Cast(qPred.CastPosition' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 1200)              {                  if (Player.Distance(target.Position) < 600)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        //Game.PrintChat("W Cast2");                      if (W.IsReady())                      {                          W.Cast(wVec);                          if (canAttack())                              Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      }                  }                  else if (Player.Distance(target.Position) < 950)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                      if (Player.Level > 10)                      {                          if (W.IsReady())                          {                              W.Cast(wVec);                              if (canAttack())                                  Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                          }                      }                        //Game.PrintChat("W Cast2");                      if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                      {                          var qPred = GetP(wVec' QExtend' target' true);                            if (qPred.Hitchance >= getQHitchance())                          {                              W.Cast(wVec);                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 1200)              {                  if (Player.Distance(target.Position) < 600)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        //Game.PrintChat("W Cast2");                      if (W.IsReady())                      {                          W.Cast(wVec);                          if (canAttack())                              Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      }                  }                  else if (Player.Distance(target.Position) < 950)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                      if (Player.Level > 10)                      {                          if (W.IsReady())                          {                              W.Cast(wVec);                              if (canAttack())                                  Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                          }                      }                        //Game.PrintChat("W Cast2");                      if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                      {                          var qPred = GetP(wVec' QExtend' target' true);                            if (qPred.Hitchance >= getQHitchance())                          {                              W.Cast(wVec);                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 1200)              {                  if (Player.Distance(target.Position) < 600)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        //Game.PrintChat("W Cast2");                      if (W.IsReady())                      {                          W.Cast(wVec);                          if (canAttack())                              Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      }                  }                  else if (Player.Distance(target.Position) < 950)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                      if (Player.Level > 10)                      {                          if (W.IsReady())                          {                              W.Cast(wVec);                              if (canAttack())                                  Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                          }                      }                        //Game.PrintChat("W Cast2");                      if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                      {                          var qPred = GetP(wVec' QExtend' target' true);                            if (qPred.Hitchance >= getQHitchance())                          {                              W.Cast(wVec);                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 1200)              {                  if (Player.Distance(target.Position) < 600)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        //Game.PrintChat("W Cast2");                      if (W.IsReady())                      {                          W.Cast(wVec);                          if (canAttack())                              Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      }                  }                  else if (Player.Distance(target.Position) < 950)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                      if (Player.Level > 10)                      {                          if (W.IsReady())                          {                              W.Cast(wVec);                              if (canAttack())                                  Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                          }                      }                        //Game.PrintChat("W Cast2");                      if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                      {                          var qPred = GetP(wVec' QExtend' target' true);                            if (qPred.Hitchance >= getQHitchance())                          {                              W.Cast(wVec);                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 1200)              {                  if (Player.Distance(target.Position) < 600)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        //Game.PrintChat("W Cast2");                      if (W.IsReady())                      {                          W.Cast(wVec);                          if (canAttack())                              Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      }                  }                  else if (Player.Distance(target.Position) < 950)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                      if (Player.Level > 10)                      {                          if (W.IsReady())                          {                              W.Cast(wVec);                              if (canAttack())                                  Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                          }                      }                        //Game.PrintChat("W Cast2");                      if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                      {                          var qPred = GetP(wVec' QExtend' target' true);                            if (qPred.Hitchance >= getQHitchance())                          {                              W.Cast(wVec);                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 1200)              {                  if (Player.Distance(target.Position) < 600)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                        //Game.PrintChat("W Cast2");                      if (W.IsReady())                      {                          W.Cast(wVec);                          if (canAttack())                              Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      }                  }                  else if (Player.Distance(target.Position) < 950)                  {                      Vector3 wVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * W.Range;                      if (Player.Level > 10)                      {                          if (W.IsReady())                          {                              W.Cast(wVec);                              if (canAttack())                                  Utility.DelayAction.Add(200' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                          }                      }                        //Game.PrintChat("W Cast2");                      if (W.IsReady() && (Q.IsReady() || QSpell.State == SpellState.Surpressed))                      {                          var qPred = GetP(wVec' QExtend' target' true);                            if (qPred.Hitchance >= getQHitchance())                          {                              W.Cast(wVec);                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQ,The following statement contains a magic number: foreach (var slave in slaves)              {                  if (target != null && Player.Distance(target.Position) < QExtend.Range && ShouldQ(target' slave))                  {                        var qPred = GetP(slave.Position' QExtend' target' true);                        if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                      {                          Q.Cast(qPred.CastPosition' packets());                          return;                      }                      if (Q.IsReady() && Player.Distance(target.Position) > 800 && qPred.Hitchance >= getQHitchance() && menu.Item("qExtend"' true).GetValue<bool>())                      {                          var qVector = Player.ServerPosition + Vector3.Normalize(qPred.CastPosition - Player.ServerPosition) * 800;                            //Game.PrintChat("QHarass");                          QExtend.Cast(qVector' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQ,The following statement contains a magic number: foreach (var slave in slaves)              {                  if (target != null && Player.Distance(target.Position) < QExtend.Range && ShouldQ(target' slave))                  {                        var qPred = GetP(slave.Position' QExtend' target' true);                        if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                      {                          Q.Cast(qPred.CastPosition' packets());                          return;                      }                      if (Q.IsReady() && Player.Distance(target.Position) > 800 && qPred.Hitchance >= getQHitchance() && menu.Item("qExtend"' true).GetValue<bool>())                      {                          var qVector = Player.ServerPosition + Vector3.Normalize(qPred.CastPosition - Player.ServerPosition) * 800;                            //Game.PrintChat("QHarass");                          QExtend.Cast(qVector' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastQ,The following statement contains a magic number: foreach (var slave in slaves)              {                  if (target != null && Player.Distance(target.Position) < QExtend.Range && ShouldQ(target' slave))                  {                        var qPred = GetP(slave.Position' QExtend' target' true);                        if (Q.IsReady() && Player.Distance(target.Position) < 800 && qPred.Hitchance >= getQHitchance())                      {                          Q.Cast(qPred.CastPosition' packets());                          return;                      }                      if (Q.IsReady() && Player.Distance(target.Position) > 800 && qPred.Hitchance >= getQHitchance() && menu.Item("qExtend"' true).GetValue<bool>())                      {                          var qVector = Player.ServerPosition + Vector3.Normalize(qPred.CastPosition - Player.ServerPosition) * 800;                            //Game.PrintChat("QHarass");                          QExtend.Cast(qVector' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,CastE,The following statement contains a magic number: foreach (var slave in slaves)              {                  if (target != null && Player.Distance(slave.Position) < E.Range)                  {                      var ePred = E.GetPrediction(target);                      Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()' slave.Position.To2D()' ePred.UnitPosition.To2D());                      var isOnseg = (bool)obj[2];                      var pointLine = (Vector2)obj[1];                        if (E.IsReady() && isOnseg && pointLine.Distance(ePred.UnitPosition.To2D()) < E.Width && ShouldE(target))                      {                          E.Cast(slave.Position' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldQ,The following statement contains a magic number: if (soilderCount() < 2 && menu.Item("qMulti"' true).GetValue<KeyBind>().Active)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldQ,The following statement contains a magic number: if (target.Distance(slave.Position) > 390)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldQ,The following statement contains a magic number: if (Player.GetSpellDamage(target' SpellSlot.Q) > target.Health + 10)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldE,The following statement contains a magic number: if (menu.Item("eKill"' true).GetValue<bool>() && GetComboDamage(target) > target.Health + 15)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldE,The following statement contains a magic number: if (menu.Item("eKS"' true).GetValue<bool>() && Player.GetSpellDamage(target' SpellSlot.E) > target.Health + 10)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldE,The following statement contains a magic number: var hpPercent = Player.Health / Player.MaxHealth * 100;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldR,The following statement contains a magic number: if (Player.GetSpellDamage(target' SpellSlot.R) > target.Health - 150)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldR,The following statement contains a magic number: var hpPercent = Player.Health / Player.MaxHealth * 100;
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,ShouldR,The following statement contains a magic number: if (WallStun(target) && GetComboDamage(target) > target.Health / 2 && menu.Item("rWall"' true).GetValue<bool>())              {                  //Game.PrintChat("Walled");                  return true;              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,AutoAtk,The following statement contains a magic number: var soilderTarget = TargetSelector.GetTarget(800' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,getQHitchance,The following statement contains a magic number: switch (qHit)              {                  case 1:                      hitC = HitChance.Low;                      break;                  case 2:                      hitC = HitChance.Medium;                      break;                  case 3:                      hitC = HitChance.High;                      break;                  case 4:                      hitC = HitChance.VeryHigh;                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,getQHitchance,The following statement contains a magic number: switch (qHit)              {                  case 1:                      hitC = HitChance.Low;                      break;                  case 2:                      hitC = HitChance.Medium;                      break;                  case 3:                      hitC = HitChance.High;                      break;                  case 4:                      hitC = HitChance.VeryHigh;                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,getQHitchance,The following statement contains a magic number: switch (qHit)              {                  case 1:                      hitC = HitChance.Low;                      break;                  case 2:                      hitC = HitChance.Medium;                      break;                  case 3:                      hitC = HitChance.High;                      break;                  case 4:                      hitC = HitChance.VeryHigh;                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,AttackTarget,The following statement contains a magic number: if (tar != null && Player.Distance(tar.Position) < 800)              {                  if (target != null && target.Distance(tar.Position) <= 390 && canAttack())                  {                      xSLxOrbwalker.Orbwalk(Game.CursorPos' target);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,AttackTarget,The following statement contains a magic number: if (tar != null && Player.Distance(tar.Position) < 800)              {                  if (target != null && target.Distance(tar.Position) <= 390 && canAttack())                  {                      xSLxOrbwalker.Orbwalk(Game.CursorPos' target);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Farm,The following statement contains a magic number: if (useQ && (Q.IsReady() || QSpell.State == SpellState.Surpressed))              {                  int hit;                  if (soilderCount() > 0)                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                      foreach (var slave in slaves)                      {                          foreach (var enemy in allMinionsQ)                          {                              hit = 0;                              var prediction = GetP(slave.Position' Q' enemy' true);                                if (Q.IsReady() && Player.Distance(enemy.Position) <= Q.Range)                              {                                  hit += allMinionsQ.Count(enemy2 => enemy2.Distance(prediction.CastPosition) < 200 && Q.IsReady());                                  if (hit >= min)                                  {                                      if (Q.IsReady())                                      {                                          Q.Cast(prediction.CastPosition' packets());                                          return;                                      }                                  }                              }                          }                      }                  }                  if (W.IsReady())                  {                      var wpred = W.GetCircularFarmLocation(allMinionsW);                      if(wpred.MinionsHit > 0)                          W.Cast(wpred.Position);                        foreach (var enemy in allMinionsQ)                      {                          hit = 0;                          var prediction = GetP(Player.ServerPosition' Q' enemy' true);                            if (Q.IsReady() && Player.Distance(enemy.Position) <= Q.Range)                          {                              hit += allMinionsQ.Count(enemy2 => enemy2.Distance(prediction.CastPosition) < 200 && Q.IsReady());                              if (hit >= min)                              {                                  if (Q.IsReady())                                  {                                      Q.Cast(prediction.CastPosition' packets());                                      return;                                  }                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Farm,The following statement contains a magic number: if (useQ && (Q.IsReady() || QSpell.State == SpellState.Surpressed))              {                  int hit;                  if (soilderCount() > 0)                  {                      var slaves = xSLxOrbwalker.Soilders.ToList();                      foreach (var slave in slaves)                      {                          foreach (var enemy in allMinionsQ)                          {                              hit = 0;                              var prediction = GetP(slave.Position' Q' enemy' true);                                if (Q.IsReady() && Player.Distance(enemy.Position) <= Q.Range)                              {                                  hit += allMinionsQ.Count(enemy2 => enemy2.Distance(prediction.CastPosition) < 200 && Q.IsReady());                                  if (hit >= min)                                  {                                      if (Q.IsReady())                                      {                                          Q.Cast(prediction.CastPosition' packets());                                          return;                                      }                                  }                              }                          }                      }                  }                  if (W.IsReady())                  {                      var wpred = W.GetCircularFarmLocation(allMinionsW);                      if(wpred.MinionsHit > 0)                          W.Cast(wpred.Position);                        foreach (var enemy in allMinionsQ)                      {                          hit = 0;                          var prediction = GetP(Player.ServerPosition' Q' enemy' true);                            if (Q.IsReady() && Player.Distance(enemy.Position) <= Q.Range)                          {                              hit += allMinionsQ.Count(enemy2 => enemy2.Distance(prediction.CastPosition) < 200 && Q.IsReady());                              if (hit >= min)                              {                                  if (Q.IsReady())                                  {                                      Q.Cast(prediction.CastPosition' packets());                                      return;                                  }                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Game_OnGameUpdate,The following statement contains a magic number: if (menu.Item("escape"' true).GetValue<KeyBind>().Active)              {                  Escape();              }              else if (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active)              {                  Combo();              }              else if (menu.Item("insec"' true).GetValue<KeyBind>().Active)              {                  xSLxOrbwalker.Orbwalk(Game.CursorPos' null);                    _insecTarget = TargetSelector.GetSelectedTarget();                  if (_insecTarget != null)                      Insec();              }              else if (menu.Item("qeCombo"' true).GetValue<KeyBind>().Active)              {                  var soilderTarget = TargetSelector.GetTarget(900' TargetSelector.DamageType.Magical);                    xSLxOrbwalker.Orbwalk(Game.CursorPos' null);                  CastQe(soilderTarget);              }              else              {                  if (menu.Item("LaneClearActive"' true).GetValue<KeyBind>().Active)                  {                      Farm();                  }                    if (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active)                      Harass();                    if (menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active)                      Harass();                    if (menu.Item("wAtk"' true).GetValue<bool>())                      AutoAtk();              }
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("qMulti"' true).GetValue<KeyBind>().Active)                  Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Q If 2+ Soldier");              else                  Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Q If 2+ Soldier");
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("qMulti"' true).GetValue<KeyBind>().Active)                  Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Q If 2+ Soldier");              else                  Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Q If 2+ Soldier");
Magic Number,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,Drawing_OnDraw,The following statement contains a magic number: if (_point != Vector3.Zero && !menu.Item("fastEscape"' true).GetValue<bool>())              {                  var vec = Player.ServerPosition + Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * W.Range;                  var vecPoint = vec + Vector3.Normalize(_point - vec) * Q.Range;                  if (soilderCount() > 0 && GetNearestSoilderToMouse() != null)                  {                      vec = GetNearestSoilderToMouse().Position;                      vecPoint = GetNearestSoilderToMouse().Position + Vector3.Normalize(_point - GetNearestSoilderToMouse().Position) * Q.Range;                  }                    var wts1 = Drawing.WorldToScreen(vec);                  var wts2 = Drawing.WorldToScreen(vecPoint);                  var wts3 = Drawing.WorldToScreen(Player.Position);                  Drawing.DrawLine(wts3' wts1' 1' Color.Green);                  Drawing.DrawLine(wts1' wts2' 1' Color.Green);                  Render.Circle.DrawCircle(_point' 50' Color.Yellow);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 950);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 140);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 600);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadSpells,The following statement contains a magic number: Q.SetSkillshot(0.22f' 70f' 1800' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(0.25f' 600' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  qMenu.AddItem(new MenuItem("qRange2"' "Q Min Range Slider"'true).SetValue(new Slider(300' 1' 950)));                  qMenu.AddItem(new MenuItem("qRange"' "Q Max Range Slider"'true).SetValue(new Slider(900' 1' 950)));                  qMenu.AddItem(new MenuItem("qSlow"' "Auto Q Slow"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qImmobile"' "Auto Q Immobile"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qDashing"' "Auto Q Dashing"'true).SetValue(true));                  menu.AddSubMenu(qMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  qMenu.AddItem(new MenuItem("qRange2"' "Q Min Range Slider"'true).SetValue(new Slider(300' 1' 950)));                  qMenu.AddItem(new MenuItem("qRange"' "Q Max Range Slider"'true).SetValue(new Slider(900' 1' 950)));                  qMenu.AddItem(new MenuItem("qSlow"' "Auto Q Slow"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qImmobile"' "Auto Q Immobile"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qDashing"' "Auto Q Dashing"'true).SetValue(true));                  menu.AddSubMenu(qMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  qMenu.AddItem(new MenuItem("qRange2"' "Q Min Range Slider"'true).SetValue(new Slider(300' 1' 950)));                  qMenu.AddItem(new MenuItem("qRange"' "Q Max Range Slider"'true).SetValue(new Slider(900' 1' 950)));                  qMenu.AddItem(new MenuItem("qSlow"' "Auto Q Slow"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qImmobile"' "Auto Q Immobile"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qDashing"' "Auto Q Dashing"'true).SetValue(true));                  menu.AddSubMenu(qMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  qMenu.AddItem(new MenuItem("qRange2"' "Q Min Range Slider"'true).SetValue(new Slider(300' 1' 950)));                  qMenu.AddItem(new MenuItem("qRange"' "Q Max Range Slider"'true).SetValue(new Slider(900' 1' 950)));                  qMenu.AddItem(new MenuItem("qSlow"' "Auto Q Slow"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qImmobile"' "Auto Q Immobile"'true).SetValue(true));                  qMenu.AddItem(new MenuItem("qDashing"' "Auto Q Dashing"'true).SetValue(true));                  menu.AddSubMenu(qMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("QE"' "Use E on Grab"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("useRQ"' "Use R After Q"'true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"'true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("QE"' "Use E on Grab"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("useRQ"' "Use R After Q"'true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"'true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(true));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"'true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(true));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("UseInt"' "Use R to Interrupt"'true).SetValue(true));                  misc.AddItem(new MenuItem("resetE"' "Use E AA reset Only"'true).SetValue(true));                  misc.AddItem(new MenuItem("autoR"' "Use R if hit"'true).SetValue(new Slider(3' 0' 5)));                    misc.AddSubMenu(new Menu("Don't use Q on"' "intR"));                    foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                      misc                          .SubMenu("intR")                          .AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                    menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("UseInt"' "Use R to Interrupt"'true).SetValue(true));                  misc.AddItem(new MenuItem("resetE"' "Use E AA reset Only"'true).SetValue(true));                  misc.AddItem(new MenuItem("autoR"' "Use R if hit"'true).SetValue(new Slider(3' 0' 5)));                    misc.AddSubMenu(new Menu("Don't use Q on"' "intR"));                    foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                      misc                          .SubMenu("intR")                          .AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                    menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("QRange"' "Q range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"'true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"'true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The following statement contains a magic number: var target = TargetSelector.GetTarget(1000' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The following statement contains a magic number: if (useW && target != null && W.IsReady() && Player.Distance(target.Position) <= 500)              {                  W.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The following statement contains a magic number: var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The following statement contains a magic number: if (itemTarget != null)              {                  var dmg = GetComboDamage(itemTarget);                  ActiveItems.Target = itemTarget;                    //see if killable                  if (dmg > itemTarget.Health - 50)                      ActiveItems.KillableTarget = true;                    ActiveItems.UseTargetted = true;              }
Magic Number,xSaliceReligionAIO.Champions,Blitzcrank,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Blitzcrank.cs,UseSpells,The following statement contains a magic number: if (useE && target != null && E.IsReady() && Player.Distance(target.Position) < 300 && !menu.Item("resetE"' true).GetValue<bool>())              {                  E.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 825);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: Q.SetSkillshot(.3f' 250' 1225' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: Q.SetSkillshot(.3f' 250' 1225' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 800);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 600);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: E.SetSkillshot(.1f' (float)(45 * Math.PI / 180)' 1500' false' SkillshotType.SkillshotCone);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: E.SetSkillshot(.1f' (float)(45 * Math.PI / 180)' 1500' false' SkillshotType.SkillshotCone);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: E.SetSkillshot(.1f' (float)(45 * Math.PI / 180)' 1500' false' SkillshotType.SkillshotCone);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1500);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: R.SetSkillshot(.2f' 40' 1500' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,SetSpells,The following statement contains a magic number: R.SetSkillshot(.2f' 40' 1500' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("Always_Use"' "Spell after AA in AA range"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  combo.AddItem(new MenuItem("ComboR_Limit"' "Save R Stack"'true).SetValue(new Slider(0' 0' 7)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("Always_Use"' "Spell after AA in AA range"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  combo.AddItem(new MenuItem("ComboR_Limit"' "Save R Stack"'true).SetValue(new Slider(0' 0' 7)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"'true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"'true).SetValue(true));                  combo.AddItem(new MenuItem("Always_Use"' "Spell after AA in AA range"'true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  combo.AddItem(new MenuItem("ComboR_Limit"' "Save R Stack"'true).SetValue(new Slider(0' 0' 7)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseRHarass"' "Use R"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  harass.AddItem(new MenuItem("HarassR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(harass' "Harass"' 50);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseRHarass"' "Use R"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  harass.AddItem(new MenuItem("HarassR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(harass' "Harass"' 50);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseRHarass"' "Use R"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  harass.AddItem(new MenuItem("HarassR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(harass' "Harass"' 50);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseRHarass"' "Use R"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  harass.AddItem(new MenuItem("HarassR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(harass' "Harass"' 50);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseRHarass"' "Use R"'true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/R HitChance"'true).SetValue(new Slider(3' 1' 3)));                  harass.AddItem(new MenuItem("HarassR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(harass' "Harass"' 50);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"'true).SetValue(false));                  farm.AddItem(new MenuItem("UseRFarm"' "Use R"'true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClearR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(farm' "LaneClear"' 50);                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"'true).SetValue(false));                  farm.AddItem(new MenuItem("UseRFarm"' "Use R"'true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClearR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(farm' "LaneClear"' 50);                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"'true).SetValue(false));                  farm.AddItem(new MenuItem("UseRFarm"' "Use R"'true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClearR_Limit"' "Save R Stack"'true).SetValue(new Slider(5' 0' 7)));                  AddManaManagertoMenu(farm' "LaneClear"' 50);                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,GetComboDamage,The following statement contains a magic number: return (float)(comboDamage + Player.GetAutoAttackDamage(target) * 3);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,UseSpells,The following statement contains a magic number: var target = TargetSelector.GetTarget(550' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Cast_R,The following statement contains a magic number: var range = Player.HasBuff("CorkiMissileBarrageCounterBig") ? 1500 : 1300;
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Cast_R,The following statement contains a magic number: var range = Player.HasBuff("CorkiMissileBarrageCounterBig") ? 1500 : 1300;
Magic Number,xSaliceReligionAIO.Champions,Corki,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Corki.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R"' true).GetValue<bool>())                  if (R.Level > 0)                      Render.Circle.DrawCircle(Player.Position' Player.HasBuff("CorkiMissileBarrageCounterBig") ? R.Range : 1300' R.IsReady() ? Color.Green : Color.Red);
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 600);
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 400);
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitKey"' "Last Hit!"'true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Combo_Switch"' "Switch mode Key"'true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Distance"' "Min range to Q"'true).SetValue(new Slider(300' 0' 600)));                      qMenu.AddItem(new MenuItem("Q_Gap_Close"' "Q Minion to Gap Close"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Incoming"' "W Block incoming Atk Always"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Tower"' "Don't W block under Tower"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_minion"' "W Block Minion"'true).SetValue(false));                      spellMenu.AddSubMenu(wMenu);                  }                  var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Reset"' "E Auto-Attack Reset"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_HP"' "R If HP <="'true).SetValue(new Slider(20)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name'true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Distance"' "Min range to Q"'true).SetValue(new Slider(300' 0' 600)));                      qMenu.AddItem(new MenuItem("Q_Gap_Close"' "Q Minion to Gap Close"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Incoming"' "W Block incoming Atk Always"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Tower"' "Don't W block under Tower"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_minion"' "W Block Minion"'true).SetValue(false));                      spellMenu.AddSubMenu(wMenu);                  }                  var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Reset"' "E Auto-Attack Reset"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_HP"' "R If HP <="'true).SetValue(new Slider(20)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name'true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Distance"' "Min range to Q"'true).SetValue(new Slider(300' 0' 600)));                      qMenu.AddItem(new MenuItem("Q_Gap_Close"' "Q Minion to Gap Close"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Incoming"' "W Block incoming Atk Always"'true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Tower"' "Don't W block under Tower"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_minion"' "W Block Minion"'true).SetValue(false));                      spellMenu.AddSubMenu(wMenu);                  }                  var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Reset"' "E Auto-Attack Reset"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_HP"' "R If HP <="'true).SetValue(new Slider(20)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name'true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name'true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"'true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"'true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  lastHit.AddItem(new MenuItem("UseQLastHit"' "Use Q"'true).SetValue(true));                  AddManaManagertoMenu(lastHit' "Lasthit"' 30);                  //add to menu                  menu.AddSubMenu(lastHit);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseQFarm_Tower"' "Do not Q under Tower"'true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"'true).SetValue(true));                  AddManaManagertoMenu(farm' "LaneClear"' 30);                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.Q)*2;
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,GetComboDamage,The following statement contains a magic number: return (float)(comboDamage + Player.GetAutoAttackDamage(target) * 3);
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q.Range) && !x.IsDead && !x.HasBuffOfType(BuffType.Invulnerability)))              {                  //Q *2                  if (Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health && Player.Distance(target.Position) < Q.Range && Q.IsReady())                  {                      Q.CastOnUnit(target' packets());                      return;                  }                  //Q                  if (Player.GetSpellDamage(target' SpellSlot.Q) > target.Health && Player.Distance(target.Position) < Q.Range && Q.IsReady())                  {                      Q.CastOnUnit(target' packets());                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,The following statement contains a magic number: var target = TargetSelector.GetTarget(Q.Range * 2' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady() && target != null)                  {                      if (Q.IsKillable(target))                          Q.CastOnUnit(target' packets());                        if (Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health)                          Q.CastOnUnit(target' packets());                        if (Environment.TickCount - Q.LastCastAttemptT > 3800)                          Q.CastOnUnit(target' packets());                        var minDistance = menu.Item("Q_Min_Distance"' true).GetValue<Slider>().Value;                        if (Player.Distance(target.Position) > Q.Range && menu.Item("Q_Gap_Close"' true).GetValue<bool>())                      {                          var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All'                              MinionTeam.NotAlly);                            Obj_AI_Base bestMinion = allMinionQ[0];                            foreach (var minion in allMinionQ)                          {                              if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range &&                                  target.Distance(minion.Position) < target.Distance(Player.Position))                                  if (target.Distance(minion.Position) < target.Distance(bestMinion.Position))                                      bestMinion = minion;                          }                      }                        if (Player.Distance(target.Position) > minDistance &&                          Player.Distance(target.Position) < Q.Range + target.BoundingRadius)                      {                          Q.CastOnUnit(target' packets());                      }                  }              }              else if (mode == 1)//Ham mode              {                  if (target == null)                      return;                    if (Q.IsReady() && Environment.TickCount - Q.LastCastAttemptT > 4000 && Player.Distance(target.Position) < Q.Range && Player.Distance(target.Position) > Player.AttackRange)                      Q.CastOnUnit(target' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady() && target != null)                  {                      if (Q.IsKillable(target))                          Q.CastOnUnit(target' packets());                        if (Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health)                          Q.CastOnUnit(target' packets());                        if (Environment.TickCount - Q.LastCastAttemptT > 3800)                          Q.CastOnUnit(target' packets());                        var minDistance = menu.Item("Q_Min_Distance"' true).GetValue<Slider>().Value;                        if (Player.Distance(target.Position) > Q.Range && menu.Item("Q_Gap_Close"' true).GetValue<bool>())                      {                          var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All'                              MinionTeam.NotAlly);                            Obj_AI_Base bestMinion = allMinionQ[0];                            foreach (var minion in allMinionQ)                          {                              if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range &&                                  target.Distance(minion.Position) < target.Distance(Player.Position))                                  if (target.Distance(minion.Position) < target.Distance(bestMinion.Position))                                      bestMinion = minion;                          }                      }                        if (Player.Distance(target.Position) > minDistance &&                          Player.Distance(target.Position) < Q.Range + target.BoundingRadius)                      {                          Q.CastOnUnit(target' packets());                      }                  }              }              else if (mode == 1)//Ham mode              {                  if (target == null)                      return;                    if (Q.IsReady() && Environment.TickCount - Q.LastCastAttemptT > 4000 && Player.Distance(target.Position) < Q.Range && Player.Distance(target.Position) > Player.AttackRange)                      Q.CastOnUnit(target' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q,The following statement contains a magic number: if (mode == 0)              {                  if (Q.IsReady() && target != null)                  {                      if (Q.IsKillable(target))                          Q.CastOnUnit(target' packets());                        if (Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health)                          Q.CastOnUnit(target' packets());                        if (Environment.TickCount - Q.LastCastAttemptT > 3800)                          Q.CastOnUnit(target' packets());                        var minDistance = menu.Item("Q_Min_Distance"' true).GetValue<Slider>().Value;                        if (Player.Distance(target.Position) > Q.Range && menu.Item("Q_Gap_Close"' true).GetValue<bool>())                      {                          var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All'                              MinionTeam.NotAlly);                            Obj_AI_Base bestMinion = allMinionQ[0];                            foreach (var minion in allMinionQ)                          {                              if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range &&                                  target.Distance(minion.Position) < target.Distance(Player.Position))                                  if (target.Distance(minion.Position) < target.Distance(bestMinion.Position))                                      bestMinion = minion;                          }                      }                        if (Player.Distance(target.Position) > minDistance &&                          Player.Distance(target.Position) < Q.Range + target.BoundingRadius)                      {                          Q.CastOnUnit(target' packets());                      }                  }              }              else if (mode == 1)//Ham mode              {                  if (target == null)                      return;                    if (Q.IsReady() && Environment.TickCount - Q.LastCastAttemptT > 4000 && Player.Distance(target.Position) < Q.Range && Player.Distance(target.Position) > Player.AttackRange)                      Q.CastOnUnit(target' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_Q_Last_Hit,The following statement contains a magic number: if (allMinionQ.Count > 0 && Q.IsReady())              {                    foreach (var minion in allMinionQ)                  {                      double dmg = Player.GetSpellDamage(minion' SpellSlot.Q);                        if (dmg > minion.Health + 35)                      {                          if (menu.Item("UseQFarm_Tower"' true).GetValue<bool>())                          {                              if (!Utility.UnderTurret(minion' true))                              {                                  Q.Cast(minion' packets());                                  return;                              }                          }                          else                              Q.Cast(minion' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Cast_R,The following statement contains a magic number: if (target != null && R.IsReady())              {                  if (Player.GetSpellDamage(target' SpellSlot.R)/                      countEnemiesNearPosition(target.ServerPosition' R.Range) >                      target.Health - Player.GetAutoAttackDamage(target)*2)                      R.CastOnUnit(target' packets());                    var rHpValue = menu.Item("R_If_HP"' true).GetValue<Slider>().Value;                  if (GetHealthPercent() <= rHpValue)                      R.CastOnUnit(target' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"'true).SetValue(new StringList(new[] { "Normal"' "Q-AA-Q-AA-Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"'true).SetValue(new StringList(new[] { "Normal"' "Q-AA-Q-AA-Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"'true).SetValue(new StringList(new[] { "Normal"' "Q-AA-Q-AA-Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"'true).SetValue(new StringList(new[] { "Normal"' "Q-AA-Q-AA-Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Game_OnGameUpdate,The following statement contains a magic number: if(Environment.TickCount - R.LastCastAttemptT < 750)                  R.Cast(dodgeHero' packets());
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (xSLxOrbwalker.IsAutoAttack(args.SData.Name) && args.Target.IsMe && Player.Distance(args.End) < 450)              {                  if (menu.Item("W_Incoming"' true).GetValue<bool>() ||                      (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady() && menu.Item("UseWCombo"' true).GetValue<bool>()) ||                      (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active && menu.Item("UseWHarass"' true).GetValue<bool>()))                  {                      if (!menu.Item("W_minion"' true).GetValue<bool>() && !(unit is Obj_AI_Hero))                          return;                        if (menu.Item("W_Tower"' true).GetValue<bool>() && Player.UnderTurret(true))                          return;                        W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > R.Range || !R.IsReady())                      return;                    if (menu.Item(args.SData.Name + "R_Dodge"' true).GetValue<bool>() && args.SData.Name == "SyndraR")                  {                      Utility.DelayAction.Add(150' () => R.CastOnUnit(unit' packets()));                      return;                  }                    if (menu.Item(args.SData.Name + "R_Dodge"' true).GetValue<bool>())                  {                      //Game.PrintChat("RAWR");                      R.Cast(unit' packets());                      dodgeHero = unit;                      R.LastCastAttemptT = Environment.TickCount;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (Player.GetSpellDamage(target' SpellSlot.R) / countEnemiesNearPosition(target.ServerPosition' R.Range) > target.Health)                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (Player.GetSpellDamage(target' SpellSlot.R) / countEnemiesNearPosition(target.ServerPosition' R.Range) > target.Health)                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,The following statement contains a magic number: if (mode == 0)                  Drawing.DrawText(wts2[0] - 20' wts2[1]' Color.White' "Normal");              else if (mode == 1)                  Drawing.DrawText(wts2[0] - 20' wts2[1]' Color.White' "Q-AA-Q-AA-Ult");
Magic Number,xSaliceReligionAIO.Champions,Fiora,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fiora.cs,Drawing_OnDraw,The following statement contains a magic number: if (mode == 0)                  Drawing.DrawText(wts2[0] - 20' wts2[1]' Color.White' "Normal");              else if (mode == 1)                  Drawing.DrawText(wts2[0] - 20' wts2[1]' Color.White' "Q-AA-Q-AA-Ult");
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 550);
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 725);
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1300);
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadSpells,The following statement contains a magic number: E.SetSkillshot(0.5f' 270f' 1300' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Flee"' "Escape with E"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 475)));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(100' 1' 400)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                         rMenu.AddItem(new MenuItem("rBestTarget"' "Shoot R to Best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                      rMenu.AddItem(new MenuItem("R_Delay"' "Delay to shoot R During Q(ms)"' true).SetValue(new Slider(100' 1' 500)));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      rMenu.AddItem(new MenuItem("ROverkill"' "R OverKill Check"' true).SetValue(false));                      rMenu.AddItem(new MenuItem("AlwaysR"' "Always Use R in Combo"' true).SetValue(true));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useE_minHit"' "Use E if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useE_minHit"' "Use E if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Mode"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Mode"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Mode"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Mode"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,GetComboDamage,The following statement contains a magic number: if (W.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.W)*3;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  damage += damage*1.2;                  damage += Player.GetSpellDamage(enemy' SpellSlot.R);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,GetComboDamage,The following statement contains a magic number: damage += Player.GetAutoAttackDamage(enemy)*3;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The following statement contains a magic number: if (source == "Combo" && Q.IsInRange(target))              {                  ActiveItems.Target = target;                    //see if killable                  if (dmg > target.Health - 50)                      ActiveItems.KillableTarget = true;                    ActiveItems.UseTargetted = true;              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The following statement contains a magic number: switch (mode)              {                  case 0://R-W-Q-E                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                            if (useE && E.IsReady())                          {                              if (ShouldCastE(target))                              {                                  CastE(target);                              }                          }                      }                      break;                    case 1://W-Q-R-E                      if (useW && W.IsReady())                      {                          if (ShouldCastW(target))                              W.Cast(packets());                      }                        if (useQ && Q.IsReady())                      {                          if (ShouldCastQ(target))                          {                              Q.CastOnUnit(target' packets());                                if (R.IsReady() && ShouldCastR(target' dmg) && useR)                              {                                   _qDelay = (int)(Player.Distance(target.Position) / 2.2);                                  _qVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * Q.Range;                                  _qLast = Environment.TickCount;                              }                          }                      }                      if (useE && E.IsReady() && !Q.IsReady())                      {                          if (ShouldCastE(target' true))                          {                              CastE(target);                          }                      }                      break;                  case 2://R-E-W-Q (Gap)                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useE && E.IsReady())                          {                              if (ShouldCastE(target' true))                              {                                  CastE(target);                                  return;                              }                          }                            if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                      }                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The following statement contains a magic number: switch (mode)              {                  case 0://R-W-Q-E                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                            if (useE && E.IsReady())                          {                              if (ShouldCastE(target))                              {                                  CastE(target);                              }                          }                      }                      break;                    case 1://W-Q-R-E                      if (useW && W.IsReady())                      {                          if (ShouldCastW(target))                              W.Cast(packets());                      }                        if (useQ && Q.IsReady())                      {                          if (ShouldCastQ(target))                          {                              Q.CastOnUnit(target' packets());                                if (R.IsReady() && ShouldCastR(target' dmg) && useR)                              {                                   _qDelay = (int)(Player.Distance(target.Position) / 2.2);                                  _qVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * Q.Range;                                  _qLast = Environment.TickCount;                              }                          }                      }                      if (useE && E.IsReady() && !Q.IsReady())                      {                          if (ShouldCastE(target' true))                          {                              CastE(target);                          }                      }                      break;                  case 2://R-E-W-Q (Gap)                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useE && E.IsReady())                          {                              if (ShouldCastE(target' true))                              {                                  CastE(target);                                  return;                              }                          }                            if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                      }                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The following statement contains a magic number: switch (mode)              {                  case 0://R-W-Q-E                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                            if (useE && E.IsReady())                          {                              if (ShouldCastE(target))                              {                                  CastE(target);                              }                          }                      }                      break;                    case 1://W-Q-R-E                      if (useW && W.IsReady())                      {                          if (ShouldCastW(target))                              W.Cast(packets());                      }                        if (useQ && Q.IsReady())                      {                          if (ShouldCastQ(target))                          {                              Q.CastOnUnit(target' packets());                                if (R.IsReady() && ShouldCastR(target' dmg) && useR)                              {                                   _qDelay = (int)(Player.Distance(target.Position) / 2.2);                                  _qVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * Q.Range;                                  _qLast = Environment.TickCount;                              }                          }                      }                      if (useE && E.IsReady() && !Q.IsReady())                      {                          if (ShouldCastE(target' true))                          {                              CastE(target);                          }                      }                      break;                  case 2://R-E-W-Q (Gap)                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useE && E.IsReady())                          {                              if (ShouldCastE(target' true))                              {                                  CastE(target);                                  return;                              }                          }                            if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                      }                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The following statement contains a magic number: switch (mode)              {                  case 0://R-W-Q-E                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                            if (useE && E.IsReady())                          {                              if (ShouldCastE(target))                              {                                  CastE(target);                              }                          }                      }                      break;                    case 1://W-Q-R-E                      if (useW && W.IsReady())                      {                          if (ShouldCastW(target))                              W.Cast(packets());                      }                        if (useQ && Q.IsReady())                      {                          if (ShouldCastQ(target))                          {                              Q.CastOnUnit(target' packets());                                if (R.IsReady() && ShouldCastR(target' dmg) && useR)                              {                                   _qDelay = (int)(Player.Distance(target.Position) / 2.2);                                  _qVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * Q.Range;                                  _qLast = Environment.TickCount;                              }                          }                      }                      if (useE && E.IsReady() && !Q.IsReady())                      {                          if (ShouldCastE(target' true))                          {                              CastE(target);                          }                      }                      break;                  case 2://R-E-W-Q (Gap)                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useE && E.IsReady())                          {                              if (ShouldCastE(target' true))                              {                                  CastE(target);                                  return;                              }                          }                            if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                      }                      break;              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: var range = E.IsReady() ? (E.Range * 2 - 50 + Q.Range) : Q.Range;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: var range = E.IsReady() ? (E.Range * 2 - 50 + Q.Range) : Q.Range;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CheckKs,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(range)).OrderByDescending(GetComboDamage))              {                  if (target != null) {                      if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                           (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health && Q.IsReady() && W.IsReady())                      {                          if (Player.Distance(target.Position) < Q.Range)                          {                              W.Cast(packets());                              Q.CastOnUnit(target' packets());                              return;                          }                          if(Player.Distance(target.Position) < range && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2 && E.IsReady())                          {                              E.Cast(target);                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () =>  E.Cast(target1));                              return;                          }                      }                          if (Player.Distance(target.Position) < Q.Range && Q.IsReady() && (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W) + Player.GetAutoAttackDamage(target) +                          (Items.HasItem(3100) ? Player.CalcDamage(target' Damage.DamageType.Magical' ActiveItems.LichDamage()) : 0)) >                          target.Health)                      {                          Q.Cast(target' packets());                          return;                      }                        if (Player.Distance(target.Position) < E.Range * 2 - 50 && E.IsReady() && E.IsKillable(target) && !target.UnderTurret() && target.CountEnemiesInRange(600) < 2)                      {                          CastE(target);                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CastR,The following statement contains a magic number: var vec = Player.ServerPosition + Vector3.Normalize(pos - Player.ServerPosition)*1200;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CastE,The following statement contains a magic number: if (Player.Spellbook.GetSpell(SpellSlot.E).Name == "fizzjumptwo" && Environment.TickCount - E.LastCastAttemptT > 50)                  E.Cast(target' packets());
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,CastE,The following statement contains a magic number: if (Player.Spellbook.GetSpell(SpellSlot.E).Name == "fizzjumptwo" && Environment.TickCount - E.LastCastAttemptT > 50)                  E.Cast(vec' packets());
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastW,The following statement contains a magic number: if (Player.Distance(target.Position) < Q.Range + 100 && Q.IsReady())                  return true;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastW,The following statement contains a magic number: if (Player.Distance(target.Position) < 250)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastE,The following statement contains a magic number: if (Player.Distance(target.Position) > menu.Item("E_Min_Dist"' true).GetValue<Slider>().Value && Player.Distance(target.Position) < E.Range*2 - 50)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastE,The following statement contains a magic number: if (Player.Distance(target.Position) > menu.Item("E_Min_Dist"' true).GetValue<Slider>().Value && Player.Distance(target.Position) < E.Range*2 - 50)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastE,The following statement contains a magic number: if (gap && Player.Distance(target.Position) < 1000)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastR,The following statement contains a magic number: if (menu.Item("ROverkill"' true).GetValue<bool>())              {                  if (dmg - Player.GetSpellDamage(target' SpellSlot.R) > target.Health + 75)                      return false;              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ShouldCastR,The following statement contains a magic number: if (dmg > target.Health - 100)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Farm,The following statement contains a magic number: List<Obj_AI_Base> allMinionsW = MinionManager.GetMinions(ObjectManager.Player.ServerPosition' 300'                  MinionTypes.All' MinionTeam.NotAlly);
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Flee,The following statement contains a magic number: if (E.IsReady())              {                  var eVec = Player.ServerPosition + Vector3.Normalize(Game.CursorPos - Player.ServerPosition)*400;                  E.Cast(eVec);              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsMe)              {                  SpellSlot castedSlot = ObjectManager.Player.GetSpellSlot(args.SData.Name);                    if (castedSlot == SpellSlot.Q)                  {                      if (R.IsReady() && Environment.TickCount - _qLast < 250)                      {                          var vec = _qVec + Vector3.Normalize(Prediction.GetPrediction((Obj_AI_Hero)args.Target' _qDelay).CastPosition - _qVec) * 600;                            var delay = menu.Item("R_Delay"' true).GetValue<Slider>().Value;                          Utility.DelayAction.Add(delay' () => R.Cast(vec' packets()));                      }                  }                  if (castedSlot == SpellSlot.E)                  {                      E.LastCastAttemptT = Environment.TickCount;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsMe)              {                  SpellSlot castedSlot = ObjectManager.Player.GetSpellSlot(args.SData.Name);                    if (castedSlot == SpellSlot.Q)                  {                      if (R.IsReady() && Environment.TickCount - _qLast < 250)                      {                          var vec = _qVec + Vector3.Normalize(Prediction.GetPrediction((Obj_AI_Hero)args.Target' _qDelay).CastPosition - _qVec) * 600;                            var delay = menu.Item("R_Delay"' true).GetValue<Slider>().Value;                          Utility.DelayAction.Add(delay' () => R.Cast(vec' packets()));                      }                  }                  if (castedSlot == SpellSlot.E)                  {                      E.LastCastAttemptT = Environment.TickCount;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "R-W-Q-E (Normal)"' "W-Q-R-E(R During Q)"' "R-E-W-Q (R->E gap)" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-W-Q-E (Normal)");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "W-Q-R-E(R During Q)");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-E-W-Q (R->E gap)");              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-W-Q-E (Normal)");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "W-Q-R-E(R During Q)");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-E-W-Q (R->E gap)");              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-W-Q-E (Normal)");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "W-Q-R-E(R During Q)");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-E-W-Q (R->E gap)");              }
Magic Number,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-W-Q-E (Normal)");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "W-Q-R-E(R During Q)");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "R-E-W-Q (R->E gap)");              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1050);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: _qCharge = new Spell(SpellSlot.Q' 1650);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: Q2 = new Spell(SpellSlot.Q' 600);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: W2 = new Spell(SpellSlot.W' 350);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 650);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: E2 = new Spell(SpellSlot.E' 240);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: Q.SetSkillshot(0.15f' 60' 1200' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: Q.SetSkillshot(0.15f' 60' 1200' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: _qCharge.SetSkillshot(0.25f' 60' 1600' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: _qCharge.SetSkillshot(0.25f' 60' 1600' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SetSpells,The following statement contains a magic number: E.SetSkillshot(0.1f' 120' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   combo.AddItem(new MenuItem("UseQCombo"' "Use Cannon Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qSpeed"' "QE Speed' Higher = Faster' Lower = Accurate"' true).SetValue(new Slider(1600' 400' 2500)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use Cannon W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use Cannon E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQComboHam"' "Use Hammer Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWComboHam"' "Use Hammer W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseEComboHam"' "Use Hammer E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R to Switch"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   combo.AddItem(new MenuItem("UseQCombo"' "Use Cannon Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qSpeed"' "QE Speed' Higher = Faster' Lower = Accurate"' true).SetValue(new Slider(1600' 400' 2500)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use Cannon W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use Cannon E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQComboHam"' "Use Hammer Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWComboHam"' "Use Hammer W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseEComboHam"' "Use Hammer E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R to Switch"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   combo.AddItem(new MenuItem("UseQCombo"' "Use Cannon Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qSpeed"' "QE Speed' Higher = Faster' Lower = Accurate"' true).SetValue(new Slider(1600' 400' 2500)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use Cannon W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use Cannon E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQComboHam"' "Use Hammer Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWComboHam"' "Use Hammer W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseEComboHam"' "Use Hammer E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R to Switch"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseQHarassHam"' "Use Q Hammer"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarassHam"' "Use W Hammer"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarassHam"' "Use E Hammer"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseRHarass"' "Use R to switch"' true).SetValue(true));                  harass.AddItem(new MenuItem("manaH"' "Mana > %"' true).SetValue(new Slider(40)));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   misc.AddItem(new MenuItem("UseInt"' "Use E to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use E for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("forceGate"' "Force Gate After Q"' true).SetValue(false));                  misc.AddItem(new MenuItem("gatePlace"' "Gate Distance"' true).SetValue(new Slider(300' 50' 600)));                  misc.AddItem(new MenuItem("UseQAlways"' "Use Q When E onCD"' true).SetValue(true));                  misc.AddItem(new MenuItem("autoE"' "EPushInCombo HP < %"' true).SetValue(new Slider(20)));                  misc.AddItem(new MenuItem("smartKS"' "Smart KS"' true).SetValue(true));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   misc.AddItem(new MenuItem("UseInt"' "Use E to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use E for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("forceGate"' "Force Gate After Q"' true).SetValue(false));                  misc.AddItem(new MenuItem("gatePlace"' "Gate Distance"' true).SetValue(new Slider(300' 50' 600)));                  misc.AddItem(new MenuItem("UseQAlways"' "Use Q When E onCD"' true).SetValue(true));                  misc.AddItem(new MenuItem("autoE"' "EPushInCombo HP < %"' true).SetValue(new Slider(20)));                  misc.AddItem(new MenuItem("smartKS"' "Smart KS"' true).SetValue(true));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   misc.AddItem(new MenuItem("UseInt"' "Use E to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use E for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("forceGate"' "Force Gate After Q"' true).SetValue(false));                  misc.AddItem(new MenuItem("gatePlace"' "Gate Distance"' true).SetValue(new Slider(300' 50' 600)));                  misc.AddItem(new MenuItem("UseQAlways"' "Use Q When E onCD"' true).SetValue(true));                  misc.AddItem(new MenuItem("autoE"' "EPushInCombo HP < %"' true).SetValue(new Slider(20)));                  misc.AddItem(new MenuItem("smartKS"' "Smart KS"' true).SetValue(true));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                   misc.AddItem(new MenuItem("UseInt"' "Use E to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use E for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("forceGate"' "Force Gate After Q"' true).SetValue(false));                  misc.AddItem(new MenuItem("gatePlace"' "Gate Distance"' true).SetValue(new Slider(300' 50' 600)));                  misc.AddItem(new MenuItem("UseQAlways"' "Use Q When E onCD"' true).SetValue(true));                  misc.AddItem(new MenuItem("autoE"' "EPushInCombo HP < %"' true).SetValue(new Slider(20)));                  misc.AddItem(new MenuItem("smartKS"' "Smart KS"' true).SetValue(true));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QExtend"' "Draw Q Cannon Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E2"' "Draw E Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("drawcds"' "Draw Cooldowns"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QExtend"' "Draw Q Cannon Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E2"' "Draw E Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("drawcds"' "Draw Cooldowns"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QExtend"' "Draw Q Cannon Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E2"' "Draw E Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("drawcds"' "Draw Cooldowns"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QExtend"' "Draw Q Cannon Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E Cannon"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E2"' "Draw E Hammer"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("drawcds"' "Draw Cooldowns"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,GetComboDamage,The following statement contains a magic number: if (_canQcd == 0 && _canEcd == 0 && Q.Level > 0 && E.Level > 0)                  damage += Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4;              else if (_canQcd == 0 && Q.Level > 0)                  damage += Player.GetSpellDamage(enemy' SpellSlot.Q);
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,GetComboDamage,The following statement contains a magic number: damage += Player.GetAutoAttackDamage(enemy)*3;
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The following statement contains a magic number: var manaPercent = Player.Mana / Player.MaxMana * 100;
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                    if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                    if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                      if (e2Target != null) {                           if (useE2 && ECheck(e2Target' useQ' useW) && Player.Distance(e2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                                  E2.Cast(q2Target' packets());                      }                  }                    var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }                    //form switch check                  if (useR)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }              else if (source == "Harass" && manaPercent > mana)              {                  if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                  if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                        if (e2Target != null)                      {                          if (useE2 && Player.Distance(q2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                              E2.Cast(q2Target' packets());                      }                  }                    //form switch check                  if (useR && q2Target != null)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                    if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                    if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                      if (e2Target != null) {                           if (useE2 && ECheck(e2Target' useQ' useW) && Player.Distance(e2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                                  E2.Cast(q2Target' packets());                      }                  }                    var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }                    //form switch check                  if (useR)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }              else if (source == "Harass" && manaPercent > mana)              {                  if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                  if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                        if (e2Target != null)                      {                          if (useE2 && Player.Distance(q2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                              E2.Cast(q2Target' packets());                      }                  }                    //form switch check                  if (useR && q2Target != null)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                    if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                    if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                      if (e2Target != null) {                           if (useE2 && ECheck(e2Target' useQ' useW) && Player.Distance(e2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                                  E2.Cast(q2Target' packets());                      }                  }                    var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }                    //form switch check                  if (useR)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }              else if (source == "Harass" && manaPercent > mana)              {                  if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                  if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                        if (e2Target != null)                      {                          if (useE2 && Player.Distance(q2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                              E2.Cast(q2Target' packets());                      }                  }                    //form switch check                  if (useR && q2Target != null)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                    if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                    if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                      if (e2Target != null) {                           if (useE2 && ECheck(e2Target' useQ' useW) && Player.Distance(e2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                                  E2.Cast(q2Target' packets());                      }                  }                    var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }                    //form switch check                  if (useR)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }              else if (source == "Harass" && manaPercent > mana)              {                  if (qTarget != null)                  {                      if (useQ && _canQcd == 0 && Player.Distance(qTarget.Position) <= _qCharge.Range && !_hammerTime)                      {                          CastQCannon(qTarget' useE);                          return;                      }                  }                  if (_hammerTime)                  {                      if (q2Target != null)                      {                          if (useW2 && Player.Distance(q2Target.Position) <= 300 && W.IsReady())                              W.Cast();                            if (useQ2 && Player.Distance(q2Target.Position) <= Q2.Range + q2Target.BoundingRadius && Q2.IsReady())                              Q2.Cast(q2Target' packets());                      }                        if (e2Target != null)                      {                          if (useE2 && Player.Distance(q2Target.Position) <= E2.Range + e2Target.BoundingRadius && E2.IsReady())                              E2.Cast(q2Target' packets());                      }                  }                    //form switch check                  if (useR && q2Target != null)                      SwitchFormCheck(q2Target' useQ' useW' useQ2' useW2' useE2);              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,ECheck,The following statement contains a magic number: var hpPercent = Player.Health / Player.MaxHealth * 100;
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,WallStun,The following statement contains a magic number: var pushedPos = pred.CastPosition + Vector3.Normalize(pred.CastPosition - Player.ServerPosition) * 350;
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,KsCheck,The following statement contains a magic number: foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qCharge.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) - 20) > enemy.Health && _canQcd == 0 && Q.GetPrediction(enemy).Hitchance >= HitChance.High && Player.Distance(enemy.ServerPosition) <= Q.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime && Q.IsReady())                          Q.Cast(enemy' packets());                  }                    //QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.4 - 20) > enemy.Health && _canQcd == 0 && _canEcd == 0 && Player.Distance(enemy.ServerPosition) <= _qCharge.Range)                  {                      if (_hammerTime && R.IsReady())                          R.Cast();                        if (!_hammerTime)                          CastQCannon(enemy' true);                  }                    //Hammer QE                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) + Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health                      && _hamEcd == 0 && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady() && E2.IsReady())                      {                          Q2.Cast(enemy' packets());                          E2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer Q                  if ((Player.GetSpellDamage(enemy' SpellSlot.Q' 1) - 20) > enemy.Health && _hamQcd == 0 && Player.Distance(enemy.ServerPosition) <= Q2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady())                          R.Cast();                        if (_hammerTime && Q2.IsReady())                      {                          Q2.Cast(enemy' packets());                          return;                      }                  }                    //Hammer E                  if ((Player.GetSpellDamage(enemy' SpellSlot.E) - 20) > enemy.Health && _hamEcd == 0 && Player.Distance(enemy.ServerPosition) <= E2.Range + enemy.BoundingRadius)                  {                      if (!_hammerTime && R.IsReady() && enemy.Health > 80)                          R.Cast();                        if (_hammerTime && E2.IsReady())                      {                          E2.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SwitchFormCheck,The following statement contains a magic number: if (target.Health > 80)              {                  //switch to hammer                  if ((_canQcd != 0 || !useQ) &&                      (_canWcd != 0 && !HyperCharged() || !useW) && R.IsReady() &&                       HammerAllReady() && !_hammerTime && Player.Distance(target.ServerPosition) < 650 &&                       (useQ2 || useW2 || useE2))                  {                      //Game.PrintChat("Hammer Time");                      R.Cast();                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,SwitchFormCheck,The following statement contains a magic number: if (target.Health > 80)              {                  //switch to hammer                  if ((_canQcd != 0 || !useQ) &&                      (_canWcd != 0 && !HyperCharged() || !useW) && R.IsReady() &&                       HammerAllReady() && !_hammerTime && Player.Distance(target.ServerPosition) < 650 &&                       (useQ2 || useW2 || useE2))                  {                      //Game.PrintChat("Hammer Time");                      R.Cast();                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,CastQCannon,The following statement contains a magic number: if (tarPred.Hitchance >= HitChance.High && _canQcd == 0 && _canEcd == 0 && useE)              {                  var gateVector = Player.Position + Vector3.Normalize(target.ServerPosition - Player.Position) * gateDis;                    if (Player.Distance(tarPred.CastPosition) < _qCharge.Range + 100)                  {                      if (E.IsReady() && _qCharge.IsReady())                      {                          E.Cast(gateVector' packets());                          _qCharge.Cast(tarPred.CastPosition' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,The following statement contains a magic number: if (unit.IsMe && !_hammerTime)              {                  if (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active)                  {                      if (_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady())                          if (useWCombo)                          {                              Orbwalking.ResetAutoAttackTimer();                              xSLxOrbwalker.ResetAutoAttackTimer();                              W.Cast();                          }                  }                    if (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active || menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active)                  {                      if (_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady() && target is Obj_AI_Hero)                          if (useWHarass)                          {                              Orbwalking.ResetAutoAttackTimer();                              xSLxOrbwalker.ResetAutoAttackTimer();                              W.Cast();                          }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,AfterAttack,The following statement contains a magic number: if (unit.IsMe && !_hammerTime)              {                  if (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active)                  {                      if (_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady())                          if (useWCombo)                          {                              Orbwalking.ResetAutoAttackTimer();                              xSLxOrbwalker.ResetAutoAttackTimer();                              W.Cast();                          }                  }                    if (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active || menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active)                  {                      if (_canWcd == 0 && Player.Distance(target.Position) < 600 && !_hammerTime && W.Level > 0 && W.IsReady() && target is Obj_AI_Hero)                          if (useWHarass)                          {                              Orbwalking.ResetAutoAttackTimer();                              xSLxOrbwalker.ResetAutoAttackTimer();                              W.Cast();                          }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("drawcds"' true).GetValue<bool>())              {                  var wts = Drawing.WorldToScreen(Player.Position);                  if (_hammerTime)                  {                        if (_canQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _canQcd.ToString("0.0"));                      if (_canWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _canWcd.ToString("0.0"));                      if (_canEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _canEcd.ToString("0.0"));                    }                  else                  {                      if (_hamQcd == 0)                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.White' "Q Ready");                      else                          Drawing.DrawText(wts[0] - 80' wts[1]' Color.Orange' "Q: " + _hamQcd.ToString("0.0"));                      if (_hamWcd == 0)                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.White' "W Ready");                      else                          Drawing.DrawText(wts[0] - 30' wts[1] + 30' Color.Orange' "W: " + _hamWcd.ToString("0.0"));                      if (_hamEcd == 0)                          Drawing.DrawText(wts[0]' wts[1]' Color.White' "E Ready");                      else                          Drawing.DrawText(wts[0]' wts[1]' Color.Orange' "E: " + _hamEcd.ToString("0.0"));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Jayce,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Jayce.cs,GameObject_OnCreate,The following statement contains a magic number: if (unit == Player.Name && name == "JayceShockBlastMis")              {                  if (menu.Item("forceGate"' true).GetValue<bool>() && _canEcd == 0 && E.IsReady())                  {                      var vec = spell.Position - Vector3.Normalize(Player.ServerPosition - spell.Position) * 100;                      E.Cast(vec' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: QMana = new []{ 20' 20 ' 26 ' 32 ' 38 ' 44 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: QMana = new []{ 20' 20 ' 26 ' 32 ' 38 ' 44 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: QMana = new []{ 20' 20 ' 26 ' 32 ' 38 ' 44 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: QMana = new []{ 20' 20 ' 26 ' 32 ' 38 ' 44 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: QMana = new []{ 20' 20 ' 26 ' 32 ' 38 ' 44 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: QMana = new []{ 20' 20 ' 26 ' 32 ' 38 ' 44 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: WMana = new []{ 100' 100' 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: WMana = new []{ 100' 100' 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: WMana = new []{ 100' 100' 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: WMana = new []{ 100' 100' 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: WMana = new []{ 100' 100' 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: WMana = new []{ 100' 100' 100' 100' 100' 100 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: EMana = new[] { 30' 30' 42' 54' 66' 78 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: EMana = new[] { 30' 30' 42' 54' 66' 78 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: EMana = new[] { 30' 30' 42' 54' 66' 78 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: EMana = new[] { 30' 30' 42' 54' 66' 78 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: EMana = new[] { 30' 30' 42' 54' 66' 78 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: EMana = new[] { 30' 30' 42' 54' 66' 78 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: RMana = new []{ 150' 150 ' 175 ' 200 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: RMana = new []{ 150' 150 ' 175 ' 200 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: RMana = new []{ 150' 150 ' 175 ' 200 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,Karthus,The following statement contains a magic number: RMana = new []{ 150' 150 ' 175 ' 200 };
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 875);
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadSpell,The following statement contains a magic number: Q2 = new Spell(SpellSlot.Q' 875);
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadSpell,The following statement contains a magic number: W = new Spell(SpellSlot.W' 1000);
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadSpell,The following statement contains a magic number: E = new Spell(SpellSlot.E' 520);
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");                  {                       //qMenu.AddItem(new MenuItem("qAA"' "Auto Q AAing target"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("qImmo"' "Auto Q Immobile"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("qDash"' "Auto Q Dashing"' true).SetValue(true));                      spells.AddSubMenu(qMenu);                  }                    //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("wTower"' "Auto W Enemy in Tower"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("wIfMana"' "Only W If Have Mana"' true).SetValue(true));                      spells.AddSubMenu(wMenu);                  }                    //E                  var eMenu = new Menu("ESpell"' "ESpell"); {                       eMenu.AddItem(new MenuItem("eManaCombo"' "Min Mana Combo"' true).SetValue(new Slider(10)));                      eMenu.AddItem(new MenuItem("eManaHarass"' "Min Mana Harass"' true).SetValue(new Slider(70)));                      spells.AddSubMenu(eMenu);                  }                    //R                  var rMenu = new Menu("RSpell"' "RSpell");                  {                      rMenu.AddItem(new MenuItem("rPing"' "Ping if Enemy Is Killable"' true).SetValue(true));                      spells.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spells);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");                  {                       //qMenu.AddItem(new MenuItem("qAA"' "Auto Q AAing target"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("qImmo"' "Auto Q Immobile"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("qDash"' "Auto Q Dashing"' true).SetValue(true));                      spells.AddSubMenu(qMenu);                  }                    //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("wTower"' "Auto W Enemy in Tower"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("wIfMana"' "Only W If Have Mana"' true).SetValue(true));                      spells.AddSubMenu(wMenu);                  }                    //E                  var eMenu = new Menu("ESpell"' "ESpell"); {                       eMenu.AddItem(new MenuItem("eManaCombo"' "Min Mana Combo"' true).SetValue(new Slider(10)));                      eMenu.AddItem(new MenuItem("eManaHarass"' "Min Mana Harass"' true).SetValue(new Slider(70)));                      spells.AddSubMenu(eMenu);                  }                    //R                  var rMenu = new Menu("RSpell"' "RSpell");                  {                      rMenu.AddItem(new MenuItem("rPing"' "Ping if Enemy Is Killable"' true).SetValue(true));                      spells.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spells);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("selected"' "Focus Selected Target"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("selected"' "Focus Selected Target"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("minMana"' "Min Mana >"' true).SetValue(new Slider(60)));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("minMana"' "Min Mana >"' true).SetValue(new Slider(60)));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("minMana"' "Min Mana >"' true).SetValue(new Slider(60)));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LoadMenu,The following statement contains a magic number: {                   drawMenu.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawMenu.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                  MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,GetComboDamage,The following statement contains a magic number: if (E.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.E) * 2;
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,The following statement contains a magic number: if (useE && E.IsReady() && Player.Distance(eTar.Position) < E.Range && ESpell.ToggleState == 1 && HasManaForE(source) && Environment.TickCount - E.LastCastAttemptT > 500)              {                  E.Cast(packets());                  E.LastCastAttemptT = Environment.TickCount;              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,GetUltDmg,The following statement contains a magic number: dmg -= target.HPRegenRate * 3.25;
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,GetUltDmg,The following statement contains a magic number: if (Items.HasItem(3155' target))              {                  dmg = dmg - 250;              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,GetUltDmg,The following statement contains a magic number: if (Items.HasItem(3155' target))              {                  dmg = dmg - 250;              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,GetUltDmg,The following statement contains a magic number: if (Items.HasItem(3156' target))              {                  dmg = dmg - 400;              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,GetUltDmg,The following statement contains a magic number: if (Items.HasItem(3156' target))              {                  dmg = dmg - 400;              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,DrawEnemyKillable,The following statement contains a magic number: foreach (                  var enemy in                      ObjectManager.Get<Obj_AI_Hero>().Where(                              x => x.IsValidTarget()))              {                  if (GetUltDmg(enemy) > enemy.Health - 30)                  {                      if (menu.Item("rPing"' true).GetValue<bool>() && Environment.TickCount - _lastPing > 15000)                      {                          Packet.S2C.Ping.Encoded(new Packet.S2C.Ping.Struct(enemy.ServerPosition.X'enemy.ServerPosition.Y' 0' 0' Packet.PingType.Normal)).Process();                          _lastPing = Environment.TickCount;                        }                      kill++;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,DrawEnemyKillable,The following statement contains a magic number: foreach (                  var enemy in                      ObjectManager.Get<Obj_AI_Hero>().Where(                              x => x.IsValidTarget()))              {                  if (GetUltDmg(enemy) > enemy.Health - 30)                  {                      if (menu.Item("rPing"' true).GetValue<bool>() && Environment.TickCount - _lastPing > 15000)                      {                          Packet.S2C.Ping.Encoded(new Packet.S2C.Ping.Struct(enemy.ServerPosition.X'enemy.ServerPosition.Y' 0' 0' Packet.PingType.Normal)).Process();                          _lastPing = Environment.TickCount;                        }                      kill++;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,DrawEnemyKillable,The following statement contains a magic number: if (kill > 0)              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  Drawing.DrawText(wts[0] - 100' wts[1]' Color.Red' "RAWR Killable with R: " + kill);              }              else              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  Drawing.DrawText(wts[0] - 100' wts[1]' Color.White' "RAWR Killable with R: " + kill);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,DrawEnemyKillable,The following statement contains a magic number: if (kill > 0)              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  Drawing.DrawText(wts[0] - 100' wts[1]' Color.Red' "RAWR Killable with R: " + kill);              }              else              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  Drawing.DrawText(wts[0] - 100' wts[1]' Color.White' "RAWR Killable with R: " + kill);              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,CheckUnderTower,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.Distance(x.Position) < W.Range && x.IsValidTarget(W.Range) && !x.IsDead && x.IsEnemy && x.IsVisible))              {                  if (enemy != null)                  {                      foreach (var turret in ObjectManager.Get<Obj_AI_Turret>())                      {                          if (turret != null && turret.IsValid && turret.IsAlly && turret.Health > 0)                          {                              if (Vector2.Distance(enemy.Position.To2D()' turret.Position.To2D()) < 750 && W.IsReady())                              {                                  var vec = enemy.ServerPosition +                                            Vector3.Normalize(enemy.ServerPosition - Player.ServerPosition) * 100;                                    W.Cast(vec' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,CheckUnderTower,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.Distance(x.Position) < W.Range && x.IsValidTarget(W.Range) && !x.IsDead && x.IsEnemy && x.IsVisible))              {                  if (enemy != null)                  {                      foreach (var turret in ObjectManager.Get<Obj_AI_Turret>())                      {                          if (turret != null && turret.IsValid && turret.IsAlly && turret.Health > 0)                          {                              if (Vector2.Distance(enemy.Position.To2D()' turret.Position.To2D()) < 750 && W.IsReady())                              {                                  var vec = enemy.ServerPosition +                                            Vector3.Normalize(enemy.ServerPosition - Player.ServerPosition) * 100;                                    W.Cast(vec' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q.Range)))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target' true);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && ESpell.ToggleState == 1 &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.Cast(packets());                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q.Range)))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          Q.Cast(target' true);                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && ESpell.ToggleState == 1 &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.Cast(packets());                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LastHitQ,The following statement contains a magic number: if (allMinionsQ.Count > 0)              {                  foreach (var minion in allMinionsQ)                  {                      var health = HealthPrediction.GetHealthPrediction(minion' 700);                        var qPred = Q2.GetCircularFarmLocation(allMinionsQ);                        if (qPred.MinionsHit == 1)                      {                          if (Player.GetSpellDamage(minion' SpellSlot.Q) - 15 > health)                              Q2.Cast(minion' packets());                      }                      else                      {                          if (Player.GetSpellDamage(minion' SpellSlot.Q' 1) - 15 > health)                              Q2.Cast(minion' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LastHitQ,The following statement contains a magic number: if (allMinionsQ.Count > 0)              {                  foreach (var minion in allMinionsQ)                  {                      var health = HealthPrediction.GetHealthPrediction(minion' 700);                        var qPred = Q2.GetCircularFarmLocation(allMinionsQ);                        if (qPred.MinionsHit == 1)                      {                          if (Player.GetSpellDamage(minion' SpellSlot.Q) - 15 > health)                              Q2.Cast(minion' packets());                      }                      else                      {                          if (Player.GetSpellDamage(minion' SpellSlot.Q' 1) - 15 > health)                              Q2.Cast(minion' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Karthus,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Karthus.cs,LastHitQ,The following statement contains a magic number: if (allMinionsQ.Count > 0)              {                  foreach (var minion in allMinionsQ)                  {                      var health = HealthPrediction.GetHealthPrediction(minion' 700);                        var qPred = Q2.GetCircularFarmLocation(allMinionsQ);                        if (qPred.MinionsHit == 1)                      {                          if (Player.GetSpellDamage(minion' SpellSlot.Q) - 15 > health)                              Q2.Cast(minion' packets());                      }                      else                      {                          if (Player.GetSpellDamage(minion' SpellSlot.Q' 1) - 15 > health)                              Q2.Cast(minion' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 725);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: Q2 = new Spell(SpellSlot.Q' 850);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: W = new Spell(SpellSlot.W' 450);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: E = new Spell(SpellSlot.E' 1050);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: R = new Spell(SpellSlot.R' 700);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: Q.SetSkillshot(0.50f' 100' 1300' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: Q.SetSkillshot(0.50f' 100' 1300' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: Q2.SetSkillshot(0.50f' 150' 1300' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: Q2.SetSkillshot(0.50f' 150' 1300' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: E.SetSkillshot(0.50f' 110' 850' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadSpell,The following statement contains a magic number: E.SetSkillshot(0.50f' 110' 850' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("rHp"' "R if HP <"' true).SetValue(new Slider(20)));                  combo.AddItem(new MenuItem("defR"' "R Self if > enemy"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("rHp"' "R if HP <"' true).SetValue(new Slider(20)));                  combo.AddItem(new MenuItem("defR"' "R Self if > enemy"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("rHp"' "R if HP <"' true).SetValue(new Slider(20)));                  combo.AddItem(new MenuItem("defR"' "R Self if > enemy"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("rHp"' "R if HP <"' true).SetValue(new Slider(20)));                  combo.AddItem(new MenuItem("defR"' "R Self if > enemy"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("rHp"' "R if HP <"' true).SetValue(new Slider(20)));                  combo.AddItem(new MenuItem("defR"' "R Self if > enemy"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("UseInt"' "Use R to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use W for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("smartKS"' "Use Smart KS System"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseHAM"' "Always use E"' true).SetValue(false));                  misc.AddItem(new MenuItem("UseEGap"' "Use E to Gap Close"' true).SetValue(true));                  misc.AddItem(new MenuItem("gapD"' "Min Distance"' true).SetValue(new Slider(600' 300' 1050)));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("UseInt"' "Use R to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use W for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("smartKS"' "Use Smart KS System"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseHAM"' "Always use E"' true).SetValue(false));                  misc.AddItem(new MenuItem("UseEGap"' "Use E to Gap Close"' true).SetValue(true));                  misc.AddItem(new MenuItem("gapD"' "Min Distance"' true).SetValue(new Slider(600' 300' 1050)));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("UseInt"' "Use R to Interrupt"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseGap"' "Use W for GapCloser"' true).SetValue(true));                  misc.AddItem(new MenuItem("smartKS"' "Use Smart KS System"' true).SetValue(true));                  misc.AddItem(new MenuItem("UseHAM"' "Always use E"' true).SetValue(false));                  misc.AddItem(new MenuItem("UseEGap"' "Use E to Gap Close"' true).SetValue(true));                  misc.AddItem(new MenuItem("gapD"' "Min Distance"' true).SetValue(new Slider(600' 300' 1050)));                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("qExtend"' "Extended Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rMode"' "Draw R Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.Q)*2;
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,UseSpells,The following statement contains a magic number: var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,UseSpells,The following statement contains a magic number: if (itemTarget != null)              {                  var dmg = GetComboDamage(itemTarget);                  ActiveItems.Target = itemTarget;                    //see if killable                  if (dmg > itemTarget.Health - 50)                      ActiveItems.KillableTarget = true;                    ActiveItems.UseTargetted = true;              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,ShouldE,The following statement contains a magic number: if (GetComboDamage(target) >= target.Health + 20)                  return true;
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CastR,The following statement contains a magic number: if (GetComboDamage(target) > target.Health + 20)              {                  R.Cast(target' packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CastR,The following statement contains a magic number: if ((Player.GetSpellDamage(target' SpellSlot.R) * 1.2) > target.Health + 20)              {                  R.Cast(target' packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CastR,The following statement contains a magic number: if ((Player.GetSpellDamage(target' SpellSlot.R) * 1.2) > target.Health + 20)              {                  R.Cast(target' packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CastR,The following statement contains a magic number: var hpPercent = Player.Health / Player.MaxHealth * 100;
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CastR,The following statement contains a magic number: if (Player.CountEnemiesInRange(300) >= rDef)              {                  R.CastOnUnit(Player' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1000) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                  {                      if (Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                  {                      if (E.IsReady() && E.GetPrediction(target).Hitchance >= HitChance.High)                      {                          E.Cast(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range && (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                  {                      if (W.IsReady())                      {                          W.Cast();                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1000) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                  {                      if (Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                  {                      if (E.IsReady() && E.GetPrediction(target).Hitchance >= HitChance.High)                      {                          E.Cast(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range && (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                  {                      if (W.IsReady())                      {                          W.Cast();                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1000) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                  {                      if (Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                  {                      if (E.IsReady() && E.GetPrediction(target).Hitchance >= HitChance.High)                      {                          E.Cast(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range && (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                  {                      if (W.IsReady())                      {                          W.Cast();                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1000) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                  {                      if (Q.IsReady())                      {                          Q.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                  {                      if (E.IsReady() && E.GetPrediction(target).Hitchance >= HitChance.High)                      {                          E.Cast(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range && (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                  {                      if (W.IsReady())                      {                          W.Cast();                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The following statement contains a magic number: var enemy = TargetSelector.GetTarget(2000' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The following statement contains a magic number: if (_eMissle == null || !enemy.IsValidTarget(2000))                  return;
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The following statement contains a magic number: if (enemy.ServerPosition.Distance(_eMissle.Position) < 110 && _eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady())              {                  E.Cast();              }              else if (_eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && menu.Item("UseEGap"' true).GetValue<bool>()                  && Player.Distance(enemy.Position) > enemy.Distance(_eMissle.Position) && E.IsReady())              {                  if (_eMissle.EndPosition.Distance(_eMissle.Position) < 400 && enemy.Distance(_eMissle.Position) < enemy.Distance(_eMissle.EndPosition))                      E.Cast();                  else if (_eMissle.Position == _eMissle.EndPosition)                      E.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,DetonateE,The following statement contains a magic number: if (enemy.ServerPosition.Distance(_eMissle.Position) < 110 && _eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && E.IsReady())              {                  E.Cast();              }              else if (_eCreated && menu.Item("ComboActive"' true).GetValue<KeyBind>().Active && menu.Item("UseEGap"' true).GetValue<bool>()                  && Player.Distance(enemy.Position) > enemy.Distance(_eMissle.Position) && E.IsReady())              {                  if (_eMissle.EndPosition.Distance(_eMissle.Position) < 400 && enemy.Distance(_eMissle.Position) < enemy.Distance(_eMissle.EndPosition))                      E.Cast();                  else if (_eMissle.Position == _eMissle.EndPosition)                      E.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,GapClose,The following statement contains a magic number: var target = TargetSelector.GetTarget(1500' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,GapClose,The following statement contains a magic number: if (!target.IsValidTarget(1500))                  return;
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LastHit,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (var minion in allMinions)                  {                      if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Damage.GetSpellDamage(Player' minion' SpellSlot.Q) - 10)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (var minion in allMinions)                  {                      if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Damage.GetSpellDamage(Player' minion' SpellSlot.Q) - 10)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (var minion in allMinions)                  {                      if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Damage.GetSpellDamage(Player' minion' SpellSlot.Q) - 10)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,Farm,The following statement contains a magic number: if (useE && E.IsReady() && !_eCreated)              {                  var ePos = E.GetLineFarmLocation(allMinionsE);                  if (ePos.MinionsHit >= 3)                      E.Cast(ePos.Position' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,Farm,The following statement contains a magic number: if (useQ && Q.IsReady())              {                  var qPos = Q.GetLineFarmLocation(allMinionsQ);                  if (qPos.MinionsHit >= 2)                      Q.Cast(qPos.Position' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,Farm,The following statement contains a magic number: if (useW && W.IsReady())              {                  var wPos = W.GetLineFarmLocation(allMinionsW);                  if (wPos.MinionsHit >= 2)                      W.Cast();              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,CheckUnderTower,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>())              {                  if (enemy.IsEnemy && Player.Distance(enemy.ServerPosition) <= R.Range)                  {                      if (ObjectManager.Get<Obj_AI_Turret>().Where(turret => turret != null && turret.IsValid && turret.IsAlly && turret.Health > 0).Any(turret => Vector2.Distance(enemy.Position.To2D()' turret.Position.To2D()) < 750 && R.IsReady()))                      {                          R.Cast(enemy' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lissandra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lissandra.cs,Game_OnGameUpdate,The following statement contains a magic number: if (menu.Item("stunMelles"' true).GetValue<KeyBind>().Active && R.IsReady())              {                  foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(200) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))                  {                      R.Cast(target);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 675);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: QExtend = new Spell(SpellSlot.Q' 1100);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 1000);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: W.SetSkillshot(0.3f' 80' 1600' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: W.SetSkillshot(0.3f' 80' 1600' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 425);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1400);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(.1f' 110' 2800' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(.1f' 110' 2800' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(true));                  AddManaManagertoMenu(farm' "LaneClear"' 30);                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("CheckPassive"' "Smart Passive"' true).SetValue(true));                  misc.AddItem(new MenuItem("smartKS"' "Use Smart KS System"' true).SetValue(true));                  misc.AddItem(new MenuItem("E_If_HP"' "Do not E If HP <="' true).SetValue(new Slider(20)));                  //add to menu                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.Q) * 2;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetComboDamage,The following statement contains a magic number: return (float)(comboDamage + Player.GetAutoAttackDamage(target) * 2);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 1)                  shots = 7.5 + 7.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 1)                  shots = 7.5 + 7.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 1)                  shots = 7.5 + 7.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 2)                  shots = 7.5 + 9 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 2)                  shots = 7.5 + 9 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 2)                  shots = 7.5 + 9 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if (R.Level == 2)                  shots = 7.5 + 9 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if(R.Level == 3 )                  shots = 7.5 + 10.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if(R.Level == 3 )                  shots = 7.5 + 10.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if(R.Level == 3 )                  shots = 7.5 + 10.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: if(R.Level == 3 )                  shots = 7.5 + 10.5 * (Player.AttackSpeedMod - .6);
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,GetShots,The following statement contains a magic number: return shots/1.4;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_Q,The following statement contains a magic number: if (target != null && target.IsValidTarget(Q.Range))              {                  if (Q.Cast(target' packets()) == Spell.CastStates.SuccessfullyCasted)                  {                      Q.LastCastAttemptT = Environment.TickCount;                      Utility.DelayAction.Add(300' () => Player.IssueOrder(GameObjectOrder.AttackUnit' target));                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_E,The following statement contains a magic number: if (Player.Distance(Game.CursorPos) < E.Range & Player.Distance(Game.CursorPos) > 150)                  vec = Game.CursorPos;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_E,The following statement contains a magic number: if (countEnemiesNearPosition(vec' 500) >= 3 && countAlliesNearPosition(vec' 400) < 3)                  return;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_E,The following statement contains a magic number: if (countEnemiesNearPosition(vec' 500) >= 3 && countAlliesNearPosition(vec' 400) < 3)                  return;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_E,The following statement contains a magic number: if (countEnemiesNearPosition(vec' 500) >= 3 && countAlliesNearPosition(vec' 400) < 3)                  return;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_E,The following statement contains a magic number: if (countEnemiesNearPosition(vec' 500) >= 3 && countAlliesNearPosition(vec' 400) < 3)                  return;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Cast_E,The following statement contains a magic number: if (vec.Distance(target.ServerPosition) < Player.AttackRange)              {                  E.Cast(vec' packets());                  Utility.DelayAction.Add(50' () => Player.IssueOrder(GameObjectOrder.AttackTo' target.ServerPosition));              }
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,PassiveCheck,The following statement contains a magic number: if (Environment.TickCount - Q.LastCastAttemptT < 500)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,PassiveCheck,The following statement contains a magic number: if (Environment.TickCount - W.LastCastAttemptT < 500)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,PassiveCheck,The following statement contains a magic number: if (Environment.TickCount - E.LastCastAttemptT < 500)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Lucian,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Lucian.cs,Farm,The following statement contains a magic number: if (useQ)              {                  var allMinions = MinionManager.GetMinions(ObjectManager.Player.Position' Q.Range' MinionTypes.All' MinionTeam.NotAlly);                  var minion = allMinions.FirstOrDefault(minionn => minionn.Distance(Player.Position) <= Q.Range && HealthPrediction.LaneClearHealthPrediction(minionn' 500) > 0);                  if (minion == null)                      return;                    Q.CastOnUnit(minion);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 500);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 950);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1700);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: R2 = new Spell(SpellSlot.R' 800);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: E.SetSkillshot(0.45f' 90' 1200' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: E.SetSkillshot(0.45f' 90' 1200' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(0.25f' 110' 2500' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: R.SetSkillshot(0.25f' 110' 2500' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: R2.SetSkillshot(0.25f' 110' 2600' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadSpells,The following statement contains a magic number: R2.SetSkillshot(0.25f' 110' 2600' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitE"' "Last hit with E!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("UseMecR"' "Force Best Mec Ult"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto_Heat"' "Use Q To generate Heat"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Over_Heat"' "Q Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Auto_Heat"' "Use W To generate Heat"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Always"' "Use W Always On Combo/Harass"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("W_Block_Spell"' "Use W On Incoming Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Auto_Heat"' "Use E To generate Heat"' true).SetValue(false));                      eMenu.AddItem(new MenuItem("E_Over_Heat"' "E Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count"' "Auto R If >= Enemy' 6 = Off"' true).SetValue(new Slider(4' 1' 6)));                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count_Combo"' "R if >= In Combo' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto_Heat"' "Use Q To generate Heat"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Over_Heat"' "Q Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Auto_Heat"' "Use W To generate Heat"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Always"' "Use W Always On Combo/Harass"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("W_Block_Spell"' "Use W On Incoming Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Auto_Heat"' "Use E To generate Heat"' true).SetValue(false));                      eMenu.AddItem(new MenuItem("E_Over_Heat"' "E Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count"' "Auto R If >= Enemy' 6 = Off"' true).SetValue(new Slider(4' 1' 6)));                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count_Combo"' "R if >= In Combo' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto_Heat"' "Use Q To generate Heat"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Over_Heat"' "Q Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Auto_Heat"' "Use W To generate Heat"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Always"' "Use W Always On Combo/Harass"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("W_Block_Spell"' "Use W On Incoming Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Auto_Heat"' "Use E To generate Heat"' true).SetValue(false));                      eMenu.AddItem(new MenuItem("E_Over_Heat"' "E Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count"' "Auto R If >= Enemy' 6 = Off"' true).SetValue(new Slider(4' 1' 6)));                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count_Combo"' "R if >= In Combo' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto_Heat"' "Use Q To generate Heat"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Over_Heat"' "Q Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Auto_Heat"' "Use W To generate Heat"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Always"' "Use W Always On Combo/Harass"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("W_Block_Spell"' "Use W On Incoming Spells"' true).SetValue(true));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Auto_Heat"' "Use E To generate Heat"' true).SetValue(false));                      eMenu.AddItem(new MenuItem("E_Over_Heat"' "E Smart OverHeat KS"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count"' "Auto R If >= Enemy' 6 = Off"' true).SetValue(new Slider(4' 1' 6)));                      rMenu.AddItem(new MenuItem("R_If_Enemy_Count_Combo"' "R if >= In Combo' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                      spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "E HitChance"' true).SetValue(new Slider(3' 1' 3)));                  combo.AddItem(new MenuItem("UseRCombos"' "Use R"' true).SetValue(false));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "E HitChance"' true).SetValue(new Slider(3' 1' 3)));                  combo.AddItem(new MenuItem("UseRCombos"' "Use R"' true).SetValue(false));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Pred"' "Draw R Best Line"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Pred"' "Draw R Best Line"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Pred"' "Draw R Best Line"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Pred"' "Draw R Best Line"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  comboDamage += GetCurrentHeat() > 50 ? Player.GetSpellDamage(target' SpellSlot.Q) * 2 : Player.GetSpellDamage(target' SpellSlot.Q);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  comboDamage += GetCurrentHeat() > 50 ? Player.GetSpellDamage(target' SpellSlot.Q) * 2 : Player.GetSpellDamage(target' SpellSlot.Q);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The following statement contains a magic number: if (E.IsReady())                  comboDamage += GetCurrentHeat() > 50 ? Player.GetSpellDamage(target' SpellSlot.E) * 1.5: Player.GetSpellDamage(target' SpellSlot.E);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The following statement contains a magic number: if (E.IsReady())                  comboDamage += GetCurrentHeat() > 50 ? Player.GetSpellDamage(target' SpellSlot.E) * 1.5: Player.GetSpellDamage(target' SpellSlot.E);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R) * 3;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Farm,The following statement contains a magic number: if (!Orbwalking.CanMove(40))                  return;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,LastHit,The following statement contains a magic number: if (!Orbwalking.CanMove(40))                  return;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldQ,The following statement contains a magic number: if (!menu.Item("Q_Over_Heat"' true).GetValue<bool>() && GetCurrentHeat() > 80)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldQ,The following statement contains a magic number: if (GetCurrentHeat() > 80 && !(Player.GetSpellDamage(target' SpellSlot.Q' 1) + Player.GetAutoAttackDamage(target) * 2 > target.Health))                  return false;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldQ,The following statement contains a magic number: if (GetCurrentHeat() > 80 && !(Player.GetSpellDamage(target' SpellSlot.Q' 1) + Player.GetAutoAttackDamage(target) * 2 > target.Health))                  return false;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldE,The following statement contains a magic number: if(E.GetPrediction(target).Hitchance < GetHitchance(source))                if (!menu.Item("E_Over_Heat"' true).GetValue<bool>() && GetCurrentHeat() > 80)                  return false;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldE,The following statement contains a magic number: if (GetCurrentHeat() > 80 && !(Player.GetSpellDamage(target' SpellSlot.E' 1) + Player.GetAutoAttackDamage(target) * 2 > target.Health))                  return false;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,ShouldE,The following statement contains a magic number: if (GetCurrentHeat() > 80 && !(Player.GetSpellDamage(target' SpellSlot.E' 1) + Player.GetAutoAttackDamage(target) * 2 > target.Health))                  return false;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,StayInDangerZone,The following statement contains a magic number: if (GetCurrentHeat() < 31 && W.IsReady() && menu.Item("W_Auto_Heat"' true).GetValue<bool>())              {                  W.Cast(packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,StayInDangerZone,The following statement contains a magic number: if (GetCurrentHeat() < 31 && Q.IsReady() && menu.Item("Q_Auto_Heat"' true).GetValue<bool>())              {                  var enemy = ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy).OrderBy(x => Player.Distance(x.Position)).FirstOrDefault();                    if(enemy != null)                      Q.Cast(enemy.ServerPosition' packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,StayInDangerZone,The following statement contains a magic number: if (GetCurrentHeat() < 31 && E.IsReady() && menu.Item("E_Auto_Heat"' true).GetValue<bool>())              {                   var enemy = ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy && !x.IsDead).OrderBy(x => Player.Distance(x.Position)).FirstOrDefault();                    if (enemy != null)                      E.Cast(enemy' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastSingleR,The following statement contains a magic number: var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastSingleR,The following statement contains a magic number: if (Player.Distance(target.Position) < 400)              {                  var midpoint = (Player.ServerPosition + pred.UnitPosition)/2;                    vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 800;                  var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                    if(!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                      CastR(vector1' vector2);              }              else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))              {                  //wall check                  if(pred.Hitchance >= HitChance.Medium)                      CastR(vector1' pred.CastPosition);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastSingleR,The following statement contains a magic number: if (Player.Distance(target.Position) < 400)              {                  var midpoint = (Player.ServerPosition + pred.UnitPosition)/2;                    vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 800;                  var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                    if(!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                      CastR(vector1' vector2);              }              else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))              {                  //wall check                  if(pred.Hitchance >= HitChance.Medium)                      CastR(vector1' pred.CastPosition);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastSingleR,The following statement contains a magic number: if (Player.Distance(target.Position) < 400)              {                  var midpoint = (Player.ServerPosition + pred.UnitPosition)/2;                    vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 800;                  var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                    if(!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                      CastR(vector1' vector2);              }              else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))              {                  //wall check                  if(pred.Hitchance >= HitChance.Medium)                      CastR(vector1' pred.CastPosition);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastSingleR,The following statement contains a magic number: if (Player.Distance(target.Position) < 400)              {                  var midpoint = (Player.ServerPosition + pred.UnitPosition)/2;                    vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 800;                  var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                    if(!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                      CastR(vector1' vector2);              }              else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))              {                  //wall check                  if(pred.Hitchance >= HitChance.Medium)                      CastR(vector1' pred.CastPosition);              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2 && forceUlt)              {                  CastSingleR();                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2 && forceUlt)              {                  CastSingleR();                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,CastMecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))              {                  //loop 2                  foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.Distance(target.Position) < 900)                      .OrderByDescending(x => x.Distance(target.Position)))                  {                      int hit = 2;                        var targetPred = Prediction.GetPrediction(target' .25f);                      var enemyPred = Prediction.GetPrediction(enemy' .25f);                        var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                        var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                      var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                        if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                      {                          //loop 3                          foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                          {                              var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                              Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                              var isOnseg = (bool)obj[2];                              var pointLine = (Vector2)obj[1];                                if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 110 && isOnseg)                              {                                  hit++;                              }                          }                      }                        if (hit > maxHit && hit > 1)                      {                          maxHit = hit;                          start = startpos;                          end = endPos;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && W.IsReady() && menu.Item("W_Block_Spell"' true).GetValue<bool>())              {                  if (Player.Distance(args.End) < 400 && GetCurrentHeat() < 70)                  {                      //Game.PrintChat("shielding");                      W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && W.IsReady() && menu.Item("W_Block_Spell"' true).GetValue<bool>())              {                  if (Player.Distance(args.End) < 400 && GetCurrentHeat() < 70)                  {                      //Game.PrintChat("shielding");                      W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_W"' true).GetValue<bool>())                  if (W.Level > 0)                      Render.Circle.DrawCircle(Player.Position' W.Range - 2' W.IsReady() ? Color.Green : Color.Red);
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Rumble,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Rumble.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Pred"' true).GetValue<bool>() && R.IsReady())              {                  if (countEnemiesNearPosition(Player.ServerPosition' R.Range + 500) < 2)                  {                      var target = TargetSelector.GetTarget(R.Range' TargetSelector.DamageType.Magical);                        if (target == null)                          return;                        var vector1 = target.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 300;                        R2.UpdateSourcePosition(vector1' vector1);                        var pred = R2.GetPrediction(target' true);                        var midpoint = (Player.ServerPosition + pred.UnitPosition) / 2;                      var vector2 = midpoint - Vector3.Normalize(pred.UnitPosition - Player.ServerPosition) * 300;                        if (Player.Distance(target.Position) < 400)                      {                          vector1 = midpoint + Vector3.Normalize(pred.UnitPosition - Player.ServerPosition)*800;                          if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' vector2))                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(vector2);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(vector2' 50' Color.Yellow);                              Render.Circle.DrawCircle(pred.UnitPosition' 50' Color.Red);                          }                      }                      else if (!IsPassWall(pred.UnitPosition' vector1) && !IsPassWall(pred.UnitPosition' pred.CastPosition))                      {                          if (pred.Hitchance >= HitChance.Medium)                          {                              Vector2 wts = Drawing.WorldToScreen(Player.Position);                              Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + 1);                                Vector2 wtsPlayer = Drawing.WorldToScreen(vector1);                              Vector2 wtsPred = Drawing.WorldToScreen(pred.CastPosition);                                Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                              Render.Circle.DrawCircle(vector1' 50' Color.Aqua);                              Render.Circle.DrawCircle(pred.CastPosition' 50' Color.Yellow);                          }                      }                      return;                  }                  //-----------------------------------------------------------------Draw Ult Mec-----------------------------------------------                  int maxHit = 0;                  Vector3 start = Vector3.Zero;                  Vector3 end = Vector3.Zero;                  Vector3 mid = Vector3.Zero;                  //loop one                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range)).OrderByDescending(GetComboDamage))                  {                      //loop 2                      foreach (                          var enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(                                      x =>                                          x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId &&                                          x.Distance(target.Position) < 900)                                  .OrderByDescending(x => x.Distance(target.Position)))                      {                          int hit = 2;                            var targetPred = Prediction.GetPrediction(target' .25f);                          var enemyPred = Prediction.GetPrediction(enemy' .25f);                            var midpoint = (enemyPred.CastPosition + targetPred.CastPosition) / 2;                            var startpos = midpoint + Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                          var endPos = midpoint - Vector3.Normalize(enemyPred.CastPosition - targetPred.CastPosition) * 600;                            if (!IsPassWall(midpoint' startpos) && !IsPassWall(midpoint' endPos) && countEnemiesNearPosition(Player.ServerPosition' R.Range + 1000) > 2)                          {                              //loop 3                              foreach (var enemy2 in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range + 1000) && x.NetworkId != target.NetworkId && x.NetworkId != enemy.NetworkId && x.Distance(target.Position) < 1000))                              {                                  var enemy2Pred = Prediction.GetPrediction(enemy2' .25f);                                    Object[] obj = VectorPointProjectionOnLineSegment(startpos.To2D()' endPos.To2D()' enemy2Pred.CastPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (pointLine.Distance(enemy2Pred.CastPosition.To2D()) < 100 + enemy2.BoundingRadius &&                                      isOnseg)                                  {                                      hit++;                                  }                              }                          }                          if (hit > maxHit)                          {                              maxHit = hit;                              start = startpos;                              end = endPos;                              mid = midpoint;                          }                      }                  }                    if (maxHit >= 2)                  {                      Vector2 wts = Drawing.WorldToScreen(Player.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Wheat' "Hit: " + maxHit);                        Vector2 wtsPlayer = Drawing.WorldToScreen(start);                      Vector2 wtsPred = Drawing.WorldToScreen(end);                        Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.Wheat);                      Render.Circle.DrawCircle(start' 50' Color.Aqua);                      Render.Circle.DrawCircle(end' 50' Color.Yellow);                      Render.Circle.DrawCircle(mid' 50' Color.Red);                  }                  //---------------------------------------------------End drawing Ult Mec---------------------------------------              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: QMana = new []{60' 60' 65' 70' 75' 80};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: QMana = new []{60' 60' 65' 70' 75' 80};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: QMana = new []{60' 60' 65' 70' 75' 80};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: QMana = new []{60' 60' 65' 70' 75' 80};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: QMana = new []{60' 60' 65' 70' 75' 80};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: QMana = new []{60' 60' 65' 70' 75' 80};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: WMana = new []{70' 70' 80' 90' 100' 110};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: WMana = new []{70' 70' 80' 90' 100' 110};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: WMana = new []{70' 70' 80' 90' 100' 110};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: WMana = new []{70' 70' 80' 90' 100' 110};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: WMana = new []{70' 70' 80' 90' 100' 110};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: WMana = new []{70' 70' 80' 90' 100' 110};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: EMana = new []{80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: EMana = new []{80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: EMana = new []{80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: EMana = new []{80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: EMana = new []{80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: EMana = new []{80' 80' 90' 100' 110' 120};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: RMana = new []{125' 125' 175' 225};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: RMana = new []{125' 125' 175' 225};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: RMana = new []{125' 125' 175' 225};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Veigar,The following statement contains a magic number: RMana = new []{125' 125' 175' 225};
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 650);
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadSpell,The following statement contains a magic number: W = new Spell(SpellSlot.W' 900);
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadSpell,The following statement contains a magic number: E = new Spell(SpellSlot.E' 1005);
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadSpell,The following statement contains a magic number: R = new Spell(SpellSlot.R' 650);
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                 drawing.AddItem(new MenuItem("manaStatus"' "Mana status"' true).SetValue(true));                   MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                 MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                 drawing.AddItem(drawComboDamageMenu);                 drawing.AddItem(drawFill);                 DamageIndicator.DamageToUnit = GetComboDamage;                 DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                 DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                 DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                 drawComboDamageMenu.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                     };                 drawFill.ValueChanged +=                     delegate(object sender' OnValueChangeEventArgs eventArgs)                     {                         DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                         DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                     };                    menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,GetComboDamage,The following statement contains a magic number: if (Items.HasItem(3155' (Obj_AI_Hero)enemy))              {                  damage = damage - 250;              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,GetComboDamage,The following statement contains a magic number: if (Items.HasItem(3155' (Obj_AI_Hero)enemy))              {                  damage = damage - 250;              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,GetComboDamage,The following statement contains a magic number: if (Items.HasItem(3156' (Obj_AI_Hero)enemy))              {                  damage = damage - 400;              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,GetComboDamage,The following statement contains a magic number: if (Items.HasItem(3156' (Obj_AI_Hero)enemy))              {                  damage = damage - 400;              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,UseSpells,The following statement contains a magic number: if (target != null && dfgMode == 0 && source == "Combo" && hasMana)              {                  ActiveItems.Target = target;                    //see if killable                  if (dmg > target.Health - 50)                  {                      ActiveItems.KillableTarget = true;                  }                  if ((menu.Item("DontDFG" + target.BaseSkinName' true) != null &&                       menu.Item("DontDFG" + target.BaseSkinName' true).GetValue<bool>() == false))                  {                      ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(700)))              {                  if (target != null)                  {                      //Q                      if (Player.Distance(target.ServerPosition) <= Q.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                      {                          if (Q.IsReady())                          {                              Q.CastOnUnit(target' packets());                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 50)                      {                          if (R.IsReady() && rTarget(target))                          {                              R.CastOnUnit(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(700)))              {                  if (target != null)                  {                      //Q                      if (Player.Distance(target.ServerPosition) <= Q.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                      {                          if (Q.IsReady())                          {                              Q.CastOnUnit(target' packets());                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 50)                      {                          if (R.IsReady() && rTarget(target))                          {                              R.CastOnUnit(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(700)))              {                  if (target != null)                  {                      //Q                      if (Player.Distance(target.ServerPosition) <= Q.Range &&                          (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                      {                          if (Q.IsReady())                          {                              Q.CastOnUnit(target' packets());                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= R.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R)) > target.Health + 50)                      {                          if (R.IsReady() && rTarget(target))                          {                              R.CastOnUnit(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,CastE,The following statement contains a magic number: if (pred.Hitchance >= HitChance.High && E.IsReady())              {                  E.Cast(castVec);                    if (menu.Item("castWonTopOfE"' true).GetValue<bool>())                      Utility.DelayAction.Add(50' () => W.Cast(pred.UnitPosition));                                    }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,CastR,The following statement contains a magic number: if (Dfg.IsReady() && R.IsReady() && Player.Distance(target.ServerPosition) < R.Range &&                  Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                  (Player.GetSpellDamage(target' SpellSlot.R) * 1.2) > target.Health + 50)              {                  Use_DFG(target);                  R.CastOnUnit(target' packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,CastR,The following statement contains a magic number: if (Dfg.IsReady() && R.IsReady() && Player.Distance(target.ServerPosition) < R.Range &&                  Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                  (Player.GetSpellDamage(target' SpellSlot.R) * 1.2) > target.Health + 50)              {                  Use_DFG(target);                  R.CastOnUnit(target' packets());                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,CastR,The following statement contains a magic number: if (dmg > target.Health + 20 && R.IsReady())              {                  R.CastOnUnit(target' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)((minion.Distance(Player.Position) / 1500) * 1000 + .25f * 1000)' 100) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)((minion.Distance(Player.Position) / 1500) * 1000 + .25f * 1000)' 100) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)((minion.Distance(Player.Position) / 1500) * 1000 + .25f * 1000)' 100) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)((minion.Distance(Player.Position) / 1500) * 1000 + .25f * 1000)' 100) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)((minion.Distance(Player.Position) / 1500) * 1000 + .25f * 1000)' 100) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          if (Q.IsReady())                          {                              Q.Cast(minion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Veigar,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Veigar.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("manaStatus"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                    Drawing.DrawText(wts[0] - 30' wts[1]' Color.White' ManaCheck2() ? "Mana Rdy" : "No Mana Full Combo");              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: QMana = new[] {40' 40' 45' 50' 55' 60};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: QMana = new[] {40' 40' 45' 50' 55' 60};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: QMana = new[] {40' 40' 45' 50' 55' 60};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: QMana = new[] {40' 40' 45' 50' 55' 60};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: QMana = new[] {40' 40' 45' 50' 55' 60};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: QMana = new[] {40' 40' 45' 50' 55' 60};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: WMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: WMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: WMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: WMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: WMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: WMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: EMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: EMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: EMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: EMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: EMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: EMana = new[] {50' 50' 55' 60' 65' 70};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: RMana = new[] {100' 100' 100' 100};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: RMana = new[] {100' 100' 100' 100};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: RMana = new[] {100' 100' 100' 100};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Velkoz,The following statement contains a magic number: RMana = new[] {100' 100' 100' 100};
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1000);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: _qSplit = new Spell(SpellSlot.Q' 800);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: _qDummy = new Spell(SpellSlot.Q' (float)Math.Sqrt(Math.Pow(Q.Range' 2) + Math.Pow(_qSplit.Range' 2)));
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: _qDummy = new Spell(SpellSlot.Q' (float)Math.Sqrt(Math.Pow(Q.Range' 2) + Math.Pow(_qSplit.Range' 2)));
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: W = new Spell(SpellSlot.W' 800);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: E = new Spell(SpellSlot.E' 850);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1500);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadSpell,The following statement contains a magic number: _qSplit.SetSkillshot(0.25f' 55f' 2100' true' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("R_Mouse"' "R To Mouse"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell"); {                      qMenu.AddItem(new MenuItem("qSplit"' "Auto Split Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("qAngle"' "Shoot Q At Angle"' true).SetValue(true));                      spell.AddSubMenu(qMenu);                  }                     //R                  var rMenu = new Menu("RSpell"' "RSpell");                  {                      rMenu.AddItem(new MenuItem("rAimer"' "R Aim"' true).SetValue(new StringList(new[] { "Auto"' "To Mouse" })));                      rMenu.AddSubMenu(new Menu("Dont use R on"' "DontUlt"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("DontUlt").AddItem(new MenuItem("DontUlt" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell"); {                      qMenu.AddItem(new MenuItem("qSplit"' "Auto Split Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("qAngle"' "Shoot Q At Angle"' true).SetValue(true));                      spell.AddSubMenu(qMenu);                  }                     //R                  var rMenu = new Menu("RSpell"' "RSpell");                  {                      rMenu.AddItem(new MenuItem("rAimer"' "R Aim"' true).SetValue(new StringList(new[] { "Auto"' "To Mouse" })));                      rMenu.AddSubMenu(new Menu("Dont use R on"' "DontUlt"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("DontUlt").AddItem(new MenuItem("DontUlt" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell"); {                      qMenu.AddItem(new MenuItem("qSplit"' "Auto Split Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("qAngle"' "Shoot Q At Angle"' true).SetValue(true));                      spell.AddSubMenu(qMenu);                  }                     //R                  var rMenu = new Menu("RSpell"' "RSpell");                  {                      rMenu.AddItem(new MenuItem("rAimer"' "R Aim"' true).SetValue(new StringList(new[] { "Auto"' "To Mouse" })));                      rMenu.AddSubMenu(new Menu("Dont use R on"' "DontUlt"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("DontUlt").AddItem(new MenuItem("DontUlt" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                      rMenu.AddItem(new MenuItem("R_Max_Dist"' "R Max Distance"' true).SetValue(new Slider(1000' 200' 1300)));                      spell.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spell);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,LoadMenu,The following statement contains a magic number: {                   draw.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  draw.AddItem(new MenuItem("drawUlt"' "Killable With ult"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  draw.AddItem(drawComboDamageMenu);                  draw.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(draw);              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetPassiveDmg,The following statement contains a magic number: double dmg = 25 + (10 * Player.Level);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetPassiveDmg,The following statement contains a magic number: double dmg = 25 + (10 * Player.Level);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetPassiveDmg,The following statement contains a magic number: if (W.IsReady())                  stack += 2;
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetPassiveDmg,The following statement contains a magic number: stack = stack / 3;
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: float dist = (Player.ServerPosition.To2D().Distance(target.ServerPosition.To2D()) - 600) / 100;
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: float dist = (Player.ServerPosition.To2D().Distance(target.ServerPosition.To2D()) - 600) / 100;
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: double div = Math.Ceiling(10 - dist);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (Player.Distance(target.Position) < 600)                  div = 10;
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (Player.Distance(target.Position) < 600)                  div = 10;
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (Player.Distance(target.Position) < 1550)                  if (R.IsReady())                  {                      double ultDmg = Player.GetSpellDamage(target' SpellSlot.R) / 10;                        dmg += ultDmg * div;                  }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (Player.Distance(target.Position) < 1550)                  if (R.IsReady())                  {                      double ultDmg = Player.GetSpellDamage(target' SpellSlot.R) / 10;                        dmg += ultDmg * div;                  }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (div >= 3)                  dmg += 25 + (10 * Player.Level);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (div >= 3)                  dmg += 25 + (10 * Player.Level);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (div >= 3)                  dmg += 25 + (10 * Player.Level);
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GetUltDmg,The following statement contains a magic number: if (menu.Item("drawUlt"' true).GetValue<bool>())              {                  if (R.IsReady() && dmg > target.Health + 20)                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.White' "Killable with Ult");                  }                  else                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      Drawing.DrawText(wts[0]' wts[1]' Color.Red' "No Ult Kill");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Farm,The following statement contains a magic number: if (useW && W.IsReady() && allMinionsW.Count > 0)              {                  MinionManager.FarmLocation wPos = W.GetLineFarmLocation(allMinionsW);                    if (wPos.MinionsHit > 2)                      W.Cast(wPos.Position' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,Farm,The following statement contains a magic number: if (useE && allMinionsE.Count > 0 && E.IsReady())              {                  MinionManager.FarmLocation ePos = E.GetCircularFarmLocation(allMinionsE);                    if (ePos.MinionsHit > 2)                      E.Cast(ePos.Position' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,The following statement contains a magic number: if (Player.Distance(target.Position) < 1050 && Q.Instance.Name == "VelkozQ")              {                  if (collision == 0)                  {                      if (pred.Hitchance >= GetHitchance(source))                      {                          Q.Cast(pred.CastPosition' packets());                      }                        return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,The following statement contains a magic number: if (Q.Instance.Name == "VelkozQ" && targetExtend != null)              {                  _qDummy.Delay = Q.Delay + Q.Range / Q.Speed * 1000 + _qSplit.Range / _qSplit.Speed * 1000;                  pred = _qDummy.GetPrediction(targetExtend);                    if (pred.Hitchance >= GetHitchance(source))                  {                      //math by esk0r <3                      for (int i = -1; i < 1; i = i + 2)                      {                          const float alpha = 28 * (float)Math.PI / 180;                          Vector2 cp = Player.ServerPosition.To2D() +                                       (pred.CastPosition.To2D() - Player.ServerPosition.To2D()).Rotated(i * alpha);                            //Render.Circle.DrawCircle(cp.To3D()' 100' Color.Blue' 1' 1);                            if (Q.GetCollision(Player.ServerPosition.To2D()' new List<Vector2> { cp }).Count == 0 &&                              _qSplit.GetCollision(cp' new List<Vector2> { pred.CastPosition.To2D() }).Count == 0)                          {                              if (Player.Distance(cp) <= R.Range)                              {                                  Q.Cast(cp' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,The following statement contains a magic number: if (Q.Instance.Name == "VelkozQ" && targetExtend != null)              {                  _qDummy.Delay = Q.Delay + Q.Range / Q.Speed * 1000 + _qSplit.Range / _qSplit.Speed * 1000;                  pred = _qDummy.GetPrediction(targetExtend);                    if (pred.Hitchance >= GetHitchance(source))                  {                      //math by esk0r <3                      for (int i = -1; i < 1; i = i + 2)                      {                          const float alpha = 28 * (float)Math.PI / 180;                          Vector2 cp = Player.ServerPosition.To2D() +                                       (pred.CastPosition.To2D() - Player.ServerPosition.To2D()).Rotated(i * alpha);                            //Render.Circle.DrawCircle(cp.To3D()' 100' Color.Blue' 1' 1);                            if (Q.GetCollision(Player.ServerPosition.To2D()' new List<Vector2> { cp }).Count == 0 &&                              _qSplit.GetCollision(cp' new List<Vector2> { pred.CastPosition.To2D() }).Count == 0)                          {                              if (Player.Distance(cp) <= R.Range)                              {                                  Q.Cast(cp' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,The following statement contains a magic number: if (Q.Instance.Name == "VelkozQ" && targetExtend != null)              {                  _qDummy.Delay = Q.Delay + Q.Range / Q.Speed * 1000 + _qSplit.Range / _qSplit.Speed * 1000;                  pred = _qDummy.GetPrediction(targetExtend);                    if (pred.Hitchance >= GetHitchance(source))                  {                      //math by esk0r <3                      for (int i = -1; i < 1; i = i + 2)                      {                          const float alpha = 28 * (float)Math.PI / 180;                          Vector2 cp = Player.ServerPosition.To2D() +                                       (pred.CastPosition.To2D() - Player.ServerPosition.To2D()).Rotated(i * alpha);                            //Render.Circle.DrawCircle(cp.To3D()' 100' Color.Blue' 1' 1);                            if (Q.GetCollision(Player.ServerPosition.To2D()' new List<Vector2> { cp }).Count == 0 &&                              _qSplit.GetCollision(cp' new List<Vector2> { pred.CastPosition.To2D() }).Count == 0)                          {                              if (Player.Distance(cp) <= R.Range)                              {                                  Q.Cast(cp' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,The following statement contains a magic number: if (Q.Instance.Name == "VelkozQ" && targetExtend != null)              {                  _qDummy.Delay = Q.Delay + Q.Range / Q.Speed * 1000 + _qSplit.Range / _qSplit.Speed * 1000;                  pred = _qDummy.GetPrediction(targetExtend);                    if (pred.Hitchance >= GetHitchance(source))                  {                      //math by esk0r <3                      for (int i = -1; i < 1; i = i + 2)                      {                          const float alpha = 28 * (float)Math.PI / 180;                          Vector2 cp = Player.ServerPosition.To2D() +                                       (pred.CastPosition.To2D() - Player.ServerPosition.To2D()).Rotated(i * alpha);                            //Render.Circle.DrawCircle(cp.To3D()' 100' Color.Blue' 1' 1);                            if (Q.GetCollision(Player.ServerPosition.To2D()' new List<Vector2> { cp }).Count == 0 &&                              _qSplit.GetCollision(cp' new List<Vector2> { pred.CastPosition.To2D() }).Count == 0)                          {                              if (Player.Distance(cp) <= R.Range)                              {                                  Q.Cast(cp' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,CastQ,The following statement contains a magic number: if (Q.Instance.Name == "VelkozQ" && targetExtend != null)              {                  _qDummy.Delay = Q.Delay + Q.Range / Q.Speed * 1000 + _qSplit.Range / _qSplit.Speed * 1000;                  pred = _qDummy.GetPrediction(targetExtend);                    if (pred.Hitchance >= GetHitchance(source))                  {                      //math by esk0r <3                      for (int i = -1; i < 1; i = i + 2)                      {                          const float alpha = 28 * (float)Math.PI / 180;                          Vector2 cp = Player.ServerPosition.To2D() +                                       (pred.CastPosition.To2D() - Player.ServerPosition.To2D()).Rotated(i * alpha);                            //Render.Circle.DrawCircle(cp.To3D()' 100' Color.Blue' 1' 1);                            if (Q.GetCollision(Player.ServerPosition.To2D()' new List<Vector2> { cp }).Count == 0 &&                              _qSplit.GetCollision(cp' new List<Vector2> { pred.CastPosition.To2D() }).Count == 0)                          {                              if (Player.Distance(cp) <= R.Range)                              {                                  Q.Cast(cp' packets());                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SplitMissle,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1500)))              {                  if (_qMissle != null)                  {                      _qSplit.UpdateSourcePosition(_qMissle.Position' _qMissle.Position);                      PredictionOutput pred = _qSplit.GetPrediction(target);                        Vector2 perpendicular = (_qMissle.EndPosition - _qMissle.StartPosition).To2D().Normalized().Perpendicular();                        Vector2 lineSegment1End = _qMissle.Position.To2D() + perpendicular * _qSplit.Range;                      Vector2 lineSegment2End = _qMissle.Position.To2D() - perpendicular * _qSplit.Range;                        float d1 = pred.UnitPosition.To2D().Distance(_qMissle.Position.To2D()' lineSegment1End' true);                      //Render.Circle.DrawCircle(lineSegment1End.To3D()' 50' Color.Blue);                      float d2 = pred.UnitPosition.To2D().Distance(_qMissle.Position.To2D()' lineSegment2End' true);                      //Render.Circle.DrawCircle(lineSegment2End.To3D()' 50' Color.Red);                        //cast split                      if ((d1 < _qSplit.Width || d2 < _qSplit.Width) && pred.Hitchance >= HitChance.Medium)                      {                          Q.Cast();                          _qMissle = null;                          //Game.PrintChat("splitted");                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(Q.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          CastQ(target' target' "Combo");                          return;                      }                  }                    //EW                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(Q.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          CastQ(target' target' "Combo");                          return;                      }                  }                    //EW                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(Q.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          CastQ(target' target' "Combo");                          return;                      }                  }                    //EW                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(Q.Range) && x.IsEnemy && !x.IsDead).OrderByDescending(GetComboDamage))              {                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range &&                      (Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 30)                  {                      if (Q.IsReady())                      {                          CastQ(target' target' "Combo");                          return;                      }                  }                    //EW                  if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target' packets());                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Velkoz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Velkoz.cs,GameObject_OnCreate,The following statement contains a magic number: if (Player.Distance(obj.Position) < 1500)              {                  //Q                  if (spell.IsValid && spell.SData.Name == "VelkozQMissile")                  {                      //Game.PrintChat("Woot");                      _qMissle = spell;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 600);
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadSpell,The following statement contains a magic number: E = new Spell(SpellSlot.E' 575);
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadSpell,The following statement contains a magic number: R = new Spell(SpellSlot.R' 700);
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadSpell,The following statement contains a magic number: R.SetSkillshot(0.25f' 175' 700' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadSpell,The following statement contains a magic number: R.SetSkillshot(0.25f' 175' 700' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitKey"' "Last Hit!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("StackE"' "StackE (toggle)!"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Killable"' "R If enemy Is killable with Combo"' true).SetValue(true));                  combo.AddItem(new MenuItem("useR_Hit"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Killable"' "R If enemy Is killable with Combo"' true).SetValue(true));                  combo.AddItem(new MenuItem("useR_Hit"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                  comboDamage += comboDamage * 1.12;              }              else if (target.HasBuff("vladimirhemoplaguedebuff"' true))              {                  comboDamage += comboDamage * 1.12;              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                  comboDamage += comboDamage * 1.12;              }              else if (target.HasBuff("vladimirhemoplaguedebuff"' true))              {                  comboDamage += comboDamage * 1.12;              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (var minion in allMinions)                  {                      if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Player.GetSpellDamage(minion' SpellSlot.Q) - 10)                      {                          Q.CastOnUnit(minion' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (var minion in allMinions)                  {                      if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Player.GetSpellDamage(minion' SpellSlot.Q) - 10)                      {                          Q.CastOnUnit(minion' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (var minion in allMinions)                  {                      if (minion.IsValidTarget() && HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) < Player.GetSpellDamage(minion' SpellSlot.Q) - 10)                      {                          Q.CastOnUnit(minion' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,CheckKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(1300)).OrderByDescending(GetComboDamage))              {                  if (Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)  > target.Health && Q.IsReady() && E.IsReady())                  {                      E.Cast(packets());                      Q.Cast(target' packets());                      return;                  }                    if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) > target.Health && Q.IsReady())                  {                      Q.Cast(target' packets());                      return;                  }                    if (Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.E) > target.Health && E.IsReady())                  {                      E.Cast(packets());                      return;                  }                    if (Player.Distance(target.ServerPosition) <= R.Range && Player.GetSpellDamage(target' SpellSlot.R) > target.Health && R.IsReady() && menu.Item("R_KS"' true).GetValue<bool>())                  {                      R.Cast(target);                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,Game_OnGameUpdate,The following statement contains a magic number: if (menu.Item("StackE"' true).GetValue<KeyBind>().Active)              {                  if (E.IsReady() && Environment.TickCount - E.LastCastAttemptT >= 9900)                      E.Cast(packets());              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (args.SData.Name == "VladimirTidesofBlood")              {                  E.LastCastAttemptT = Environment.TickCount + 250;              }
Magic Number,xSaliceReligionAIO.Champions,Vladimir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Vladimir.cs,AntiGapcloser_OnEnemyGapcloser,The following statement contains a magic number: if (W.IsReady() && gapcloser.Sender.Distance(Player.Position) < 300)                  W.Cast(packets());
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadSpell,The following statement contains a magic number: P = new Spell(SpellSlot.Q' 1470);
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadSpell,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 800);
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadSpell,The following statement contains a magic number: W = new Spell(SpellSlot.W' 825);
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadSpell,The following statement contains a magic number: E = new Spell(SpellSlot.E' 1100);
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadSpell,The following statement contains a magic number: R = new Spell(SpellSlot.R' 700);
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  //key.AddItem(new MenuItem("qAA"' "Auto Q Enemy During AA Windup"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("Escape"' "Escape with E"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Min"' "R if >= Enemies' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Min"' "R if >= Enemies' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Min"' "R if >= Enemies' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("R_Min"' "R if >= Enemies' 6 = off"' true).SetValue(new Slider(3' 1' 6)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q/E HitChance"' true).SetValue(new Slider(3' 1' 4)));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(false));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(false));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"' true).SetValue(false));                  AddManaManagertoMenu(farm' "LaneClear"' 30);                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawing.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_W"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawing.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_W"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawing.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_W"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawing.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_W"' "Draw Q"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawing.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.Q)*2;
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,GetComboDamage,The following statement contains a magic number: if (Dfg.IsReady())                  damage += Player.GetItemDamage(enemy' Damage.DamageItems.Dfg) / 1.2;
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.R) * 3;
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,GetComboDamage,The following statement contains a magic number: if (Dfg.IsReady())                  damage = damage * 1.2;
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,UseSpells,The following statement contains a magic number: if (useW)              {                  if (useE)                  {                      var pred = E.GetPrediction(target' true);                      if (pred.Hitchance >= GetHitchance(source) && E.IsReady())                      {                          E.Cast(target' packets());                          Cast_W(pred.CastPosition);                      }                  }                    //items                  if (source == "Combo")                  {                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null)                      {                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                  }                    if (useQ)                  {                      var pred = Q.GetPrediction(target);                      if (pred.Hitchance >= GetHitchance(source) && pred.CastPosition.Distance(Player.ServerPosition) < Q.Range)                      {                          Q.Cast(pred.CastPosition' packets());                          Cast_W(pred.CastPosition);                          return;                      }                  }              }              else              {                  if(useQ)                      CastBasicSkillShot(Q' Q.Range' TargetSelector.DamageType.Magical' GetHitchance(source));                    if(useE)                      CastBasicSkillShot(E' E.Range' TargetSelector.DamageType.Magical' GetHitchance(source));              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,UseSpells,The following statement contains a magic number: if (useW)              {                  if (useE)                  {                      var pred = E.GetPrediction(target' true);                      if (pred.Hitchance >= GetHitchance(source) && E.IsReady())                      {                          E.Cast(target' packets());                          Cast_W(pred.CastPosition);                      }                  }                    //items                  if (source == "Combo")                  {                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null)                      {                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                  }                    if (useQ)                  {                      var pred = Q.GetPrediction(target);                      if (pred.Hitchance >= GetHitchance(source) && pred.CastPosition.Distance(Player.ServerPosition) < Q.Range)                      {                          Q.Cast(pred.CastPosition' packets());                          Cast_W(pred.CastPosition);                          return;                      }                  }              }              else              {                  if(useQ)                      CastBasicSkillShot(Q' Q.Range' TargetSelector.DamageType.Magical' GetHitchance(source));                    if(useE)                      CastBasicSkillShot(E' E.Range' TargetSelector.DamageType.Magical' GetHitchance(source));              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Cast_W,The following statement contains a magic number: if (Environment.TickCount - E.LastCastAttemptT > 100 + Game.Ping)                  return;
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Cast_W,The following statement contains a magic number: if (W.Instance.Ammo == 1)// 1 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));              }              else if (W.Instance.Ammo == 2)// 2 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));                  Utility.DelayAction.Add(150' () => W.Cast(pos' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Cast_W,The following statement contains a magic number: if (W.Instance.Ammo == 1)// 1 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));              }              else if (W.Instance.Ammo == 2)// 2 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));                  Utility.DelayAction.Add(150' () => W.Cast(pos' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Cast_W,The following statement contains a magic number: if (W.Instance.Ammo == 1)// 1 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));              }              else if (W.Instance.Ammo == 2)// 2 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));                  Utility.DelayAction.Add(150' () => W.Cast(pos' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Cast_W,The following statement contains a magic number: if (W.Instance.Ammo == 1)// 1 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));              }              else if (W.Instance.Ammo == 2)// 2 cast              {                  Utility.DelayAction.Add(50' () => W.Cast(pos' packets()));                  Utility.DelayAction.Add(150' () => W.Cast(pos' packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,Cast_R,The following statement contains a magic number: if (GetComboDamage(target) > target.Health - 150 && pred.Hitchance >= HitChance.High)              {                  R.Cast(target);                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,RMec,The following statement contains a magic number: if (!R.IsReady() && minHit == 6)                  return;
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,CheckKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => Player.IsValidTarget(E.Range)).OrderByDescending(GetComboDamage))              {                  //QEW                  if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E) > target.Health && Q.IsReady() && E.IsReady())                  {                      E.Cast(target' packets());                      Q.Cast(target' packets());                      W.Cast(Q.GetPrediction(target).CastPosition);                      return;                  }                  //Q + plants                  if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q)*2 > target.Health && Q.IsReady() && W.IsReady())                  {                      Q.Cast(Q.GetPrediction(target).CastPosition' packets());                      W.Cast(Q.GetPrediction(target).CastPosition);                      return;                  }                  //Q                  if (Player.Distance(target.ServerPosition) <= Q.Range && Player.GetSpellDamage(target' SpellSlot.Q) > target.Health && Q.IsReady())                  {                      Q.Cast(target' packets());                      return;                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range && Player.GetSpellDamage(target' SpellSlot.E) > target.Health && E.IsReady())                  {                      E.Cast(target' packets());                      return;                  }                    //R                  if (Player.Distance(target.ServerPosition) <= R.Range && Player.GetSpellDamage(target' SpellSlot.R) > target.Health && R.IsReady() && menu.Item("R_KS"' true).GetValue<bool>())                  {                      R.Cast(target);                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zyra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zyra.cs,AntiGapcloser_OnEnemyGapcloser,The following statement contains a magic number: if (E.IsReady() && gapcloser.Sender.Distance(Player.Position) < 300)                  E.Cast(gapcloser.Sender);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 1200);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,SetSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 1050);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 475);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 3000);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,SetSpells,The following statement contains a magic number: R2 = new Spell(SpellSlot.R' 3000);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"'true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"'true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"'true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"'true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("R_Nearest_Killable"' "R Nearest Killable"'true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Force_R"' "Force R Lowest"'true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Max_Range"' "Q Max Range"'true).SetValue(new Slider(1050' 500' 1200)));                      qMenu.AddItem(new MenuItem("Auto_Q_Slow"' "Auto W Slow"'true).SetValue(true));                      qMenu.AddItem(new MenuItem("Auto_Q_Immobile"' "Auto W Immobile"'true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(                          new MenuItem("W_Max_Range"' "W Max Range Sliders"'true).SetValue(new Slider(900' 500' 1050)));                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_On_Killable"' "E if enemy Killable"'true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_On_Safe"' "E Safety check"'true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Min_Range"' "R Min Range Sliders"'true).SetValue(new Slider(300' 0' 1000)));                      rMenu.AddItem(new MenuItem("R_Max_Range"' "R Max Range Sliders"'true).SetValue(new Slider(2000' 0' 4000)));                      rMenu.AddItem(new MenuItem("R_Mec"' "R if hit >="'true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("R_Overkill_Check"' "Overkill Check"'true).SetValue(true));                        rMenu.AddSubMenu(new Menu("Don't use R on"' "Dont_R"));                      foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team)                          )                          rMenu.SubMenu("Dont_R")                              .AddItem(new MenuItem("Dont_R" + enemy.BaseSkinName' enemy.BaseSkinName'true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"'true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"'true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"'true).SetValue(true));                  AddManaManagertoMenu(farm' "LaneClear"' 30);                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"'true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"'true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"'true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"'true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"'true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_E,The following statement contains a magic number: var target = TargetSelector.GetTarget(E.Range + 500' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_E,The following statement contains a magic number: if (E.IsReady() && target != null && menu.Item("E_On_Killable"' true).GetValue<bool>())              {                  if (Player.GetSpellDamage(target' SpellSlot.E) > target.Health + 25)                  {                      if (menu.Item("E_On_Safe"' true).GetValue<bool>())                      {                          var ePos = E.GetPrediction(target);                          if (ePos.UnitPosition.CountEnemiesInRange(500) < 2)                              E.Cast(ePos.UnitPosition' packets());                      }                      else                      {                          E.Cast(target' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_E,The following statement contains a magic number: if (E.IsReady() && target != null && menu.Item("E_On_Killable"' true).GetValue<bool>())              {                  if (Player.GetSpellDamage(target' SpellSlot.E) > target.Health + 25)                  {                      if (menu.Item("E_On_Safe"' true).GetValue<bool>())                      {                          var ePos = E.GetPrediction(target);                          if (ePos.UnitPosition.CountEnemiesInRange(500) < 2)                              E.Cast(ePos.UnitPosition' packets());                      }                      else                      {                          E.Cast(target' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_E,The following statement contains a magic number: if (E.IsReady() && target != null && menu.Item("E_On_Killable"' true).GetValue<bool>())              {                  if (Player.GetSpellDamage(target' SpellSlot.E) > target.Health + 25)                  {                      if (menu.Item("E_On_Safe"' true).GetValue<bool>())                      {                          var ePos = E.GetPrediction(target);                          if (ePos.UnitPosition.CountEnemiesInRange(500) < 2)                              E.Cast(ePos.UnitPosition' packets());                      }                      else                      {                          E.Cast(target' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R_Killable,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))              {                  if (menu.Item("Dont_R" + unit.BaseSkinName' true) != null)                  {                      if (!menu.Item("Dont_R" + unit.BaseSkinName' true).GetValue<bool>())                      {                          var health = unit.Health + unit.HPRegenRate * 3 + 25;                          if (Get_R_Dmg(unit) > health)                          {                              R.Cast(unit' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R_Killable,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))              {                  if (menu.Item("Dont_R" + unit.BaseSkinName' true) != null)                  {                      if (!menu.Item("Dont_R" + unit.BaseSkinName' true).GetValue<bool>())                      {                          var health = unit.Health + unit.HPRegenRate * 3 + 25;                          if (Get_R_Dmg(unit) > health)                          {                              R.Cast(unit' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Cast_R_Killable,The following statement contains a magic number: foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))              {                  if (menu.Item("Dont_R" + unit.BaseSkinName' true) != null)                  {                      if (!menu.Item("Dont_R" + unit.BaseSkinName' true).GetValue<bool>())                      {                          var health = unit.Health + unit.HPRegenRate * 3 + 25;                          if (Get_R_Dmg(unit) > health)                          {                              R.Cast(unit' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Get_R_Dmg,The following statement contains a magic number: if (collisionCount >= 7)                  dmg = dmg * .3;              else if (collisionCount != 0)                  dmg = dmg * ((10 - collisionCount) / 10);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Get_R_Dmg,The following statement contains a magic number: if (collisionCount >= 7)                  dmg = dmg * .3;              else if (collisionCount != 0)                  dmg = dmg * ((10 - collisionCount) / 10);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Get_R_Dmg,The following statement contains a magic number: if (collisionCount >= 7)                  dmg = dmg * .3;              else if (collisionCount != 0)                  dmg = dmg * ((10 - collisionCount) / 10);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Get_R_Dmg,The following statement contains a magic number: if (collisionCount >= 7)                  dmg = dmg * .3;              else if (collisionCount != 0)                  dmg = dmg * ((10 - collisionCount) / 10);
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      var health = unit.Health + unit.HPRegenRate * 3 + 25;                      if (Get_R_Dmg(unit) > health)                      {                          Vector2 wts = Drawing.WorldToScreen(unit.Position);                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      var health = unit.Health + unit.HPRegenRate * 3 + 25;                      if (Get_R_Dmg(unit) > health)                      {                          Vector2 wts = Drawing.WorldToScreen(unit.Position);                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      var health = unit.Health + unit.HPRegenRate * 3 + 25;                      if (Get_R_Dmg(unit) > health)                      {                          Vector2 wts = Drawing.WorldToScreen(unit.Position);                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Ezreal,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Ezreal.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(20000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      var health = unit.Health + unit.HPRegenRate * 3 + 25;                      if (Get_R_Dmg(unit) > health)                      {                          Vector2 wts = Drawing.WorldToScreen(unit.Position);                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 650);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 425);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1000);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitKey"' "Last Hit!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Distance"' "Min range to Q"' true).SetValue(new Slider(300' 0' 600)));                      qMenu.AddItem(new MenuItem("Q_Gap_Close"' "Q Minion to Gap Close"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Under_Tower"' "Q Enemy Under Tower"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Only_Stun"' "Save E to Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Running"' "E On Running Enemy"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_HP"' "R If HP <="' true).SetValue(new Slider(20)));                      //rMenu.AddItem(new MenuItem("R_Wait_Sheen"' "Wait for Sheen"' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Distance"' "Min range to Q"' true).SetValue(new Slider(300' 0' 600)));                      qMenu.AddItem(new MenuItem("Q_Gap_Close"' "Q Minion to Gap Close"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Under_Tower"' "Q Enemy Under Tower"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Only_Stun"' "Save E to Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Running"' "E On Running Enemy"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_HP"' "R If HP <="' true).SetValue(new Slider(20)));                      //rMenu.AddItem(new MenuItem("R_Wait_Sheen"' "Wait for Sheen"' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Min_Distance"' "Min range to Q"' true).SetValue(new Slider(300' 0' 600)));                      qMenu.AddItem(new MenuItem("Q_Gap_Close"' "Q Minion to Gap Close"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_Under_Tower"' "Q Enemy Under Tower"' true).SetValue(false));                      spellMenu.AddSubMenu(qMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Only_Stun"' "Save E to Stun"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Running"' "E On Running Enemy"' true).SetValue(true));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_HP"' "R If HP <="' true).SetValue(new Slider(20)));                      //rMenu.AddItem(new MenuItem("R_Wait_Sheen"' "Wait for Sheen"' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                    menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  lastHit.AddItem(new MenuItem("UseQLastHit"' "Use Q"' true).SetValue(true));                  AddManaManagertoMenu(lastHit' "Lasthit"' 30);                  //add to menu                  menu.AddSubMenu(lastHit);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                  //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,GetComboDamage,The following statement contains a magic number: if (W.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.W) * 4;
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R) * 4;
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,GetComboDamage,The following statement contains a magic number: return (float)(comboDamage + Player.GetAutoAttackDamage(target) * 4);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,GetComboDmgPercent,The following statement contains a magic number: var predHpPercent = predHp / target.MaxHealth * 100;
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The following statement contains a magic number: var target = TargetSelector.GetTarget(Q.Range * 2' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The following statement contains a magic number: if (Q.IsReady() && target != null)              {                  if (Q.IsKillable(target))                      Q.Cast(target' packets());                    if (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E) > target.Health)                      Q.Cast(target);                    var minDistance = menu.Item("Q_Min_Distance"' true).GetValue<Slider>().Value;                    if (!menu.Item("Q_Under_Tower"' true).GetValue<bool>())                      if (target.UnderTurret(true))                          return;                    if (Player.Distance(target.Position) > Q.Range / 2 && menu.Item("Q_Gap_Close"' true).GetValue<bool>())                  {                      var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.NotAlly);                        Obj_AI_Base bestMinion = allMinionQ[0];                        foreach (var minion in allMinionQ)                      {                          double dmg = 0;                            dmg += Player.GetSpellDamage(minion' SpellSlot.Q);                          if (W.IsReady() || Player.HasBuff("ireliahitenstylecharged"' true))                              dmg += Player.GetSpellDamage(minion' SpellSlot.W);                            if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range && target.Distance(minion.Position) < target.Distance(Player.Position) && dmg > minion.Health + 40)                              if (target.Distance(minion.Position) < target.Distance(bestMinion.Position))                                  bestMinion = minion;                      }                        //check if can Q without activating                      if (bestMinion != null)                      {                          if (target.Distance(bestMinion.Position) < Q.Range && Player.Distance(bestMinion.Position) < Q.Range)                          {                              var dmg2 = Player.GetSpellDamage(bestMinion' SpellSlot.Q);                                if (dmg2 > bestMinion.Health + 40)                              {                                  Q.Cast(bestMinion' packets());                                  return;                              }                                if (W.IsReady() || Player.HasBuff("ireliahitenstylecharged"' true))                                  dmg2 += Player.GetSpellDamage(bestMinion' SpellSlot.W);                                if (dmg2 > bestMinion.Health)                              {                                  W.Cast(packets());                                  Q.Cast(bestMinion' packets());                                  return;                              }                          }                      }                  }                    if (Player.Distance(target.Position) > minDistance && Player.Distance(target.Position) < Q.Range + target.BoundingRadius)                  {                      Q.Cast(target' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The following statement contains a magic number: if (Q.IsReady() && target != null)              {                  if (Q.IsKillable(target))                      Q.Cast(target' packets());                    if (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E) > target.Health)                      Q.Cast(target);                    var minDistance = menu.Item("Q_Min_Distance"' true).GetValue<Slider>().Value;                    if (!menu.Item("Q_Under_Tower"' true).GetValue<bool>())                      if (target.UnderTurret(true))                          return;                    if (Player.Distance(target.Position) > Q.Range / 2 && menu.Item("Q_Gap_Close"' true).GetValue<bool>())                  {                      var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.NotAlly);                        Obj_AI_Base bestMinion = allMinionQ[0];                        foreach (var minion in allMinionQ)                      {                          double dmg = 0;                            dmg += Player.GetSpellDamage(minion' SpellSlot.Q);                          if (W.IsReady() || Player.HasBuff("ireliahitenstylecharged"' true))                              dmg += Player.GetSpellDamage(minion' SpellSlot.W);                            if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range && target.Distance(minion.Position) < target.Distance(Player.Position) && dmg > minion.Health + 40)                              if (target.Distance(minion.Position) < target.Distance(bestMinion.Position))                                  bestMinion = minion;                      }                        //check if can Q without activating                      if (bestMinion != null)                      {                          if (target.Distance(bestMinion.Position) < Q.Range && Player.Distance(bestMinion.Position) < Q.Range)                          {                              var dmg2 = Player.GetSpellDamage(bestMinion' SpellSlot.Q);                                if (dmg2 > bestMinion.Health + 40)                              {                                  Q.Cast(bestMinion' packets());                                  return;                              }                                if (W.IsReady() || Player.HasBuff("ireliahitenstylecharged"' true))                                  dmg2 += Player.GetSpellDamage(bestMinion' SpellSlot.W);                                if (dmg2 > bestMinion.Health)                              {                                  W.Cast(packets());                                  Q.Cast(bestMinion' packets());                                  return;                              }                          }                      }                  }                    if (Player.Distance(target.Position) > minDistance && Player.Distance(target.Position) < Q.Range + target.BoundingRadius)                  {                      Q.Cast(target' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q,The following statement contains a magic number: if (Q.IsReady() && target != null)              {                  if (Q.IsKillable(target))                      Q.Cast(target' packets());                    if (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E) > target.Health)                      Q.Cast(target);                    var minDistance = menu.Item("Q_Min_Distance"' true).GetValue<Slider>().Value;                    if (!menu.Item("Q_Under_Tower"' true).GetValue<bool>())                      if (target.UnderTurret(true))                          return;                    if (Player.Distance(target.Position) > Q.Range / 2 && menu.Item("Q_Gap_Close"' true).GetValue<bool>())                  {                      var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' Q.Range' MinionTypes.All' MinionTeam.NotAlly);                        Obj_AI_Base bestMinion = allMinionQ[0];                        foreach (var minion in allMinionQ)                      {                          double dmg = 0;                            dmg += Player.GetSpellDamage(minion' SpellSlot.Q);                          if (W.IsReady() || Player.HasBuff("ireliahitenstylecharged"' true))                              dmg += Player.GetSpellDamage(minion' SpellSlot.W);                            if (target.Distance(minion.Position) < Q.Range && Player.Distance(minion.Position) < Q.Range && target.Distance(minion.Position) < target.Distance(Player.Position) && dmg > minion.Health + 40)                              if (target.Distance(minion.Position) < target.Distance(bestMinion.Position))                                  bestMinion = minion;                      }                        //check if can Q without activating                      if (bestMinion != null)                      {                          if (target.Distance(bestMinion.Position) < Q.Range && Player.Distance(bestMinion.Position) < Q.Range)                          {                              var dmg2 = Player.GetSpellDamage(bestMinion' SpellSlot.Q);                                if (dmg2 > bestMinion.Health + 40)                              {                                  Q.Cast(bestMinion' packets());                                  return;                              }                                if (W.IsReady() || Player.HasBuff("ireliahitenstylecharged"' true))                                  dmg2 += Player.GetSpellDamage(bestMinion' SpellSlot.W);                                if (dmg2 > bestMinion.Health)                              {                                  W.Cast(packets());                                  Q.Cast(bestMinion' packets());                                  return;                              }                          }                      }                  }                    if (Player.Distance(target.Position) > minDistance && Player.Distance(target.Position) < Q.Range + target.BoundingRadius)                  {                      Q.Cast(target' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_Q_Last_Hit,The following statement contains a magic number: if (allMinionQ.Count > 0 && Q.IsReady())              {                    foreach (var minion in allMinionQ)                  {                      double dmg = Player.GetSpellDamage(minion' SpellSlot.Q);                        if (Player.HasBuff("ireliahitenstylecharged"' true))                          dmg += Player.GetSpellDamage(minion' SpellSlot.W);                          if (dmg > minion.Health + 35)                      {                          if (menu.Item("UseQFarm_Tower"' true).GetValue<bool>())                          {                              if (!Utility.UnderTurret(minion' true))                              {                                  Q.Cast(minion' packets());                                  return;                              }                          }                          else                              Q.Cast(minion' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_W,The following statement contains a magic number: var target = TargetSelector.GetTarget(200' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_W,The following statement contains a magic number: if (GetTargetFocus(200) != null)                  target = GetTargetFocus(200);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_W,The following statement contains a magic number: if (GetTargetFocus(200) != null)                  target = GetTargetFocus(200);
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_E,The following statement contains a magic number: if (target != null && E.IsReady())              {                  if (E.IsKillable(target))                      E.Cast(target' packets());                    if (menu.Item("E_Only_Stun"' true).GetValue<bool>())                  {                      var targetHealthPercent = target.Health / target.MaxHealth * 100;                        if (GetHealthPercent() < targetHealthPercent)                      {                          E.Cast(target' packets());                          return;                      }                  }                    if (menu.Item("E_Running"' true).GetValue<bool>())                  {                      var pred = Prediction.GetPrediction(target' 1f);                        if (Player.Distance(target.Position) < Player.Distance(pred.UnitPosition) && Player.Distance(target.Position) > 200)                          E.Cast(target' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_E,The following statement contains a magic number: if (target != null && E.IsReady())              {                  if (E.IsKillable(target))                      E.Cast(target' packets());                    if (menu.Item("E_Only_Stun"' true).GetValue<bool>())                  {                      var targetHealthPercent = target.Health / target.MaxHealth * 100;                        if (GetHealthPercent() < targetHealthPercent)                      {                          E.Cast(target' packets());                          return;                      }                  }                    if (menu.Item("E_Running"' true).GetValue<bool>())                  {                      var pred = Prediction.GetPrediction(target' 1f);                        if (Player.Distance(target.Position) < Player.Distance(pred.UnitPosition) && Player.Distance(target.Position) > 200)                          E.Cast(target' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Cast_R,The following statement contains a magic number: if (target != null && R.IsReady())              {                  if (!Player.HasBuff("IreliaTranscendentBlades"))                  {                      if (GetComboDmgPercent(target) < 25)                          R.Cast(target' packets());                        var rHpValue = menu.Item("R_If_HP"' true).GetValue<Slider>().Value;                      if (GetHealthPercent() <= rHpValue)                          R.Cast(target' packets());                  }                  else if (Player.HasBuff("IreliaTranscendentBlades"))                  {                      R.Cast(target' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Interrupter_OnPosibleToInterrupt,The following statement contains a magic number: if (menu.Item("QE_Interrupt"' true).GetValue<bool>())              {                  var enemyHp = unit.Health / unit.MaxHealth * 100;                  if (GetHealthPercent() > enemyHp)                      return;                    if (unit.IsValidTarget(E.Range))                      E.Cast(unit' packets());                    if (unit.IsValidTarget(Q.Range))                  {                      Q.Cast(unit' packets());                      E.Cast(unit' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (GetComboDmgPercent(target) < 30 && R.IsReady())                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                        var enemyhp = target.Health / target.MaxHealth * 100;                      if (GetHealthPercent() < enemyhp && E.IsReady())                          Drawing.DrawText(wts[0] - 20' wts[1] - 30' Color.White' "Stunnable");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (GetComboDmgPercent(target) < 30 && R.IsReady())                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                        var enemyhp = target.Health / target.MaxHealth * 100;                      if (GetHealthPercent() < enemyhp && E.IsReady())                          Drawing.DrawText(wts[0] - 20' wts[1] - 30' Color.White' "Stunnable");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (GetComboDmgPercent(target) < 30 && R.IsReady())                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                        var enemyhp = target.Health / target.MaxHealth * 100;                      if (GetHealthPercent() < enemyhp && E.IsReady())                          Drawing.DrawText(wts[0] - 20' wts[1] - 30' Color.White' "Stunnable");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (GetComboDmgPercent(target) < 30 && R.IsReady())                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                        var enemyhp = target.Health / target.MaxHealth * 100;                      if (GetHealthPercent() < enemyhp && E.IsReady())                          Drawing.DrawText(wts[0] - 20' wts[1] - 30' Color.White' "Stunnable");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (GetComboDmgPercent(target) < 30 && R.IsReady())                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                        var enemyhp = target.Health / target.MaxHealth * 100;                      if (GetHealthPercent() < enemyhp && E.IsReady())                          Drawing.DrawText(wts[0] - 20' wts[1] - 30' Color.White' "Stunnable");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Irelia,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Irelia.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>())              {                  foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(5000) && !x.IsDead && x.IsEnemy).OrderBy(x => x.Health))                  {                      Vector2 wts = Drawing.WorldToScreen(target.Position);                      if (GetComboDmgPercent(target) < 30 && R.IsReady())                      {                          Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                        }                        var enemyhp = target.Health / target.MaxHealth * 100;                      if (GetHealthPercent() < enemyhp && E.IsReady())                          Drawing.DrawText(wts[0] - 20' wts[1] - 30' Color.White' "Stunnable");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SetUpSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 675);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SetUpSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 375);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SetUpSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 700);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SetUpSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 550);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SetUpSpells,The following statement contains a magic number: Q.SetTargetted(400' 1400);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SetUpSpells,The following statement contains a magic number: Q.SetTargetted(400' 1400);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("jFarm"' "Jungle Farm"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("lastHit"' "Lasthit!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Wardjump"' "Escape/Ward jump"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("eDis"' "E only if >"' true).SetValue(new Slider(0' 0' 700)));                  combo.AddItem(new MenuItem("smartE"' "Smart E with R CD "' true).SetValue(false));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("comboMode"' "Mode"' true).SetValue(new StringList(new[] {"QEW"' "EQW"})));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  harass.AddItem(new MenuItem("harassMode"' "Mode"' true).SetValue(new StringList(new[] {"QEW"' "EQW"' "QW"}' 2)));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  misc.AddItem(new MenuItem("autoWz"' "Auto W Enemy"' true).SetValue(true));                  misc.AddItem(new MenuItem("E_Delay_Slider"' "Delay Between E(ms)"' true).SetValue(new Slider(0' 0' 1000)));                  //add to menu                  menu.AddSubMenu(misc);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LoadMenu,The following statement contains a magic number: {                  drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("Draw_Mode"' "Draw E Mode"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawing.AddItem(drawComboDamageMenu);                  drawing.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady() || (RSpell.State == SpellState.Surpressed && R.Level > 0))                  damage += Player.GetSpellDamage(enemy' SpellSlot.R) * 8;
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Combo,The following statement contains a magic number: if (!target.HasBuffOfType(BuffType.Invulnerability) && !target.IsZombie)              {                  if (mode == 0) //qwe                  {                      //items                                            var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                                              if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                           Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                  }                  else if (mode == 1) //eqw                  {                      //items                      var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                      if (itemTarget != null && E.IsReady())                      {                          var dmg = GetComboDamage(itemTarget);                          ActiveItems.Target = itemTarget;                            //see if killable                          if (dmg > itemTarget.Health - 50)                              ActiveItems.KillableTarget = true;                            ActiveItems.UseTargetted = true;                      }                        if (useE && E.IsReady() && Player.Distance(target.Position) < E.Range && Environment.TickCount - E.LastCastAttemptT > 0 &&                          Player.Distance(target.Position) > eDis)                      {                          if (menu.Item("smartE"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) > 2 &&                              (!R.IsReady() || !(RSpell.State == SpellState.Surpressed && R.Level > 0)))                              return;                            var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                          E.Cast(target' packets());                          E.LastCastAttemptT = Environment.TickCount + delay;                      }                        if (useQ && Q.IsReady() && Player.Distance(target.Position) <= Q.Range)                      {                          Q.Cast(target' packets());                      }                  }                    if (useW && W.IsReady() && Player.Distance(target.Position) <= W.Range)                  {                      W.Cast();                  }                    if (useR && R.IsReady() &&                      countEnemiesNearPosition(Player.ServerPosition' R.Range) > 0)                  {                      if (!Q.IsReady() && !E.IsReady() && !W.IsReady())                          R.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,Harass,The following statement contains a magic number: if (mode == 0) //qwe              {                  if (useQ && Q.IsReady() && qTarget != null)                  {                      if (Player.Distance(qTarget.Position) <= Q.Range)                          Q.Cast(qTarget' packets());                  }                    if (useE && eTarget != null && E.IsReady())                  {                      if (Player.Distance(eTarget.Position) < E.Range)                          E.Cast(eTarget' packets());                  }              }              else if (mode == 1) //eqw              {                  if (useE && eTarget != null && E.IsReady())                  {                      if (Player.Distance(eTarget.Position) < E.Range)                          E.Cast(eTarget' packets());                  }                    if (useQ && Q.IsReady() && qTarget != null)                  {                      if (Player.Distance(qTarget.Position) <= Q.Range)                          Q.Cast(qTarget' packets());                  }              }              else if (mode == 2)              {                  if (useQ && Q.IsReady() && qTarget != null)                  {                      if (Player.Distance(qTarget.Position) <= Q.Range)                          Q.Cast(qTarget' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LastHit,The following statement contains a magic number: if (Q.IsReady() && useQ)              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget(Q.Range) &&                          HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          Q.CastOnUnit(minion' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LastHit,The following statement contains a magic number: if (Q.IsReady() && useQ)              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget(Q.Range) &&                          HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          Q.CastOnUnit(minion' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LastHit,The following statement contains a magic number: if (Q.IsReady() && useQ)              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget(Q.Range) &&                          HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 35)                      {                          Q.CastOnUnit(minion' packets());                          return;                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,LastHit,The following statement contains a magic number: if (W.IsReady() && useW)              {                  if (allMinions.Where(minion => minion.IsValidTarget(W.Range) && minion.Health < Player.GetSpellDamage(minion' SpellSlot.W) - 35).Any(minion => Player.Distance(minion.ServerPosition) < W.Range))                  {                      W.Cast();                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: if (menu.Item("rCancel"' true).GetValue<bool>() && countEnemiesNearPosition(Player.ServerPosition' 570) > 1)                  return;
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(1375) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      var delay = menu.Item("E_Delay_Slider"' true).GetValue<Slider>().Value;                      bool shouldE = !menu.Item("KS_With_E"' true).GetValue<KeyBind>().Active && Environment.TickCount - E.LastCastAttemptT > 0;                      //QEW                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.Q' 1) +                            Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              return;                          }                      }                        //E + W                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                          target.Health + 20)                      {                          if (E.IsReady() && W.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              if (Player.Distance(target.ServerPosition) < W.Range)                                  W.Cast();                              //Game.PrintChat("ks 5");                              return;                          }                      }                        //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              Q.Cast(target' packets());                              //Game.PrintChat("ks 6");                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (Q.IsReady() && Player.Distance(target.ServerPosition) <= Q.Range)                          {                              CancelUlt(target);                              Q.Cast(target' packets());                              //Game.PrintChat("ks 7");                              return;                          }                          if (Q.IsReady() && E.IsReady() && Player.Distance(target.ServerPosition) <= 1375 &&                              menu.Item("wardKs"' true).GetValue<bool>() &&                              countEnemiesNearPosition(target.ServerPosition' 500) < 3)                          {                              CancelUlt(target);                              JumpKs(target);                              //Game.PrintChat("wardKS!!!!!");                              return;                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && shouldE &&                          (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20)                      {                          if (E.IsReady())                          {                              CancelUlt(target);                              E.Cast(target' packets());                              E.LastCastAttemptT = Environment.TickCount + delay;                              //Game.PrintChat("ks 8");                              return;                          }                      }                        //R                      if (Player.Distance(target.ServerPosition) <= E.Range &&                          (Player.GetSpellDamage(target' SpellSlot.R) * 5) > target.Health + 20 &&                          menu.Item("rKS"' true).GetValue<bool>())                      {                          if (R.IsReady())                          {                              R.Cast();                              //Game.PrintChat("ks 8");                              return;                          }                      }                      if (menu.Item("dfgKS"' true).GetValue<bool>())                      {                          //dfg                          if (Dfg.IsReady() && Player.GetItemDamage(target' Damage.DamageItems.Dfg) > target.Health + 20 &&                              Player.Distance(target.ServerPosition) <= 750)                          {                              Items.UseItem(Dfg.Id' target);                              //Game.PrintChat("ks 1");                              return;                          }                            //dfg + q                          if (Player.Distance(target.ServerPosition) <= Q.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.Q))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && Q.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  Q.Cast(target' packets());                                  //Game.PrintChat("ks 2");                                  return;                              }                          }                            //dfg + e                          if (Player.Distance(target.ServerPosition) <= E.Range &&                              (Player.GetItemDamage(target' Damage.DamageItems.Dfg) +                               (Player.GetSpellDamage(target' SpellSlot.E))*1.2) > target.Health + 20)                          {                              if (Dfg.IsReady() && E.IsReady())                              {                                  Items.UseItem(Dfg.Id' target);                                  CancelUlt(target);                                  E.Cast(target' packets());                                  E.LastCastAttemptT = Environment.TickCount + delay;                                  //Game.PrintChat("ks 3");                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,ShouldCancel,The following statement contains a magic number: if (countEnemiesNearPosition(Player.ServerPosition' 600) < 1)              {                  var target = TargetSelector.GetTarget(E.Range' TargetSelector.DamageType.Magical);                    if (target == null)                      return;                    R.LastCastAttemptT = 0;                  Player.IssueOrder(GameObjectOrder.MoveTo' target);                  xSLxOrbwalker.R.LastCastAttemptT = 0;              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,JumpKs,The following statement contains a magic number: if (E.IsReady() && Q.IsReady())              {                  Vector3 position = Player.ServerPosition +                                     Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * 590;                    if (target.Distance(position) < Q.Range)                  {                      InventorySlot invSlot = FindBestWardItem();                      if (invSlot == null) return;                        Player.Spellbook.CastSpell(invSlot.SpellSlot' position);                      LastWardPos = position;                      LastPlaced = Environment.TickCount;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The following statement contains a magic number: foreach (Obj_AI_Minion ward in ObjectManager.Get<Obj_AI_Minion>().Where(ward =>                  ward.Name.ToLower().Contains("ward") && ward.Distance(Game.CursorPos) < 250))              {                  if (E.IsReady())                  {                      E.CastOnUnit(ward);                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The following statement contains a magic number: foreach (                  Obj_AI_Hero hero in ObjectManager.Get<Obj_AI_Hero>().Where(hero => hero.Distance(Game.CursorPos) < 250 && !hero.IsDead))              {                  if (E.IsReady())                  {                      E.CastOnUnit(hero);                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The following statement contains a magic number: foreach (Obj_AI_Minion minion in ObjectManager.Get<Obj_AI_Minion>().Where(minion =>                  minion.Distance(Game.CursorPos) < 250))              {                  if (E.IsReady())                  {                      E.CastOnUnit(minion);                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The following statement contains a magic number: if (Environment.TickCount <= LastPlaced + 3000 || !E.IsReady()) return;
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The following statement contains a magic number: Vector3 wardPosition = myPos + delta * (600 - 5);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,WardJump,The following statement contains a magic number: Vector3 wardPosition = myPos + delta * (600 - 5);
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,GameObject_OnCreate,The following statement contains a magic number: if (Environment.TickCount < LastPlaced + 300)              {                  var ward = (Obj_AI_Minion)sender;                  if (ward.Name.ToLower().Contains("ward") && ward.Distance(LastWardPos) < 500 && E.IsReady())                  {                      E.Cast(ward);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Katarina,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Katarina.cs,GameObject_OnCreate,The following statement contains a magic number: if (Environment.TickCount < LastPlaced + 300)              {                  var ward = (Obj_AI_Minion)sender;                  if (ward.Name.ToLower().Contains("ward") && ward.Distance(LastWardPos) < 500 && E.IsReady())                  {                      E.Cast(ward);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 825);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 250);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 1095);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 370);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: Q.SetSkillshot(0.25f' 80' 1300' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: Q.SetSkillshot(0.25f' 80' 1300' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: W.SetSkillshot(0f' 250' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: E.SetSkillshot(0.25f' 145' 1700' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: E.SetSkillshot(0.25f' 145' 1700' false' SkillshotType.SkillshotLine);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,SetupSpells,The following statement contains a magic number: R.SetSkillshot(0.60f' 370' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitQQ"' "Last hit with Q"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("escape"' "RUN FOR YOUR LIFE!"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  //Q Menu                  var qMenu = new Menu("QSpell"' "QSpell");{                      qMenu.AddItem(new MenuItem("qHit"' "Q HitChance Combo"' true).SetValue(new Slider(3' 1' 3)));                      qMenu.AddItem(new MenuItem("qHit2"' "Q HitChance Harass"' true).SetValue(new Slider(3' 1' 4)));                      spellMenu.AddSubMenu(qMenu);                  }                  //W                  var wMenu = new Menu("WSpell"' "WSpell");                  {                      wMenu.AddItem(new MenuItem("autoW"' "Use W if hit"' true).SetValue(new Slider(2' 1' 5)));                      spellMenu.AddSubMenu(wMenu);                  }                  //E                  var eMenu = new Menu("ESpell"' "ESpell");                  {                      eMenu.AddItem(new MenuItem("UseEDmg"' "Use E to Dmg"' true).SetValue(true));                        eMenu.AddSubMenu(new Menu("E Ally Inc Spell"' "shield"));                      eMenu.SubMenu("shield").AddItem(new MenuItem("eAllyIfHP"' "If HP < %"' true).SetValue(new Slider(40)));                      foreach (Obj_AI_Hero ally in ObjectManager.Get<Obj_AI_Hero>().Where(ally => ally.IsAlly))                          eMenu.SubMenu("shield").AddItem(new MenuItem("shield" + ally.BaseSkinName' ally.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(eMenu);                  }                  //R                  var rMenu = new Menu("RSpell"' "RSpell"); {                      rMenu.AddItem(new MenuItem("autoR"' "Use R if hit"' true).SetValue(new Slider(3' 1' 5)));                      rMenu.AddItem(new MenuItem("blockR"' "Block R if no enemy"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("overK"' "OverKill Check"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("killR"' "R Multi Only Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                        rMenu.AddSubMenu(new Menu("Auto use R on"' "intR"));                      foreach (Obj_AI_Hero enemy in ObjectManager.Get<Obj_AI_Hero>().Where(enemy => enemy.Team != Player.Team))                          rMenu.SubMenu("intR").AddItem(new MenuItem("intR" + enemy.BaseSkinName' enemy.BaseSkinName' true).SetValue(false));                        spellMenu.AddSubMenu(rMenu);                  }                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("selected"' "Focus Selected Target"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("autoRCombo"' "Use R if hit"' true).SetValue(new Slider(2' 1' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("selected"' "Focus Selected Target"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseWCombo"' "Use W"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("autoRCombo"' "Use R if hit"' true).SetValue(new Slider(2' 1' 5)));                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(false));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(false));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(false));                  farm.AddItem(new MenuItem("qFarm"' "Only Q/W if > minion"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(false));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(false));                  farm.AddItem(new MenuItem("qFarm"' "Only Q/W if > minion"' true).SetValue(new Slider(3' 0' 5)));                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LoadMenu,The following statement contains a magic number: {                   drawing.AddItem(new MenuItem("QRange"' "Q range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("WRange"' "W range"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("ERange"' "E range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("RRange"' "R range"' true).SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(new MenuItem("rModeDraw"' "R mode"' true).SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));                  drawing.AddItem(dmgAfterComboItem);                  menu.AddSubMenu(drawing);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,GetComboDamage,The following statement contains a magic number: damage += Player.GetSpellDamage(enemy' SpellSlot.Q) * 1.5;
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  damage += Player.GetSpellDamage(enemy' SpellSlot.R) - 25;
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      var dmg = GetComboDamage(itemTarget);                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,UseSpells,The following statement contains a magic number: if (useR && target != null && R.IsReady())              {                  if (menu.Item("intR" + target.BaseSkinName' true) != null)                  {                      foreach (                          Obj_AI_Hero enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => Player.Distance(x.Position) < 1500 && x.IsValidTarget() && x.IsEnemy && !x.IsDead))                      {                          if (enemy != null && !enemy.IsDead && menu.Item("intR" + enemy.BaseSkinName' true).GetValue<bool>())                          {                              CastR(enemy);                              return;                          }                      }                  }                    if (!(menu.Item("killR"' true).GetValue<KeyBind>().Active)) //check if multi                  {                      if (menu.Item("overK"' true).GetValue<bool>() &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W)) >= target.Health)                      {                          return;                      }                      if (GetComboDamage(target) >= target.Health - 100 && !target.IsZombie)                          CastR(target);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,UseSpells,The following statement contains a magic number: if (useR && target != null && R.IsReady())              {                  if (menu.Item("intR" + target.BaseSkinName' true) != null)                  {                      foreach (                          Obj_AI_Hero enemy in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => Player.Distance(x.Position) < 1500 && x.IsValidTarget() && x.IsEnemy && !x.IsDead))                      {                          if (enemy != null && !enemy.IsDead && menu.Item("intR" + enemy.BaseSkinName' true).GetValue<bool>())                          {                              CastR(enemy);                              return;                          }                      }                  }                    if (!(menu.Item("killR"' true).GetValue<KeyBind>().Active)) //check if multi                  {                      if (menu.Item("overK"' true).GetValue<bool>() &&                          (Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.W)) >= target.Health)                      {                          return;                      }                      if (GetComboDamage(target) >= target.Health - 100 && !target.IsZombie)                          CastR(target);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastE,The following statement contains a magic number: switch (_ballStatus)              {                  case 0:                      if (target != null)                      {                          float travelTime = target.Distance(Player.ServerPosition) / Q.Speed;                          float minTravelTime = 10000f;                            foreach (                              Obj_AI_Hero ally in                                  ObjectManager.Get<Obj_AI_Hero>()                                      .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                          {                              if (ally != null)                              {                                  //dmg enemy with E                                  if (menu.Item("UseEDmg"' true).GetValue<bool>())                                  {                                      PredictionOutput prediction3 = GetP(Player.ServerPosition' E' target' true);                                      Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()'                                          ally.ServerPosition.To2D()' prediction3.UnitPosition.To2D());                                      var isOnseg = (bool)obj[2];                                      var pointLine = (Vector2)obj[1];                                        if (E.IsReady() && isOnseg &&                                          prediction3.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                      {                                          //Game.PrintChat("Dmg 1");                                          E.CastOnUnit(ally' packets());                                          return;                                      }                                  }                                    float allyRange = target.Distance(ally.ServerPosition) / Q.Speed +                                                    ally.Distance(Player.ServerPosition) / E.Speed;                                  if (allyRange < minTravelTime)                                  {                                      etarget = ally;                                      minTravelTime = allyRange;                                  }                              }                          }                            if (minTravelTime < travelTime && Player.Distance(etarget.ServerPosition) <= E.Range &&                              E.IsReady())                          {                              E.CastOnUnit(etarget' packets());                          }                      }                      break;                  case 1:                      //dmg enemy with E                      if (menu.Item("UseEDmg"' true).GetValue<bool>())                      {                          PredictionOutput prediction = GetP(_currentBallPosition' E' target' true);                          Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                              Player.ServerPosition.To2D()' prediction.UnitPosition.To2D());                          var isOnseg = (bool)obj[2];                          var pointLine = (Vector2)obj[1];                            if (E.IsReady() && isOnseg && prediction.UnitPosition.Distance(pointLine.To3D()) < E.Width)                          {                              //Game.PrintChat("Dmg 2");                              E.CastOnUnit(Player' packets());                              return;                          }                      }                        float travelTime2 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime2 = target.Distance(Player.ServerPosition) / Q.Speed +                                              Player.Distance(_currentBallPosition) / E.Speed;                        if (minTravelTime2 < travelTime2 && target.Distance(Player.ServerPosition) <= Q.Range + Q.Width &&                          E.IsReady())                      {                          E.CastOnUnit(Player' packets());                      }                        break;                  case 2:                      float travelTime3 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime3 = 10000f;                        foreach (                          Obj_AI_Hero ally in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                      {                          if (ally != null)                          {                              //dmg enemy with E                              if (menu.Item("UseEDmg"' true).GetValue<bool>())                              {                                  PredictionOutput prediction2 = GetP(_currentBallPosition' E' target' true);                                  Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                                      ally.ServerPosition.To2D()' prediction2.UnitPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (E.IsReady() && isOnseg &&                                      prediction2.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                  {                                      //Game.PrintChat("Dmg 3");                                      E.CastOnUnit(ally' packets());                                      return;                                  }                              }                                float allyRange2 = target.Distance(ally.ServerPosition) / Q.Speed +                                                  ally.Distance(_currentBallPosition) / E.Speed;                                if (allyRange2 < minTravelTime3)                              {                                  etarget = ally;                                  minTravelTime3 = allyRange2;                              }                          }                      }                        if (minTravelTime3 < travelTime3 && Player.Distance(etarget.ServerPosition) <= E.Range &&                          E.IsReady())                      {                          E.CastOnUnit(etarget' packets());                      }                        break;              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastE,The following statement contains a magic number: switch (_ballStatus)              {                  case 0:                      if (target != null)                      {                          float travelTime = target.Distance(Player.ServerPosition) / Q.Speed;                          float minTravelTime = 10000f;                            foreach (                              Obj_AI_Hero ally in                                  ObjectManager.Get<Obj_AI_Hero>()                                      .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                          {                              if (ally != null)                              {                                  //dmg enemy with E                                  if (menu.Item("UseEDmg"' true).GetValue<bool>())                                  {                                      PredictionOutput prediction3 = GetP(Player.ServerPosition' E' target' true);                                      Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()'                                          ally.ServerPosition.To2D()' prediction3.UnitPosition.To2D());                                      var isOnseg = (bool)obj[2];                                      var pointLine = (Vector2)obj[1];                                        if (E.IsReady() && isOnseg &&                                          prediction3.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                      {                                          //Game.PrintChat("Dmg 1");                                          E.CastOnUnit(ally' packets());                                          return;                                      }                                  }                                    float allyRange = target.Distance(ally.ServerPosition) / Q.Speed +                                                    ally.Distance(Player.ServerPosition) / E.Speed;                                  if (allyRange < minTravelTime)                                  {                                      etarget = ally;                                      minTravelTime = allyRange;                                  }                              }                          }                            if (minTravelTime < travelTime && Player.Distance(etarget.ServerPosition) <= E.Range &&                              E.IsReady())                          {                              E.CastOnUnit(etarget' packets());                          }                      }                      break;                  case 1:                      //dmg enemy with E                      if (menu.Item("UseEDmg"' true).GetValue<bool>())                      {                          PredictionOutput prediction = GetP(_currentBallPosition' E' target' true);                          Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                              Player.ServerPosition.To2D()' prediction.UnitPosition.To2D());                          var isOnseg = (bool)obj[2];                          var pointLine = (Vector2)obj[1];                            if (E.IsReady() && isOnseg && prediction.UnitPosition.Distance(pointLine.To3D()) < E.Width)                          {                              //Game.PrintChat("Dmg 2");                              E.CastOnUnit(Player' packets());                              return;                          }                      }                        float travelTime2 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime2 = target.Distance(Player.ServerPosition) / Q.Speed +                                              Player.Distance(_currentBallPosition) / E.Speed;                        if (minTravelTime2 < travelTime2 && target.Distance(Player.ServerPosition) <= Q.Range + Q.Width &&                          E.IsReady())                      {                          E.CastOnUnit(Player' packets());                      }                        break;                  case 2:                      float travelTime3 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime3 = 10000f;                        foreach (                          Obj_AI_Hero ally in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                      {                          if (ally != null)                          {                              //dmg enemy with E                              if (menu.Item("UseEDmg"' true).GetValue<bool>())                              {                                  PredictionOutput prediction2 = GetP(_currentBallPosition' E' target' true);                                  Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                                      ally.ServerPosition.To2D()' prediction2.UnitPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (E.IsReady() && isOnseg &&                                      prediction2.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                  {                                      //Game.PrintChat("Dmg 3");                                      E.CastOnUnit(ally' packets());                                      return;                                  }                              }                                float allyRange2 = target.Distance(ally.ServerPosition) / Q.Speed +                                                  ally.Distance(_currentBallPosition) / E.Speed;                                if (allyRange2 < minTravelTime3)                              {                                  etarget = ally;                                  minTravelTime3 = allyRange2;                              }                          }                      }                        if (minTravelTime3 < travelTime3 && Player.Distance(etarget.ServerPosition) <= E.Range &&                          E.IsReady())                      {                          E.CastOnUnit(etarget' packets());                      }                        break;              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastE,The following statement contains a magic number: switch (_ballStatus)              {                  case 0:                      if (target != null)                      {                          float travelTime = target.Distance(Player.ServerPosition) / Q.Speed;                          float minTravelTime = 10000f;                            foreach (                              Obj_AI_Hero ally in                                  ObjectManager.Get<Obj_AI_Hero>()                                      .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                          {                              if (ally != null)                              {                                  //dmg enemy with E                                  if (menu.Item("UseEDmg"' true).GetValue<bool>())                                  {                                      PredictionOutput prediction3 = GetP(Player.ServerPosition' E' target' true);                                      Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()'                                          ally.ServerPosition.To2D()' prediction3.UnitPosition.To2D());                                      var isOnseg = (bool)obj[2];                                      var pointLine = (Vector2)obj[1];                                        if (E.IsReady() && isOnseg &&                                          prediction3.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                      {                                          //Game.PrintChat("Dmg 1");                                          E.CastOnUnit(ally' packets());                                          return;                                      }                                  }                                    float allyRange = target.Distance(ally.ServerPosition) / Q.Speed +                                                    ally.Distance(Player.ServerPosition) / E.Speed;                                  if (allyRange < minTravelTime)                                  {                                      etarget = ally;                                      minTravelTime = allyRange;                                  }                              }                          }                            if (minTravelTime < travelTime && Player.Distance(etarget.ServerPosition) <= E.Range &&                              E.IsReady())                          {                              E.CastOnUnit(etarget' packets());                          }                      }                      break;                  case 1:                      //dmg enemy with E                      if (menu.Item("UseEDmg"' true).GetValue<bool>())                      {                          PredictionOutput prediction = GetP(_currentBallPosition' E' target' true);                          Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                              Player.ServerPosition.To2D()' prediction.UnitPosition.To2D());                          var isOnseg = (bool)obj[2];                          var pointLine = (Vector2)obj[1];                            if (E.IsReady() && isOnseg && prediction.UnitPosition.Distance(pointLine.To3D()) < E.Width)                          {                              //Game.PrintChat("Dmg 2");                              E.CastOnUnit(Player' packets());                              return;                          }                      }                        float travelTime2 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime2 = target.Distance(Player.ServerPosition) / Q.Speed +                                              Player.Distance(_currentBallPosition) / E.Speed;                        if (minTravelTime2 < travelTime2 && target.Distance(Player.ServerPosition) <= Q.Range + Q.Width &&                          E.IsReady())                      {                          E.CastOnUnit(Player' packets());                      }                        break;                  case 2:                      float travelTime3 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime3 = 10000f;                        foreach (                          Obj_AI_Hero ally in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                      {                          if (ally != null)                          {                              //dmg enemy with E                              if (menu.Item("UseEDmg"' true).GetValue<bool>())                              {                                  PredictionOutput prediction2 = GetP(_currentBallPosition' E' target' true);                                  Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                                      ally.ServerPosition.To2D()' prediction2.UnitPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (E.IsReady() && isOnseg &&                                      prediction2.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                  {                                      //Game.PrintChat("Dmg 3");                                      E.CastOnUnit(ally' packets());                                      return;                                  }                              }                                float allyRange2 = target.Distance(ally.ServerPosition) / Q.Speed +                                                  ally.Distance(_currentBallPosition) / E.Speed;                                if (allyRange2 < minTravelTime3)                              {                                  etarget = ally;                                  minTravelTime3 = allyRange2;                              }                          }                      }                        if (minTravelTime3 < travelTime3 && Player.Distance(etarget.ServerPosition) <= E.Range &&                          E.IsReady())                      {                          E.CastOnUnit(etarget' packets());                      }                        break;              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastE,The following statement contains a magic number: switch (_ballStatus)              {                  case 0:                      if (target != null)                      {                          float travelTime = target.Distance(Player.ServerPosition) / Q.Speed;                          float minTravelTime = 10000f;                            foreach (                              Obj_AI_Hero ally in                                  ObjectManager.Get<Obj_AI_Hero>()                                      .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                          {                              if (ally != null)                              {                                  //dmg enemy with E                                  if (menu.Item("UseEDmg"' true).GetValue<bool>())                                  {                                      PredictionOutput prediction3 = GetP(Player.ServerPosition' E' target' true);                                      Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()'                                          ally.ServerPosition.To2D()' prediction3.UnitPosition.To2D());                                      var isOnseg = (bool)obj[2];                                      var pointLine = (Vector2)obj[1];                                        if (E.IsReady() && isOnseg &&                                          prediction3.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                      {                                          //Game.PrintChat("Dmg 1");                                          E.CastOnUnit(ally' packets());                                          return;                                      }                                  }                                    float allyRange = target.Distance(ally.ServerPosition) / Q.Speed +                                                    ally.Distance(Player.ServerPosition) / E.Speed;                                  if (allyRange < minTravelTime)                                  {                                      etarget = ally;                                      minTravelTime = allyRange;                                  }                              }                          }                            if (minTravelTime < travelTime && Player.Distance(etarget.ServerPosition) <= E.Range &&                              E.IsReady())                          {                              E.CastOnUnit(etarget' packets());                          }                      }                      break;                  case 1:                      //dmg enemy with E                      if (menu.Item("UseEDmg"' true).GetValue<bool>())                      {                          PredictionOutput prediction = GetP(_currentBallPosition' E' target' true);                          Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                              Player.ServerPosition.To2D()' prediction.UnitPosition.To2D());                          var isOnseg = (bool)obj[2];                          var pointLine = (Vector2)obj[1];                            if (E.IsReady() && isOnseg && prediction.UnitPosition.Distance(pointLine.To3D()) < E.Width)                          {                              //Game.PrintChat("Dmg 2");                              E.CastOnUnit(Player' packets());                              return;                          }                      }                        float travelTime2 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime2 = target.Distance(Player.ServerPosition) / Q.Speed +                                              Player.Distance(_currentBallPosition) / E.Speed;                        if (minTravelTime2 < travelTime2 && target.Distance(Player.ServerPosition) <= Q.Range + Q.Width &&                          E.IsReady())                      {                          E.CastOnUnit(Player' packets());                      }                        break;                  case 2:                      float travelTime3 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime3 = 10000f;                        foreach (                          Obj_AI_Hero ally in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                      {                          if (ally != null)                          {                              //dmg enemy with E                              if (menu.Item("UseEDmg"' true).GetValue<bool>())                              {                                  PredictionOutput prediction2 = GetP(_currentBallPosition' E' target' true);                                  Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                                      ally.ServerPosition.To2D()' prediction2.UnitPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (E.IsReady() && isOnseg &&                                      prediction2.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                  {                                      //Game.PrintChat("Dmg 3");                                      E.CastOnUnit(ally' packets());                                      return;                                  }                              }                                float allyRange2 = target.Distance(ally.ServerPosition) / Q.Speed +                                                  ally.Distance(_currentBallPosition) / E.Speed;                                if (allyRange2 < minTravelTime3)                              {                                  etarget = ally;                                  minTravelTime3 = allyRange2;                              }                          }                      }                        if (minTravelTime3 < travelTime3 && Player.Distance(etarget.ServerPosition) <= E.Range &&                          E.IsReady())                      {                          E.CastOnUnit(etarget' packets());                      }                        break;              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckWMec,The following statement contains a magic number: int hit = (from x in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie)                          where x != null select GetPCircle(_currentBallPosition' W' x' true)).Count(prediction => W.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) < W.Width);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckRMec,The following statement contains a magic number: int hit = (from x in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie)                         where x != null                         select GetPCircle(_currentBallPosition' R' x' true)).Count(prediction => R.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) < R.Width);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CheckRMecGlobal,The following statement contains a magic number: int hit = (from x in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie)                         where x != null                         select GetPCircle(_currentBallPosition' R' x' true)).Count(prediction => R.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) < R.Width);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CountR,The following statement contains a magic number: return (from enemy in ObjectManager.Get<Obj_AI_Hero>().Where(champ => champ.IsValidTarget(1500) && champ.IsVisible && !champ.IsZombie)                       where enemy != null select GetPCircle(_currentBallPosition' R' enemy' true)).Count(prediction => R.IsReady() && prediction.UnitPosition.Distance(_currentBallPosition) <= R.Width);
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LastHit,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 10)                      {                          PredictionOutput prediction = GetP(_currentBallPosition' Q' minion' true);                            if (prediction.Hitchance >= HitChance.High && Q.IsReady())                              Q.Cast(prediction.CastPosition' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 10)                      {                          PredictionOutput prediction = GetP(_currentBallPosition' Q' minion' true);                            if (prediction.Hitchance >= HitChance.High && Q.IsReady())                              Q.Cast(prediction.CastPosition' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,LastHit,The following statement contains a magic number: if (Q.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 1400)) <                          Player.GetSpellDamage(minion' SpellSlot.Q) - 10)                      {                          PredictionOutput prediction = GetP(_currentBallPosition' Q' minion' true);                            if (prediction.Hitchance >= HitChance.High && Q.IsReady())                              Q.Cast(prediction.CastPosition' packets());                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Farm,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Farm,The following statement contains a magic number: if (useQ && Q.IsReady())              {                  Q.From = _currentBallPosition;                    MinionManager.FarmLocation pred = Q.GetCircularFarmLocation(allMinionsQ' Q.Width + 15);                    if (pred.MinionsHit >= min)                      Q.Cast(pred.Position' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,OnGainBuff,The following statement contains a magic number: foreach (Obj_AI_Hero ally in                  ObjectManager.Get<Obj_AI_Hero>()                      .Where(ally => ally.IsAlly && !ally.IsDead && ally.HasBuff("orianaghost"' true)))              {                  _ballStatus = 2;                  _currentBallPosition = ally.ServerPosition;                  _allyDraw = ally.Position;                  _isBallMoving = false;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Drawing_OnDraw,The following statement contains a magic number: foreach (Spell spell in SpellList)              {                  var menuItem = menu.Item(spell.Slot + "Range"' true).GetValue<Circle>();                  if ((spell.Slot == SpellSlot.R && menuItem.Active) || (spell.Slot == SpellSlot.W && menuItem.Active))                  {                      if (_ballStatus == 0)                          Render.Circle.DrawCircle(Player.Position' spell.Range' spell.IsReady() ? Color.Aqua : Color.Red);                      else if (_ballStatus == 2)                          Render.Circle.DrawCircle(_allyDraw' spell.Range' spell.IsReady() ? Color.Aqua : Color.Red);                      else                          Render.Circle.DrawCircle(_currentBallPosition' spell.Range' spell.IsReady() ? Color.Aqua : Color.Red);                  }                  else if (menuItem.Active)                      Render.Circle.DrawCircle(Player.Position' spell.Range' spell.IsReady() ? Color.Aqua : Color.Red);              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && E.IsReady())              {                  foreach (                      Obj_AI_Hero ally in                          ObjectManager.Get<Obj_AI_Hero>()                              .Where(x => Player.Distance(x.Position) < E.Range && Player.Distance(unit.Position) < 1500 && x.IsAlly && !x.IsDead).OrderBy(x => x.Distance(args.End)))                  {                      if (menu.Item("shield" + ally.BaseSkinName' true) != null)                      {                          if (menu.Item("shield" + ally.BaseSkinName' true).GetValue<bool>())                          {                              int hp = menu.Item("eAllyIfHP"' true).GetValue<Slider>().Value;                              float hpPercent = ally.Health / ally.MaxHealth * 100;                                if (ally.Distance(args.End) < 500 && hpPercent <= hp)                              {                                  //Game.PrintChat("shielding");                                  E.CastOnUnit(ally' packets());                                  _isBallMoving = true;                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && E.IsReady())              {                  foreach (                      Obj_AI_Hero ally in                          ObjectManager.Get<Obj_AI_Hero>()                              .Where(x => Player.Distance(x.Position) < E.Range && Player.Distance(unit.Position) < 1500 && x.IsAlly && !x.IsDead).OrderBy(x => x.Distance(args.End)))                  {                      if (menu.Item("shield" + ally.BaseSkinName' true) != null)                      {                          if (menu.Item("shield" + ally.BaseSkinName' true).GetValue<bool>())                          {                              int hp = menu.Item("eAllyIfHP"' true).GetValue<Slider>().Value;                              float hpPercent = ally.Health / ally.MaxHealth * 100;                                if (ally.Distance(args.End) < 500 && hpPercent <= hp)                              {                                  //Game.PrintChat("shielding");                                  E.CastOnUnit(ally' packets());                                  _isBallMoving = true;                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && unit.Type == GameObjectType.obj_AI_Hero && E.IsReady())              {                  foreach (                      Obj_AI_Hero ally in                          ObjectManager.Get<Obj_AI_Hero>()                              .Where(x => Player.Distance(x.Position) < E.Range && Player.Distance(unit.Position) < 1500 && x.IsAlly && !x.IsDead).OrderBy(x => x.Distance(args.End)))                  {                      if (menu.Item("shield" + ally.BaseSkinName' true) != null)                      {                          if (menu.Item("shield" + ally.BaseSkinName' true).GetValue<bool>())                          {                              int hp = menu.Item("eAllyIfHP"' true).GetValue<Slider>().Value;                              float hpPercent = ally.Health / ally.MaxHealth * 100;                                if (ally.Distance(args.End) < 500 && hpPercent <= hp)                              {                                  //Game.PrintChat("shielding");                                  E.CastOnUnit(ally' packets());                                  _isBallMoving = true;                                  return;                              }                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (castedSlot == SpellSlot.Q)              {                  _isBallMoving = true;                  Utility.DelayAction.Add(                      (int)Math.Max(1' 1000 * (args.End.Distance(_currentBallPosition) - Game.Ping - 0.1) / Q.Speed)' () =>                      {                          _currentBallPosition = args.End;                          _ballStatus = 1;                          _isBallMoving = false;                          //Game.PrintChat("Stopped");                      });              }
Magic Number,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (castedSlot == SpellSlot.Q)              {                  _isBallMoving = true;                  Utility.DelayAction.Add(                      (int)Math.Max(1' 1000 * (args.End.Distance(_currentBallPosition) - Game.Ping - 0.1) / Q.Speed)' () =>                      {                          _currentBallPosition = args.End;                          _ballStatus = 1;                          _isBallMoving = false;                          //Game.PrintChat("Stopped");                      });              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 800);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 950);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 700);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: E.SetSkillshot(.25f' (float)(45 * 0.5)' 2500f' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: E.SetSkillshot(.25f' (float)(45 * 0.5)' 2500f' false' SkillshotType.SkillshotCircle);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 750);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,SetSpells,The following statement contains a magic number: _qe = new Spell(SpellSlot.Q' 1250);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Misc_QE_Mouse"' "QE to Nearest Target To Mouse"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Misc_QE_Mouse2"' "QE to Mouse"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("forceR"' "Force R to best Target"' true).SetValue(new KeyBind("R".ToCharArray()[0]' KeyBindType.Press)));                  //key.AddItem(new MenuItem("qAA"' "Auto Q AAing target"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseQEHarass"' "Use QE"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseWHarass"' "Use W"' true).SetValue(true));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(harass' "Harass"' 30);                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseWFarm"' "Use W"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"' true).SetValue(true));                  AddManaManagertoMenu(farm' "LaneClear"' 30);                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE"' "Draw QE"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE_Line"' "Draw QE Line"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE"' "Draw QE"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE_Line"' "Draw QE Line"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE"' "Draw QE"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE_Line"' "Draw QE Line"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE"' "Draw QE"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_QE_Line"' "Draw QE Line"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R_Killable"' "Draw R Mark on Killable"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  comboDamage += (3 + getOrbCount()) * Player.GetSpellDamage(target' SpellSlot.R' 1) - 20;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())                  comboDamage += (3 + getOrbCount()) * Player.GetSpellDamage(target' SpellSlot.R' 1) - 20;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Get_Ult_Dmg,The following statement contains a magic number: if (R.IsReady())                  damage += (3 + getOrbCount()) * Player.GetSpellDamage(enemy' SpellSlot.R' 1) - 20;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Get_Ult_Dmg,The following statement contains a magic number: if (R.IsReady())                  damage += (3 + getOrbCount()) * Player.GetSpellDamage(enemy' SpellSlot.R' 1) - 20;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,UseSpells,The following statement contains a magic number: var qTarget = TargetSelector.GetTarget(650' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_W,The following statement contains a magic number: if (mode)              {                  var wTarget = TargetSelector.GetTarget(W.Range' TargetSelector.DamageType.Magical);                    var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (wTarget == null)                      return;                    if (grabbableObj != null && wToggleState == 1)                  {                      if (Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                      {                          if (grabbableObj.Distance(Player.Position) < W.Range)                          {                              W.Cast(grabbableObj.ServerPosition);                              W.LastCastAttemptT = Environment.TickCount + 500;                              return;                          }                      }                  }                    if (wToggleState != 1 && Get_Current_Orb() != null)                  {                      //W.UpdateSourcePosition(Get_Current_Orb().ServerPosition' Get_Current_Orb().ServerPosition);                      W.From = Get_Current_Orb().ServerPosition;                        if (Player.Distance(wTarget.Position) < E.Range - 100)                      {                          if (wToggleState != 1 && W.IsReady() &&                              Environment.TickCount - W.LastCastAttemptT > -300 + Game.Ping)                          {                              W.Cast(wTarget);                              return;                          }                      }                        if (W.IsReady())                      {                          W.Cast(wTarget);                      }                  }              }              else              {                  var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (grabbableObj == null)                      return;                    if (wToggleState == 1 && Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                  {                      W.Cast(grabbableObj.ServerPosition);                      W.LastCastAttemptT = Environment.TickCount + 1000;                      return;                  }                    if (Get_Current_Orb() == null)                      return;                    W.From = Get_Current_Orb().ServerPosition;                    var allMinionsW = MinionManager.GetMinions(Player.ServerPosition' W.Range' MinionTypes.All' MinionTeam.NotAlly);                  var farmLocation = Q.GetCircularFarmLocation(allMinionsW' W.Width);                    if (farmLocation.MinionsHit > 0)                      W.Cast(farmLocation.Position);                  else                  {                      W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_W,The following statement contains a magic number: if (mode)              {                  var wTarget = TargetSelector.GetTarget(W.Range' TargetSelector.DamageType.Magical);                    var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (wTarget == null)                      return;                    if (grabbableObj != null && wToggleState == 1)                  {                      if (Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                      {                          if (grabbableObj.Distance(Player.Position) < W.Range)                          {                              W.Cast(grabbableObj.ServerPosition);                              W.LastCastAttemptT = Environment.TickCount + 500;                              return;                          }                      }                  }                    if (wToggleState != 1 && Get_Current_Orb() != null)                  {                      //W.UpdateSourcePosition(Get_Current_Orb().ServerPosition' Get_Current_Orb().ServerPosition);                      W.From = Get_Current_Orb().ServerPosition;                        if (Player.Distance(wTarget.Position) < E.Range - 100)                      {                          if (wToggleState != 1 && W.IsReady() &&                              Environment.TickCount - W.LastCastAttemptT > -300 + Game.Ping)                          {                              W.Cast(wTarget);                              return;                          }                      }                        if (W.IsReady())                      {                          W.Cast(wTarget);                      }                  }              }              else              {                  var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (grabbableObj == null)                      return;                    if (wToggleState == 1 && Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                  {                      W.Cast(grabbableObj.ServerPosition);                      W.LastCastAttemptT = Environment.TickCount + 1000;                      return;                  }                    if (Get_Current_Orb() == null)                      return;                    W.From = Get_Current_Orb().ServerPosition;                    var allMinionsW = MinionManager.GetMinions(Player.ServerPosition' W.Range' MinionTypes.All' MinionTeam.NotAlly);                  var farmLocation = Q.GetCircularFarmLocation(allMinionsW' W.Width);                    if (farmLocation.MinionsHit > 0)                      W.Cast(farmLocation.Position);                  else                  {                      W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_W,The following statement contains a magic number: if (mode)              {                  var wTarget = TargetSelector.GetTarget(W.Range' TargetSelector.DamageType.Magical);                    var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (wTarget == null)                      return;                    if (grabbableObj != null && wToggleState == 1)                  {                      if (Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                      {                          if (grabbableObj.Distance(Player.Position) < W.Range)                          {                              W.Cast(grabbableObj.ServerPosition);                              W.LastCastAttemptT = Environment.TickCount + 500;                              return;                          }                      }                  }                    if (wToggleState != 1 && Get_Current_Orb() != null)                  {                      //W.UpdateSourcePosition(Get_Current_Orb().ServerPosition' Get_Current_Orb().ServerPosition);                      W.From = Get_Current_Orb().ServerPosition;                        if (Player.Distance(wTarget.Position) < E.Range - 100)                      {                          if (wToggleState != 1 && W.IsReady() &&                              Environment.TickCount - W.LastCastAttemptT > -300 + Game.Ping)                          {                              W.Cast(wTarget);                              return;                          }                      }                        if (W.IsReady())                      {                          W.Cast(wTarget);                      }                  }              }              else              {                  var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (grabbableObj == null)                      return;                    if (wToggleState == 1 && Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                  {                      W.Cast(grabbableObj.ServerPosition);                      W.LastCastAttemptT = Environment.TickCount + 1000;                      return;                  }                    if (Get_Current_Orb() == null)                      return;                    W.From = Get_Current_Orb().ServerPosition;                    var allMinionsW = MinionManager.GetMinions(Player.ServerPosition' W.Range' MinionTypes.All' MinionTeam.NotAlly);                  var farmLocation = Q.GetCircularFarmLocation(allMinionsW' W.Width);                    if (farmLocation.MinionsHit > 0)                      W.Cast(farmLocation.Position);                  else                  {                      W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_W,The following statement contains a magic number: if (mode)              {                  var wTarget = TargetSelector.GetTarget(W.Range' TargetSelector.DamageType.Magical);                    var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (wTarget == null)                      return;                    if (grabbableObj != null && wToggleState == 1)                  {                      if (Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                      {                          if (grabbableObj.Distance(Player.Position) < W.Range)                          {                              W.Cast(grabbableObj.ServerPosition);                              W.LastCastAttemptT = Environment.TickCount + 500;                              return;                          }                      }                  }                    if (wToggleState != 1 && Get_Current_Orb() != null)                  {                      //W.UpdateSourcePosition(Get_Current_Orb().ServerPosition' Get_Current_Orb().ServerPosition);                      W.From = Get_Current_Orb().ServerPosition;                        if (Player.Distance(wTarget.Position) < E.Range - 100)                      {                          if (wToggleState != 1 && W.IsReady() &&                              Environment.TickCount - W.LastCastAttemptT > -300 + Game.Ping)                          {                              W.Cast(wTarget);                              return;                          }                      }                        if (W.IsReady())                      {                          W.Cast(wTarget);                      }                  }              }              else              {                  var grabbableObj = Get_Nearest_orb();                  var wToggleState = Player.Spellbook.GetSpell(SpellSlot.W).ToggleState;                    if (grabbableObj == null)                      return;                    if (wToggleState == 1 && Environment.TickCount - W.LastCastAttemptT > Game.Ping && W.IsReady())                  {                      W.Cast(grabbableObj.ServerPosition);                      W.LastCastAttemptT = Environment.TickCount + 1000;                      return;                  }                    if (Get_Current_Orb() == null)                      return;                    W.From = Get_Current_Orb().ServerPosition;                    var allMinionsW = MinionManager.GetMinions(Player.ServerPosition' W.Range' MinionTypes.All' MinionTeam.NotAlly);                  var farmLocation = Q.GetCircularFarmLocation(allMinionsW' W.Width);                    if (farmLocation.MinionsHit > 0)                      W.Cast(farmLocation.Position);                  else                  {                      W.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The following statement contains a magic number: var target = TargetSelector.GetTarget(_qe.Range + 100' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The following statement contains a magic number: foreach (var orb in getOrb().Where(x => Player.Distance(x.Position) < E.Range && x != null))              {                  double rangeLeft = 100 + (-0.6 * Player.Distance(orb.ServerPosition) + 950);                  var startPos = orb.ServerPosition - Vector3.Normalize(orb.ServerPosition - Player.ServerPosition) * 100;                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.Delay = E.Delay + Player.Distance(orb.Position) / E.Speed + target.Distance(orb.Position) / _qe.Speed;                  _qe.From = startPos;                    var targetPos = _qe.GetPrediction(target);                    var projection = targetPos.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width))                      return;                    E.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The following statement contains a magic number: foreach (var orb in getOrb().Where(x => Player.Distance(x.Position) < E.Range && x != null))              {                  double rangeLeft = 100 + (-0.6 * Player.Distance(orb.ServerPosition) + 950);                  var startPos = orb.ServerPosition - Vector3.Normalize(orb.ServerPosition - Player.ServerPosition) * 100;                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.Delay = E.Delay + Player.Distance(orb.Position) / E.Speed + target.Distance(orb.Position) / _qe.Speed;                  _qe.From = startPos;                    var targetPos = _qe.GetPrediction(target);                    var projection = targetPos.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width))                      return;                    E.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The following statement contains a magic number: foreach (var orb in getOrb().Where(x => Player.Distance(x.Position) < E.Range && x != null))              {                  double rangeLeft = 100 + (-0.6 * Player.Distance(orb.ServerPosition) + 950);                  var startPos = orb.ServerPosition - Vector3.Normalize(orb.ServerPosition - Player.ServerPosition) * 100;                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.Delay = E.Delay + Player.Distance(orb.Position) / E.Speed + target.Distance(orb.Position) / _qe.Speed;                  _qe.From = startPos;                    var targetPos = _qe.GetPrediction(target);                    var projection = targetPos.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width))                      return;                    E.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The following statement contains a magic number: foreach (var orb in getOrb().Where(x => Player.Distance(x.Position) < E.Range && x != null))              {                  double rangeLeft = 100 + (-0.6 * Player.Distance(orb.ServerPosition) + 950);                  var startPos = orb.ServerPosition - Vector3.Normalize(orb.ServerPosition - Player.ServerPosition) * 100;                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.Delay = E.Delay + Player.Distance(orb.Position) / E.Speed + target.Distance(orb.Position) / _qe.Speed;                  _qe.From = startPos;                    var targetPos = _qe.GetPrediction(target);                    var projection = targetPos.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width))                      return;                    E.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_E,The following statement contains a magic number: foreach (var orb in getOrb().Where(x => Player.Distance(x.Position) < E.Range && x != null))              {                  double rangeLeft = 100 + (-0.6 * Player.Distance(orb.ServerPosition) + 950);                  var startPos = orb.ServerPosition - Vector3.Normalize(orb.ServerPosition - Player.ServerPosition) * 100;                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.Delay = E.Delay + Player.Distance(orb.Position) / E.Speed + target.Distance(orb.Position) / _qe.Speed;                  _qe.From = startPos;                    var targetPos = _qe.GetPrediction(target);                    var projection = targetPos.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || targetPos.Hitchance < HitChance.Medium || !(projection.LinePoint.Distance(targetPos.UnitPosition.To2D()) < _qe.Width))                      return;                    E.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_R,The following statement contains a magic number: var rTarget = TargetSelector.GetTarget(R.Level > 2 ? R.Range : 675' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_R,The following statement contains a magic number: var rTarget = TargetSelector.GetTarget(R.Level > 2 ? R.Range : 675' TargetSelector.DamageType.Magical);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_R,The following statement contains a magic number: if (menu.Item("R_Overkill_Check"' true).GetValue<bool>())              {                  if (Player.GetSpellDamage(rTarget' SpellSlot.Q) - 25 > rTarget.Health)                  {                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_R,The following statement contains a magic number: if (Get_Ult_Dmg(rTarget) > rTarget.Health - 20 && rTarget.Distance(Player.Position) < R.Range)              {                  R.CastOnUnit(rTarget);              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_QE,The following statement contains a magic number: var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_QE,The following statement contains a magic number: double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_QE,The following statement contains a magic number: double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_QE,The following statement contains a magic number: double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Cast_QE,The following statement contains a magic number: if (qePred.Hitchance >= HitChance.Medium || !usePred)              {                  Q.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  _qe.LastCastAttemptT = Environment.TickCount;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,CastQeMouse,The following statement contains a magic number: foreach (var enemy in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(_qe.Range)))                  if (Game.CursorPos.Distance(enemy.ServerPosition) < 300)                      Cast_QE(false' enemy);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,The following statement contains a magic number: if(R.IsReady())                  R.Range = R.Level == 3 ? 750f : 675f;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,The following statement contains a magic number: if(E.IsReady())                  E.Width = E.Level == 5 ? 45f : (float)(45 * 0.5);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,The following statement contains a magic number: if(E.IsReady())                  E.Width = E.Level == 5 ? 45f : (float)(45 * 0.5);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,The following statement contains a magic number: if(E.IsReady())                  E.Width = E.Level == 5 ? 45f : (float)(45 * 0.5);
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,The following statement contains a magic number: if (menu.Item("Misc_QE_Mouse2"' true).GetValue<KeyBind>().Active)              {                  var startPos = Player.ServerPosition + Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * (E.Range - 100);                  Q.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  _qe.LastCastAttemptT = Environment.TickCount;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Game_OnGameUpdate,The following statement contains a magic number: if (menu.Item("Misc_QE_Mouse2"' true).GetValue<KeyBind>().Active)              {                  var startPos = Player.ServerPosition + Vector3.Normalize(Game.CursorPos - Player.ServerPosition) * (E.Range - 100);                  Q.Cast(startPos' packets());                  W.LastCastAttemptT = Environment.TickCount + 500;                  _qe.LastCastAttemptT = Environment.TickCount;              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_QE_Line"' true).GetValue<bool>())              {                  var qeTarget = TargetSelector.GetTarget(_qe.Range' TargetSelector.DamageType.Magical);                  if (qeTarget == null || !Q.IsReady() || !E.IsReady())                      return;                    var from = Prediction.GetPrediction(qeTarget' Q.Delay + E.Delay).UnitPosition;                  var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);                  double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.From = startPos;                  _qe.Delay = Q.Delay + E.Delay + Player.Distance(from) / E.Speed;                    var qePred = _qe.GetPrediction(qeTarget);                  var projection = qePred.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || !(projection.LinePoint.Distance(qePred.UnitPosition.To2D()) < _qe.Width))                      return;                    if (qePred.Hitchance >= HitChance.Medium)                  {                      Vector2 wtsPlayer = Drawing.WorldToScreen(Player.Position);                      Vector2 wtsPred = Drawing.WorldToScreen(endPos);                      Render.Circle.DrawCircle(startPos' Q.Width/2' Color.Aquamarine);                      Render.Circle.DrawCircle(endPos' Q.Width/2' Color.SpringGreen);                      Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.LawnGreen);                  }                }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_QE_Line"' true).GetValue<bool>())              {                  var qeTarget = TargetSelector.GetTarget(_qe.Range' TargetSelector.DamageType.Magical);                  if (qeTarget == null || !Q.IsReady() || !E.IsReady())                      return;                    var from = Prediction.GetPrediction(qeTarget' Q.Delay + E.Delay).UnitPosition;                  var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);                  double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.From = startPos;                  _qe.Delay = Q.Delay + E.Delay + Player.Distance(from) / E.Speed;                    var qePred = _qe.GetPrediction(qeTarget);                  var projection = qePred.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || !(projection.LinePoint.Distance(qePred.UnitPosition.To2D()) < _qe.Width))                      return;                    if (qePred.Hitchance >= HitChance.Medium)                  {                      Vector2 wtsPlayer = Drawing.WorldToScreen(Player.Position);                      Vector2 wtsPred = Drawing.WorldToScreen(endPos);                      Render.Circle.DrawCircle(startPos' Q.Width/2' Color.Aquamarine);                      Render.Circle.DrawCircle(endPos' Q.Width/2' Color.SpringGreen);                      Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.LawnGreen);                  }                }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_QE_Line"' true).GetValue<bool>())              {                  var qeTarget = TargetSelector.GetTarget(_qe.Range' TargetSelector.DamageType.Magical);                  if (qeTarget == null || !Q.IsReady() || !E.IsReady())                      return;                    var from = Prediction.GetPrediction(qeTarget' Q.Delay + E.Delay).UnitPosition;                  var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);                  double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.From = startPos;                  _qe.Delay = Q.Delay + E.Delay + Player.Distance(from) / E.Speed;                    var qePred = _qe.GetPrediction(qeTarget);                  var projection = qePred.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || !(projection.LinePoint.Distance(qePred.UnitPosition.To2D()) < _qe.Width))                      return;                    if (qePred.Hitchance >= HitChance.Medium)                  {                      Vector2 wtsPlayer = Drawing.WorldToScreen(Player.Position);                      Vector2 wtsPred = Drawing.WorldToScreen(endPos);                      Render.Circle.DrawCircle(startPos' Q.Width/2' Color.Aquamarine);                      Render.Circle.DrawCircle(endPos' Q.Width/2' Color.SpringGreen);                      Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.LawnGreen);                  }                }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_QE_Line"' true).GetValue<bool>())              {                  var qeTarget = TargetSelector.GetTarget(_qe.Range' TargetSelector.DamageType.Magical);                  if (qeTarget == null || !Q.IsReady() || !E.IsReady())                      return;                    var from = Prediction.GetPrediction(qeTarget' Q.Delay + E.Delay).UnitPosition;                  var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);                  double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.From = startPos;                  _qe.Delay = Q.Delay + E.Delay + Player.Distance(from) / E.Speed;                    var qePred = _qe.GetPrediction(qeTarget);                  var projection = qePred.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || !(projection.LinePoint.Distance(qePred.UnitPosition.To2D()) < _qe.Width))                      return;                    if (qePred.Hitchance >= HitChance.Medium)                  {                      Vector2 wtsPlayer = Drawing.WorldToScreen(Player.Position);                      Vector2 wtsPred = Drawing.WorldToScreen(endPos);                      Render.Circle.DrawCircle(startPos' Q.Width/2' Color.Aquamarine);                      Render.Circle.DrawCircle(endPos' Q.Width/2' Color.SpringGreen);                      Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.LawnGreen);                  }                }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_QE_Line"' true).GetValue<bool>())              {                  var qeTarget = TargetSelector.GetTarget(_qe.Range' TargetSelector.DamageType.Magical);                  if (qeTarget == null || !Q.IsReady() || !E.IsReady())                      return;                    var from = Prediction.GetPrediction(qeTarget' Q.Delay + E.Delay).UnitPosition;                  var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);                  double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.From = startPos;                  _qe.Delay = Q.Delay + E.Delay + Player.Distance(from) / E.Speed;                    var qePred = _qe.GetPrediction(qeTarget);                  var projection = qePred.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || !(projection.LinePoint.Distance(qePred.UnitPosition.To2D()) < _qe.Width))                      return;                    if (qePred.Hitchance >= HitChance.Medium)                  {                      Vector2 wtsPlayer = Drawing.WorldToScreen(Player.Position);                      Vector2 wtsPred = Drawing.WorldToScreen(endPos);                      Render.Circle.DrawCircle(startPos' Q.Width/2' Color.Aquamarine);                      Render.Circle.DrawCircle(endPos' Q.Width/2' Color.SpringGreen);                      Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.LawnGreen);                  }                }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_QE_Line"' true).GetValue<bool>())              {                  var qeTarget = TargetSelector.GetTarget(_qe.Range' TargetSelector.DamageType.Magical);                  if (qeTarget == null || !Q.IsReady() || !E.IsReady())                      return;                    var from = Prediction.GetPrediction(qeTarget' Q.Delay + E.Delay).UnitPosition;                  var startPos = Player.ServerPosition + Vector3.Normalize(from - Player.ServerPosition) * (E.Range - 100);                  double rangeLeft = 100 + (-0.6 * Player.Distance(startPos) + 950);                  var endPos = startPos + Vector3.Normalize(startPos - Player.ServerPosition) * (float)rangeLeft;                    _qe.From = startPos;                  _qe.Delay = Q.Delay + E.Delay + Player.Distance(from) / E.Speed;                    var qePred = _qe.GetPrediction(qeTarget);                  var projection = qePred.UnitPosition.To2D().ProjectOn(startPos.To2D()' endPos.To2D());                    if (!projection.IsOnSegment || !(projection.LinePoint.Distance(qePred.UnitPosition.To2D()) < _qe.Width))                      return;                    if (qePred.Hitchance >= HitChance.Medium)                  {                      Vector2 wtsPlayer = Drawing.WorldToScreen(Player.Position);                      Vector2 wtsPred = Drawing.WorldToScreen(endPos);                      Render.Circle.DrawCircle(startPos' Q.Width/2' Color.Aquamarine);                      Render.Circle.DrawCircle(endPos' Q.Width/2' Color.SpringGreen);                      Drawing.DrawLine(wtsPlayer' wtsPred' 1' Color.LawnGreen);                  }                }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var wts in from unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(2000) && !x.IsDead && x.IsEnemy).OrderByDescending(GetComboDamage)                          let health = unit.Health + unit.HPRegenRate + 10                          where Get_Ult_Dmg(unit) > health                          select Drawing.WorldToScreen(unit.Position))                  {                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var wts in from unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(2000) && !x.IsDead && x.IsEnemy).OrderByDescending(GetComboDamage)                          let health = unit.Health + unit.HPRegenRate + 10                          where Get_Ult_Dmg(unit) > health                          select Drawing.WorldToScreen(unit.Position))                  {                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_R_Killable"' true).GetValue<bool>() && R.IsReady())              {                  foreach (var wts in from unit in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(2000) && !x.IsDead && x.IsEnemy).OrderByDescending(GetComboDamage)                          let health = unit.Health + unit.HPRegenRate + 10                          where Get_Ult_Dmg(unit) > health                          select Drawing.WorldToScreen(unit.Position))                  {                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "KILL!!!");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,AntiGapcloser_OnEnemyGapcloser,The following statement contains a magic number: W.LastCastAttemptT = Environment.TickCount + 500;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (!unit.IsMe || !E.IsReady() || (spell.SData.Name != "SyndraQ") ||                  Environment.TickCount - _qe.LastCastAttemptT >= 300)                  return;
Magic Number,xSaliceReligionAIO.Champions,Syndra,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Syndra.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: W.LastCastAttemptT = Environment.TickCount + 500;
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHitQ"' "Last hit with Q!"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Switch_1"' "Line Mode"' true).SetValue(new KeyBind("U".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Switch_2"' "Coax Mode"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Escape"' "W To Mouse Escape"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Require_QE"' "Require both Q/E to hit on W Harass"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Follow_Combo"' "Follow W in Line Combo"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W swap if health below"' true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Place_line"' "R Range behind target in Line"' true).SetValue(new Slider(400' 250' 550)));                      rMenu.AddItem(new MenuItem("R_Back"' "R Swap if Enemy Is dead"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("useR_Health"' "Use R swap if health below"' true).SetValue(new Slider(10)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Require_QE"' "Require both Q/E to hit on W Harass"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Follow_Combo"' "Follow W in Line Combo"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W swap if health below"' true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Place_line"' "R Range behind target in Line"' true).SetValue(new Slider(400' 250' 550)));                      rMenu.AddItem(new MenuItem("R_Back"' "R Swap if Enemy Is dead"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("useR_Health"' "Use R swap if health below"' true).SetValue(new Slider(10)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Require_QE"' "Require both Q/E to hit on W Harass"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Follow_Combo"' "Follow W in Line Combo"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W swap if health below"' true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Place_line"' "R Range behind target in Line"' true).SetValue(new Slider(400' 250' 550)));                      rMenu.AddItem(new MenuItem("R_Back"' "R Swap if Enemy Is dead"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("useR_Health"' "Use R swap if health below"' true).SetValue(new Slider(10)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Require_QE"' "Require both Q/E to hit on W Harass"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Follow_Combo"' "Follow W in Line Combo"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W swap if health below"' true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Place_line"' "R Range behind target in Line"' true).SetValue(new Slider(400' 250' 550)));                      rMenu.AddItem(new MenuItem("R_Back"' "R Swap if Enemy Is dead"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("useR_Health"' "Use R swap if health below"' true).SetValue(new Slider(10)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  var wMenu = new Menu("WMenu"' "WMenu");                  {                      wMenu.AddItem(new MenuItem("W_Require_QE"' "Require both Q/E to hit on W Harass"' true).SetValue(true));                      wMenu.AddItem(new MenuItem("W_Follow_Combo"' "Follow W in Line Combo"' true).SetValue(false));                      wMenu.AddItem(new MenuItem("useW_Health"' "Use W swap if health below"' true).SetValue(new Slider(25)));                      spellMenu.AddSubMenu(wMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_Place_line"' "R Range behind target in Line"' true).SetValue(new Slider(400' 250' 550)));                      rMenu.AddItem(new MenuItem("R_Back"' "R Swap if Enemy Is dead"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("useR_Health"' "Use R swap if health below"' true).SetValue(new Slider(10)));                        //evading spells                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                              dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "R_Dodge"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          rMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"' true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useE_minHit"' "Use E if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E"' true).SetValue(true));                  farm.AddItem(new MenuItem("LaneClear_useE_minHit"' "Use E if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_W"' "Draw W"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Current_Mode"' "Draw current Mode"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.Q) * 2;
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (E.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.E) * 2;
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if ((target.Health / target.MaxHealth * 100) <= 50)                  comboDamage += CalcPassive(target);
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if ((target.Health / target.MaxHealth * 100) <= 50)                  comboDamage += CalcPassive(target);
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "zedulttargetmark"))              {                  if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if(R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if(R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "zedulttargetmark"))              {                  if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if(R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if(R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "zedulttargetmark"))              {                  if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if(R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if(R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "zedulttargetmark"))              {                  if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if(R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if(R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (HasBuff(target' "zedulttargetmark"))              {                  if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if(R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if(R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                    if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if (R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if (R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                    if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if (R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if (R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                    if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if (R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if (R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                    if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if (R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if (R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: if (R.IsReady())              {                  comboDamage += Player.GetSpellDamage(target' SpellSlot.R);                    if (R.Level == 1)                      comboDamage += comboDamage * 1.2;                  else if (R.Level == 2)                      comboDamage += comboDamage * 1.35;                  else if (R.Level == 3)                      comboDamage += comboDamage * 1.5;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GetComboDamage,The following statement contains a magic number: return (float)(comboDamage + Player.GetAutoAttackDamage(target) * 2);
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CalcPassive,The following statement contains a magic number: if (Player.Level > 16)              {                  double hp = target.MaxHealth * .1;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else if (Player.Level > 6)              {                  double hp = target.MaxHealth * .08;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else              {                  double hp = target.MaxHealth * .06;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CalcPassive,The following statement contains a magic number: if (Player.Level > 16)              {                  double hp = target.MaxHealth * .1;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else if (Player.Level > 6)              {                  double hp = target.MaxHealth * .08;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else              {                  double hp = target.MaxHealth * .06;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CalcPassive,The following statement contains a magic number: if (Player.Level > 16)              {                  double hp = target.MaxHealth * .1;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else if (Player.Level > 6)              {                  double hp = target.MaxHealth * .08;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else              {                  double hp = target.MaxHealth * .06;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CalcPassive,The following statement contains a magic number: if (Player.Level > 16)              {                  double hp = target.MaxHealth * .1;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else if (Player.Level > 6)              {                  double hp = target.MaxHealth * .08;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else              {                  double hp = target.MaxHealth * .06;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CalcPassive,The following statement contains a magic number: if (Player.Level > 16)              {                  double hp = target.MaxHealth * .1;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else if (Player.Level > 6)              {                  double hp = target.MaxHealth * .08;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }              else              {                  double hp = target.MaxHealth * .06;                  dmg += Player.CalcDamage(target' Damage.DamageType.Magical' hp);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following statement contains a magic number: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The following statement contains a magic number: if (W.IsReady() && WSpell.ToggleState == 0)              {                  Cast_W("Coax"' useQ' useE);                  _coaxDelay = Environment.TickCount + 500;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The following statement contains a magic number: if (WShadow.Distance(target.Position) > R.Range - 100)              {              }              else              {                  if (useQ && (_qCooldown - Game.Time) > (QSpell.Cooldown / 3))                      return;                  if (useE && !E.IsReady())                      return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The following statement contains a magic number: if (WShadow.Distance(target.Position) > R.Range - 100)              {              }              else              {                  if (useQ && (_qCooldown - Game.Time) > (QSpell.Cooldown / 3))                      return;                  if (useE && !E.IsReady())                      return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The following statement contains a magic number: if (WShadow != null && HasEnergy(Q.IsReady() && useQ' false' E.IsReady() && useE) && Environment.TickCount - _coaxDelay > 0)              {                  if (WSpell.ToggleState == 2 && WShadow.Distance(target.Position) < R.Range)                  {                      W.Cast(packets());                      Utility.DelayAction.Add(50' () => R.Cast(target' packets()));                      Utility.DelayAction.Add(300' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The following statement contains a magic number: if (WShadow != null && HasEnergy(Q.IsReady() && useQ' false' E.IsReady() && useE) && Environment.TickCount - _coaxDelay > 0)              {                  if (WSpell.ToggleState == 2 && WShadow.Distance(target.Position) < R.Range)                  {                      W.Cast(packets());                      Utility.DelayAction.Add(50' () => R.Cast(target' packets()));                      Utility.DelayAction.Add(300' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CoaxCombo,The following statement contains a magic number: if (WShadow != null && HasEnergy(Q.IsReady() && useQ' false' E.IsReady() && useE) && Environment.TickCount - _coaxDelay > 0)              {                  if (WSpell.ToggleState == 2 && WShadow.Distance(target.Position) < R.Range)                  {                      W.Cast(packets());                      Utility.DelayAction.Add(50' () => R.Cast(target' packets()));                      Utility.DelayAction.Add(300' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,The following statement contains a magic number: if (HasEnergy(Q.IsReady() && useQ' W.IsReady()' E.IsReady() && useE))              {                  var pred = Prediction.GetPrediction(target' 250f);                    if (Environment.TickCount - R.LastCastAttemptT > Game.Ping && RSpell.ToggleState == 0 && W.IsReady())                  {                      R.Cast(target' packets());                      R.LastCastAttemptT = Environment.TickCount + 300;                      return;                  }                    if (HasBuff(target' "zedulttargetmark"))                  {                        if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - R.LastCastAttemptT > 0 && Environment.TickCount - W.LastCastAttemptT > Game.Ping)                      {                          var dist = menu.Item("R_Place_line"' true).GetValue<Slider>().Value;                          var behindVector = Player.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * dist;                          //Game.PrintChat("dist: " + dist);                            if ((useE && pred.Hitchance >= HitChance.Medium) ||                              Q.GetPrediction(target).Hitchance >= HitChance.Medium)                          {                              W.Cast(behindVector);                              W.LastCastAttemptT = Environment.TickCount + 300;                                _predWq = useQ ? Q.GetPrediction(target).UnitPosition : Vector3.Zero;                                _willEHit = useE;                                Utility.DelayAction.Add(400' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })));                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,The following statement contains a magic number: if (HasEnergy(Q.IsReady() && useQ' W.IsReady()' E.IsReady() && useE))              {                  var pred = Prediction.GetPrediction(target' 250f);                    if (Environment.TickCount - R.LastCastAttemptT > Game.Ping && RSpell.ToggleState == 0 && W.IsReady())                  {                      R.Cast(target' packets());                      R.LastCastAttemptT = Environment.TickCount + 300;                      return;                  }                    if (HasBuff(target' "zedulttargetmark"))                  {                        if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - R.LastCastAttemptT > 0 && Environment.TickCount - W.LastCastAttemptT > Game.Ping)                      {                          var dist = menu.Item("R_Place_line"' true).GetValue<Slider>().Value;                          var behindVector = Player.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * dist;                          //Game.PrintChat("dist: " + dist);                            if ((useE && pred.Hitchance >= HitChance.Medium) ||                              Q.GetPrediction(target).Hitchance >= HitChance.Medium)                          {                              W.Cast(behindVector);                              W.LastCastAttemptT = Environment.TickCount + 300;                                _predWq = useQ ? Q.GetPrediction(target).UnitPosition : Vector3.Zero;                                _willEHit = useE;                                Utility.DelayAction.Add(400' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })));                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LineCombo,The following statement contains a magic number: if (HasEnergy(Q.IsReady() && useQ' W.IsReady()' E.IsReady() && useE))              {                  var pred = Prediction.GetPrediction(target' 250f);                    if (Environment.TickCount - R.LastCastAttemptT > Game.Ping && RSpell.ToggleState == 0 && W.IsReady())                  {                      R.Cast(target' packets());                      R.LastCastAttemptT = Environment.TickCount + 300;                      return;                  }                    if (HasBuff(target' "zedulttargetmark"))                  {                        if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - R.LastCastAttemptT > 0 && Environment.TickCount - W.LastCastAttemptT > Game.Ping)                      {                          var dist = menu.Item("R_Place_line"' true).GetValue<Slider>().Value;                          var behindVector = Player.ServerPosition - Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * dist;                          //Game.PrintChat("dist: " + dist);                            if ((useE && pred.Hitchance >= HitChance.Medium) ||                              Q.GetPrediction(target).Hitchance >= HitChance.Medium)                          {                              W.Cast(behindVector);                              W.LastCastAttemptT = Environment.TickCount + 300;                                _predWq = useQ ? Q.GetPrediction(target).UnitPosition : Vector3.Zero;                                _willEHit = useE;                                Utility.DelayAction.Add(400' () => menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" })));                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CheckShouldSwap,The following statement contains a magic number: if (RShadow != null)              {                  if (GetHealthPercent() < rHp && RSpell.ToggleState == 2 && countEnemiesNearPosition(RShadow.ServerPosition' 400) < 1)                  {                      R.Cast(packets());                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CheckShouldSwap,The following statement contains a magic number: if (RShadow != null)              {                  if (GetHealthPercent() < rHp && RSpell.ToggleState == 2 && countEnemiesNearPosition(RShadow.ServerPosition' 400) < 1)                  {                      R.Cast(packets());                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CheckShouldSwap,The following statement contains a magic number: if (WShadow != null)              {                  if (GetHealthPercent() < wHp && WSpell.ToggleState == 2 && countEnemiesNearPosition(WShadow.ServerPosition' 400) < 1)                      W.Cast(packets());              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,CheckShouldSwap,The following statement contains a magic number: if (WShadow != null)              {                  if (GetHealthPercent() < wHp && WSpell.ToggleState == 2 && countEnemiesNearPosition(WShadow.ServerPosition' 400) < 1)                      W.Cast(packets());              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Harass,The following statement contains a magic number: if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))              {                  if (useW)                  {                      Cast_W("Harass"' useQ' useE);                        if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                      {                          //Game.PrintChat("RAWR");                          Cast_Q();                      }                  }                  else                  {                      if(useQ)                          Cast_Q();                  }                    if (useE)                      Cast_E();              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(W.Range + Q.Range) && !x.IsDead && !x.HasBuffOfType(BuffType.Invulnerability)))              {                  //WQE                  if ((Player.GetSpellDamage(target' SpellSlot.Q) + Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && W.IsReady() && Q.IsReady() && E.IsReady())                  {                      if (menu.Item("Use_W_KS"' true).GetValue<bool>())                          Cast_W("Combo"' true' true);                      else                      {                          Cast_Q(target);                          Cast_E(target);                      }                  }                    //WQ                  if (Q.IsKillable(target) && Player.Distance(target.Position) > Q.Range && Q.IsReady() && W.IsReady()){                      if (menu.Item("Use_W_KS"' true).GetValue<bool>())                          Cast_W("Combo"' true' true);                      else                      {                          Cast_Q(target);                      }                  }                  //WE                  if (E.IsKillable(target) && Player.Distance(target.Position) > E.Range && E.IsReady() && W.IsReady())                  {                      if (menu.Item("Use_W_KS"' true).GetValue<bool>())                          Cast_W("Combo"' true' true);                      else                      {                          Cast_E(target);                      }                  }                  //Q                  if (Q.IsKillable(target) && Player.Distance(target.Position) < Q.Range && Q.IsReady())                  {                      Cast_Q(target);                  }                  //E                  if (E.IsKillable(target) && Player.Distance(target.Position) < E.Range && E.IsReady())                  {                      Cast_E(target);                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_Q,The following statement contains a magic number: var qTarget = TargetSelector.GetTarget(Q.Range - 50' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_Q,The following statement contains a magic number: if (qTarget != null)              {                  Q.UpdateSourcePosition(Player.ServerPosition' Player.ServerPosition);                  Q.Cast(qTarget' packets());                  Q.LastCastAttemptT = Environment.TickCount + 300;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_E,The following statement contains a magic number: E.LastCastAttemptT = Environment.TickCount + 300;
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: var target = TargetSelector.GetTarget(Q.Range + W.Range - 100' TargetSelector.DamageType.Physical);
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: float range = Q.Range + W.Range - 100;
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - W.LastCastAttemptT > 0)              {                  if (Player.Distance(target.Position) < W.Range + target.BoundingRadius)                  {                      if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(target.Position) < W.Range)                      {                          if (IsPassWall(Player.ServerPosition' target.Position))                              return;                            W.Cast(target);                          W.LastCastAttemptT = Environment.TickCount + 500;                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE;                      }                  }                  else                  {                      var predE = Prediction.GetPrediction(target' .1f);                      var vec = Player.ServerPosition + Vector3.Normalize(predE.CastPosition - Player.ServerPosition) * W.Range;                        if (IsPassWall(Player.ServerPosition' vec))                          return;                        if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(vec) < W.Range)                      {                          if (useQ && useE)                          {                              if ((menu.Item("W_Require_QE"' true).GetValue<bool>() && source == "Harass") || source == "Coax")                              {                                  if (vec.Distance(target.ServerPosition) < E.Range)                                  {                                      W.Cast(vec);                                      W.LastCastAttemptT = Environment.TickCount + 500;                                  }                              }                              else                              {                                  W.Cast(vec);                                  W.LastCastAttemptT = Environment.TickCount + 500;                              }                          }                          else if (useE && vec.Distance(target.ServerPosition) < E.Range + target.BoundingRadius)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                          else if (useQ)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE && vec.Distance(target.ServerPosition) < E.Range;                                                }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - W.LastCastAttemptT > 0)              {                  if (Player.Distance(target.Position) < W.Range + target.BoundingRadius)                  {                      if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(target.Position) < W.Range)                      {                          if (IsPassWall(Player.ServerPosition' target.Position))                              return;                            W.Cast(target);                          W.LastCastAttemptT = Environment.TickCount + 500;                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE;                      }                  }                  else                  {                      var predE = Prediction.GetPrediction(target' .1f);                      var vec = Player.ServerPosition + Vector3.Normalize(predE.CastPosition - Player.ServerPosition) * W.Range;                        if (IsPassWall(Player.ServerPosition' vec))                          return;                        if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(vec) < W.Range)                      {                          if (useQ && useE)                          {                              if ((menu.Item("W_Require_QE"' true).GetValue<bool>() && source == "Harass") || source == "Coax")                              {                                  if (vec.Distance(target.ServerPosition) < E.Range)                                  {                                      W.Cast(vec);                                      W.LastCastAttemptT = Environment.TickCount + 500;                                  }                              }                              else                              {                                  W.Cast(vec);                                  W.LastCastAttemptT = Environment.TickCount + 500;                              }                          }                          else if (useE && vec.Distance(target.ServerPosition) < E.Range + target.BoundingRadius)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                          else if (useQ)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE && vec.Distance(target.ServerPosition) < E.Range;                                                }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - W.LastCastAttemptT > 0)              {                  if (Player.Distance(target.Position) < W.Range + target.BoundingRadius)                  {                      if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(target.Position) < W.Range)                      {                          if (IsPassWall(Player.ServerPosition' target.Position))                              return;                            W.Cast(target);                          W.LastCastAttemptT = Environment.TickCount + 500;                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE;                      }                  }                  else                  {                      var predE = Prediction.GetPrediction(target' .1f);                      var vec = Player.ServerPosition + Vector3.Normalize(predE.CastPosition - Player.ServerPosition) * W.Range;                        if (IsPassWall(Player.ServerPosition' vec))                          return;                        if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(vec) < W.Range)                      {                          if (useQ && useE)                          {                              if ((menu.Item("W_Require_QE"' true).GetValue<bool>() && source == "Harass") || source == "Coax")                              {                                  if (vec.Distance(target.ServerPosition) < E.Range)                                  {                                      W.Cast(vec);                                      W.LastCastAttemptT = Environment.TickCount + 500;                                  }                              }                              else                              {                                  W.Cast(vec);                                  W.LastCastAttemptT = Environment.TickCount + 500;                              }                          }                          else if (useE && vec.Distance(target.ServerPosition) < E.Range + target.BoundingRadius)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                          else if (useQ)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE && vec.Distance(target.ServerPosition) < E.Range;                                                }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - W.LastCastAttemptT > 0)              {                  if (Player.Distance(target.Position) < W.Range + target.BoundingRadius)                  {                      if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(target.Position) < W.Range)                      {                          if (IsPassWall(Player.ServerPosition' target.Position))                              return;                            W.Cast(target);                          W.LastCastAttemptT = Environment.TickCount + 500;                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE;                      }                  }                  else                  {                      var predE = Prediction.GetPrediction(target' .1f);                      var vec = Player.ServerPosition + Vector3.Normalize(predE.CastPosition - Player.ServerPosition) * W.Range;                        if (IsPassWall(Player.ServerPosition' vec))                          return;                        if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(vec) < W.Range)                      {                          if (useQ && useE)                          {                              if ((menu.Item("W_Require_QE"' true).GetValue<bool>() && source == "Harass") || source == "Coax")                              {                                  if (vec.Distance(target.ServerPosition) < E.Range)                                  {                                      W.Cast(vec);                                      W.LastCastAttemptT = Environment.TickCount + 500;                                  }                              }                              else                              {                                  W.Cast(vec);                                  W.LastCastAttemptT = Environment.TickCount + 500;                              }                          }                          else if (useE && vec.Distance(target.ServerPosition) < E.Range + target.BoundingRadius)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                          else if (useQ)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE && vec.Distance(target.ServerPosition) < E.Range;                                                }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Cast_W,The following statement contains a magic number: if (WSpell.ToggleState == 0 && W.IsReady() && Environment.TickCount - W.LastCastAttemptT > 0)              {                  if (Player.Distance(target.Position) < W.Range + target.BoundingRadius)                  {                      if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(target.Position) < W.Range)                      {                          if (IsPassWall(Player.ServerPosition' target.Position))                              return;                            W.Cast(target);                          W.LastCastAttemptT = Environment.TickCount + 500;                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE;                      }                  }                  else                  {                      var predE = Prediction.GetPrediction(target' .1f);                      var vec = Player.ServerPosition + Vector3.Normalize(predE.CastPosition - Player.ServerPosition) * W.Range;                        if (IsPassWall(Player.ServerPosition' vec))                          return;                        if ((!useQ || Q.IsReady()) && (!useE || E.IsReady()) && Player.Distance(vec) < W.Range)                      {                          if (useQ && useE)                          {                              if ((menu.Item("W_Require_QE"' true).GetValue<bool>() && source == "Harass") || source == "Coax")                              {                                  if (vec.Distance(target.ServerPosition) < E.Range)                                  {                                      W.Cast(vec);                                      W.LastCastAttemptT = Environment.TickCount + 500;                                  }                              }                              else                              {                                  W.Cast(vec);                                  W.LastCastAttemptT = Environment.TickCount + 500;                              }                          }                          else if (useE && vec.Distance(target.ServerPosition) < E.Range + target.BoundingRadius)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                          else if (useQ)                          {                              W.Cast(vec);                              W.LastCastAttemptT = Environment.TickCount + 500;                          }                            _predWq = useQ ? target.Position : Vector3.Zero;                          _willEHit = useE && vec.Distance(target.ServerPosition) < E.Range;                                                }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LastHitQ,The following statement contains a magic number: foreach(var minion in allMinionsQ){                  var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / Q.Speed));                    if (Player.GetSpellDamage(allMinionsQ[0]' SpellSlot.Q) * .6 > predHealth + 5)                      Q.Cast(minion);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LastHitQ,The following statement contains a magic number: foreach(var minion in allMinionsQ){                  var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / Q.Speed));                    if (Player.GetSpellDamage(allMinionsQ[0]' SpellSlot.Q) * .6 > predHealth + 5)                      Q.Cast(minion);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,LastHitQ,The following statement contains a magic number: foreach(var minion in allMinionsQ){                  var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / Q.Speed));                    if (Player.GetSpellDamage(allMinionsQ[0]' SpellSlot.Q) * .6 > predHealth + 5)                      Q.Cast(minion);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Farm,The following statement contains a magic number: if (useQ && Q.IsReady())              {                  Q.UpdateSourcePosition(Player.ServerPosition' Player.ServerPosition);                  var pred = Q.GetLineFarmLocation(allMinionsQ);                    if (pred.MinionsHit > 2)                      Q.Cast(pred.Position);              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Switch_1"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                  _lasttick = Environment.TickCount + 300;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Switch_2"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                  _lasttick = Environment.TickCount + 300;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Switch_2"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                  _lasttick = Environment.TickCount + 300;                  return;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,ModeSwitch,The following statement contains a magic number: if (menu.Item("Combo_Switch"' true).GetValue<KeyBind>().Active && lasttime > Game.Ping)              {                  if (mode == 0)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 1));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 1)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 2));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 2)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 3));                      _lasttick = Environment.TickCount + 300;                  }                  else if (mode == 3)                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }' 4));                      _lasttick = Environment.TickCount + 300;                  }                  else                  {                      menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                      _lasttick = Environment.TickCount + 300;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Game_OnGameUpdate,The following statement contains a magic number: if (menu.Item("Escape"' true).GetValue<KeyBind>().Active && W.IsReady())              {                  var vec = Player.ServerPosition + (Game.CursorPos - Player.ServerPosition)*W.Range;                    if (WSpell.ToggleState == 0)                      W.Cast(vec);                  else if(WSpell.ToggleState == 2)                      W.Cast(packets());              }              else if (menu.Item("ComboActive"' true).GetValue<KeyBind>().Active)              {                  Combo();              }              else              {                  if (menu.Item("LastHitQ"' true).GetValue<KeyBind>().Active)                      LastHitQ();                    if (menu.Item("LaneClearActive"' true).GetValue<KeyBind>().Active)                      Farm();                    if (menu.Item("HarassActiveT"' true).GetValue<KeyBind>().Active)                      Harass();                    if (menu.Item("HarassActive"' true).GetValue<KeyBind>().Active)                      Harass();              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > R.Range || !R.IsReady() || RSpell.ToggleState == 2)                      return;                    if (menu.Item(args.SData.Name + "R_Dodge"' true).GetValue<bool>() && args.SData.Name == "SyndraR")                  {                      Utility.DelayAction.Add(150' () => R.Cast(unit' packets()));                      return;                  }                    if (menu.Item(args.SData.Name + "R_Dodge"' true).GetValue<bool>())                      R.Cast(unit' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > R.Range || !R.IsReady() || RSpell.ToggleState == 2)                      return;                    if (menu.Item(args.SData.Name + "R_Dodge"' true).GetValue<bool>() && args.SData.Name == "SyndraR")                  {                      Utility.DelayAction.Add(150' () => R.Cast(unit' packets()));                      return;                  }                    if (menu.Item(args.SData.Name + "R_Dodge"' true).GetValue<bool>())                      R.Cast(unit' packets());              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (args.SData.Name == "ZedShadowDash")              {                  if (W.LastCastAttemptT - Environment.TickCount > 0)                  {                      if (_predWq != Vector3.Zero)                      {                          Q.Cast(_predWq' packets());                          Q.LastCastAttemptT = Environment.TickCount + 300;                          _predWq = Vector3.Zero;                      }                        if (_willEHit)                          E.Cast(packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GameObject_OnCreate,The following statement contains a magic number: if (sender.Name == "Zed_Base_R_buf_tell.troy")              {                  if (RSpell.ToggleState == 2 && RShadow != null && menu.Item("R_Back"' true).GetValue<bool>())                      Utility.DelayAction.Add(500' () => R.Cast(packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GameObject_OnCreate,The following statement contains a magic number: if (sender.Name == "Zed_Base_R_buf_tell.troy")              {                  if (RSpell.ToggleState == 2 && RShadow != null && menu.Item("R_Back"' true).GetValue<bool>())                      Utility.DelayAction.Add(500' () => R.Cast(packets()));              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GameObject_OnDelete,The following statement contains a magic number: if (sender.Name == "Zed_Clone_idle.troy" && _currentWShadow != Vector3.Zero && WShadow.Distance(sender.Position) < 100)              {                  _currentWShadow = Vector3.Zero;              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,GameObject_OnDelete,The following statement contains a magic number: if (RShadow != null)              {                  if (sender.Name == "Zed_Clone_idle.troy" && _currentRShadow != Vector3.Zero && RShadow.Distance(sender.Position) < 100)                  {                      _currentRShadow = Vector3.Zero;                      //Game.PrintChat("R Deleted");                  }              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_W"' true).GetValue<bool>())                  if (W.Level > 0)                      Render.Circle.DrawCircle(Player.Position' W.Range - 2' W.IsReady() ? Color.Green : Color.Red);
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Current_Mode"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  int mode = menu.Item("Combo_mode"' true).GetValue<StringList>().SelectedIndex;                  if (mode == 0)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal ");                  else if (mode == 1)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Line Combo");                  else if (mode == 2)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Coax");                  else if (mode == 3)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Ult no W");                  else if (mode == 4)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Normal With ult");              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SetSpells,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 475);
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SetSpells,The following statement contains a magic number: Q2 = new Spell(SpellSlot.Q' 1050);
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SetSpells,The following statement contains a magic number: W = new Spell(SpellSlot.W' 400);
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SetSpells,The following statement contains a magic number: E = new Spell(SpellSlot.E' 475);
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SetSpells,The following statement contains a magic number: R = new Spell(SpellSlot.R' 1200);
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  key.AddItem(new MenuItem("ComboActive"' "Combo!"' true).SetValue(new KeyBind(32' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActive"' "Harass!"' true).SetValue(new KeyBind("C".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("HarassActiveT"' "Harass (toggle)!"' true).SetValue(new KeyBind("N".ToCharArray()[0]' KeyBindType.Toggle)));                  key.AddItem(new MenuItem("LaneClearActive"' "Farm!"' true).SetValue(new KeyBind("V".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("LastHit"' "Last hit"' true).SetValue(new KeyBind("A".ToCharArray()[0]' KeyBindType.Press)));                  key.AddItem(new MenuItem("Flee"' "Escape with E"' true).SetValue(new KeyBind("Z".ToCharArray()[0]' KeyBindType.Press)));                  //add to menu                  menu.AddSubMenu(key);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto"' "Auto Q Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_Auto_third"' "Use 3rd Q in Auto Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_UnderTower"' "Auto Q under Tower"' true).SetValue(false));                      qMenu.AddItem(new MenuItem("Q_Stack"' "Auto 3rd Q stack Toggle"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_thirdE"' "Priortize E->3rd Q over Single Q"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      //wind wall                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          SpellDatabase.CreateSpellDatabase();                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "W_Wall"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                                            var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "W_Wall"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "W_Wall"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "W_Wall"' r.MissileSpellName' true).SetValue(false));                              else                                   dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                            }                          wMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(250' 1' 475)));                      //e Evade                      var dangerous = new Menu("Dodge Spells"' "Dodge Spells");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "E"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "E"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "E"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "E"' r.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          eMenu.AddSubMenu(dangerous);                      }                      eMenu.AddItem(new MenuItem("E_GapClose"' "Use E to gapclose"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Turret"' "Don't E into Turret Toggle"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("delayR"' "Delay R on Killable Enemey"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_MEC"' "Auto R if >= Enemies' 0 = off"' true).SetValue(new Slider(3' 0' 5)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto"' "Auto Q Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_Auto_third"' "Use 3rd Q in Auto Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_UnderTower"' "Auto Q under Tower"' true).SetValue(false));                      qMenu.AddItem(new MenuItem("Q_Stack"' "Auto 3rd Q stack Toggle"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_thirdE"' "Priortize E->3rd Q over Single Q"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      //wind wall                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          SpellDatabase.CreateSpellDatabase();                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "W_Wall"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                                            var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "W_Wall"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "W_Wall"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "W_Wall"' r.MissileSpellName' true).SetValue(false));                              else                                   dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                            }                          wMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(250' 1' 475)));                      //e Evade                      var dangerous = new Menu("Dodge Spells"' "Dodge Spells");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "E"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "E"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "E"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "E"' r.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          eMenu.AddSubMenu(dangerous);                      }                      eMenu.AddItem(new MenuItem("E_GapClose"' "Use E to gapclose"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Turret"' "Don't E into Turret Toggle"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("delayR"' "Delay R on Killable Enemey"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_MEC"' "Auto R if >= Enemies' 0 = off"' true).SetValue(new Slider(3' 0' 5)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto"' "Auto Q Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_Auto_third"' "Use 3rd Q in Auto Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_UnderTower"' "Auto Q under Tower"' true).SetValue(false));                      qMenu.AddItem(new MenuItem("Q_Stack"' "Auto 3rd Q stack Toggle"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_thirdE"' "Priortize E->3rd Q over Single Q"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      //wind wall                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          SpellDatabase.CreateSpellDatabase();                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "W_Wall"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                                            var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "W_Wall"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "W_Wall"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "W_Wall"' r.MissileSpellName' true).SetValue(false));                              else                                   dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                            }                          wMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(250' 1' 475)));                      //e Evade                      var dangerous = new Menu("Dodge Spells"' "Dodge Spells");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "E"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "E"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "E"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "E"' r.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          eMenu.AddSubMenu(dangerous);                      }                      eMenu.AddItem(new MenuItem("E_GapClose"' "Use E to gapclose"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Turret"' "Don't E into Turret Toggle"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("delayR"' "Delay R on Killable Enemey"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_MEC"' "Auto R if >= Enemies' 0 = off"' true).SetValue(new Slider(3' 0' 5)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  var qMenu = new Menu("QMenu"' "QMenu");                  {                      qMenu.AddItem(new MenuItem("Q_Auto"' "Auto Q Toggle"' true).SetValue(new KeyBind("T".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_Auto_third"' "Use 3rd Q in Auto Q"' true).SetValue(true));                      qMenu.AddItem(new MenuItem("Q_UnderTower"' "Auto Q under Tower"' true).SetValue(false));                      qMenu.AddItem(new MenuItem("Q_Stack"' "Auto 3rd Q stack Toggle"' true).SetValue(new KeyBind("I".ToCharArray()[0]' KeyBindType.Toggle)));                      qMenu.AddItem(new MenuItem("Q_thirdE"' "Priortize E->3rd Q over Single Q"' true).SetValue(true));                      spellMenu.AddSubMenu(qMenu);                  }                    var wMenu = new Menu("WMenu"' "WMenu");                  {                      //wind wall                      var dangerous = new Menu("Dodge Dangerous"' "Dodge Dangerous");                      {                          SpellDatabase.CreateSpellDatabase();                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "W_Wall"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                                            var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "W_Wall"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "W_Wall"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "W_Wall"' r.MissileSpellName' true).SetValue(false));                              else                                   dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "W_Wall"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                            }                          wMenu.AddSubMenu(dangerous);                      }                      spellMenu.AddSubMenu(wMenu);                  }                    var eMenu = new Menu("EMenu"' "EMenu");                  {                      eMenu.AddItem(new MenuItem("E_Min_Dist"' "Min Distance to use E"' true).SetValue(new Slider(250' 1' 475)));                      //e Evade                      var dangerous = new Menu("Dodge Spells"' "Dodge Spells");                      {                          foreach (var hero in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsEnemy))                          {                              dangerous.AddSubMenu(new Menu(hero.ChampionName' hero.ChampionName));                                var q = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.Q);                              if (q != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(q.MissileSpellName + "E"' q.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.Q).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.Q).Name' true).SetValue(false));                                var w = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.W);                              if (w != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(w.MissileSpellName + "E"' w.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.W).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.W).Name' true).SetValue(false));                                var e = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.E);                              if (e != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(e.MissileSpellName + "E"' e.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.E).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.E).Name' true).SetValue(false));                                var r = SpellDatabase.Spells.FirstOrDefault(x => x.ChampionName == hero.ChampionName && x.Slot == SpellSlot.R);                              if (r != null)                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(r.MissileSpellName + "E"' r.MissileSpellName' true).SetValue(false));                              else                                  dangerous.SubMenu(hero.ChampionName).AddItem(new MenuItem(hero.Spellbook.GetSpell(SpellSlot.R).Name + "E"' hero.Spellbook.GetSpell(SpellSlot.R).Name' true).SetValue(false));                          }                          eMenu.AddSubMenu(dangerous);                      }                      eMenu.AddItem(new MenuItem("E_GapClose"' "Use E to gapclose"' true).SetValue(true));                      eMenu.AddItem(new MenuItem("E_Turret"' "Don't E into Turret Toggle"' true).SetValue(new KeyBind("H".ToCharArray()[0]' KeyBindType.Toggle)));                      spellMenu.AddSubMenu(eMenu);                  }                    var rMenu = new Menu("RMenu"' "RMenu");                  {                      rMenu.AddItem(new MenuItem("R_If_Killable"' "R If Enemy Is killable"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("delayR"' "Delay R on Killable Enemey"' true).SetValue(true));                      rMenu.AddItem(new MenuItem("R_MEC"' "Auto R if >= Enemies' 0 = off"' true).SetValue(new Slider(3' 0' 5)));                      spellMenu.AddSubMenu(rMenu);                  }                  //add to menu                  menu.AddSubMenu(spellMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(2' 1' 3)));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("ComboR_MEC"' "R if >= Enemies"' true).SetValue(new Slider(3' 1' 5)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(2' 1' 3)));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("ComboR_MEC"' "R if >= Enemies"' true).SetValue(new Slider(3' 1' 5)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(2' 1' 3)));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("ComboR_MEC"' "R if >= Enemies"' true).SetValue(new Slider(3' 1' 5)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  combo.AddItem(new MenuItem("UseQCombo"' "Use Q"' true).SetValue(true));                  combo.AddItem(new MenuItem("qHit"' "Q HitChance"' true).SetValue(new Slider(2' 1' 3)));                  combo.AddItem(new MenuItem("UseECombo"' "Use E"' true).SetValue(true));                  combo.AddItem(new MenuItem("UseRCombo"' "Use R"' true).SetValue(true));                  combo.AddItem(new MenuItem("ComboR_MEC"' "R if >= Enemies"' true).SetValue(new Slider(3' 1' 5)));                  //add to menu                  menu.AddSubMenu(combo);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(2' 1' 3)));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  harass.AddItem(new MenuItem("UseQHarass"' "Use Q"' true).SetValue(true));                  harass.AddItem(new MenuItem("qHit2"' "Q HitChance"' true).SetValue(new Slider(2' 1' 3)));                  harass.AddItem(new MenuItem("UseEHarass"' "Use E"' true).SetValue(true));                  //add to menu                  menu.AddSubMenu(harass);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQLast"' "Use Q Last hit"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseELast"' "Use E Last hit"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseQ3Farm"' "Use Q3 Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("E_UnderTower_Farm"' "E under Tower"' true).SetValue(false));                  farm.AddItem(new MenuItem("LaneClear_useQ_minHit"' "Use Q if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  farm.AddItem(new MenuItem("UseQLast"' "Use Q Last hit"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseELast"' "Use E Last hit"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseQFarm"' "Use Q Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseQ3Farm"' "Use Q3 Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("UseEFarm"' "Use E Farm"' true).SetValue(true));                  farm.AddItem(new MenuItem("E_UnderTower_Farm"' "E under Tower"' true).SetValue(false));                  farm.AddItem(new MenuItem("LaneClear_useQ_minHit"' "Use Q if min. hit"' true).SetValue(new Slider(2' 1' 6)));                  //add to menu                  menu.AddSubMenu(farm);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_AutoQ"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_AutoQ"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_AutoQ"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LoadMenu,The following statement contains a magic number: {                  drawMenu.AddItem(new MenuItem("Draw_Disabled"' "Disable All"' true).SetValue(false));                  drawMenu.AddItem(new MenuItem("Draw_Q"' "Draw Q"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_Q2"' "Draw Q Extended"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_E"' "Draw E"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_R"' "Draw R"' true).SetValue(true));                  drawMenu.AddItem(new MenuItem("Draw_AutoQ"' "Draw Modes"' true).SetValue(true));                    MenuItem drawComboDamageMenu = new MenuItem("Draw_ComboDamage"' "Draw Combo Damage"' true).SetValue(true);                  MenuItem drawFill = new MenuItem("Draw_Fill"' "Draw Combo Damage Fill"' true).SetValue(new Circle(true' Color.FromArgb(90' 255' 169' 4)));                  drawMenu.AddItem(drawComboDamageMenu);                  drawMenu.AddItem(drawFill);                  DamageIndicator.DamageToUnit = GetComboDamage;                  DamageIndicator.Enabled = drawComboDamageMenu.GetValue<bool>();                  DamageIndicator.Fill = drawFill.GetValue<Circle>().Active;                  DamageIndicator.FillColor = drawFill.GetValue<Circle>().Color;                  drawComboDamageMenu.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Enabled = eventArgs.GetNewValue<bool>();                      };                  drawFill.ValueChanged +=                      delegate(object sender' OnValueChangeEventArgs eventArgs)                      {                          DamageIndicator.Fill = eventArgs.GetNewValue<Circle>().Active;                          DamageIndicator.FillColor = eventArgs.GetNewValue<Circle>().Color;                      };                    //add to menu                  menu.AddSubMenu(drawMenu);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GetComboDamage,The following statement contains a magic number: if (Q.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.Q) * 2;
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GetComboDamage,The following statement contains a magic number: if (E.IsReady())                  comboDamage += Player.GetSpellDamage(target' SpellSlot.E) * 1.5;
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GetComboDamage,The following statement contains a magic number: return (float)(comboDamage + Player.GetAutoAttackDamage(target) * 3);
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,UseSpells,The following statement contains a magic number: if (source == "Combo")              {                  if (itemTarget != null)                  {                      ActiveItems.Target = itemTarget;                        //see if killable                      if (dmg > itemTarget.Health - 50)                          ActiveItems.KillableTarget = true;                        ActiveItems.UseTargetted = true;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_Q,The following statement contains a magic number: if (!Q.IsReady() || Environment.TickCount - E.LastCastAttemptT < 250)                  return;
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_Q,The following statement contains a magic number: if (!ThirdQ() && target != null && target.IsValidTarget(Q.Range))              {                  if (!menu.Item("predMode"' true).GetValue<bool>())                  {                      if (Player.Distance(target.Position) < 150)                          Q.Cast(target.ServerPosition' packets());                      else                          Q.Cast(target' packets());                  }                  else                  {                      CastBasicSkillShot(Q' Q.Range' TargetSelector.DamageType.Physical' GetHitchance(source));                  }              }              else if(ThirdQ())              {                  var target2 = TargetSelector.GetTarget(Q2.Range' TargetSelector.DamageType.Physical);                  if (!target2.IsValidTarget(Q2.Range))                      return;                    if (!menu.Item("predMode"' true).GetValue<bool>())                  {                      Q2.Cast(target2' packets());                  }                  else                  {                      CastBasicSkillShot(Q2' Q2.Range' TargetSelector.DamageType.Physical' GetHitchance(source));                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The following statement contains a magic number: if (ThirdQ() && Player.ServerPosition.To2D().Distance(target.ServerPosition.To2D()) < E.Range)              {                  if (EturretCheck(target))                  {                      E.CastOnUnit(target);                      Utility.DelayAction.Add(200' () => Q.Cast(target' packets()));                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The following statement contains a magic number: if (menu.Item("E_GapClose"' true).GetValue<bool>())              {                   var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                    if (allMinionQ.Count > 0)                  {                      Obj_AI_Base bestMinion = allMinionQ[0];                      Vector3 bestVec = Player.ServerPosition + Vector3.Normalize(bestMinion.ServerPosition - Player.ServerPosition) * 475;                        foreach (var minion in allMinionQ.Where(CanCastE))                      {                          var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                            if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && target.Distance(bestVec) > target.Distance(dashVec))                          {                              bestMinion = minion;                              bestVec = dashVec;                          }                      }                      if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && bestMinion != null)                      {                          if (EturretCheck(bestMinion))                          {                              E.CastOnUnit(bestMinion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The following statement contains a magic number: if (menu.Item("E_GapClose"' true).GetValue<bool>())              {                   var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                    if (allMinionQ.Count > 0)                  {                      Obj_AI_Base bestMinion = allMinionQ[0];                      Vector3 bestVec = Player.ServerPosition + Vector3.Normalize(bestMinion.ServerPosition - Player.ServerPosition) * 475;                        foreach (var minion in allMinionQ.Where(CanCastE))                      {                          var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                            if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && target.Distance(bestVec) > target.Distance(dashVec))                          {                              bestMinion = minion;                              bestVec = dashVec;                          }                      }                      if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && bestMinion != null)                      {                          if (EturretCheck(bestMinion))                          {                              E.CastOnUnit(bestMinion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The following statement contains a magic number: if (menu.Item("E_GapClose"' true).GetValue<bool>())              {                   var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                    if (allMinionQ.Count > 0)                  {                      Obj_AI_Base bestMinion = allMinionQ[0];                      Vector3 bestVec = Player.ServerPosition + Vector3.Normalize(bestMinion.ServerPosition - Player.ServerPosition) * 475;                        foreach (var minion in allMinionQ.Where(CanCastE))                      {                          var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                            if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && target.Distance(bestVec) > target.Distance(dashVec))                          {                              bestMinion = minion;                              bestVec = dashVec;                          }                      }                      if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && bestMinion != null)                      {                          if (EturretCheck(bestMinion))                          {                              E.CastOnUnit(bestMinion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The following statement contains a magic number: if (menu.Item("E_GapClose"' true).GetValue<bool>())              {                   var allMinionQ = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                    if (allMinionQ.Count > 0)                  {                      Obj_AI_Base bestMinion = allMinionQ[0];                      Vector3 bestVec = Player.ServerPosition + Vector3.Normalize(bestMinion.ServerPosition - Player.ServerPosition) * 475;                        foreach (var minion in allMinionQ.Where(CanCastE))                      {                          var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                            if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && target.Distance(bestVec) > target.Distance(dashVec))                          {                              bestMinion = minion;                              bestVec = dashVec;                          }                      }                      if (target.Distance(Player.Position) > target.Distance(bestVec) - 50 && bestMinion != null)                      {                          if (EturretCheck(bestMinion))                          {                              E.CastOnUnit(bestMinion' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_E,The following statement contains a magic number: if (Q.IsReady() && Player.Distance(target.Position) > menu.Item("E_Min_Dist"' true).GetValue<Slider>().Value &&                  Player.Distance(target.Position) < E.Range)              {                  if (EturretCheck(target))                  {                      E.CastOnUnit(target' packets());                      Utility.DelayAction.Add(200' () => Q.Cast(target' packets()));                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,EturretCheck,The following statement contains a magic number: if (dashCheck)              {                  var dashVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition)*475;                  return !dashVec.UnderTurret(true);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_R,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range) && isKnockedUp(x)))              {                  hit = 1;                  if (dmg > target.Health && menu.Item("R_If_Killable"' true).GetValue<bool>())                  {                      if (menu.Item("delayR"' true).GetValue<bool>())                      {                          Utility.DelayAction.Add((int)(BuffDurationLeft(target)*1000 - 200)' () => R.Cast(packets()));                          R.LastCastAttemptT = Environment.TickCount;                      }                      else                      {                          R.Cast(packets());                      }                  }                    hit += ObjectManager.Get<Obj_AI_Hero>().Count(x => x.ChampionName != target.ChampionName && target.Distance(x.Position) < 400 && isKnockedUp(x));              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_R,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range) && isKnockedUp(x)))              {                  hit = 1;                  if (dmg > target.Health && menu.Item("R_If_Killable"' true).GetValue<bool>())                  {                      if (menu.Item("delayR"' true).GetValue<bool>())                      {                          Utility.DelayAction.Add((int)(BuffDurationLeft(target)*1000 - 200)' () => R.Cast(packets()));                          R.LastCastAttemptT = Environment.TickCount;                      }                      else                      {                          R.Cast(packets());                      }                  }                    hit += ObjectManager.Get<Obj_AI_Hero>().Count(x => x.ChampionName != target.ChampionName && target.Distance(x.Position) < 400 && isKnockedUp(x));              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_R,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range) && isKnockedUp(x)))              {                  hit = 1;                  if (dmg > target.Health && menu.Item("R_If_Killable"' true).GetValue<bool>())                  {                      if (menu.Item("delayR"' true).GetValue<bool>())                      {                          Utility.DelayAction.Add((int)(BuffDurationLeft(target)*1000 - 200)' () => R.Cast(packets()));                          R.LastCastAttemptT = Environment.TickCount;                      }                      else                      {                          R.Cast(packets());                      }                  }                    hit += ObjectManager.Get<Obj_AI_Hero>().Count(x => x.ChampionName != target.ChampionName && target.Distance(x.Position) < 400 && isKnockedUp(x));              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Cast_MecR,The following statement contains a magic number: foreach (var target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(R.Range) && isKnockedUp(x)))              {                  hit += ObjectManager.Get<Obj_AI_Hero>().Count(x => x.ChampionName != target.ChampionName && target.Distance(x.Position) < 400 && isKnockedUp(x));              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,AutoQ,The following statement contains a magic number: if (!Q.IsReady() || !menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active || Environment.TickCount - E.LastCastAttemptT < 250 + Game.Ping)                  return;
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,AutoQ,The following statement contains a magic number: if (!ThirdQ())              {                  var target = TargetSelector.GetTarget(Q.Range' TargetSelector.DamageType.Physical);                  if (!target.IsValidTarget(Q.Range))                      return;                    if (menu.Item("Q_UnderTower"' true).GetValue<bool>() && target.UnderTurret(true))                      return;                    if (!menu.Item("predMode"' true).GetValue<bool>())                  {                      if (Player.Distance(target.Position) < 150)                          Q.Cast(target.ServerPosition' packets());                      else                          Q.Cast(target' packets());                  }                  else                  {                      CastBasicSkillShot(Q' Q.Range' TargetSelector.DamageType.Physical' GetHitchance("Combo")' menu.Item("Q_UnderTower"' true).GetValue<bool>());                  }              }              else if (ThirdQ())              {                  var target = TargetSelector.GetTarget(Q2.Range' TargetSelector.DamageType.Physical);                  if (!target.IsValidTarget(Q2.Range))                      return;                    if (!menu.Item("predMode"' true).GetValue<bool>())                  {                      if (menu.Item("Q_UnderTower"' true).GetValue<bool>() && target.UnderTurret(true))                          return;                        Q2.Cast(target' packets());                  }                  else                  {                      CastBasicSkillShot(Q2' Q2.Range' TargetSelector.DamageType.Physical' GetHitchance("Combo")' menu.Item("Q_UnderTower"' true).GetValue<bool>());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Escape,The following statement contains a magic number: foreach (var m in minion.Where(x=> CanCastE(x) && x.Distance(Game.CursorPos) < 500).OrderBy(x => x.Distance(Game.CursorPos)))              {                  var dash = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * 475;                    if (Player.Distance(Game.CursorPos) > Player.Distance(dash) - 200)                  {                      E.CastOnUnit(m' packets());                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Escape,The following statement contains a magic number: foreach (var m in minion.Where(x=> CanCastE(x) && x.Distance(Game.CursorPos) < 500).OrderBy(x => x.Distance(Game.CursorPos)))              {                  var dash = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * 475;                    if (Player.Distance(Game.CursorPos) > Player.Distance(dash) - 200)                  {                      E.CastOnUnit(m' packets());                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Escape,The following statement contains a magic number: foreach (var m in minion.Where(x=> CanCastE(x) && x.Distance(Game.CursorPos) < 500).OrderBy(x => x.Distance(Game.CursorPos)))              {                  var dash = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * 475;                    if (Player.Distance(Game.CursorPos) > Player.Distance(dash) - 200)                  {                      E.CastOnUnit(m' packets());                      return;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q2.Range) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && EturretCheck(target))                          {                              E.Cast(target' packets());                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () => Q.Cast(target1.ServerPosition));                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (!ThirdQ() && target.IsValidTarget(Q.Range))                          {                              Q.Cast(target' packets());                          }                          else if(ThirdQ() && target.IsValidTarget(Q2.Range))                          {                              Q.Cast(target' packets());                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && EturretCheck(target))                      {                          if (E.IsReady())                          {                              E.Cast(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q2.Range) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && EturretCheck(target))                          {                              E.Cast(target' packets());                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () => Q.Cast(target1.ServerPosition));                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (!ThirdQ() && target.IsValidTarget(Q.Range))                          {                              Q.Cast(target' packets());                          }                          else if(ThirdQ() && target.IsValidTarget(Q2.Range))                          {                              Q.Cast(target' packets());                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && EturretCheck(target))                      {                          if (E.IsReady())                          {                              E.Cast(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q2.Range) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && EturretCheck(target))                          {                              E.Cast(target' packets());                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () => Q.Cast(target1.ServerPosition));                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (!ThirdQ() && target.IsValidTarget(Q.Range))                          {                              Q.Cast(target' packets());                          }                          else if(ThirdQ() && target.IsValidTarget(Q2.Range))                          {                              Q.Cast(target' packets());                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && EturretCheck(target))                      {                          if (E.IsReady())                          {                              E.Cast(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,SmartKs,The following statement contains a magic number: foreach (Obj_AI_Hero target in ObjectManager.Get<Obj_AI_Hero>().Where(x => x.IsValidTarget(Q2.Range) && !x.HasBuffOfType(BuffType.Invulnerability)).OrderByDescending(GetComboDamage))              {                  if (target != null)                  {                      //E + Q                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.Q)) >                          target.Health + 20)                      {                          if (E.IsReady() && Q.IsReady() && EturretCheck(target))                          {                              E.Cast(target' packets());                              Obj_AI_Hero target1 = target;                              Utility.DelayAction.Add(200' () => Q.Cast(target1.ServerPosition));                              return;                          }                      }                        //Q                      if ((Player.GetSpellDamage(target' SpellSlot.Q)) > target.Health + 20)                      {                          if (!ThirdQ() && target.IsValidTarget(Q.Range))                          {                              Q.Cast(target' packets());                          }                          else if(ThirdQ() && target.IsValidTarget(Q2.Range))                          {                              Q.Cast(target' packets());                          }                      }                        //E                      if (Player.Distance(target.ServerPosition) <= E.Range && (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 20 && EturretCheck(target))                      {                          if (E.IsReady())                          {                              E.Cast(target' packets());                              return;                          }                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LastHit,The following statement contains a magic number: if (useE && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 2000));                        if (predHealth <= Player.GetSpellDamage(minion' SpellSlot.E))                          E.CastOnUnit(minion' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LastHit,The following statement contains a magic number: if (useE && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 2000));                        if (predHealth <= Player.GetSpellDamage(minion' SpellSlot.E))                          E.CastOnUnit(minion' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,LastHit,The following statement contains a magic number: if (useE && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 2000));                        if (predHealth <= Player.GetSpellDamage(minion' SpellSlot.E))                          E.CastOnUnit(minion' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The following statement contains a magic number: if (useQ && useE && Q.IsReady() && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      var count = MinionManager.GetMinions(dashVec' 300' MinionTypes.All' MinionTeam.NotAlly).Count - 1;                                            if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        if (count >= min)                      {                          E.CastOnUnit(minion' packets());                          Obj_AI_Base minion1 = minion;                          Utility.DelayAction.Add(200' () => Q.Cast(minion1.ServerPosition' packets()));                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The following statement contains a magic number: if (useQ && useE && Q.IsReady() && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      var count = MinionManager.GetMinions(dashVec' 300' MinionTypes.All' MinionTeam.NotAlly).Count - 1;                                            if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        if (count >= min)                      {                          E.CastOnUnit(minion' packets());                          Obj_AI_Base minion1 = minion;                          Utility.DelayAction.Add(200' () => Q.Cast(minion1.ServerPosition' packets()));                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The following statement contains a magic number: if (useQ && useE && Q.IsReady() && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      var count = MinionManager.GetMinions(dashVec' 300' MinionTypes.All' MinionTeam.NotAlly).Count - 1;                                            if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        if (count >= min)                      {                          E.CastOnUnit(minion' packets());                          Obj_AI_Base minion1 = minion;                          Utility.DelayAction.Add(200' () => Q.Cast(minion1.ServerPosition' packets()));                      }                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The following statement contains a magic number: if (useE && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 2000));                        if (predHealth <= Player.GetSpellDamage(minion' SpellSlot.E))                          E.CastOnUnit(minion' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The following statement contains a magic number: if (useE && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 2000));                        if (predHealth <= Player.GetSpellDamage(minion' SpellSlot.E))                          E.CastOnUnit(minion' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Farm,The following statement contains a magic number: if (useE && E.IsReady())              {                  foreach (var minion in allMinionsE.Where(CanCastE))                  {                      var dashVec = Player.ServerPosition + Vector3.Normalize(minion.ServerPosition - Player.ServerPosition) * 475;                      if (!menu.Item("E_UnderTower_Farm"' true).GetValue<bool>() && dashVec.UnderTurret(true))                          continue;                        var predHealth = HealthPrediction.GetHealthPrediction(minion' (int)(Player.Distance(minion.Position) * 1000 / 2000));                        if (predHealth <= Player.GetSpellDamage(minion' SpellSlot.E))                          E.CastOnUnit(minion' packets());                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Interrupter_OnPosibleToInterrupt,The following statement contains a magic number: if (unit.IsValidTarget(E.Range))              {                  E.CastOnUnit(unit' packets());                  Utility.DelayAction.Add(200' () => Q.Cast(unit.Position));              }              else if(unit.IsValidTarget(Q2.Range))              {                  Q2.Cast(unit);              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GameObject_OnCreate,The following statement contains a magic number: if (sender.Name != "missile")              {                  if (menu.Item(args.SData.Name + "E"' true) != null)                  {                      if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && E.IsReady())                      {                          //Game.PrintChat("RAWR1");                          _eSlide = args;                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All'                              MinionTeam.NotAlly);                          if (Player.Distance(_eSlide.Position) < 800)                          {                              foreach (var m in minion.Where(CanCastE))                              {                                  if (IsPassableE(m))                                  {                                      E.CastOnUnit(m' packets());                                      E.LastCastAttemptT = Environment.TickCount;                                      _eSlide = null;                                      return;                                  }                              }                          }                      }                  }                    //Game.PrintChat(args.SData.Name);                  if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady())                      {                          //Game.PrintChat("RAWR1");                          _windWall = args;                            if (_windWall != null && W.IsReady())                          {                              if (Player.Distance(_windWall.Position) < 200)                              {                                  W.Cast(_windWall.Position' packets());                                    var vec = Player.ServerPosition - (_windWall.Position - Player.ServerPosition)*50;                                    Player.IssueOrder(GameObjectOrder.MoveTo' vec);                                  _windWall = null;                                  _eSlide = null;                              }                          }                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GameObject_OnCreate,The following statement contains a magic number: if (sender.Name != "missile")              {                  if (menu.Item(args.SData.Name + "E"' true) != null)                  {                      if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && E.IsReady())                      {                          //Game.PrintChat("RAWR1");                          _eSlide = args;                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All'                              MinionTeam.NotAlly);                          if (Player.Distance(_eSlide.Position) < 800)                          {                              foreach (var m in minion.Where(CanCastE))                              {                                  if (IsPassableE(m))                                  {                                      E.CastOnUnit(m' packets());                                      E.LastCastAttemptT = Environment.TickCount;                                      _eSlide = null;                                      return;                                  }                              }                          }                      }                  }                    //Game.PrintChat(args.SData.Name);                  if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady())                      {                          //Game.PrintChat("RAWR1");                          _windWall = args;                            if (_windWall != null && W.IsReady())                          {                              if (Player.Distance(_windWall.Position) < 200)                              {                                  W.Cast(_windWall.Position' packets());                                    var vec = Player.ServerPosition - (_windWall.Position - Player.ServerPosition)*50;                                    Player.IssueOrder(GameObjectOrder.MoveTo' vec);                                  _windWall = null;                                  _eSlide = null;                              }                          }                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,GameObject_OnCreate,The following statement contains a magic number: if (sender.Name != "missile")              {                  if (menu.Item(args.SData.Name + "E"' true) != null)                  {                      if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && E.IsReady())                      {                          //Game.PrintChat("RAWR1");                          _eSlide = args;                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All'                              MinionTeam.NotAlly);                          if (Player.Distance(_eSlide.Position) < 800)                          {                              foreach (var m in minion.Where(CanCastE))                              {                                  if (IsPassableE(m))                                  {                                      E.CastOnUnit(m' packets());                                      E.LastCastAttemptT = Environment.TickCount;                                      _eSlide = null;                                      return;                                  }                              }                          }                      }                  }                    //Game.PrintChat(args.SData.Name);                  if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady())                      {                          //Game.PrintChat("RAWR1");                          _windWall = args;                            if (_windWall != null && W.IsReady())                          {                              if (Player.Distance(_windWall.Position) < 200)                              {                                  W.Cast(_windWall.Position' packets());                                    var vec = Player.ServerPosition - (_windWall.Position - Player.ServerPosition)*50;                                    Player.IssueOrder(GameObjectOrder.MoveTo' vec);                                  _windWall = null;                                  _eSlide = null;                              }                          }                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > W.Range)                      return;                    if (menu.Item(args.SData.Name + "E"' true) != null)                   {                       if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                            foreach (var m in minion.Where(CanCastE))                          {                              if (IsPassableE(m))                              {                                  E.CastOnUnit(m' packets());                                  E.LastCastAttemptT = Environment.TickCount;                                  return;                              }                          }                        }                  }                    if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady() &&                          (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          W.Cast(args.Start' packets());                            var vec = Player.ServerPosition - (args.Start - Player.ServerPosition)*50;                            Player.IssueOrder(GameObjectOrder.MoveTo' vec);                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > W.Range)                      return;                    if (menu.Item(args.SData.Name + "E"' true) != null)                   {                       if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                            foreach (var m in minion.Where(CanCastE))                          {                              if (IsPassableE(m))                              {                                  E.CastOnUnit(m' packets());                                  E.LastCastAttemptT = Environment.TickCount;                                  return;                              }                          }                        }                  }                    if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady() &&                          (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          W.Cast(args.Start' packets());                            var vec = Player.ServerPosition - (args.Start - Player.ServerPosition)*50;                            Player.IssueOrder(GameObjectOrder.MoveTo' vec);                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > W.Range)                      return;                    if (menu.Item(args.SData.Name + "E"' true) != null)                   {                       if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                            foreach (var m in minion.Where(CanCastE))                          {                              if (IsPassableE(m))                              {                                  E.CastOnUnit(m' packets());                                  E.LastCastAttemptT = Environment.TickCount;                                  return;                              }                          }                        }                  }                    if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady() &&                          (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          W.Cast(args.Start' packets());                            var vec = Player.ServerPosition - (args.Start - Player.ServerPosition)*50;                            Player.IssueOrder(GameObjectOrder.MoveTo' vec);                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > W.Range)                      return;                    if (menu.Item(args.SData.Name + "E"' true) != null)                   {                       if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                            foreach (var m in minion.Where(CanCastE))                          {                              if (IsPassableE(m))                              {                                  E.CastOnUnit(m' packets());                                  E.LastCastAttemptT = Environment.TickCount;                                  return;                              }                          }                        }                  }                    if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady() &&                          (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          W.Cast(args.Start' packets());                            var vec = Player.ServerPosition - (args.Start - Player.ServerPosition)*50;                            Player.IssueOrder(GameObjectOrder.MoveTo' vec);                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (unit.IsEnemy && (unit is Obj_AI_Hero))              {                  if (Player.Distance(args.End) > W.Range)                      return;                    if (menu.Item(args.SData.Name + "E"' true) != null)                   {                       if (menu.Item(args.SData.Name + "E"' true).GetValue<bool>() && (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          var minion = MinionManager.GetMinions(Player.ServerPosition' E.Range' MinionTypes.All' MinionTeam.NotAlly);                            foreach (var m in minion.Where(CanCastE))                          {                              if (IsPassableE(m))                              {                                  E.CastOnUnit(m' packets());                                  E.LastCastAttemptT = Environment.TickCount;                                  return;                              }                          }                        }                  }                    if (menu.Item(args.SData.Name + "W_Wall"' true) != null)                  {                      if (menu.Item(args.SData.Name + "W_Wall"' true).GetValue<bool>() && W.IsReady() &&                          (Player.Distance(args.Start) < 1000 || Player.Distance(args.End) < 1000))                      {                          W.Cast(args.Start' packets());                            var vec = Player.ServerPosition - (args.Start - Player.ServerPosition)*50;                            Player.IssueOrder(GameObjectOrder.MoveTo' vec);                          return;                      }                  }                }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Game_OnGameUpdate,The following statement contains a magic number: if (_windWall != null && W.IsReady())              {                  if (Player.Distance(_windWall.Position) < 400)                  {                      //Game.PrintChat("RAWR");                      W.Cast(_windWall.Position' packets());                        var vec = Player.ServerPosition - (_windWall.Position - Player.ServerPosition) * 50;                        Player.IssueOrder(GameObjectOrder.MoveTo' vec);                      _windWall = null;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Game_OnGameUpdate,The following statement contains a magic number: if (_windWall != null && W.IsReady())              {                  if (Player.Distance(_windWall.Position) < 400)                  {                      //Game.PrintChat("RAWR");                      W.Cast(_windWall.Position' packets());                        var vec = Player.ServerPosition - (_windWall.Position - Player.ServerPosition) * 50;                        Player.IssueOrder(GameObjectOrder.MoveTo' vec);                      _windWall = null;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,IsPassableE,The following statement contains a magic number: for (int i = 238; i <= 475; i += 238) {                   var dashVec = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * i;                                Object[] obj = VectorPointProjectionOnLineSegment(dashVec.To2D()' _eSlide.Position.To2D()' _eSlide.EndPosition.To2D());                  var isOnseg = (bool)obj[2];                    var pointLine = (Vector2)obj[1];                  if (isOnseg || dashVec.UnderTurret(true) || dashVec.Distance(pointLine.To3D()) < _eSlide.SData.LineWidth + 20)                  {                      return false;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,IsPassableE,The following statement contains a magic number: for (int i = 238; i <= 475; i += 238) {                   var dashVec = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * i;                                Object[] obj = VectorPointProjectionOnLineSegment(dashVec.To2D()' _eSlide.Position.To2D()' _eSlide.EndPosition.To2D());                  var isOnseg = (bool)obj[2];                    var pointLine = (Vector2)obj[1];                  if (isOnseg || dashVec.UnderTurret(true) || dashVec.Distance(pointLine.To3D()) < _eSlide.SData.LineWidth + 20)                  {                      return false;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,IsPassableE,The following statement contains a magic number: for (int i = 238; i <= 475; i += 238) {                   var dashVec = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * i;                                Object[] obj = VectorPointProjectionOnLineSegment(dashVec.To2D()' _eSlide.Position.To2D()' _eSlide.EndPosition.To2D());                  var isOnseg = (bool)obj[2];                    var pointLine = (Vector2)obj[1];                  if (isOnseg || dashVec.UnderTurret(true) || dashVec.Distance(pointLine.To3D()) < _eSlide.SData.LineWidth + 20)                  {                      return false;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,IsPassableE,The following statement contains a magic number: for (int i = 238; i <= 475; i += 238) {                   var dashVec = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * i;                                Object[] obj = VectorPointProjectionOnLineSegment(dashVec.To2D()' _eSlide.Position.To2D()' _eSlide.EndPosition.To2D());                  var isOnseg = (bool)obj[2];                    var pointLine = (Vector2)obj[1];                  if (isOnseg || dashVec.UnderTurret(true) || dashVec.Distance(pointLine.To3D()) < _eSlide.SData.LineWidth + 20)                  {                      return false;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,IsPassableE,The following statement contains a magic number: for (int i = 238; i <= 475; i += 238) {                   var dashVec = Player.ServerPosition + Vector3.Normalize(m.ServerPosition - Player.ServerPosition) * i;                                Object[] obj = VectorPointProjectionOnLineSegment(dashVec.To2D()' _eSlide.Position.To2D()' _eSlide.EndPosition.To2D());                  var isOnseg = (bool)obj[2];                    var pointLine = (Vector2)obj[1];                  if (isOnseg || dashVec.UnderTurret(true) || dashVec.Distance(pointLine.To3D()) < _eSlide.SData.LineWidth + 20)                  {                      return false;                  }              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_AutoQ"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  if (menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Auto Q Enabled");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Auto Q Disabled");                    if(menu.Item("E_Turret"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1] - 20' Color.White' "Don't E Turret On");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]- 20' Color.Red' "Don't E Turret off");              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_AutoQ"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  if (menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Auto Q Enabled");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Auto Q Disabled");                    if(menu.Item("E_Turret"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1] - 20' Color.White' "Don't E Turret On");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]- 20' Color.Red' "Don't E Turret off");              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_AutoQ"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  if (menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Auto Q Enabled");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Auto Q Disabled");                    if(menu.Item("E_Turret"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1] - 20' Color.White' "Don't E Turret On");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]- 20' Color.Red' "Don't E Turret off");              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_AutoQ"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  if (menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Auto Q Enabled");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Auto Q Disabled");                    if(menu.Item("E_Turret"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1] - 20' Color.White' "Don't E Turret On");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]- 20' Color.Red' "Don't E Turret off");              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_AutoQ"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  if (menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Auto Q Enabled");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Auto Q Disabled");                    if(menu.Item("E_Turret"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1] - 20' Color.White' "Don't E Turret On");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]- 20' Color.Red' "Don't E Turret off");              }
Magic Number,xSaliceReligionAIO.Champions,Yasuo,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Yasuo.cs,Drawing_OnDraw,The following statement contains a magic number: if (menu.Item("Draw_AutoQ"' true).GetValue<bool>())              {                  Vector2 wts = Drawing.WorldToScreen(Player.Position);                  if (menu.Item("Q_Auto"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.White' "Auto Q Enabled");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]' Color.Red' "Auto Q Disabled");                    if(menu.Item("E_Turret"' true).GetValue<KeyBind>().Active)                      Drawing.DrawText(wts[0] - 20' wts[1] - 20' Color.White' "Don't E Turret On");                  else                      Drawing.DrawText(wts[0] - 20' wts[1]- 20' Color.Red' "Don't E Turret off");              }
Duplicate Code,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The method contains a code clone-set at the following line numbers (starting from the method definition): ((29' 65)' (151' 187))
Missing Default,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following switch statement is missing a default case: switch (qHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }
Missing Default,xSaliceReligionAIO,Champion,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champion.cs,GetHitchance,The following switch statement is missing a default case: switch (harassQHit)                  {                      case 1:                          hitC = HitChance.Low;                          break;                      case 2:                          hitC = HitChance.Medium;                          break;                      case 3:                          hitC = HitChance.High;                          break;                      case 4:                          hitC = HitChance.VeryHigh;                          break;                  }
Missing Default,xSaliceReligionAIO.Champions,Akali,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Akali.cs,UseSpells,The following switch statement is missing a default case: switch (mode)              {                  case 0:                      if (useQ)                          Cast_Q(true);                      if (useE)                          Cast_E(true);                      if (useW)                          Cast_W();                      if (useR)                          Cast_R(0);                      break;                  case 1:                      if (useQ)                          Cast_Q(true' 1);                      if (useR)                          Cast_R(1);                      if (useE)                          Cast_E(true' 1);                      if (useW)                          Cast_W();                      break;              }
Missing Default,xSaliceReligionAIO.Champions,Azir,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Azir.cs,getQHitchance,The following switch statement is missing a default case: switch (qHit)              {                  case 1:                      hitC = HitChance.Low;                      break;                  case 2:                      hitC = HitChance.Medium;                      break;                  case 3:                      hitC = HitChance.High;                      break;                  case 4:                      hitC = HitChance.VeryHigh;                      break;              }
Missing Default,xSaliceReligionAIO.Champions,Fizz,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Fizz.cs,UseSpells,The following switch statement is missing a default case: switch (mode)              {                  case 0://R-W-Q-E                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                            if (useE && E.IsReady())                          {                              if (ShouldCastE(target))                              {                                  CastE(target);                              }                          }                      }                      break;                    case 1://W-Q-R-E                      if (useW && W.IsReady())                      {                          if (ShouldCastW(target))                              W.Cast(packets());                      }                        if (useQ && Q.IsReady())                      {                          if (ShouldCastQ(target))                          {                              Q.CastOnUnit(target' packets());                                if (R.IsReady() && ShouldCastR(target' dmg) && useR)                              {                                   _qDelay = (int)(Player.Distance(target.Position) / 2.2);                                  _qVec = Player.ServerPosition + Vector3.Normalize(target.ServerPosition - Player.ServerPosition) * Q.Range;                                  _qLast = Environment.TickCount;                              }                          }                      }                      if (useE && E.IsReady() && !Q.IsReady())                      {                          if (ShouldCastE(target' true))                          {                              CastE(target);                          }                      }                      break;                  case 2://R-E-W-Q (Gap)                      if (useR && R.IsReady())                      {                          if (ShouldCastR(target' dmg))                          {                              if (R.GetPrediction(target).Hitchance >= HitChance.High)                              {                                  CastR(R.GetPrediction(target).CastPosition);                              }                          }                      }                        if (!R.IsReady() || dmg < target.Health - 100 || !useR)                      {                          if (useE && E.IsReady())                          {                              if (ShouldCastE(target' true))                              {                                  CastE(target);                                  return;                              }                          }                            if (useW && W.IsReady())                          {                              if(ShouldCastW(target))                                  W.Cast(packets());                          }                            if (useQ && Q.IsReady())                          {                              if(ShouldCastQ(target))                                  Q.CastOnUnit(target' packets());                          }                      }                      break;              }
Missing Default,xSaliceReligionAIO.Champions,Orianna,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Orianna.cs,CastE,The following switch statement is missing a default case: switch (_ballStatus)              {                  case 0:                      if (target != null)                      {                          float travelTime = target.Distance(Player.ServerPosition) / Q.Speed;                          float minTravelTime = 10000f;                            foreach (                              Obj_AI_Hero ally in                                  ObjectManager.Get<Obj_AI_Hero>()                                      .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                          {                              if (ally != null)                              {                                  //dmg enemy with E                                  if (menu.Item("UseEDmg"' true).GetValue<bool>())                                  {                                      PredictionOutput prediction3 = GetP(Player.ServerPosition' E' target' true);                                      Object[] obj = VectorPointProjectionOnLineSegment(Player.ServerPosition.To2D()'                                          ally.ServerPosition.To2D()' prediction3.UnitPosition.To2D());                                      var isOnseg = (bool)obj[2];                                      var pointLine = (Vector2)obj[1];                                        if (E.IsReady() && isOnseg &&                                          prediction3.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                      {                                          //Game.PrintChat("Dmg 1");                                          E.CastOnUnit(ally' packets());                                          return;                                      }                                  }                                    float allyRange = target.Distance(ally.ServerPosition) / Q.Speed +                                                    ally.Distance(Player.ServerPosition) / E.Speed;                                  if (allyRange < minTravelTime)                                  {                                      etarget = ally;                                      minTravelTime = allyRange;                                  }                              }                          }                            if (minTravelTime < travelTime && Player.Distance(etarget.ServerPosition) <= E.Range &&                              E.IsReady())                          {                              E.CastOnUnit(etarget' packets());                          }                      }                      break;                  case 1:                      //dmg enemy with E                      if (menu.Item("UseEDmg"' true).GetValue<bool>())                      {                          PredictionOutput prediction = GetP(_currentBallPosition' E' target' true);                          Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                              Player.ServerPosition.To2D()' prediction.UnitPosition.To2D());                          var isOnseg = (bool)obj[2];                          var pointLine = (Vector2)obj[1];                            if (E.IsReady() && isOnseg && prediction.UnitPosition.Distance(pointLine.To3D()) < E.Width)                          {                              //Game.PrintChat("Dmg 2");                              E.CastOnUnit(Player' packets());                              return;                          }                      }                        float travelTime2 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime2 = target.Distance(Player.ServerPosition) / Q.Speed +                                              Player.Distance(_currentBallPosition) / E.Speed;                        if (minTravelTime2 < travelTime2 && target.Distance(Player.ServerPosition) <= Q.Range + Q.Width &&                          E.IsReady())                      {                          E.CastOnUnit(Player' packets());                      }                        break;                  case 2:                      float travelTime3 = target.Distance(_currentBallPosition) / Q.Speed;                      float minTravelTime3 = 10000f;                        foreach (                          Obj_AI_Hero ally in                              ObjectManager.Get<Obj_AI_Hero>()                                  .Where(x => x.IsAlly && Player.Distance(x.ServerPosition) <= E.Range && !x.IsMe))                      {                          if (ally != null)                          {                              //dmg enemy with E                              if (menu.Item("UseEDmg"' true).GetValue<bool>())                              {                                  PredictionOutput prediction2 = GetP(_currentBallPosition' E' target' true);                                  Object[] obj = VectorPointProjectionOnLineSegment(_currentBallPosition.To2D()'                                      ally.ServerPosition.To2D()' prediction2.UnitPosition.To2D());                                  var isOnseg = (bool)obj[2];                                  var pointLine = (Vector2)obj[1];                                    if (E.IsReady() && isOnseg &&                                      prediction2.UnitPosition.Distance(pointLine.To3D()) < E.Width)                                  {                                      //Game.PrintChat("Dmg 3");                                      E.CastOnUnit(ally' packets());                                      return;                                  }                              }                                float allyRange2 = target.Distance(ally.ServerPosition) / Q.Speed +                                                  ally.Distance(_currentBallPosition) / E.Speed;                                if (allyRange2 < minTravelTime3)                              {                                  etarget = ally;                                  minTravelTime3 = allyRange2;                              }                          }                      }                        if (minTravelTime3 < travelTime3 && Player.Distance(etarget.ServerPosition) <= E.Range &&                          E.IsReady())                      {                          E.CastOnUnit(etarget' packets());                      }                        break;              }
Missing Default,xSaliceReligionAIO.Champions,Zed,C:\repos\xSalice_LSharp\xSaliceReligionAIO\xSaliceReligionAIO\Champions\Zed.cs,Combo,The following switch statement is missing a default case: switch (mode)              {                  case 0:                      if (qTarget != null)                      {                          //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                                                }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                        break;                  //line                  case 1:                      if(useR)                          LineCombo(useQ' useE);                      else                          menu.Item("Combo_mode"' true).SetValue(new StringList(new[] { "Normal"' "Line Combo"' "Coax"' "Ult no W"' "Normal With Ult" }));                  break;                  //Coax                  case 2:                      CoaxCombo(useQ' useE);                  break;                  //ham                  case 3:                      if (qTarget != null)                      {                          var dmg = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            if (GetMarked() != null)                              qTarget = GetMarked();                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (useQ)                      {                          Cast_Q();                      }                                            if (useE)                          Cast_E();                      break;                  //Normal /w Ult                  case 4:                      if (qTarget != null)                      {                          var dmg2 = GetComboDamage(qTarget);                            float range = Q.Range;                          if (GetTargetFocus(range) != null)                              qTarget = GetTargetFocus(range);                            if (dmg2 > qTarget.Health + 50 && qTarget.IsValidTarget(R.Range) && HasEnergy(true' true' false))                              R.CastOnUnit(qTarget' packets());                            //items                          var itemTarget = TargetSelector.GetTarget(750' TargetSelector.DamageType.Physical);                            if (GetMarked() != null)                              itemTarget = GetMarked();                            if (itemTarget != null)                          {                              var dmg = GetComboDamage(itemTarget);                              ActiveItems.Target = itemTarget;                                //see if killable                              if (dmg > itemTarget.Health - 50)                                  ActiveItems.KillableTarget = true;                                ActiveItems.UseTargetted = true;                          }                      }                        if (menu.Item("Prioritize_Q"' true).GetValue<bool>())                      {                          if (useQ)                              Cast_Q();                            if (HasEnergy(false' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' false' useE);                          }                      }                      else                      {                          if (HasEnergy(Q.IsReady() && useQ' W.IsReady() && useW' E.IsReady() && useE))                          {                              if (useW)                                  Cast_W("Combo"' useQ' useE);                          }                          if (useQ && (!W.IsReady() || WSpell.ToggleState == 2))                          {                              Cast_Q();                          }                      }                        if (useE)                          Cast_E();                        if (WShadow == null)                          return;                        if(target == null)                          return;                        if (menu.Item("W_Follow_Combo"' true).GetValue<bool>() && WSpell.ToggleState == 2 && Player.Distance(target.Position) > WShadow.Distance(target.Position) && HasBuff(target' "zedulttargetmark"))                          W.Cast(packets());                      break;                }
