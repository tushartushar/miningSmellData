Implementation smell,Namespace,Class,File,Method,Description
Long Method,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The method has 145 lines of code.
Long Method,YorickMILFDigger,SpellCollision,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\SpellCollision.cs,SpellCollision,The method has 302 lines of code.
Complex Method,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,Cyclomatic complexity of the method is 11
Complex Method,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,Cyclomatic complexity of the method is 11
Long Parameter List,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,The method has 5 parameters. Parameters: useQ' useW' useE' useR' Source
Complex Conditional,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,The conditional expression  "useQ && Q.IsReady() && Player.Distance(target) <= 300 && !qReset"  is complex.
Complex Conditional,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,The conditional expression  "useE && target != null && E.IsReady() && Player.Distance(target) < E.Range"  is complex.
Complex Conditional,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,The conditional expression  "target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                  Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready && Source == "Combo" && hasmana"  is complex.
Complex Conditional,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,The conditional expression  "useW && target != null && W.IsReady() && Player.Distance(target) <= W.Range &&                  W.GetPrediction(target).Hitchance >= HitChance.High"  is complex.
Complex Conditional,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,castR,The conditional expression  "target != null && enemy != null && target.BaseSkinName != Player.BaseSkinName && useR && useOnAlly"  is complex.
Complex Conditional,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The conditional expression  "target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                      Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready &&                      Player.Distance(target.ServerPosition) <= 600"  is complex.
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: Q = new Spell(SpellSlot.Q' 125 + Player.BoundingRadius);
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: W = new Spell(SpellSlot.W' 600);
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: E = new Spell(SpellSlot.E' 550);
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: R = new Spell(SpellSlot.R' 900);
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: W.SetSkillshot(0.50f' 200' float.MaxValue' false' SkillshotType.SkillshotCircle);
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("WSpell")                  .AddItem(new MenuItem("useW_Hit"' "Use W if hit").SetValue(new Slider(2' 5' 0)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("WSpell")                  .AddItem(new MenuItem("useW_Hit"' "Use W if hit").SetValue(new Slider(2' 5' 0)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("ESpell")                  .AddItem(new MenuItem("autoE"' "Auto E enemy if HP <").SetValue(new Slider(50' 0' 100)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("ESpell")                  .AddItem(new MenuItem("autoE"' "Auto E enemy if HP <").SetValue(new Slider(50' 0' 100)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("RSpell")                  .AddItem(new MenuItem("useRHP"' "R in combo if my %HP <= ").SetValue(new Slider(50' 0' 100)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("RSpell")                  .AddItem(new MenuItem("useRHP"' "R in combo if my %HP <= ").SetValue(new Slider(50' 0' 100)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("RSpell")                  .AddItem(new MenuItem("useRHPE"' "R in combo if Enemy %HP <= ").SetValue(new Slider(50' 0' 100)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Spell")                  .SubMenu("RSpell")                  .AddItem(new MenuItem("useRHPE"' "R in combo if Enemy %HP <= ").SetValue(new Slider(50' 0' 100)));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("QRange"' "Q range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("QRange"' "Q range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("QRange"' "Q range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("WRange"' "W range").SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("WRange"' "W range").SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("WRange"' "W range").SetValue(new Circle(true' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("ERange"' "E range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("ERange"' "E range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("ERange"' "E range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("RRange"' "R range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("RRange"' "R range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Game_OnGameLoad,The following statement contains a magic number: menu.SubMenu("Drawings")                  .AddItem(new MenuItem("RRange"' "R range").SetValue(new Circle(false' Color.FromArgb(100' 255' 0' 255))));
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: if (!unit.IsEnemy || Player.Distance(unit.ServerPosition) > 1300) return;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: foreach (var spell in SpellCollision.Spells)              {                  if (args.SData.Name == spell.SDataName)                  {                      if (menu.Item(spell.SpellName).GetValue<bool>())                      {                          if (W.IsReady() && Player.Distance(args.End) < 300)                          {                              var vec = Player.ServerPosition + Vector3.Normalize(args.Start - Player.ServerPosition)*200;                              Game.PrintChat("blocking");                              W.Cast(vec);                            }                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Obj_AI_Base_OnProcessSpellCast,The following statement contains a magic number: foreach (var spell in SpellCollision.Spells)              {                  if (args.SData.Name == spell.SDataName)                  {                      if (menu.Item(spell.SpellName).GetValue<bool>())                      {                          if (W.IsReady() && Player.Distance(args.End) < 300)                          {                              var vec = Player.ServerPosition + Vector3.Normalize(args.Start - Player.ServerPosition)*200;                              Game.PrintChat("blocking");                              W.Cast(vec);                            }                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,GetComboDamage,The following statement contains a magic number: damage += Player.GetAutoAttackDamage(enemy)*2;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,UseSpells,The following statement contains a magic number: if (useQ && Q.IsReady() && Player.Distance(target) <= 300 && !qReset)              {                  Q.Cast();              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,castR,The following statement contains a magic number: float playerHP = (Player.Health/Player.MaxHealth)*100;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,castR,The following statement contains a magic number: float enemyHP = (enemy.Health/enemy.MaxHealth)*100;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,castR,The following statement contains a magic number: if (playerHP <= HPtoUlt && Player.Distance(enemy) < 700)              {                  if (enemy != null && R.IsReady())                  {                      R.Cast(Player' packets());                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,autoE,The following statement contains a magic number: float playerHP = (Player.Health/Player.MaxHealth)*100;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,autoR,The following statement contains a magic number: foreach (                  Obj_AI_Hero target in                      ObjectManager.Get<Obj_AI_Hero>()                          .Where(x => Player.Distance(x) < 1500 && x.IsEnemy && !x.IsDead).OrderBy(x => x.Health))              {                  int lastR = Environment.TickCount - R.LastCastAttemptT;                  if (target != null && lastR <= 500)                  {                      R.Cast(target);                      R.LastCastAttemptT = Environment.TickCount - 250;                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,autoR,The following statement contains a magic number: foreach (                  Obj_AI_Hero target in                      ObjectManager.Get<Obj_AI_Hero>()                          .Where(x => Player.Distance(x) < 1500 && x.IsEnemy && !x.IsDead).OrderBy(x => x.Health))              {                  int lastR = Environment.TickCount - R.LastCastAttemptT;                  if (target != null && lastR <= 500)                  {                      R.Cast(target);                      R.LastCastAttemptT = Environment.TickCount - 250;                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,autoR,The following statement contains a magic number: foreach (                  Obj_AI_Hero target in                      ObjectManager.Get<Obj_AI_Hero>()                          .Where(x => Player.Distance(x) < 1500 && x.IsEnemy && !x.IsDead).OrderBy(x => x.Health))              {                  int lastR = Environment.TickCount - R.LastCastAttemptT;                  if (target != null && lastR <= 500)                  {                      R.Cast(target);                      R.LastCastAttemptT = Environment.TickCount - 250;                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The following statement contains a magic number: List<Obj_AI_Hero> nearChamps = (from champ in ObjectManager.Get<Obj_AI_Hero>()                  where Player.Distance(champ.ServerPosition) <= 900 && champ.IsEnemy                  select champ).ToList();
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The following statement contains a magic number: foreach (Obj_AI_Hero target in nearChamps)              {                  //EW                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                      target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target);                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //ignite                  if (target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                      Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready &&                      Player.Distance(target.ServerPosition) <= 600)                  {                      int IgniteMode = menu.Item("igniteMode").GetValue<StringList>().SelectedIndex;                      if (Player.GetSummonerSpellDamage(target' Damage.SummonerSpell.Ignite) > target.Health + 20)                      {                          Player.Spellbook.CastSpell(IgniteSlot' target);                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The following statement contains a magic number: foreach (Obj_AI_Hero target in nearChamps)              {                  //EW                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                      target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target);                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //ignite                  if (target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                      Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready &&                      Player.Distance(target.ServerPosition) <= 600)                  {                      int IgniteMode = menu.Item("igniteMode").GetValue<StringList>().SelectedIndex;                      if (Player.GetSummonerSpellDamage(target' Damage.SummonerSpell.Ignite) > target.Health + 20)                      {                          Player.Spellbook.CastSpell(IgniteSlot' target);                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The following statement contains a magic number: foreach (Obj_AI_Hero target in nearChamps)              {                  //EW                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                      target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target);                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //ignite                  if (target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                      Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready &&                      Player.Distance(target.ServerPosition) <= 600)                  {                      int IgniteMode = menu.Item("igniteMode").GetValue<StringList>().SelectedIndex;                      if (Player.GetSummonerSpellDamage(target' Damage.SummonerSpell.Ignite) > target.Health + 20)                      {                          Player.Spellbook.CastSpell(IgniteSlot' target);                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The following statement contains a magic number: foreach (Obj_AI_Hero target in nearChamps)              {                  //EW                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                      target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target);                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //ignite                  if (target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                      Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready &&                      Player.Distance(target.ServerPosition) <= 600)                  {                      int IgniteMode = menu.Item("igniteMode").GetValue<StringList>().SelectedIndex;                      if (Player.GetSummonerSpellDamage(target' Damage.SummonerSpell.Ignite) > target.Health + 20)                      {                          Player.Spellbook.CastSpell(IgniteSlot' target);                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,smartKS,The following statement contains a magic number: foreach (Obj_AI_Hero target in nearChamps)              {                  //EW                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E) + Player.GetSpellDamage(target' SpellSlot.W)) >                      target.Health + 30)                  {                      if (W.IsReady() && E.IsReady())                      {                          E.Cast(target);                          W.Cast(target' packets());                          return;                      }                  }                    //E                  if (Player.Distance(target.ServerPosition) <= E.Range &&                      (Player.GetSpellDamage(target' SpellSlot.E)) > target.Health + 30)                  {                      if (E.IsReady())                      {                          E.CastOnUnit(target);                          return;                      }                  }                    //W                  if (Player.Distance(target.ServerPosition) <= W.Range &&                      (Player.GetSpellDamage(target' SpellSlot.W)) > target.Health + 50)                  {                      if (W.IsReady())                      {                          W.Cast(target' packets());                          return;                      }                  }                    //ignite                  if (target != null && menu.Item("ignite").GetValue<bool>() && IgniteSlot != SpellSlot.Unknown &&                      Player.Spellbook.CanUseSpell(IgniteSlot) == SpellState.Ready &&                      Player.Distance(target.ServerPosition) <= 600)                  {                      int IgniteMode = menu.Item("igniteMode").GetValue<StringList>().SelectedIndex;                      if (Player.GetSummonerSpellDamage(target' Damage.SummonerSpell.Ignite) > target.Health + 20)                      {                          Player.Spellbook.CastSpell(IgniteSlot' target);                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,lastHit,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,lastHit,The following statement contains a magic number: if (E.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int) (Player.Distance(minion)*1000/1400)) <                          Player.GetSpellDamage(minion' SpellSlot.E) - 10)                      {                          E.Cast(minion);                          return;                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,lastHit,The following statement contains a magic number: if (E.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int) (Player.Distance(minion)*1000/1400)) <                          Player.GetSpellDamage(minion' SpellSlot.E) - 10)                      {                          E.Cast(minion);                          return;                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,lastHit,The following statement contains a magic number: if (E.IsReady())              {                  foreach (Obj_AI_Base minion in allMinions)                  {                      if (minion.IsValidTarget() &&                          HealthPrediction.GetHealthPrediction(minion' (int) (Player.Distance(minion)*1000/1400)) <                          Player.GetSpellDamage(minion' SpellSlot.E) - 10)                      {                          E.Cast(minion);                          return;                      }                  }              }
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Farm,The following statement contains a magic number: if (!Orbwalking.CanMove(40)) return;
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Farm,The following statement contains a magic number: List<Obj_AI_Base> rangedMinionsW = MinionManager.GetMinions(ObjectManager.Player.ServerPosition'                  W.Range + W.Width + 50' MinionTypes.All);
Magic Number,YorickMILFDigger,Program,C:\repos\xSalice_LSharp\YorickMILFDigger\YorickMILFDigger\Program.cs,Farm,The following statement contains a magic number: if (useW && W.IsReady())              {                  MinionManager.FarmLocation wPos = W.GetCircularFarmLocation(rangedMinionsW);                  if (wPos.MinionsHit >= 2)                  {                      W.Cast(wPos.Position' packets());                  }              }
