Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Akka.Remote.TestKit.Tests,BarrierSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,A_BarrierCoordinator_must_register_clients_and_remove_them,The length of the statement  "            //EventFilter<BarrierCoordinator.BarrierEmpty>(1' () => b.Tell(new BarrierCoordinator.RemoveClient(A)' TestActor)); //appears to be a bug in the testfilter " is 155.
Magic Number,Akka.Remote.TestKit.Tests,BarrierSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,A_BarrierCoordinator_must_fail_entering_barrier_when_nobody_registered,The following statement contains a magic number: ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar1"' false))' TimeSpan.FromSeconds(300));
Magic Number,Akka.Remote.TestKit.Tests,BarrierSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,A_BarrierCoordinator_must_enter_barrier,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  b.Send(barrier' new EnterBarrier("bar2"' null));                  a.ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar2"' true)));                  b.ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar2"' true)));              });
Magic Number,Akka.Remote.TestKit.Tests,BarrierSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,A_BarrierCoordinator_must_enter_barrier_with_joining_node,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  c.Send(barrier' new EnterBarrier("bar3"' null));                  a.ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar3"' true)));                  b.ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar3"' true)));                  c.ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar3"' true)));              });
Magic Number,Akka.Remote.TestKit.Tests,BarrierSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,A_BarrierCoordinator_must_enter_barrier_with_leaving_node,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  barrier.Tell(new BarrierCoordinator.RemoveClient(C));                  b.ExpectMsg(new ToClient<BarrierResult>(new BarrierResult("bar4"' true)));              });
Magic Number,Akka.Remote.TestKit.Tests,BarrierSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,A_BarrierCoordinator_must_fail_after_barrier_timeout,The following statement contains a magic number: EventFilter.Exception<BarrierCoordinator.BarrierTimeoutException>().ExpectOne(() =>              {                  var msg = ExpectMsg<Failed>(TimeSpan.FromSeconds(7));                  Assert.Equal(new BarrierCoordinator.BarrierTimeoutException(                      new BarrierCoordinator.Data(                          ImmutableHashSet.Create(nodeA' nodeB)'                          "bar10"'                          ImmutableHashSet.Create(a.Ref)'                          ((BarrierCoordinator.BarrierTimeoutException)msg.Exception).BarrierData.Deadline)                      )' msg.Exception);              });
Magic Number,Akka.Remote.TestKit.Tests,Failed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Remote.TestKit.Tests\BarrierSpec.cs,GetHashCode,The following statement contains a magic number: return ((_ref != null ? _ref.GetHashCode() : 0)*397) ^                             (_exception != null ? _exception.GetHashCode() : 0);
