Implementation smell,Namespace,Class,File,Method,Description
Long Method,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,Receive,The method has 127 lines of code.
Long Method,Akka.Persistence.Snapshot,SnapshotStore,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Snapshot\SnapshotStore.cs,ReceiveSnapshotStore,The method has 137 lines of code.
Complex Method,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,Unhandled,Cyclomatic complexity of the method is 10
Complex Method,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,CommonProcessingStateBehavior,Cyclomatic complexity of the method is 12
Complex Method,Akka.Persistence.Journal,PersistencePluginProxy,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\PersistencePluginProxy.cs,PreStart,Cyclomatic complexity of the method is 8
Complex Method,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,Receive,Cyclomatic complexity of the method is 21
Complex Method,Akka.Persistence.Snapshot,SnapshotStore,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Snapshot\SnapshotStore.cs,ReceiveSnapshotStore,Cyclomatic complexity of the method is 11
Long Parameter List,Akka.Persistence,ReplayMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,ReplayMessages,The method has 5 parameters. Parameters: fromSequenceNr' toSequenceNr' max' persistenceId' persistentActor
Long Parameter List,Akka.Persistence,IPersistentRepresentation,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,Update,The method has 5 parameters. Parameters: sequenceNr' persistenceId' isDeleted' sender' writerGuid
Long Parameter List,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,Persistent,The method has 7 parameters. Parameters: payload' sequenceNr' persistenceId' manifest' isDeleted' sender' writerGuid
Long Parameter List,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,Update,The method has 5 parameters. Parameters: sequenceNr' persistenceId' isDeleted' sender' writerGuid
Long Parameter List,Akka.Persistence.Fsm,Timer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Fsm\PersistentFSMBase.cs,Timer,The method has 6 parameters. Parameters: name' message' repeat' generation' context' debugLog
Long Parameter List,Akka.Persistence.Fsm,State<TS;TD;TE>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Fsm\PersistentFSMBase.cs,State,The method has 7 parameters. Parameters: stateName' stateData' timeout' stopReason' replies' domainEvents' afterTransitionDo
Long Parameter List,Akka.Persistence.Fsm,State<TS;TD;TE>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Fsm\PersistentFSMBase.cs,Copy,The method has 5 parameters. Parameters: timeout' stopReason' replies' domainEvents' afterTransitionDo
Long Parameter List,Akka.Persistence.Fsm,State,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Fsm\PersistentFSMBase.cs,State,The method has 7 parameters. Parameters: stateName' stateData' timeout' stopReason' replies' domainEvents' afterTransitionDo
Long Parameter List,Akka.Persistence.Fsm,State,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Fsm\PersistentFSMBase.cs,Copy,The method has 5 parameters. Parameters: timeout' stopReason' replies' domainEvents' afterTransitionDo
Long Parameter List,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,ReplayFilter,The method has 5 parameters. Parameters: persistentActor' mode' windowSize' maxOldWriters' debugEnabled
Long Parameter List,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,Props,The method has 5 parameters. Parameters: persistentActor' mode' windowSize' maxOldWriters' debugEnabled
Long Parameter List,Akka.Persistence.Journal,IAsyncRecovery,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\AsyncRecovery.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Parameter List,Akka.Persistence.Journal,AsyncWriteJournal,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\AsyncWriteJournal.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Parameter List,Akka.Persistence.Journal,AsyncWriteProxy,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\AsyncWriteProxy.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Parameter List,Akka.Persistence.Journal,MemoryJournal,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\MemoryJournal.cs,ReplayMessagesAsync,The method has 6 parameters. Parameters: context' persistenceId' fromSequenceNr' toSequenceNr' max' recoveryCallback
Long Identifier,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,,The length of the parameter _pendingStashingPersistInvocations is 34.
Long Identifier,Akka.Persistence,PersistenceExtension,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistence.cs,,The length of the parameter _defaultInternalStashOverflowStrategy is 37.
Long Identifier,Akka.Persistence,PersistenceExtension,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistence.cs,,The length of the parameter SnapshotStoreFallbackConfigPath is 31.
Long Identifier,Akka.Persistence,AtLeastOnceDeliverySettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistence.cs,AtLeastOnceDeliverySettings,The length of the parameter warnAfterNumberOfUnconfirmedAttempts is 36.
Long Statement,Akka.Persistence,AtLeastOnceDeliveryReceiveActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliveryReceiveActor.cs,Deliver,The length of the statement  "                    "and will handle the logic of fan-out and collecting individual confirmations' until it can signal confirmation back to this Actor."); " is 134.
Long Statement,Akka.Persistence,AtLeastOnceDeliverySnapshot,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,ToString,The length of the statement  "            return string.Format("AtLeastOnceDeliverySnapshot<currentDeliveryId: {0}' unconfirmedDeliveries: {1}>"' CurrentDeliveryId' " is 122.
Long Statement,Akka.Persistence,AtLeastOnceDeliverySemantic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,StartRedeliverTask,The length of the statement  "            _redeliverScheduleCancelable = _context.System.Scheduler.ScheduleTellRepeatedlyCancelable(interval' interval' _context.Self' " is 124.
Long Statement,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,Unhandled,The length of the statement  "                    _log.Warning("Failed to DeleteSnapshots given criteria [{0}] due to: [{1}: {2}]"' m.Criteria' m.Cause' m.Cause.Message); " is 120.
Long Statement,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,Unhandled,The length of the statement  "                    _log.Warning("Failed to DeleteMessages ToSequenceNr [{0}] for PersistenceId [{1}] due to: [{2}: {3}]"' m.ToSequenceNr' PersistenceId' m.Cause' m.Cause.Message); " is 160.
Long Statement,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,OnRecoveryFailure,The length of the statement  "               _log.Error(reason' "Exception in ReceiveRecover when replaying event type [{0}] with sequence number [{1}] for persistenceId [{2}]"'  " is 132.
Long Statement,Akka.Persistence,Eventsourced,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Eventsourced.Lifecycle.cs,OnRecoveryFailure,The length of the statement  "                _log.Error(reason' "Persistence failure when replaying events for persistenceId [{0}]. Last known sequence number [{1}]"' PersistenceId' LastSequenceNr); " is 153.
Long Statement,Akka.Persistence,AtLeastOnceDeliveryActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDelivery.cs,Deliver,The length of the statement  "                    "and will handle the logic of fan-out and collecting individual confirmations' until it can signal confirmation back to this Actor."); " is 134.
Long Statement,Akka.Persistence,ReceivePersistentActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\PersistentActor.cs,EnsureMayConfigureRecoverHandlers,The length of the statement  "                throw new InvalidOperationException("You may only call Recover-methods when constructing the actor and inside Become()."); " is 122.
Long Statement,Akka.Persistence,ReceivePersistentActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\PersistentActor.cs,EnsureMayConfigureCommandHandlers,The length of the statement  "                throw new InvalidOperationException("You may only call Command-methods when constructing the actor and inside Become()."); " is 122.
Long Statement,Akka.Persistence,PersistentView,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\PersistentView.Recovery.cs,PreStart,The length of the statement  "                    .ScheduleTellRepeatedlyCancelable(AutoUpdateInterval' AutoUpdateInterval' Self' new ScheduledUpdate(AutoUpdateReplayMax)' Self); " is 128.
Long Statement,Akka.Persistence,DeleteMessagesTo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,ToString,The length of the statement  "            return string.Format("DeleteMessagesTo<pid: {0}' seqNr: {1}' persistentActor: {2}>"' PersistenceId' ToSequenceNr' PersistentActor); " is 131.
Long Statement,Akka.Persistence,WriteMessageRejected,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,ToString,The length of the statement  "            return string.Format("WriteMessageRejected<actorInstanceId: {0}' message: {1}' cause: {2}>"' ActorInstanceId' Persistent' Cause); " is 129.
Long Statement,Akka.Persistence,WriteMessageFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,ToString,The length of the statement  "            return string.Format("WriteMessageFailure<actorInstanceId: {0}' message: {1}' cause: {2}>"' ActorInstanceId' Persistent' Cause); " is 128.
Long Statement,Akka.Persistence,ReadHighestSequenceNr,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,ToString,The length of the statement  "            return string.Format("ReadHighestSequenceNr<pid: {0}' fromSeqNr: {1}' actor: {2}>"' PersistenceId' FromSequenceNr' PersistentActor); " is 132.
Long Statement,Akka.Persistence,PersistenceExtension,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistence.cs,CreatePlugin,The length of the statement  "                throw new ArgumentException(string.Format("Plugin class name must be defined in config property [{0}.class]"' configPath)); " is 123.
Long Statement,Akka.Persistence,PersistenceExtension,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistence.cs,CreatePlugin,The length of the statement  "            object[] pluginActorArgs = pluginType.GetConstructor(new[] {typeof (Config)}) != null ? new object[] {pluginConfig} : null; " is 123.
Long Statement,Akka.Persistence,AtomicWrite,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,ToString,The length of the statement  "            return string.Format("AtomicWrite<pid: {0}' lowSeqNr: {1}' highSeqNr: {2}' size: {3}' sender: {4}>"' PersistenceId' LowestSequenceNr' HighestSequenceNr' Size' Sender); " is 167.
Long Statement,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,WithPayload,The length of the statement  "            return new Persistent(payload' sequenceNr: SequenceNr' persistenceId: PersistenceId' manifest: Manifest' isDeleted: IsDeleted' sender: Sender' writerGuid: WriterGuid); " is 167.
Long Statement,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,WithManifest,The length of the statement  "                new Persistent(payload: Payload' sequenceNr: SequenceNr' persistenceId: PersistenceId' manifest: manifest' isDeleted: IsDeleted' sender: Sender' writerGuid: WriterGuid); " is 169.
Long Statement,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,Update,The length of the statement  "            return new Persistent(payload: Payload' sequenceNr: sequenceNr' persistenceId: persistenceId' manifest: Manifest' isDeleted: isDeleted' sender: sender' writerGuid: writerGuid); " is 176.
Long Statement,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,ToString,The length of the statement  "            return string.Format("Persistent<pid: {0}' seqNr: {1}' deleted: {2}' manifest: {3}' sender: {4}' payload: {5}' writerGuid: {6}>"' PersistenceId' SequenceNr' IsDeleted' Manifest' Sender' Payload' WriterGuid); " is 207.
Long Statement,Akka.Persistence,SnapshotMetadata,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,Equals,The length of the statement  "            return string.Equals(PersistenceId' other.PersistenceId) && SequenceNr == other.SequenceNr && Timestamp.Equals(other.Timestamp); " is 128.
Long Statement,Akka.Persistence,SnapshotMetadata,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,ToString,The length of the statement  "            return string.Format("SnapshotMetadata<pid: {0}' seqNr: {1}' timestamp: {2:yyyy/MM/dd}>"' PersistenceId' SequenceNr' Timestamp); " is 128.
Long Statement,Akka.Persistence,SnapshotSelectionCriteria,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,ToString,The length of the statement  "            return string.Format("SnapshotSelectionCriteria<maxSeqNr: {0}' maxTimestamp: {1:yyyy/MM/dd}"' MaxSequenceNr' MaxTimeStamp); " is 123.
Long Statement,Akka.Persistence,DeleteSnapshots,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The length of the statement  "                return ((PersistenceId != null ? PersistenceId.GetHashCode() : 0) * 397) ^ (Criteria != null ? Criteria.GetHashCode() : 0); " is 123.
Long Statement,Akka.Persistence.Journal,EventAdapters,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\EventAdapters.cs,Create,The length of the statement  "                        throw new ArgumentException(string.Format("{0} was bound to undefined event-adapter: {1} (bindings: [{2}]' known adapters: [{3}])"' " is 131.
Long Statement,Akka.Persistence.Journal,EventAdapters,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\EventAdapters.cs,Instantiate,The length of the statement  "                throw new ArgumentException(string.Format("Couldn't create instance of [{0}] from provided qualified type name [{1}]' because it's not assignable from it"' " is 155.
Long Statement,Akka.Persistence.Journal,AsyncWriteJournal,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\AsyncWriteJournal.cs,HandleReplayMessages,The length of the statement  "                .ContinueWith(t => !t.IsFaulted ? (object) new RecoverySuccess(t.Result) : new ReplayMessagesFailure(TryUnwrapException(t.Exception))' _continuationOptions) " is 156.
Long Statement,Akka.Persistence.Journal,AsyncWriteProxy,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\AsyncWriteProxy.cs,ReplayMessagesAsync,The length of the statement  "            var mediator = context.ActorOf(Props.Create(() => new ReplayMediator(recoveryCallback' replayCompletionPromise' Timeout)).WithDeploy(Deploy.Local)); " is 148.
Long Statement,Akka.Persistence.Journal,ReplayMediator,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\AsyncWriteProxy.cs,Receive,The length of the statement  "                var timeoutException = new AsyncReplayTimeoutException("Replay timed out after " + _replayTimeout.TotalSeconds + "s of inactivity"); " is 132.
Long Statement,Akka.Persistence.Journal,WriteJournalBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\WriteJournal.cs,PreparePersistentBatch,The length of the statement  "               .Select(aw => new AtomicWrite(((IEnumerable<IPersistentRepresentation>)aw.Payload).Select(p => AdaptToJournal(p.Update(p.SequenceNr' p.PersistenceId' p.IsDeleted' ActorRefs.NoSender' p.WriterGuid))).ToImmutableList())); " is 219.
Long Statement,Akka.Persistence.Serialization,MessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\MessageSerializer.cs,ToBinary,The length of the statement  "            if (obj is AtLeastOnceDeliverySnapshot) return SnapshotToProto(obj as AtLeastOnceDeliverySnapshot).Build().ToByteArray(); " is 121.
Long Statement,Akka.Persistence.Serialization,MessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\MessageSerializer.cs,FromBinary,The length of the statement  "            if (type == null || type == typeof(Persistent) || type == typeof(IPersistentRepresentation)) return PersistentMessageFrom(bytes); " is 129.
Long Statement,Akka.Persistence.Serialization,MessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\MessageSerializer.cs,PayloadFromProto,The length of the statement  "            return system.Serialization.Deserialize(persistentPayload.Payload.ToByteArray()' persistentPayload.SerializerId' manifest); " is 123.
Magic Number,Akka.Persistence,AtLeastOnceDeliverySnapshot,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (UnconfirmedDeliveries != null ? UnconfirmedDeliveries.GetHashCode() : 0);
Magic Number,Akka.Persistence,UnconfirmedDelivery,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Destination != null ? Destination.GetHashCode() : 0);
Magic Number,Akka.Persistence,UnconfirmedDelivery,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Message != null ? Message.GetHashCode() : 0);
Magic Number,Akka.Persistence,AtLeastOnceDeliverySemantic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,StartRedeliverTask,The following statement contains a magic number: var interval = new TimeSpan(RedeliverInterval.Ticks/2);
Magic Number,Akka.Persistence,Delivery,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Message != null ? Message.GetHashCode() : 0);
Magic Number,Akka.Persistence,Delivery,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Timestamp.GetHashCode();
Magic Number,Akka.Persistence,Delivery,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\AtLeastOnceDeliverySemantic.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Attempt;
Magic Number,Akka.Persistence,DeleteMessagesFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Cause != null ? Cause.GetHashCode() : 0)*397) ^ ToSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,DeleteMessagesTo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ToSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,DeleteMessagesTo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PersistentActor != null ? PersistentActor.GetHashCode() : 0);
Magic Number,Akka.Persistence,WriteMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PersistentActor != null ? PersistentActor.GetHashCode() : 0);
Magic Number,Akka.Persistence,WriteMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ActorInstanceId;
Magic Number,Akka.Persistence,WriteMessageSuccess,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Persistent != null ? Persistent.GetHashCode() : 0) * 397) ^ ActorInstanceId;
Magic Number,Akka.Persistence,WriteMessageRejected,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ActorInstanceId;
Magic Number,Akka.Persistence,WriteMessageRejected,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Persistent != null ? Persistent.GetHashCode() : 0);
Magic Number,Akka.Persistence,WriteMessageFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ActorInstanceId;
Magic Number,Akka.Persistence,WriteMessageFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Persistent != null ? Persistent.GetHashCode() : 0);
Magic Number,Akka.Persistence,LoopMessageSuccess,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Message != null ? Message.GetHashCode() : 0) * 397) ^ ActorInstanceId;
Magic Number,Akka.Persistence,ReplayMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ToSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,ReplayMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Max.GetHashCode();
Magic Number,Akka.Persistence,ReplayMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PersistenceId != null ? PersistenceId.GetHashCode() : 0);
Magic Number,Akka.Persistence,ReplayMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PersistentActor != null ? PersistentActor.GetHashCode() : 0);
Magic Number,Akka.Persistence,ReadHighestSequenceNr,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PersistenceId != null ? PersistenceId.GetHashCode() : 0);
Magic Number,Akka.Persistence,ReadHighestSequenceNr,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\JournalProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (PersistentActor != null ? PersistentActor.GetHashCode() : 0);
Magic Number,Akka.Persistence,AtomicWrite,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Sender != null ? Sender.GetHashCode() : 0);
Magic Number,Akka.Persistence,AtomicWrite,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ Size;
Magic Number,Akka.Persistence,AtomicWrite,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (PersistenceId != null ? PersistenceId.GetHashCode() : 0);
Magic Number,Akka.Persistence,AtomicWrite,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ LowestSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,AtomicWrite,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ HighestSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Manifest != null ? Manifest.GetHashCode() : 0);
Magic Number,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (PersistenceId != null ? PersistenceId.GetHashCode() : 0);
Magic Number,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ SequenceNr.GetHashCode();
Magic Number,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ IsDeleted.GetHashCode();
Magic Number,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (Sender != null ? Sender.GetHashCode() : 0);
Magic Number,Akka.Persistence,Persistent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Persistent.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (WriterGuid != null ? WriterGuid.GetHashCode() : 0);
Magic Number,Akka.Persistence,SnapshotMetadata,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ SequenceNr.GetHashCode();
Magic Number,Akka.Persistence,SnapshotMetadata,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Timestamp.GetHashCode();
Magic Number,Akka.Persistence,SaveSnapshotFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Metadata != null ? Metadata.GetHashCode() : 0) * 397) ^ (Cause != null ? Cause.GetHashCode() : 0);
Magic Number,Akka.Persistence,DeleteSnapshotFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Metadata != null ? Metadata.GetHashCode() : 0) * 397) ^ (Cause != null ? Cause.GetHashCode() : 0);
Magic Number,Akka.Persistence,DeleteSnapshotsFailure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Criteria != null ? Criteria.GetHashCode() : 0) * 397) ^ (Cause != null ? Cause.GetHashCode() : 0);
Magic Number,Akka.Persistence,SnapshotOffer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Metadata != null ? Metadata.GetHashCode() : 0) * 397) ^ (Snapshot != null ? Snapshot.GetHashCode() : 0);
Magic Number,Akka.Persistence,SnapshotSelectionCriteria,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return (MaxSequenceNr.GetHashCode() * 397) ^ MaxTimeStamp.GetHashCode();
Magic Number,Akka.Persistence,SelectedSnapshot,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Metadata != null ? Metadata.GetHashCode() : 0) * 397) ^ (Snapshot != null ? Snapshot.GetHashCode() : 0);
Magic Number,Akka.Persistence,LoadSnapshot,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Criteria != null ? Criteria.GetHashCode() : 0);
Magic Number,Akka.Persistence,LoadSnapshot,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ToSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,LoadSnapshotResult,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Snapshot != null ? Snapshot.GetHashCode() : 0) * 397) ^ ToSequenceNr.GetHashCode();
Magic Number,Akka.Persistence,SaveSnapshot,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((Metadata != null ? Metadata.GetHashCode() : 0) * 397) ^ (Snapshot != null ? Snapshot.GetHashCode() : 0);
Magic Number,Akka.Persistence,DeleteSnapshots,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\SnapshotProtocol.cs,GetHashCode,The following statement contains a magic number: return ((PersistenceId != null ? PersistenceId.GetHashCode() : 0) * 397) ^ (Criteria != null ? Criteria.GetHashCode() : 0);
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,SnapshotFromBinary,The following statement contains a magic number: var headerBytes = new ArraySegment<byte>(bytes' 4' headerLength);
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,SnapshotFromBinary,The following statement contains a magic number: var snapshotBytes = new byte[bytes.Length - headerLength - 4];
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,SnapshotFromBinary,The following statement contains a magic number: Array.Copy(bytes' headerLength + 4' snapshotBytes' 0' snapshotBytes.Length);
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,WriteInt,The following statement contains a magic number: buffer.WriteByte((byte)((i >> 8) & 0xff));
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,WriteInt,The following statement contains a magic number: buffer.WriteByte((byte)((i >> 16) & 0xff));
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,WriteInt,The following statement contains a magic number: buffer.WriteByte((byte)((i >> 24) & 0xff));
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,ReadInt,The following statement contains a magic number: i |= j << 8;
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,ReadInt,The following statement contains a magic number: i |= j << 16;
Magic Number,Akka.Persistence.Serialization,SnapshotSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Serialization\SnapshotSerializer.cs,ReadInt,The following statement contains a magic number: i |= j << 24;
Magic Number,Akka.Persistence.Snapshot,LocalSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Snapshot\LocalSnapshotStore.cs,ExtractSnapshotMetadata,The following statement contains a magic number: var seqNrString = match.Groups[2].Value;
Magic Number,Akka.Persistence.Snapshot,LocalSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Snapshot\LocalSnapshotStore.cs,ExtractSnapshotMetadata,The following statement contains a magic number: var timestampTicks = match.Groups[3].Value;
Magic Number,Akka.Persistence.Snapshot,LocalSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Snapshot\LocalSnapshotStore.cs,SnapshotSequenceNrFilenameFilter,The following statement contains a magic number: var seqNrString = match.Groups[2].Value;
Magic Number,Akka.Persistence.Snapshot,LocalSnapshotStore,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Snapshot\LocalSnapshotStore.cs,SnapshotSequenceNrFilenameFilter,The following statement contains a magic number: var timestampTicks = match.Groups[3].Value;
Missing Default,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,Receive,The following switch statement is missing a default case: switch (Mode)                              {                                  case ReplayFilterMode.RepairByDiscardOld:                                      //discard                                      break;                                  case ReplayFilterMode.Fail:                                      throw new IllegalStateException(errMsg);                                  case ReplayFilterMode.Warn:                                      _buffer.AddLast(r);                                      break;                                  case ReplayFilterMode.Disabled:                                      throw new ArgumentException("Mode must not be Disabled");                              }
Missing Default,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,Receive,The following switch statement is missing a default case: switch (Mode)                          {                              case ReplayFilterMode.RepairByDiscardOld:                                  //discard                                  break;                              case ReplayFilterMode.Fail:                                  throw new IllegalStateException(errMsg);                              case ReplayFilterMode.Warn:                                  _buffer.AddLast(r);                                  break;                              case ReplayFilterMode.Disabled:                                  throw new ArgumentException("Mode must not be Disabled");                          }
Missing Default,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,Receive,The following switch statement is missing a default case: switch (Mode)                                  {                                      case ReplayFilterMode.RepairByDiscardOld:                                          _buffer.Remove(node);                                          //discard                                          break;                                      case ReplayFilterMode.Fail:                                          throw new IllegalStateException(errMsg);                                      case ReplayFilterMode.Warn:                                          // keep                                          break;                                      case ReplayFilterMode.Disabled:                                          throw new ArgumentException("Mode must not be Disabled");                                  }
Missing Default,Akka.Persistence.Journal,ReplayFilter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Persistence\Journal\ReplayFilter.cs,LogIssue,The following switch statement is missing a default case: switch (Mode)              {                  case ReplayFilterMode.Warn:                  case ReplayFilterMode.RepairByDiscardOld:                      if (_log.IsWarningEnabled)                          _log.Warning(errMsg);                      break;                  case ReplayFilterMode.Fail:                      if (_log.IsErrorEnabled)                          _log.Error(errMsg);                      break;              }
