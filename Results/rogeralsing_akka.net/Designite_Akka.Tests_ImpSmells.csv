Implementation smell,Namespace,Class,File,Method,Description
Long Method,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The method has 176 lines of code.
Long Parameter List,Akka.Tests.Actor,TestScheduler,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,ScheduleTellOnce,The method has 5 parameters. Parameters: delay' receiver' message' sender' cancelable
Long Parameter List,Akka.Tests.Actor,TestScheduler,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,ScheduleTellRepeatedly,The method has 5 parameters. Parameters: initialDelay' interval' receiver' message' sender
Long Parameter List,Akka.Tests.Actor,TestScheduler,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,ScheduleTellRepeatedly,The method has 6 parameters. Parameters: initialDelay' interval' receiver' message' sender' cancelable
Long Parameter List,Akka.Tests.Actor,FailedSupervisorStrategy,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,ProcessFailure,The method has 5 parameters. Parameters: context' restart' cause' failedChildStats' allChildren
Long Parameter List,Akka.Tests.Actor,Failure,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,Failure,The method has 7 parameters. Parameters: directive' stop' depth' failPre' failPost' failConstr' stopKids
Long Parameter List,Akka.Tests.MatchHandler,DummyCompiler<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,CompileToMethod,The method has 6 parameters. Parameters: handlers' capturedArguments' signature' typeBuilder' methodName' methodAttributes
Long Identifier,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_throw_suitable_exceptions_for_malformed_actor_names,The length of the parameter expectedExceptionMessageSubstring is 33.
Long Identifier,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The length of the parameter nonTerminatedOrNonstartedActors is 31.
Long Identifier,Akka.Tests.MatchHandler,DummyMatchExpressionBuilder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,,The length of the parameter CreateArgumentValuesArrayCalls is 30.
Long Identifier,Akka.Tests.MatchHandler,DummyMatchExpressionBuilder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,,The length of the parameter CreateArgumentValuesArrayResult is 31.
Long Identifier,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The length of the parameter numberOfCallsToUpdateWhenSignaled is 33.
Long Identifier,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The length of the parameter numberOfCallsToUpdateWhenSignaled is 33.
Long Identifier,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The length of the parameter numberOfCallsToUpdateWhenSignaled is 33.
Long Statement,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForLocal,The length of the statement  "            //In Akka' at least the system name is case-sensitive' see http://doc.akka.io/docs/akka/current/additional/faq.html#what-is-the-name-of-a-remote-actor             " is 150.
Long Statement,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForRemote,The length of the statement  "            //In Akka' at least the system name is case-sensitive' see http://doc.akka.io/docs/akka/current/additional/faq.html#what-is-the-name-of-a-remote-actor             " is 150.
Long Statement,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Have_correct_path_elements,The length of the statement  "            (new RootActorPath(new Address("akka.tcp"' "mysys")) / "user" / "foo" / "bar").Elements.ShouldOnlyContainInOrder(new[] { "user"' "foo"' "bar" }); " is 145.
Long Statement,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The length of the statement  "            plugA.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorA).ToString()); " is 137.
Long Statement,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The length of the statement  "            plugB.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorB).ToString()); " is 137.
Long Statement,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_application_should_apply_plugins_in_specified_order,The length of the statement  "            actor.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("plugin-1"' "plugin-2"' "plugin-3"); " is 124.
Long Statement,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Select_WithClient_should_update_Client_and_copy_the_rest_of_the_properties_BUG_427,The length of the statement  "            var actorRef = new EmptyLocalActorRef(((ActorSystemImpl)Sys).Provider' new RootActorPath(new Address("akka"' "test"))' Sys.EventStream); " is 136.
Long Statement,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Select_WithClient_should_update_Client_and_copy_the_rest_of_the_properties_BUG_427,The length of the statement  "            var updatedActorRef = new EmptyLocalActorRef(((ActorSystemImpl)Sys).Provider' new RootActorPath(new Address("akka2"' "test2"))' Sys.EventStream); " is 145.
Long Statement,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The length of the statement  "                var actors = Enumerable.Range(0' 4).Select(x => Task.Run(() => Sys.ActorOf(Props.Create(() => new BlackHoleActor())' address))).ToArray(); " is 138.
Long Statement,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The length of the statement  "                Assert.True(actors.Any(x => x.Status == TaskStatus.RanToCompletion && x.Result != null)' "Failed to create any Actors"); " is 120.
Long Statement,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The length of the statement  "                Assert.True(actors.Any(x => x.Status == TaskStatus.Faulted && x.Exception.InnerException is InvalidActorNameException)' "Succeeded in creating all Actors. Some should have failed."); " is 182.
Long Statement,Akka.Tests.Actor,ActorSelectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSelectionSpec.cs,Can_not_ResolveOne_when_no_match,The length of the statement  "            await AkkaSpecExtensions.ThrowsAsync<ActorNotFoundException>(async () => await selection.ResolveOne(TimeSpan.FromSeconds(1)));   " is 126.
Long Statement,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Support_using_a_customer_scheduler,The length of the statement  "            var actorSystem = ActorSystem.Create(Guid.NewGuid().ToString()' DefaultConfig.WithFallback("akka.scheduler.implementation = \"Akka.Tests.Actor.TestScheduler' Akka.Tests\"")); " is 174.
Long Statement,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Allow_configuration_of_guardian_supervisor_strategy,The length of the statement  "            var config = ConfigurationFactory.ParseString("akka.actor.guardian-supervisor-strategy=\"Akka.Actor.StoppingSupervisorStrategy\"") " is 130.
Long Statement,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Shutdown_when_userguardian_escalates,The length of the statement  "            var config = ConfigurationFactory.ParseString("akka.actor.guardian-supervisor-strategy=\"Akka.Tests.Actor.TestStrategy' Akka.Tests\"") " is 134.
Long Statement,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,Bug209_any_user_messages_following_a_Terminate_message_should_be_forwarded_to_DeadLetterMailbox,The length of the statement  "            //The actor should Terminate' exchange the mailbox to a DeadLetterMailbox and forward the user message to the DeadLetterMailbox " is 127.
Long Statement,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_current_monitors_with_one_Terminated_message_when_Actor_is_stopped,The length of the statement  "            var monitor2 = Sys.ActorOf(Props.Create(() => new WatchAndUnwatchMonitor(_terminal' TestActor)).WithDeploy(Deploy.Local)); " is 122.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_StateTimeout,The length of the statement  "                    ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 134.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_StateTimeout,The length of the statement  "                    ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestStateTimeout' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 134.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_cancel_a_StateTimeout,The length of the statement  "                ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 134.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_cancel_a_StateTimeout,The length of the statement  "                ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestStateTimeout' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 134.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_allow_StateTimeout_override,The length of the statement  "                ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 134.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_allow_StateTimeout_override,The length of the statement  "                ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestStateTimeout' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 134.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The length of the statement  "                    ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimer)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 133.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The length of the statement  "                    ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 133.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The length of the statement  "                    ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimerResubmit)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 141.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The length of the statement  "                    ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimerResubmit' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 141.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_correctly_cancel_a_named_timer,The length of the statement  "            ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestCancelTimer)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 133.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_correctly_cancel_a_named_timer,The length of the statement  "            ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestCancelTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()' TimeSpan.FromSeconds(1)); " is 158.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The length of the statement  "            ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestCancelStateTimerInNamedTimerMessage)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 157.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The length of the statement  "            ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestCancelStateTimerInNamedTimerMessage' State.TestCancelStateTimerInNamedTimerMessage2)' FSMSpecHelpers.TransitionStateExpector<State>()' TimeSpan.FromMilliseconds(500)); " is 222.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The length of the statement  "                ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestCancelStateTimerInNamedTimerMessage2' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 158.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The length of the statement  "            ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestRepeatedTimer)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 135.
Long Statement,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The length of the statement  "                ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestRepeatedTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>()); " is 135.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Path_Should_be_the_same_path_as_specified,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl) Sys' props' _dispatcher' () => Sys.Mailboxes.CreateMailbox(props'null)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 208.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Parent_Should_be_itself,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl) Sys' props' _dispatcher' () => Sys.Mailboxes.CreateMailbox(props'null)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 208.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_temp_child_Should_return_tempContainer,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' () => Sys.Mailboxes.CreateMailbox(props' null)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 208.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_deadLetters_child_Should_return_tempContainer,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' () => Sys.Mailboxes.CreateMailbox(props' null)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 208.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_a_child_that_exists_in_extraNames_Should_return_the_child,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' () => Sys.Mailboxes.CreateMailbox(props' null)' ActorRefs.Nobody' _rootActorPath' _deadLetters' extraNames); " is 202.
Long Statement,Akka.Tests.Actor,RootGuardianActorRef_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\RootGuardianActorRef_Tests.cs,Getting_an_unknown_child_that_exists_in_extraNames_Should_return_nobody,The length of the statement  "            var rootGuardianActorRef = new RootGuardianActorRef((ActorSystemImpl)Sys' props' _dispatcher' () => Sys.Mailboxes.CreateMailbox(props' null)' ActorRefs.Nobody' _rootActorPath' _deadLetters' _emptyExtraNames); " is 208.
Long Statement,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_Restart_Manager_And_Workers_In_AllForOne,The length of the statement  "            var managerProps = new PropsWithName(Props.Create(() => new CountDownActor(countDown' new AllForOneStrategy(decider)))' "manager"); " is 131.
Long Statement,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The length of the statement  "                var crasher = ctx.ActorOf(Props.Create(() => new CountDownActor(countDownMessages' SupervisorStrategy.DefaultStrategy))' "crasher"); " is 132.
Long Statement,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The length of the statement  "                        resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate); " is 181.
Long Statement,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The length of the statement  "            var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart)))); " is 143.
Long Statement,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The length of the statement  "            var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart)))); " is 143.
Long Statement,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test3,The length of the statement  "            var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart)))); " is 143.
Long Statement,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The length of the statement  "                deviate.Should(val => val < 0.1' string.Format("Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' interval' a + 1' b + 1' diffBetweenMessages' deviate * 100)); " is 247.
Long Statement,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_TimeSpan_Tests,The length of the statement  "            scheduler.ScheduleTellRepeatedly(TimeSpan.FromMilliseconds(initialDelay)' TimeSpan.FromMilliseconds(interval)' TestActor' "Test"' ActorRefs.NoSender); " is 150.
Long Statement,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The length of the statement  "                deviate.Should(val => val < 0.1' string.Format("Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' interval' a + 1' b + 1' diffBetweenMessages' deviate * 100)); " is 247.
Long Statement,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_TimeSpan_Tests,The length of the statement  "            testScheduler.ScheduleRepeatedly(TimeSpan.FromMilliseconds(initialDelay)' TimeSpan.FromMilliseconds(interval)' () => TestActor.Tell("Test")); " is 141.
Long Statement,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_action_crashes_Then_no_more_calls_will_be_scheduled,The length of the statement  "            testScheduler.ScheduleRepeatedly(0' 10' () => { Interlocked.Increment(ref timesCalled); throw new Exception("Crash"); }); " is 121.
Long Statement,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The length of the statement  "            var asker = Sys.ActorOf(Props.Create(() => new BlockingAsker(actor)).WithDispatcher("akka.actor.task-dispatcher")' "Asker"); " is 124.
Long Statement,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Receive_Data_Directly_When_The_Connection_Is_Established,The length of the statement  "                if (x.InterestCallReceiver.ReceiveWhile<object>(m => m is int && (int)m == (int)SocketAsyncOperation.Connect' TimeSpan.Zero' TimeSpan.Zero' 1).Any()) " is 149.
Long Statement,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Receive_Data_Directly_When_The_Connection_Is_Established,The length of the statement  "                    x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelConnectable.Instance);   // Only send ChannelConnectable if we did not complete synchronously  " is 152.
Long Statement,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_Failed_connection_attempt_when_target_is_unreachable,The length of the statement  "                //x.ClientSideChannel.Socket.Poll(3000' SelectMode.SelectWrite).ShouldBe(true);  // In .NET we cant select on 'Connectable' (I think) " is 133.
Long Statement,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_Failed_connection_attempt_when_timing_out,The length of the statement  "            test.ConnectionActor = test.CreateConnectionActor(serverAddress: unboundAddress' timeout:TimeSpan.FromMilliseconds(100)); " is 121.
Long Statement,Akka.Tests.IO,LocalServerTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,CreateConnectionActorWithoutRegistration,The length of the statement  "                        new TestTcpOutgoingConnection(tcp' this' UserHandler.Ref' new Tcp.Connect(serverAddress' null' options' timeout' pullMode)))); " is 126.
Long Statement,Akka.Tests.IO,EstablishedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,Run,The length of the statement  "                    if (InterestCallReceiver.ReceiveWhile<object>(m => m is int && (int)m == (int)SocketAsyncOperation.Connect' TimeSpan.Zero' TimeSpan.Zero' 1).Any()) " is 147.
Long Statement,Akka.Tests.IO,EstablishedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,Run,The length of the statement  "                        Selector.Send(ConnectionActor' SelectionHandler.ChannelConnectable.Instance);   // Only send ChannelConnectable if we did not complete synchronously  " is 148.
Long Statement,Akka.Tests.IO,EstablishedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,Run,The length of the statement  "                    UserHandler.ExpectMsg<Tcp.Connected>(message => ((IPEndPoint) message.RemoteAddress).Port.ShouldBe(ServerAddress.Port)); //TODO: compare full endpoint' not only port " is 165.
Long Statement,Akka.Tests.IO,EstablishedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,PullFromServerSide,The length of the statement  "                if (read == -1) throw new IllegalStateException("Connection was closed unexpectedly with remaining bytes " + remaining); " is 120.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_complete_one_client_server_request_response_cycle,The length of the statement  "                actors.ClientHandler.Send(actors.ClientConnection' Tcp.Write.Create(ByteString.FromString("Captain on the bridge!")' Aye.Instance)); " is 132.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_properly_complete_one_client_server_request_response_cycle,The length of the statement  "                actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.FromString("For the king!")' Yes.Instance)); " is 123.
Long Statement,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The length of the statement  "                actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.Create(new byte[100000])' Ack.Instance)); " is 120.
Long Statement,Akka.Tests.IO,UdpConnectedIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,ConnectUdp,The length of the statement  "            commander.Send(UdpConnected.Instance.Apply(Sys).Manager' new UdpConnected.Connect(handler' remoteAddress' localAddress)); " is 121.
Long Statement,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_afterConnect_method_after_binding,The length of the statement  "            commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[3]' options: new[] { assertOption })); " is 121.
Long Statement,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_DatagramChannelCreator_create_method_when_opening_channel,The length of the statement  "            commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[4]' options: new[] { assertOption })); " is 121.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_first_time_correct_calls_are_made_to_MatchExpressionBuilder_and_PartialActionBuilder,The length of the statement  "            AssertOneCall(to: matchExpressionBuilder.BuildLambdaExpressionCalls' withArgument: typeHandlers' description: "BuildLambdaExpression"); " is 135.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_first_time_correct_calls_are_made_to_MatchExpressionBuilder_and_PartialActionBuilder,The length of the statement  "            AssertOneCall(to: partialActionBuilder.BuildCalls' description: "Build"' check: i => ReferenceEquals(i.CompiledDelegate' deleg) && ReferenceEquals(i.DelegateArguments' argumentValues)); " is 185.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_second_time_with_same_signature_the_cached_version_should_be_used,The length of the statement  "            AssertOneCall(to: matchExpressionBuilder.CreateArgumentValuesArrayCalls' withArgument: arguments' description: "CreateArgumentValuesArray"); " is 140.
Long Statement,Akka.Tests.MatchHandler,CachedMatchCompilerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\CachedMatchCompilerTests.cs,When_compiling_second_time_with_same_signature_the_cached_version_should_be_used,The length of the statement  "            AssertOneCall(to: partialActionBuilder.BuildCalls' description: "Build"' check: i => ReferenceEquals(i.CompiledDelegate' deleg) && ReferenceEquals(i.DelegateArguments' argumentValues)); " is 185.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<String>' Predicate<string>' bool>)result.LambdaExpression.Compile(); " is 137.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<int>' Predicate<int>' bool>)result.LambdaExpression.Compile(); " is 131.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The length of the statement  "            var lambda = (Func<object' Func<String' bool>' Func<int' bool>' Func<String' bool>' bool>)result.LambdaExpression.Compile(); " is 124.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<int>' bool>) " is 291.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The length of the statement  "            lambda("some value"' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionInt); " is 249.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The length of the statement  "            lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionInt); " is 241.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            var lambda = (Func<object' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' Action<String>' Predicate<string>' object[]' bool>) " is 288.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            lambda("some value"' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray); " is 256.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray); " is 248.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The length of the statement  "            lambda(42' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray); " is 246.
Long Statement,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_that_expects_base_type,The length of the statement  "            Action<object> action = s => { updatedValue = s is string ? "WasString:" + (string)s : "WasNotString" + s.ToString(); }; " is 120.
Long Statement,Akka.Tests.MatchHandler,MatchHandlerBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,Test_that_signatures_are_equal,The length of the statement  "            AssertSameSignatures<object>(bldr => bldr.MatchAny(_ => { })' bldr => bldr.Match<object>(o => { str = o.ToString(); })); " is 120.
Long Statement,Akka.Tests.MatchHandler,MatchHandlerBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,Test_that_signatures_are_equal,The length of the statement  "            AssertSameSignatures<object>(bldr => bldr.Match<string>(s => { }' s => true)' bldr => bldr.Match<string>(s => { }' s => false)); " is 128.
Long Statement,Akka.Tests.MatchHandler,MatchHandlerBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchHandlerBuilderTests.cs,Test_that_signatures_differs,The length of the statement  "            AssertDifferentSignatures<object>(bldr => bldr.Match<string>(_ => { })' bldr => bldr.Match<string>(_ => { }' s => s == null)); " is 126.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) => " is 122.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) => " is 133.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) => " is 146.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) => " is 156.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) => " is 168.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) => " is 181.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) => " is 191.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The length of the statement  "            Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) => " is 202.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The length of the statement  "            var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" }; " is 123.
Long Statement,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The length of the statement  "            Assert.Throws<ArgumentException>(() => ((Action) (() => builder.Build<object>(new CompiledMatchHandlerWithArguments(null' delegateArguments))))()); " is 147.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsClosed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_FailureCount_When_Call_Fails,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsClosed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Reset_FailureCount_When_Call_Succeeds,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsHalfOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsHalfOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<OpenCircuitException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 128.
Long Statement,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Transition_To_Half_Open_When_Reset_Times_Out,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithSyncCircuitBreaker( ThrowException ) ) ); " is 121.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsClosed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_Failure_Count_When_Call_Fails,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Run( ( ) => ThrowException( ) ) ).Wait( AwaitTimeout ) ) ); " is 166.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsHalfOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Close_On_Success,The length of the statement  "            InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ) ); " is 133.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsHalfOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsHalfOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Pass_Call_And_Transition_To_Open_On_Exception,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_When_Called_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Throw_Exceptions_When_Called_Before_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<OpenCircuitException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 163.
Long Statement,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsOpen,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Transition_To_Half_Open_When_Reset_Timeout,The length of the statement  "            Assert.True( InterceptExceptionType<TestException>( ( ) => breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ThrowException ) ).Wait( ) ) ); " is 156.
Long Statement,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,InterceptExceptionType,The length of the statement  "                    foreach ( var temp in aggregate.InnerExceptions.Select( innerException => innerException as T ).Where( temp => temp == null ) ) " is 127.
Long Statement,Akka.Tests.Routing,BroadcastSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\BroadcastSpec.cs,BroadcastGroup_router_must_broadcast_message_using_Tell,The length of the statement  "            var routedActor = Sys.ActorOf(Props.Create<TestActor>().WithRouter(new BroadcastGroup(actor1.Path.ToString()' actor2.Path.ToString()))); " is 136.
Long Statement,Akka.Tests.Routing,BroadcastSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\BroadcastSpec.cs,BroadcastGroup_router_must_broadcast_message_using_Ask,The length of the statement  "            var routedActor = Sys.ActorOf(Props.Create<TestActor>().WithRouter(new BroadcastGroup(actor1.Path.ToString()' actor2.Path.ToString()))); " is 136.
Long Statement,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_select_destination_with_defined_hash_mapping,The length of the statement  "                Sys.ActorOf(new ConsistentHashingPool(1' null' null' null' hashMapping: hashMapping).Props(Props.Create<Echo>())' "router2"); " is 125.
Long Statement,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The length of the statement  "            // ReSharper disable once RedundantArgumentDefaultValue (exposing the values we're testing makes this test understandable.) " is 123.
Long Statement,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_not_terminate_when_resizer_is_used,The length of the statement  "                Sys.ActorOf(new RoundRobinPool( 0' resizer'SupervisorStrategy.DefaultStrategy'null).Props(Props.Create<BlackHoleActor>())); " is 123.
Long Statement,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_must_deliver_a_broadcast_message_using_tell,The length of the statement  "            var routedActor = Sys.ActorOf(Props.Create<TestActor>().WithRouter(new ScatterGatherFirstCompletedGroup(TimeSpan.FromSeconds(1)' actor1.Path.ToString()' actor2.Path.ToString()))); " is 179.
Long Statement,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_deliver_a_broadcast_message_using_tell,The length of the statement  "                .WithRouter(new TailChoppingGroup(new[] { actor1.Path.ToString()' actor2.Path.ToString() }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(100)) " is 148.
Long Statement,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_return_response_from_second_actor_after_inactivity_from_first_one,The length of the statement  "                .WithRouter(new TailChoppingGroup(new[] { actor1.Path.ToString()' actor2.Path.ToString() }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50)) " is 147.
Long Statement,Akka.Tests.Util,ByteStringSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_ByteString_must_behave_as_expected_when_created_from_and_decoding_to_String,The length of the statement  "            Prop.ForAll((string s) => ByteString.FromString(s' Encoding.UTF8).DecodeString(Encoding.UTF8) == (s ?? "")) // TODO: What should we do with null string? " is 152.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "" " is 132.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "-" " is 133.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "" " is 132.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "-" " is 133.
Long Statement,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The length of the statement  "            //                                             Interlocked.CompareExchange will update sharedVariable to "updated" if it still is "" " is 132.
Empty Catch Block,Akka.Tests.Dispatch,AsyncExceptionCatcherActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncExceptionCatcherActor,The method has an empty catch block.
Magic Number,Akka.Tests.Actor,ActorBecomeTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorBecomeTests.cs,Given_actor_that_calls_become_in_the_become_handler_only_first_become_receive_set_is_used,The following statement contains a magic number: actor.Tell(2' TestActor);
Magic Number,Akka.Tests.Actor,ActorCellSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,Cell_should_clear_current_message_after_receive,The following statement contains a magic number: SpinWait.SpinUntil(() => cell.CurrentMessage == null' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,ActorCellSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,Cell_should_clear_current_message_after_async_receive,The following statement contains a magic number: SpinWait.SpinUntil(() => cell.CurrentMessage == null' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,DummyAsyncActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorCellSpec.cs,DummyAsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async m =>                  {                      await Task.Delay(500);                      autoResetEvent.Set();                  });
Magic Number,Akka.Tests.Actor,WhenSerializeAllMessagesIsOff,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorCellTests_SerializationOfUserMessages.cs,Does_not_serializes_user_messages,The following statement contains a magic number: var message = new SomeUserMessage              {                  A = "abc"'                  B = 123'                  C = Guid.Empty              };
Magic Number,Akka.Tests.Actor,WhenSerializeAllMessagesIsOn,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorCellTests_SerializationOfUserMessages.cs,Do_serialize_user_messages,The following statement contains a magic number: var message = new SomeUserMessage              {                  A = "abc"'                  B = 123'                  C = Guid.Empty              };
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForLocal,The following statement contains a magic number: elements.Count.ShouldBe(2'"number of elements in path");
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForRemote,The following statement contains a magic number: actorPath.Address.Port.ShouldBe(4711' "port");
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,ActorPath_Parse_HandlesCasing_ForRemote,The following statement contains a magic number: elements.Count.ShouldBe(2' "number of elements in path");
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var a = new Address("akka.tcp"' "mysys"' "aaa"' 2552);
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var b = new Address("akka.tcp"' "mysys"' "bb"' 2552);
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var c = new Address("akka.tcp"' "mysys"' "cccc"' 2552);
Magic Number,Akka.Tests.Actor,ActorPathSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorPathSpec.cs,Create_correct_ToString_with_address,The following statement contains a magic number: var d = new Address("akka.tcp"' "mysys"' "192.168.107.1"' 2552);
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The following statement contains a magic number: plugA.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorA).ToString());
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_should_allow_to_register_multiple_generic_plugins_with_different_generic_types,The following statement contains a magic number: plugB.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("working plugin"' typeof(PlugActorB).ToString());
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_application_should_apply_plugins_in_specified_order,The following statement contains a magic number: _resolver.Insert(2' new OrderedPlugin3()).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,Pipeline_application_should_apply_plugins_in_specified_order,The following statement contains a magic number: actor.Ask<string[]>("plugins"' TimeSpan.FromSeconds(3)).Result.ShouldOnlyContainInOrder("plugin-1"' "plugin-2"' "plugin-3");
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_apply_stashing_to_actors_implementing_it,The following statement contains a magic number: actor.Ask<string>(StashStatus.Instance' TimeSpan.FromSeconds(3)).Result.ShouldBe("actor stash is initialized");
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_unstash_all_terminated_actors_stashed_messages_on_stop,The following statement contains a magic number: EventFilter.DeadLetter<int>().Expect(3' () =>              {                  var actor = ActorOf<StashingActor>();                  // send some messages to stash                  actor.Tell(1);                  actor.Tell(2);                  actor.Tell(3);                                    // stop actor                  actor.Tell(PoisonPill.Instance);              });
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_unstash_all_terminated_actors_stashed_messages_on_stop,The following statement contains a magic number: EventFilter.DeadLetter<int>().Expect(3' () =>              {                  var actor = ActorOf<StashingActor>();                  // send some messages to stash                  actor.Tell(1);                  actor.Tell(2);                  actor.Tell(3);                                    // stop actor                  actor.Tell(PoisonPill.Instance);              });
Magic Number,Akka.Tests.Actor,ActorProducerPipelineTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorProducerPipelineTests.cs,DefaultPipeline_should_unstash_all_terminated_actors_stashed_messages_on_stop,The following statement contains a magic number: EventFilter.DeadLetter<int>().Expect(3' () =>              {                  var actor = ActorOf<StashingActor>();                  // send some messages to stash                  actor.Tell(1);                  actor.Tell(2);                  actor.Tell(3);                                    // stop actor                  actor.Tell(PoisonPill.Instance);              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_equal_another_ActorRef_instance_with_same_path,The following statement contains a magic number: var actorPath1 = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_equal_another_ActorRef_instance_with_same_path,The following statement contains a magic number: var actorPath2 = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var referencePath = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var path1 = (new RootActorPath(new Address("akka"' "test")) / "name").WithUid(42);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var path2 = (new RootActorPath(new Address("akka"' "test")) / "name2").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_not_equal_another_ActorRef_when_path_differs,The following statement contains a magic number: var path3 = (new RootActorPath(new Address("akka"' "test2")) / "name").WithUid(4711);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_restart_when_Killed,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  var latch = CreateTestLatch(2);                  var boss = ActorOf(a =>                  {                      var child = a.ActorOf(c =>                      {                          c.ReceiveAny((msg' ctx) => { });                          c.OnPreRestart = (reason' msg' ctx) =>                          {                              latch.CountDown();                               c.DefaultPreRestart(reason' msg);                          };                          c.OnPostRestart = (reason' ctx) =>                          {                              latch.CountDown();                              c.DefaultPostRestart(reason);                          };                      });                      a.Strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r=> Directive.Restart);                      a.Receive<string>((_' ctx) => child.Tell(Kill.Instance));                  });                    boss.Tell("send kill");                  latch.Ready(TimeSpan.FromSeconds(5));              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_restart_when_Killed,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  var latch = CreateTestLatch(2);                  var boss = ActorOf(a =>                  {                      var child = a.ActorOf(c =>                      {                          c.ReceiveAny((msg' ctx) => { });                          c.OnPreRestart = (reason' msg' ctx) =>                          {                              latch.CountDown();                               c.DefaultPreRestart(reason' msg);                          };                          c.OnPostRestart = (reason' ctx) =>                          {                              latch.CountDown();                              c.DefaultPostRestart(reason);                          };                      });                      a.Strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r=> Directive.Restart);                      a.Receive<string>((_' ctx) => child.Tell(Kill.Instance));                  });                    boss.Tell("send kill");                  latch.Ready(TimeSpan.FromSeconds(5));              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_restart_when_Killed,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  var latch = CreateTestLatch(2);                  var boss = ActorOf(a =>                  {                      var child = a.ActorOf(c =>                      {                          c.ReceiveAny((msg' ctx) => { });                          c.OnPreRestart = (reason' msg' ctx) =>                          {                              latch.CountDown();                               c.DefaultPreRestart(reason' msg);                          };                          c.OnPostRestart = (reason' ctx) =>                          {                              latch.CountDown();                              c.DefaultPostRestart(reason);                          };                      });                      a.Strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r=> Directive.Restart);                      a.Receive<string>((_' ctx) => child.Tell(Kill.Instance));                  });                    boss.Tell("send kill");                  latch.Ready(TimeSpan.FromSeconds(5));              });
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_nested_ActorOfs,The following statement contains a magic number: t1.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t1.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t2.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t3.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_advanced_nested_ActorOfs,The following statement contains a magic number: t4.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_reply_via_Sender,The following statement contains a magic number: var latch = new TestLatch(4);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_reply_via_Sender,The following statement contains a magic number: latch.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_support_reply_via_Sender,The following statement contains a magic number: latch.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_stop_when_sent_a_poison_pill,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(20);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_stop_when_sent_a_poison_pill,The following statement contains a magic number: var t1 = actorRef.Ask(5' timeout);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,An_ActorRef_should_be_able_to_check_for_existence_of_the_children,The following statement contains a magic number: var timeout = TimeSpan.FromSeconds(3);
Magic Number,Akka.Tests.Actor,ActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,VerifyActorTermination,The following statement contains a magic number: watcher.ExpectTerminated(actorRef' TimeSpan.FromSeconds(20));
Magic Number,Akka.Tests.Actor,WorkerActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,Work,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,Akka.Tests.Actor,SleepyActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\AskTimeoutSpec.cs,OnReceive,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,Akka.Tests.Actor,MultipleConstructorBecomer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\HotSwapSpec.cs,MultipleConstructorBecomer,The following statement contains a magic number: i <= 4
Magic Number,Akka.Tests.Actor,MultipleStackingConstructorBecomer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\HotSwapSpec.cs,MultipleStackingConstructorBecomer,The following statement contains a magic number: i <= 4
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: var tasks = new[]                  {                      Task.Factory.StartNew(() => _inbox.Receive())'                      Task.Factory.StartNew(() =>                      {                          Thread.Sleep(100);                          return _inbox.ReceiveWhere(x => x.ToString() == "world");                       })'                       Task.Factory.StartNew(() =>                      {                          Thread.Sleep(200);                          return _inbox.ReceiveWhere(x => x.ToString() == "hello");                       })                   };
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: var tasks = new[]                  {                      Task.Factory.StartNew(() => _inbox.Receive())'                      Task.Factory.StartNew(() =>                      {                          Thread.Sleep(100);                          return _inbox.ReceiveWhere(x => x.ToString() == "world");                       })'                       Task.Factory.StartNew(() =>                      {                          Thread.Sleep(200);                          return _inbox.ReceiveWhere(x => x.ToString() == "hello");                       })                   };
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: _inbox.Receiver.Tell(42);
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: tasks[0].Result.ShouldBe(42);
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_support_queueing_multiple_queries,The following statement contains a magic number: tasks[2].Result.ShouldBe("hello");
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: Enumerable.Repeat(0' 1000)
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: EventFilter.Warning(start:"Dropping message").ExpectOne(() => _inbox.Receiver.Tell(42));
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: _inbox.Receiver.Tell(42);
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_maximum_queue_size,The following statement contains a magic number: var gotit = Enumerable.Repeat(0' 1000).Select(_ => _inbox.Receive());
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_a_default_and_custom_timeouts,The following statement contains a magic number: Within(TimeSpan.FromSeconds(4)' TimeSpan.FromSeconds(6)' () =>              {                  Intercept<TimeoutException>(() => _inbox.Receive());                  return true;              });
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_a_default_and_custom_timeouts,The following statement contains a magic number: Within(TimeSpan.FromSeconds(4)' TimeSpan.FromSeconds(6)' () =>              {                  Intercept<TimeoutException>(() => _inbox.Receive());                  return true;              });
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_have_a_default_and_custom_timeouts,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' () =>              {                  Intercept<TimeoutException>(() => _inbox.Receive(TimeSpan.FromMilliseconds(100)));                  return true;              });
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Select_WithClient_should_update_Client_and_copy_the_rest_of_the_properties_BUG_427,The following statement contains a magic number: var deadline = new TimeSpan(Sys.Scheduler.MonotonicClock.Ticks/2);
Magic Number,Akka.Tests.Actor,InboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\InboxSpec.cs,Inbox_Receive_will_timeout_gracefully_if_timeout_is_already_expired,The following statement contains a magic number: Assert.True(task.Wait(1000)' "Receive did not complete in time.");
Magic Number,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The following statement contains a magic number: var timeout = Dilated(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The following statement contains a magic number: var actors = Enumerable.Range(0' 4).Select(x => Task.Run(() => Sys.ActorOf(Props.Create(() => new BlackHoleActor())' address))).ToArray();
Magic Number,Akka.Tests.Actor,LocalActorRefProviderSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\LocalActorRefProviderSpec.cs,An_ActorRefFactory_must_only_create_one_instance_of_an_actor_with_a_specific_address_in_a_concurrent_environment,The following statement contains a magic number: i < 100
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(5' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(10' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_uses_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(15' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(5' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(10' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_that_uses_non_generic_and_predicates_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(15' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_with_ReceiveAny_When_sending_different_messages_Then_correct_handler_should_be_invoked,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_overrides_PreStart_When_sending_a_message_Then_the_message_should_be_handled,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_an_actor_which_overrides_PreStart_When_sending_a_message_Then_the_message_should_be_handled,The following statement contains a magic number: ExpectMsg(4711);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: ExpectMsg<UnhandledMessage>( m => ((int)m.Message) == 4711 && m.Recipient == actor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: actor.Tell(4711' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveActorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,Given_actor_When_it_calls_Become_Then_it_switches_handler,The following statement contains a magic number: ExpectMsg<UnhandledMessage>(m => ((int)m.Message) == 4711 && m.Recipient == actor);
Magic Number,Akka.Tests.Actor,IntPredicatesActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Receive<int>(i => i < 5' i => Sender.Tell("int<5:" + i' Self));
Magic Number,Akka.Tests.Actor,IntPredicatesActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Receive<int>(i => Sender.Tell("int<10:" + i' Self)' i => i < 10);
Magic Number,Akka.Tests.Actor,IntPredicatesActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,IntPredicatesActor,The following statement contains a magic number: Receive<int>(i =>                  {                      if(i < 15)                      {                          Sender.Tell("int<15:" + i' Self);                          return true;                      }                      return false;                  });
Magic Number,Akka.Tests.Actor,TypePredicatesActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Receive(typeof(int)' i => (int)i < 5' i => Sender.Tell("int<5:" + i' Self));
Magic Number,Akka.Tests.Actor,TypePredicatesActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Receive(typeof(int)' i => Sender.Tell("int<10:" + i' Self)' i => (int)i < 10);
Magic Number,Akka.Tests.Actor,TypePredicatesActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveActorTests.cs,TypePredicatesActor,The following statement contains a magic number: Receive(typeof(int)' o =>                  {                      var i = (int) o;                      if(i < 15)                      {                          Sender.Tell("int<15:" + i' Self);                          return true;                      }                      return false;                  });
Magic Number,Akka.Tests.Actor,AskSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Can_Ask_actor_with_timeout,The following statement contains a magic number: actor.Ask<string>("answer"'TimeSpan.FromSeconds(10)).Result.ShouldBe("answer");
Magic Number,Akka.Tests.Actor,AskSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,Can_get_timeout_when_asking_actor,The following statement contains a magic number: Assert.Throws<AggregateException>(() => { actor.Ask<string>("timeout"' TimeSpan.FromSeconds(3)).Wait(); });
Magic Number,Akka.Tests.Actor,SomeActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,OnReceive,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,Akka.Tests.Actor,WaitActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\AskSpec.cs,OnReceive,The following statement contains a magic number: result.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Block_until_exit,The following statement contains a magic number: actorSystem.WhenTerminated.Wait(TimeSpan.FromSeconds(2)).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Block_until_exit,The following statement contains a magic number: Assert.True(st.Elapsed.TotalSeconds >= .9);
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Given_a_system_that_isnt_going_to_shutdown_When_waiting_for_system_shutdown_Then_it_times_out,The following statement contains a magic number: actorSystem.WhenTerminated.Wait(TimeSpan.FromMilliseconds(10)).ShouldBeFalse();
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Run_termination_callbacks_in_order,The following statement contains a magic number: var count = 10;
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Run_termination_callbacks_in_order,The following statement contains a magic number: actorSystem.RegisterOnTermination(() =>                  {                      Task.Delay(Dilated(TimeSpan.FromMilliseconds(value % 3))).Wait();                      result.Add(value);                      latch.CountDown();                  });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,AwaitTermination_after_termination_callbacks,The following statement contains a magic number: actorSystem.RegisterOnTermination(() =>              {                  Task.Delay(Dilated(TimeSpan.FromMilliseconds(50))).Wait();                  callbackWasRun = true;              });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,AwaitTermination_after_termination_callbacks,The following statement contains a magic number: new TaskFactory().StartNew(() =>              {                  Task.Delay(Dilated(TimeSpan.FromMilliseconds(200))).Wait();                  actorSystem.Terminate();              });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,AwaitTermination_after_termination_callbacks,The following statement contains a magic number: actorSystem.WhenTerminated.Wait(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Throw_exception_when_register_callback_after_shutdown,The following statement contains a magic number: actorSystem.Terminate().Wait(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var timeout = Dilated(TimeSpan.FromSeconds(20));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var waves = Task.WhenAll(                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var waves = Task.WhenAll(                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: var waves = Task.WhenAll(                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000)'                  Sys.ActorOf(Props.Create<Wave>()).Ask<string>(50000));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliably_create_waves_of_actors,The following statement contains a magic number: waves.Wait(timeout.Duration() + TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: sys.Scheduler.Advanced.ScheduleOnce(TimeSpan.FromMilliseconds(100)' () =>              {                  sys.Terminate();              });
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: Thread.Sleep(50);
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: created.Count % 1000 == 0
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Reliable_deny_creation_of_actors_while_shutting_down,The following statement contains a magic number: !failing && sys.Uptime.TotalSeconds >= 10
Magic Number,Akka.Tests.Actor,ActorSystemSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorSystemSpec.cs,Shutdown_when_userguardian_escalates,The following statement contains a magic number: Assert.True(system.WhenTerminated.Wait(1000));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_a_Terminated_message_once_when_Actor_is_stopped_but_not_when_restarted,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(3' () =>              {                  var timeout = TimeSpan.FromSeconds(5);                  var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(                      new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r => Directive.Restart))));                    var t1 = supervisor.Ask(Props.Create(() => new EchoTestActor()));                  t1.Wait(timeout);                  var terminal = t1.Result as LocalActorRef;                  var t2 = supervisor.Ask(CreateWatchAndForwarderProps(terminal' TestActor)' timeout);                  t2.Wait(timeout);                  var monitor = t2.Result as IActorRef;                    terminal.Tell(Kill.Instance);                  terminal.Tell(Kill.Instance);                    var foo = terminal.Ask("foo"' timeout).Result as string;                  foo.ShouldBe("foo");                    terminal.Tell(Kill.Instance);                    ExpectTerminationOf(terminal);                  terminal.IsTerminated.ShouldBe(true);                    Sys.Stop(supervisor);              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_a_Terminated_message_once_when_Actor_is_stopped_but_not_when_restarted,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(3' () =>              {                  var timeout = TimeSpan.FromSeconds(5);                  var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(                      new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r => Directive.Restart))));                    var t1 = supervisor.Ask(Props.Create(() => new EchoTestActor()));                  t1.Wait(timeout);                  var terminal = t1.Result as LocalActorRef;                  var t2 = supervisor.Ask(CreateWatchAndForwarderProps(terminal' TestActor)' timeout);                  t2.Wait(timeout);                  var monitor = t2.Result as IActorRef;                    terminal.Tell(Kill.Instance);                  terminal.Tell(Kill.Instance);                    var foo = terminal.Ask("foo"' timeout).Result as string;                  foo.ShouldBe("foo");                    terminal.Tell(Kill.Instance);                    ExpectTerminationOf(terminal);                  terminal.IsTerminated.ShouldBe(true);                    Sys.Stop(supervisor);              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_with_a_Terminated_message_once_when_Actor_is_stopped_but_not_when_restarted,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(3' () =>              {                  var timeout = TimeSpan.FromSeconds(5);                  var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(                      new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' r => Directive.Restart))));                    var t1 = supervisor.Ask(Props.Create(() => new EchoTestActor()));                  t1.Wait(timeout);                  var terminal = t1.Result as LocalActorRef;                  var t2 = supervisor.Ask(CreateWatchAndForwarderProps(terminal' TestActor)' timeout);                  t2.Wait(timeout);                  var monitor = t2.Result as IActorRef;                    terminal.Tell(Kill.Instance);                  terminal.Tell(Kill.Instance);                    var foo = terminal.Ask("foo"' timeout).Result as string;                  foo.ShouldBe("foo");                    terminal.Tell(Kill.Instance);                    ExpectTerminationOf(terminal);                  terminal.IsTerminated.ShouldBe(true);                    Sys.Stop(supervisor);              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_fail_a_monitor_which_doesnt_handle_Terminated,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().And.Exception<DeathPactException>().Expect(2' () =>              {                  var strategy = new FailedSupervisorStrategy(TestActor);                  _supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(strategy)).WithDeploy(Deploy.Local));                    var failed = _supervisor.Ask(Props.Empty).Result as IActorRef;                  var brother = _supervisor.Ask(Props.Create(() => new BrotherActor(failed))).Result as IActorRef;                    StartWatching(brother);                    failed.Tell(Kill.Instance);                  var result = ReceiveWhile(TimeSpan.FromSeconds(5)' msg =>                  {                      var res = 0;                      msg.Match()                          .With<FF>(ff =>                          {                              if (ff.Fail.Cause is ActorKilledException && ff.Fail.Child == failed) res = 1;                              if (ff.Fail.Cause is DeathPactException && ff.Fail.Child == brother) res = 2;                          })                          .With<WrappedTerminated>(x => res = x.Terminated.ActorRef == brother ? 3 : 0);                      return res.ToString();                  }' 3);                    ((IInternalActorRef)TestActor).IsTerminated.ShouldBe(false);                  result.ShouldOnlyContainInOrder("1"' "2"' "3");              });
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_notify_only_when_watching,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,DeathWatch_must_discard_Terminated_when_unwatched_between_sysmsg_and_processing,The following statement contains a magic number: t1.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,StartWatching,The following statement contains a magic number: var task = _supervisor.Ask(CreateWatchAndForwarderProps(target' TestActor)' TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,DeathWatchSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,StartWatching,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor,Watcher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\DeathWatchSpec.cs,Watcher,The following statement contains a magic number: Receive<Latches>(x =>                      {                          x.T1.CountDown();                          x.T2.Ready(TimeSpan.FromSeconds(3));                      });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_StateTimeout,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' () =>              {                  Within(TimeSpan.FromMilliseconds(500)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestStateTimeout' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestStateTimeout' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(50));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_StateTimeout,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' () =>              {                  Within(TimeSpan.FromMilliseconds(500)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestStateTimeout' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestStateTimeout' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(50));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_cancel_a_StateTimeout,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' () =>              {                  fsm.Tell(State.TestStateTimeout' Self);                  fsm.Tell(new Cancel()' Self);                  ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>());                  ExpectMsg<Cancel>();                  ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestStateTimeout' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                  ExpectNoMsg(TimeSpan.FromMilliseconds(50));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_allow_StateTimeout_override,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(400)' () =>              {                  fsm.Tell(State.TestStateTimeoutOverride' Self);                  ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>());                  ExpectNoMsg(TimeSpan.FromMilliseconds(300));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_allow_StateTimeout_override,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(400)' () =>              {                  fsm.Tell(State.TestStateTimeoutOverride' Self);                  ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestStateTimeout)' FSMSpecHelpers.TransitionStateExpector<State>());                  ExpectNoMsg(TimeSpan.FromMilliseconds(300));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  Within(TimeSpan.FromMilliseconds(450)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestSingleTimer' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimer)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg<Tick>();                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  Within(TimeSpan.FromMilliseconds(450)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestSingleTimer' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimer)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg<Tick>();                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  Within(TimeSpan.FromMilliseconds(450)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestSingleTimer' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimer)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg<Tick>();                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2.5)' () =>              {                  Within(TimeSpan.FromMilliseconds(450)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestSingleTimerResubmit' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimerResubmit)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg<Tick>();                      return true;                  });                    Within(TimeSpan.FromSeconds(1)' () =>                  {                      ExpectMsg<Tock>();                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimerResubmit' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2.5)' () =>              {                  Within(TimeSpan.FromMilliseconds(450)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestSingleTimerResubmit' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimerResubmit)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg<Tick>();                      return true;                  });                    Within(TimeSpan.FromSeconds(1)' () =>                  {                      ExpectMsg<Tock>();                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimerResubmit' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_resubmit_single_shot_timer,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2.5)' () =>              {                  Within(TimeSpan.FromMilliseconds(450)' TimeSpan.FromSeconds(1)' () =>                  {                      fsm.Tell(State.TestSingleTimerResubmit' Self);                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.Initial' State.TestSingleTimerResubmit)' FSMSpecHelpers.TransitionStateExpector<State>());                      ExpectMsg<Tick>();                      return true;                  });                    Within(TimeSpan.FromSeconds(1)' () =>                  {                      ExpectMsg<Tock>();                      ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestSingleTimerResubmit' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                      return true;                  });                  ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_correctly_cancel_a_named_timer,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(1500)' () =>              {                  fsm.Tell(new Tick()' Self);                  ExpectMsg<Tick>();                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_correctly_cancel_a_named_timer,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(300)' TimeSpan.FromSeconds(1)' () =>              {                  ExpectMsg<Tock>();                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: ExpectMsg<Tick>(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: Task.Delay(TimeSpan.FromMilliseconds(200));
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestCancelStateTimerInNamedTimerMessage' State.TestCancelStateTimerInNamedTimerMessage2)' FSMSpecHelpers.TransitionStateExpector<State>()' TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_not_get_confused_between_named_and_state_timers,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(500)' () =>              {                  ExpectMsg<Cancel>();                  ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestCancelStateTimerInNamedTimerMessage2' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The following statement contains a magic number: var seq = ReceiveWhile(TimeSpan.FromSeconds(2)' o =>              {                  if(o is Tick) return o;                  return null;              });
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The following statement contains a magic number: Assert.Equal(5' seq.Count);
Magic Number,Akka.Tests.Actor,FSMTimingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,FSM_must_receive_and_cancel_a_repeated_timer,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(500)' () =>              {                  ExpectMsg(new FSMBase.Transition<State>(fsm' State.TestRepeatedTimer' State.Initial)' FSMSpecHelpers.TransitionStateExpector<State>());                  return true;              });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.Initial' @event =>                  {                      State<State' int> nextState = null;                      if (@event.FsmEvent is State)                      {                          var s = (State) @event.FsmEvent;                          switch (s)                          {                              case State.TestSingleTimer:                                  SetTimer("tester"' new Tick()' TimeSpan.FromMilliseconds(500)' false);                                  nextState = GoTo(State.TestSingleTimer);                                  break;                              case State.TestRepeatedTimer:                                  SetTimer("tester"' new Tick()' TimeSpan.FromMilliseconds(100)' true);                                  nextState = GoTo(State.TestRepeatedTimer).Using(4);                                  break;                              case State.TestStateTimeoutOverride:                                  nextState = GoTo(State.TestStateTimeout).ForMax(TimeSpan.MaxValue);                                  break;                              default:                                  nextState = GoTo(s);                                  break;                          }                      }                      return nextState;                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.Initial' @event =>                  {                      State<State' int> nextState = null;                      if (@event.FsmEvent is State)                      {                          var s = (State) @event.FsmEvent;                          switch (s)                          {                              case State.TestSingleTimer:                                  SetTimer("tester"' new Tick()' TimeSpan.FromMilliseconds(500)' false);                                  nextState = GoTo(State.TestSingleTimer);                                  break;                              case State.TestRepeatedTimer:                                  SetTimer("tester"' new Tick()' TimeSpan.FromMilliseconds(100)' true);                                  nextState = GoTo(State.TestRepeatedTimer).Using(4);                                  break;                              case State.TestStateTimeoutOverride:                                  nextState = GoTo(State.TestStateTimeout).ForMax(TimeSpan.MaxValue);                                  break;                              default:                                  nextState = GoTo(s);                                  break;                          }                      }                      return nextState;                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.Initial' @event =>                  {                      State<State' int> nextState = null;                      if (@event.FsmEvent is State)                      {                          var s = (State) @event.FsmEvent;                          switch (s)                          {                              case State.TestSingleTimer:                                  SetTimer("tester"' new Tick()' TimeSpan.FromMilliseconds(500)' false);                                  nextState = GoTo(State.TestSingleTimer);                                  break;                              case State.TestRepeatedTimer:                                  SetTimer("tester"' new Tick()' TimeSpan.FromMilliseconds(100)' true);                                  nextState = GoTo(State.TestRepeatedTimer).Using(4);                                  break;                              case State.TestStateTimeoutOverride:                                  nextState = GoTo(State.TestStateTimeout).ForMax(TimeSpan.MaxValue);                                  break;                              default:                                  nextState = GoTo(s);                                  break;                          }                      }                      return nextState;                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.TestStateTimeout' @event =>                  {                      State<State' int> nextState = null;                      @event.FsmEvent.Match()                          .With<StateTimeout>(s =>                          {                              nextState = GoTo(State.Initial);                          })                          .With<Cancel>(c =>                          {                              nextState = GoTo(State.Initial).Replying(new Cancel());                          });                      return nextState;                    }' TimeSpan.FromMilliseconds(800));
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: OnTransition((state' state1) =>                  {                      if(state == State.Initial && state1 == State.TestSingleTimerResubmit)                          SetTimer("blah"' new Tick()' TimeSpan.FromMilliseconds(500));                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.TestSingleTimerResubmit' @event =>                  {                      State<State' int> nextState = null;                      @event.FsmEvent.Match()                          .With<Tick>(tick =>                          {                              Tester.Tell(new Tick());                              SetTimer("blah"' new Tock()' TimeSpan.FromMilliseconds(500));                              nextState = Stay();                          })                          .With<Tock>(tock =>                          {                              Tester.Tell(new Tock());                              nextState = GoTo(State.Initial);                          });                        return nextState;                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.TestCancelTimer' @event =>                  {                      State<State' int> nextState = null;                        @event.FsmEvent.Match()                          .With<Tick>(tick =>                          {                              var contextLocal = Context;                              var numberOfMessages = ((ActorCell) contextLocal).Mailbox.NumberOfMessages;                              SetTimer("hallo"' new Tock()' TimeSpan.FromMilliseconds(1));                              StaticAwaitCond(() => contextLocal.AsInstanceOf<ActorCell>().Mailbox.HasUnscheduledMessages' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                              CancelTimer("hallo");                              Sender.Tell(new Tick());                              SetTimer("hallo"' new Tock()' TimeSpan.FromMilliseconds(500));                              nextState = Stay();                          })                          .With<Tock>(tock =>                          {                              Tester.Tell(new Tock());                              nextState = Stay();                          })                          .With<Cancel>(c =>                          {                              CancelTimer("hallo");                              nextState = GoTo(State.Initial);                          });                        return nextState;                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.TestCancelTimer' @event =>                  {                      State<State' int> nextState = null;                        @event.FsmEvent.Match()                          .With<Tick>(tick =>                          {                              var contextLocal = Context;                              var numberOfMessages = ((ActorCell) contextLocal).Mailbox.NumberOfMessages;                              SetTimer("hallo"' new Tock()' TimeSpan.FromMilliseconds(1));                              StaticAwaitCond(() => contextLocal.AsInstanceOf<ActorCell>().Mailbox.HasUnscheduledMessages' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                              CancelTimer("hallo");                              Sender.Tell(new Tick());                              SetTimer("hallo"' new Tock()' TimeSpan.FromMilliseconds(500));                              nextState = Stay();                          })                          .With<Tock>(tock =>                          {                              Tester.Tell(new Tock());                              nextState = Stay();                          })                          .With<Cancel>(c =>                          {                              CancelTimer("hallo");                              nextState = GoTo(State.Initial);                          });                        return nextState;                  });
Magic Number,Akka.Tests.Actor,StateMachine,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTimingSpec.cs,StateMachine,The following statement contains a magic number: When(State.TestCancelStateTimerInNamedTimerMessage' @event =>                  {                      //FSM is suspended after processing this message and resumed 500s later                      State<State' int> nextState = null;                        @event.FsmEvent.Match()                          .With<Tick>(tick =>                          {                              Suspend(Self);                              SetTimer("named"' new Tock()' TimeSpan.FromMilliseconds(1));                              var contextLocal = Context;                              StaticAwaitCond(() =>((ActorCell) contextLocal).Mailbox.HasUnscheduledMessages'                                      TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50));                              nextState = Stay().ForMax(TimeSpan.FromMilliseconds(1)).Replying(new Tick());                          })                          .With<Tock>(tock =>                          {                              nextState = GoTo(State.TestCancelStateTimerInNamedTimerMessage2);                          });                        return nextState;                  });
Magic Number,Akka.Tests.Actor,FSMTransitionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTransitionSpec.cs,FSMTransitionNotifier_must_not_fail_when_listener_goes_away,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' async () =>              {                  fsm.Tell(new FSMBase.SubscribeTransitionCallBack(forward));                  ExpectMsg(new FSMBase.CurrentState<int>(fsm' 0)' FSMSpecHelpers.CurrentStateExpector<int>());                  await forward.GracefulStop(TimeSpan.FromSeconds(5));                  fsm.Tell("tick");                  ExpectNoMsg(TimeSpan.FromMilliseconds(300));                  return true;              });
Magic Number,Akka.Tests.Actor,FSMTransitionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\FSMTransitionSpec.cs,FSMTransitionNotifier_must_not_fail_when_listener_goes_away,The following statement contains a magic number: Within(TimeSpan.FromSeconds(1)' async () =>              {                  fsm.Tell(new FSMBase.SubscribeTransitionCallBack(forward));                  ExpectMsg(new FSMBase.CurrentState<int>(fsm' 0)' FSMSpecHelpers.CurrentStateExpector<int>());                  await forward.GracefulStop(TimeSpan.FromSeconds(5));                  fsm.Tell("tick");                  ExpectNoMsg(TimeSpan.FromMilliseconds(300));                  return true;              });
Magic Number,Akka.Tests.Actor,PatternSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_provide_Task_for_stopping_an_actor,The following statement contains a magic number: var result = target.GracefulStop(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Actor,PatternSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_provide_Task_for_stopping_an_actor,The following statement contains a magic number: result.Wait(TimeSpan.FromSeconds(6));
Magic Number,Akka.Tests.Actor,PatternSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_when_actor_already_terminated,The following statement contains a magic number: Assert.True(await target.GracefulStop(TimeSpan.FromSeconds(5)));
Magic Number,Akka.Tests.Actor,PatternSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_when_actor_already_terminated,The following statement contains a magic number: Assert.True(await target.GracefulStop(TimeSpan.FromSeconds(5)));
Magic Number,Akka.Tests.Actor,PatternSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_with_TaskCanceledException_when_actor_not_terminated_within_timeout,The following statement contains a magic number: target.Tell(Tuple.Create(latch' TimeSpan.FromSeconds(2)));
Magic Number,Akka.Tests.Actor,PatternSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\PatternSpec.cs,GracefulStop_must_complete_Task_with_TaskCanceledException_when_actor_not_terminated_within_timeout,The following statement contains a magic number: XAssert.Throws<TaskCanceledException>(() =>              {                  var task = target.GracefulStop(TimeSpan.FromMilliseconds(500));                  task.Wait();                  var result = task.Result;              });
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout,The following statement contains a magic number: var timeoutActor = Sys.ActorOf(Props.Create(() => new TimeoutActor(timeoutLatch' TimeSpan.FromMilliseconds(500))));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_reschedule_timeout_after_regular_receive,The following statement contains a magic number: var timeoutActor = Sys.ActorOf(Props.Create(() => new TimeoutActor(timeoutLatch' TimeSpan.FromMilliseconds(500))));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout_while_receiving_NotInfluenceReceiveTimeout_messages,The following statement contains a magic number: var ticks = Sys.Scheduler.ScheduleTellRepeatedlyCancelable(TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)' timeoutActor' new TransperentTick()' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,An_actor_with_receive_timeout_must_get_timeout_while_receiving_NotInfluenceReceiveTimeout_messages,The following statement contains a magic number: var ticks = Sys.Scheduler.ScheduleTellRepeatedlyCancelable(TimeSpan.FromMilliseconds(100)'                  TimeSpan.FromMilliseconds(100)' timeoutActor' new TransperentTick()' TestActor);
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,Issue469_An_actor_with_receive_timeout_must_cancel_receive_timeout_when_terminated,The following statement contains a magic number: var timeoutActor = Sys.ActorOf(Props.Create(() => new TimeoutActor(timeoutLatch' TimeSpan.FromMilliseconds(500))));
Magic Number,Akka.Tests.Actor,ReceiveTimeoutSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,Issue469_An_actor_with_receive_timeout_must_cancel_receive_timeout_when_terminated,The following statement contains a magic number: timeoutLatch.Ready(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Actor,TurnOffTimeoutActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ReceiveTimeoutSpec.cs,TurnOffTimeoutActor,The following statement contains a magic number: Context.SetReceiveTimeout(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_Restart_Manager_And_Workers_In_AllForOne,The following statement contains a magic number: var countDown = new CountdownEvent(4);
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_Restart_Manager_And_Workers_In_AllForOne,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().ExpectOne(() =>              {                  worker1.Tell(Kill.Instance);                  // manager + all workers should be restarted by only killing a worker                  // manager doesn't trap exits' so boss will restart manager                    countDown.Wait(TimeSpan.FromSeconds(5)).ShouldBe(true);                });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: var boss = ActorOf((cfg' ctx) =>              {                  var crasher = ctx.ActorOf(Props.Create(() => new CountDownActor(countDownMessages' SupervisorStrategy.DefaultStrategy))' "crasher");                  cfg.Receive("killCrasher"' (s' context) => crasher.Tell(Kill.Instance));                  cfg.Receive<Terminated>((terminated' context) => countDownMax.Signal());                  cfg.Strategy = new OneForOneStrategy(1' TimeSpan.FromSeconds(5)' e => Directive.Restart);                  ctx.Watch(crasher);              }' "boss");
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: EventFilter.Exception<ActorKilledException>().Expect(2' () =>              {                  boss.Tell("killCrasher");                  boss.Tell("killCrasher");              });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: countDownMessages.Wait(TimeSpan.FromSeconds(2)).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_must_send_notifications_to_supervisor_when_permanent_failure,The following statement contains a magic number: countDownMax.Wait(TimeSpan.FromSeconds(2)).ShouldBeTrue();
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_suspend_children_while_failing,The following statement contains a magic number: var slowResumer = ActorOf(c =>              {                  c.Strategy = new OneForOneStrategy(e => { latch.Ready(Dilated(TimeSpan.FromSeconds(4))); return Directive.Resume; });                  c.Receive<string>(s => s.StartsWith("spawn:")' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>(s.Substring(6))));                  c.Receive("spawn"' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>()));              }' "slowResumer");
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_suspend_children_while_failing,The following statement contains a magic number: var slowResumer = ActorOf(c =>              {                  c.Strategy = new OneForOneStrategy(e => { latch.Ready(Dilated(TimeSpan.FromSeconds(4))); return Directive.Resume; });                  c.Receive<string>(s => s.StartsWith("spawn:")' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>(s.Substring(6))));                  c.Receive("spawn"' (s' ctx) => ctx.Sender.Tell(ctx.ActorOf<Resumer>()));              }' "slowResumer");
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: EventFilter.Exception<Failure>()                  .And.Exception<InvalidOperationException>("OH NO!")                  .And.Error(start: "changing Recreate into Create")                  .And.Error(start: "changing Resume into Create")                  .Mute(() =>                  {                      //Create:                      // failresumer                      //    |                      // failingChild                      //    | (sometimes)                      // workingChild                      var failresumer = ActorOf((resumerDsl' context) =>                      {                          resumerDsl.Strategy = new OneForOneStrategy(ex => ex is ActorInitializationException ? (createAttempt.Current % 2 == 0 ? Directive.Resume : Directive.Restart) : Directive.Escalate);                          var failingChild = context.ActorOf((childDsl' childContext) =>                          {                              var ca = createAttempt.IncrementAndGet();                              if (ca <= 6 && ca % 3 == 0)                                  childContext.ActorOf(BlackHoleActor.Props' "workingChild" + ca);                              if (ca < 6)                                  throw new InvalidOperationException("OH NO!");                              childDsl.OnPreStart = _ => preStartCalled.IncrementAndGet();                              childDsl.OnPostRestart = (e' _) => postRestartCalled.IncrementAndGet();                              childDsl.ReceiveAny((m' actorContext) => actorContext.Sender.Tell(m));                          }' "failingChild");                          resumerDsl.ReceiveAny((m' _) => failingChild.Forward(m));                      }' "failresumer");                        //Send failresumer some meatballs. This message will be forwarded to failingChild                      failresumer.Tell("Köttbullar");                      ExpectMsg("Köttbullar");                  });
Magic Number,Akka.Tests.Actor,SupervisorHierarchySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,A_supervisor_hierarchy_must_handle_failure_in_creation_when_supervision_strategy_returns_Resume_and_Restart,The following statement contains a magic number: createAttempt.Current.ShouldBe(6);
Magic Number,Akka.Tests.Actor,Resumer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\SupervisorHierarchySpec.cs,Resumer,The following statement contains a magic number: Receive<string>(s => s.StartsWith("spawn:")' s => Sender.Tell(Context.ActorOf<Resumer>(s.Substring(6))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(Tuple.Create("postRestart"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(Tuple.Create("OK"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(Tuple.Create("preRestart"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(Tuple.Create("postRestart"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(Tuple.Create("OK"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test1,The following statement contains a magic number: ExpectMsg(Tuple.Create("postStop"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(Tuple.Create("preStart"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(Tuple.Create("OK"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(Tuple.Create("postStop"' id' 2));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(Tuple.Create("preStart"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(Tuple.Create("OK"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test2,The following statement contains a magic number: ExpectMsg(Tuple.Create("postStop"' id' 3));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test3,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Actor_lifecycle_test3,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() => new Supervisor(new OneForOneStrategy(3' TimeSpan.FromSeconds(1000)' x => Directive.Restart))));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_behavior_stack_upon_restart,The following statement contains a magic number: ExpectMsg(42);
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_behavior_stack_upon_restart,The following statement contains a magic number: ExpectMsg(43);
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_behavior_stack_upon_restart,The following statement contains a magic number: ExpectMsg(42);
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(2);
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: supervisor.Tell(new SupervisorTestActor.Spawn() { Name = names[2] });
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(Tuple.Create("Created"' names[2]));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(2);
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: supervisor.Tell(new SupervisorTestActor.Stop() { Name = names[2] });
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: ExpectMsg(Tuple.Create("Terminated"' names[2]));
Magic Number,Akka.Tests,ActorLifeCycleSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorLifeCycleSpec.cs,Clear_child_upon_terminated,The following statement contains a magic number: Task.Delay(100).Wait();
Magic Number,Akka.Tests.Actor.Cancellation,CancelableTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Cancellation\CancelableTests.cs,Should_be_possible_to_call_CancelAfterMs,The following statement contains a magic number: c.CancelAfter(50);
Magic Number,Akka.Tests.Actor.Cancellation,CancelableTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Cancellation\CancelableTests.cs,Should_be_possible_to_call_CancelAfterTimespan,The following statement contains a magic number: c.CancelAfter(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: var receiver = ActorOf(dsl =>              {                  //Receive three messages' and store the time when these were received                  //after three messages stop the actor and send the times to TestActor                  var messages = new List<DateTimeOffset>();                  dsl.Receive<string>((s' context) =>                  {                      messages.Add(context.System.Scheduler.Now);                      if(messages.Count == 3)                      {                          TestActor.Tell(messages);                          cancelable.Cancel();                          context.Stop(context.Self);                      }                  });              });
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: dateTimeOffsets.ShouldHaveCount(3);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: Action<int' int> validate = (a' b) =>              {                  var valA = dateTimeOffsets[a];                  var valB = dateTimeOffsets[b];                  var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                  var diffInMs = Math.Abs(diffBetweenMessages - interval);                  var deviate = (diffInMs / interval);                  deviate.Should(val => val < 0.1' string.Format("Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' interval' a + 1' b + 1' diffBetweenMessages' deviate * 100));              };
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: Action<int' int> validate = (a' b) =>              {                  var valA = dateTimeOffsets[a];                  var valB = dateTimeOffsets[b];                  var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                  var diffInMs = Math.Abs(diffBetweenMessages - interval);                  var deviate = (diffInMs / interval);                  deviate.Should(val => val < 0.1' string.Format("Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' interval' a + 1' b + 1' diffBetweenMessages' deviate * 100));              };
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellRepeatedly_in_milliseconds_Tests,The following statement contains a magic number: validate(1' 2);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,ScheduleTellOnceTests,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellOnce_many_at_the_same_time_Then_all_fires,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellOnce_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                  scheduler.ScheduleTellRepeatedly(invalidTime' 100' TestActor' "Test"' ActorRefs.NoSender)                  );
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_interval_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                  scheduler.ScheduleTellRepeatedly(42' invalidInterval' TestActor' "Test"' ActorRefs.NoSender)                  );
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_invalid_interval_Then_exception_is_thrown,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 60 * 1000' TestActor' "Test"' ActorRefs.NoSender);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Schedule_Tests.cs,When_ScheduleTellRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 60 * 1000' TestActor' "Test"' ActorRefs.NoSender);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellOnce_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 2' TestActor' "Test"' ActorRefs.NoSender' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(1' 2' TestActor' "Test"' ActorRefs.NoSender' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellOnce(100' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(100' 2' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(100' 2' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_ScheduleTellRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(0' 150' TestActor' "Test"' ActorRefs.NoSender' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleTellRepeatedly(1' 150' TestActor' "Test"' ActorRefs.NoSender' cancelableOdd);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: cancelableOdd.CancelAfter(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_TellScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_TellScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: var receiver = ActorOf(dsl =>              {                  //Receive three messages' and store the time when these were received                  //after three messages stop the actor and send the times to TestActor                  var messages = new List<DateTimeOffset>();                  dsl.Receive<string>((s' context) =>                  {                      messages.Add(context.System.Scheduler.Now);                      if(messages.Count == 3)                      {                          TestActor.Tell(messages);                          cancelable.Cancel();                          context.Stop(context.Self);                      }                  });              });
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: dateTimeOffsets.ShouldHaveCount(3);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: Action<int' int> validate = (a' b) =>              {                  var valA = dateTimeOffsets[a];                  var valB = dateTimeOffsets[b];                  var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                  var diffInMs = Math.Abs(diffBetweenMessages - interval);                  var deviate = (diffInMs / interval);                  deviate.Should(val => val < 0.1' string.Format("Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' interval' a + 1' b + 1' diffBetweenMessages' deviate * 100));              };
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: Action<int' int> validate = (a' b) =>              {                  var valA = dateTimeOffsets[a];                  var valB = dateTimeOffsets[b];                  var diffBetweenMessages = Math.Abs((valB - valA).TotalMilliseconds);                  var diffInMs = Math.Abs(diffBetweenMessages - interval);                  var deviate = (diffInMs / interval);                  deviate.Should(val => val < 0.1' string.Format("Expected the interval between message {1} and {2} to deviate maximum 10% from {0}. It was {3} ms between the messages. It deviated {4}%"' interval' a + 1' b + 1' diffBetweenMessages' deviate * 100));              };
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleRepeatedly_in_milliseconds_Tests_and_verify_the_interval,The following statement contains a magic number: validate(1' 2);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleOnceTests,The following statement contains a magic number: testScheduler.ScheduleOnce(50' () => TestActor.Tell("Test1"));
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleOnceTests,The following statement contains a magic number: testScheduler.ScheduleOnce(100' () => TestActor.Tell("Test2"));
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,ScheduleOnceTests,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleOnce_many_at_the_same_time_Then_all_fires,The following statement contains a magic number: ExpectNoMsg(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_invalid_delay_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                  testScheduler.ScheduleRepeatedly(invalidTime' 100' () => { })                  );
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_invalid_interval_Then_exception_is_thrown,The following statement contains a magic number: XAssert.Throws<ArgumentOutOfRangeException>(() =>                  testScheduler.ScheduleRepeatedly(42' invalidInterval' () => { })                  );
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleOnce_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: manualResetEvent.Wait(500).ShouldBeTrue();
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: testScheduler.ScheduleRepeatedly(0' 100' () => manualResetEvent.Set());
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_with_0_delay_Then_action_is_executed_immediately,The following statement contains a magic number: manualResetEvent.Wait(500).ShouldBeTrue();
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_action_crashes_Then_no_more_calls_will_be_scheduled,The following statement contains a magic number: testScheduler.ScheduleRepeatedly(0' 10' () => { Interlocked.Increment(ref timesCalled); throw new Exception("Crash"); });
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Schedule_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Schedule_Tests.cs,When_ScheduleRepeatedly_action_crashes_Then_no_more_calls_will_be_scheduled,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleOnce_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(100);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(0' 100' () => TestActor.Tell("Test1")' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(50' 100' () => TestActor.Tell("Test2")' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(50' 100' () => TestActor.Tell("Test2")' canceled);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_using_canceled_Cancelable_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleOnce(100' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleOnce_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(100' 2' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(100' 2' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_ScheduleRepeatedly_and_then_canceling_before_they_occur_Then_their_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(150);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(0' 150' () => TestActor.Tell("Test")' cancelable);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: scheduler.ScheduleRepeatedly(1' 150' () => TestActor.Tell("Test")' cancelableOdd);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: cancelableOdd.CancelAfter(50);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_ActionScheduler_Cancellation_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_ActionScheduler_Cancellation_Tests.cs,When_canceling_existing_running_repeaters_by_scheduling_the_cancellation_ahead_of_time_Then_their_future_actions_should_not_be_invoked,The following statement contains a magic number: ExpectNoMsg(200);
Magic Number,Akka.Tests.Actor.Scheduler,DedicatedThreadScheduler_Verify_TimeProvider,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Scheduler\TaskBasedScheduler_Verify_TimeProvider.cs,Now_Should_be_accurate,The following statement contains a magic number: Math.Abs((timeProvider.Now - DateTimeOffset.Now).TotalMilliseconds).ShouldBeLessThan(20);
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_throw_an_exception_if_the_same_message_is_stashed_twice,The following statement contains a magic number: _state.ExpectedException.Ready(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_process_stashed_messages_after_restart,The following statement contains a magic number: SupervisorStrategy strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' e => Directive.Restart);
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_process_stashed_messages_after_restart,The following statement contains a magic number: restartLatch.Ready(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_Must_process_stashed_messages_after_restart,The following statement contains a magic number: hasMsgLatch.Ready(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_that_clears_the_stash_on_preRestart_Must_not_receive_previously_stashed_messages,The following statement contains a magic number: SupervisorStrategy strategy = new OneForOneStrategy(2' TimeSpan.FromSeconds(1)' e => Directive.Restart);
Magic Number,Akka.Tests.Actor.Stash,ActorWithStashSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,An_actor_that_clears_the_stash_on_preRestart_Must_not_receive_previously_stashed_messages,The following statement contains a magic number: restartLatch.Ready(TimeSpan.FromSeconds(1110));
Magic Number,Akka.Tests.Actor.Stash,StateObj,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,StateObj,The following statement contains a magic number: Finished = testKit.CreateTestBarrier(2);
Magic Number,Akka.Tests.Actor.Stash,CustomMessageOverrideEquals,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\Stash\ActorWithStashSpec.cs,GetHashCode,The following statement contains a magic number: return base.GetHashCode() ^ 314;
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.LoggerStartTimeout.Seconds.ShouldBe(5);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.LogDeadLetters.ShouldBe(10);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.CreationTimeout.Seconds.ShouldBe(20);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.UnstartedPushTimeout.Seconds.ShouldBe(10);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,The_default_configuration_file_contain_all_configuration_properties,The following statement contains a magic number: settings.DefaultVirtualNodesFactor.ShouldBe(10);
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: var source = new MyObjectConfig              {                  StringProperty = "aaa"'                  BoolProperty = true'                  IntergerArray = new[]{1'2'3'4 }              };
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: var source = new MyObjectConfig              {                  StringProperty = "aaa"'                  BoolProperty = true'                  IntergerArray = new[]{1'2'3'4 }              };
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: var source = new MyObjectConfig              {                  StringProperty = "aaa"'                  BoolProperty = true'                  IntergerArray = new[]{1'2'3'4 }              };
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3' 4 }' config.GetIntList("IntergerArray").ToArray());
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3' 4 }' config.GetIntList("IntergerArray").ToArray());
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_create_config_from_source_object,The following statement contains a magic number: Assert.Equal(new[] { 1' 2' 3' 4 }' config.GetIntList("IntergerArray").ToArray());
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(456' config.GetInt("a.c"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(789' config.GetInt("a.d"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(888' config.GetInt("a.e"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(888' config.GetInt("a.e"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.sub.aa"));
Magic Number,Akka.Tests.Configuration,ConfigurationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\ConfigurationSpec.cs,Can_merge_objects,The following statement contains a magic number: Assert.Equal(456' config.GetInt("a.sub.bb"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_substituted_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4' 5' 6}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a.c")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(                      ConfigurationFactory.ParseString(hocon).GetIntList("root.array-newline-element")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(                      ConfigurationFactory.ParseString(hocon).GetIntList("root.array-newline-element")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_hocon,The following statement contains a magic number: Assert.True(                  new[] {1' 2' 3' 4}.SequenceEqual(                      ConfigurationFactory.ParseString(hocon).GetIntList("root.array-newline-element")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_json,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_json,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("root.array")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_values_to_path_expressions,The following statement contains a magic number: Assert.Equal(2L' config.GetLong("a.b.d"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_values_to_path_expressions,The following statement contains a magic number: Assert.Equal(3L' config.GetLong("a.b.e.f"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_array_to_field,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_array_to_field,The following statement contains a magic number: Assert.True(new[] {1' 2' 3}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_concatenate_array,The following statement contains a magic number: Assert.True(new[] {1' 2' 3' 4}.SequenceEqual(ConfigurationFactory.ParseString(hocon).GetIntList("a")));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_substitution_to_field,The following statement contains a magic number: Assert.Equal(123' ConfigurationFactory.ParseString(hocon).GetInt("a.d"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_assign_double_to_field,The following statement contains a magic number: Assert.Equal(1.1' ConfigurationFactory.ParseString(hocon).GetDouble("a"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback,The following statement contains a magic number: Assert.Equal(123' config.GetInt("foo.bar.a"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback,The following statement contains a magic number: Assert.Equal(2' config.GetInt("foo.bar.b"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback,The following statement contains a magic number: Assert.Equal(3' config.GetInt("foo.bar.c"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback_in_sub_config,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback_in_sub_config,The following statement contains a magic number: Assert.Equal(2' config.GetInt("b"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fallback_in_sub_config,The following statement contains a magic number: Assert.Equal(3' config.GetInt("c"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.a").ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.b").ShouldBe(2);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.c").ShouldBe(3);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.zork").ShouldBe(555);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.a").ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.b").ShouldBe(2);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.c").ShouldBe(3);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_use_fluent_multi_level_fallback,The following statement contains a magic number: config.GetInt("foo.bar.zork").ShouldBe(555);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_quoted_keys,The following statement contains a magic number: config.GetInt("a.some quoted' key").ShouldBe(123);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_overwrite_value,The following statement contains a magic number: config.GetInt("test.value").ShouldBe(456);
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_substitute_object,The following statement contains a magic number: Assert.Equal(123' ace.GetInt("bar"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_parse_include,The following statement contains a magic number: Assert.Equal(123'config.GetInt("a.b.x"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_include,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.x"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_include,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.y"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_nested_includes,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.c.d.e.x"));
Magic Number,Akka.Tests.Configuration,HoconTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Configuration\HoconTests.cs,Can_resolve_substitutes_in_nested_includes,The following statement contains a magic number: Assert.Equal(123' config.GetInt("a.b.c.d.e.y"));
Magic Number,Akka.Tests.Dispatch,ActorMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\ActorMailboxSpec.cs,Actors_get_unbounded_mailbox_when_configured_with_stash_only,The following statement contains a magic number: CheckMailBoxType(Props.Create<StashMailboxWithParamsReportingActor>(10' "foo")'                  "default-override-from-stash3"' new[] { typeof(UnboundedDequeBasedMailbox) });
Magic Number,Akka.Tests.Dispatch,ActorMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\ActorMailboxSpec.cs,Actors_get_unbounded_mailbox_when_configured_with_stash_only,The following statement contains a magic number: CheckMailBoxType(Props.Create(() => new StashMailboxWithParamsReportingActor(10' "foo"))'                  "default-override-from-stash4"' new[] { typeof(UnboundedDequeBasedMailbox) });
Magic Number,Akka.Tests.Dispatch,ReceiveTimeoutAsyncActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,ReceiveTimeoutAsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async s =>              {                  _replyTo = Sender;                    await Task.Delay(TimeSpan.FromMilliseconds(100));                  SetReceiveTimeout(TimeSpan.FromMilliseconds(100));              });
Magic Number,Akka.Tests.Dispatch,ReceiveTimeoutAsyncActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,ReceiveTimeoutAsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async s =>              {                  _replyTo = Sender;                    await Task.Delay(TimeSpan.FromMilliseconds(100));                  SetReceiveTimeout(TimeSpan.FromMilliseconds(100));              });
Magic Number,Akka.Tests.Dispatch,AsyncActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncActor,The following statement contains a magic number: ReceiveAsync<string>(async s =>              {                  await Task.Yield();                  await Task.Delay(TimeSpan.FromMilliseconds(100));                  if (s == "stop")                  {                      Sender.Tell("done");                  }              });
Magic Number,Akka.Tests.Dispatch,AsyncAwaitActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncAwaitActor,The following statement contains a magic number: ReceiveAsync<int>(async msg =>              {                  await Task.Yield();                  Sender.Tell("handled");              }' i => i > 10);
Magic Number,Akka.Tests.Dispatch,BlockingAskSelf,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,BlockingAskSelf,The following statement contains a magic number: Receive<string>(_ =>              {                  //ask and block                  var res = Self.Ask(123).Result;                  Sender.Tell(res);              });
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,UntypedActors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,UntypedActors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_in_message_loop,The following statement contains a magic number: var task = actor.Ask<string>("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_in_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_async_await_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_message_loop,The following statement contains a magic number: actor.Tell(123' ActorRefs.NoSender);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_block_ask_self_message_loop,The following statement contains a magic number: var task = asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_supervise_async_exceptions,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_use_ContinueWith,The following statement contains a magic number: var res = await asker.Ask("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_supervise_exception_ContinueWith,The following statement contains a magic number: ExpectMsg("done"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actors_should_be_able_to_suspend_reentrancy,The following statement contains a magic number: var res = await asker.Ask<int>("start"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_should_be_able_to_resume_suspend,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_should_be_able_to_resume_suspend,The following statement contains a magic number: var res = await asker.Ask<string>("stop"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_should_not_restart_if_exception_is_catched,The following statement contains a magic number: var lastMessage = await actor.Ask(123);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,ActorTaskScheduler_reentrancy_should_not_be_possible,The following statement contains a magic number: ExpectNoMsg(1000);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_PipeTo_should_not_be_delayed_by_async_receive,The following statement contains a magic number: ExpectMsg<string>(m => "hello".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: actor.Tell(11);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "handled".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: actor.Tell(9);
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "receiveany".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,ActorAsyncAwaitSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,Actor_receiveasync_overloads_should_work,The following statement contains a magic number: ExpectMsg<string>(m => "handled".Equals(m)' TimeSpan.FromMilliseconds(1000));
Magic Number,Akka.Tests.Dispatch,AsyncPipeToDelayActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncPipeToDelayActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      Task.Run(() =>                      {                          Thread.Sleep(10);                          return msg;                      }).PipeTo(Sender' Self); //LogicalContext is lost?!?                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,AsyncPipeToDelayActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncPipeToDelayActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      Task.Run(() =>                      {                          Thread.Sleep(10);                          return msg;                      }).PipeTo(Sender' Self); //LogicalContext is lost?!?                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,AsyncReentrantActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncReentrantActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      var sender = Sender;                      Task.Run(() =>                      {                          //Sleep to make sure the task is not completed when ContinueWith is called                          Thread.Sleep(100);                          return msg;                      }).ContinueWith(_ => sender.Tell(msg)); // ContinueWith will schedule with the implicit ActorTaskScheduler                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,AsyncReentrantActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\AsyncAwaitSpec.cs,AsyncReentrantActor,The following statement contains a magic number: ReceiveAsync<string>(async msg =>                  {                      var sender = Sender;                      Task.Run(() =>                      {                          //Sleep to make sure the task is not completed when ContinueWith is called                          Thread.Sleep(100);                          return msg;                      }).ContinueWith(_ => sender.Tell(msg)); // ContinueWith will schedule with the implicit ActorTaskScheduler                        Thread.Sleep(3000);                  });
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_use_defined_properties,The following statement contains a magic number: dispatcher.Throughput.ShouldBe(17);
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_be_used_when_configured_in_explicit_deployments,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_be_used_in_deployment_configuration,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_be_used_in_deployment_configuration_and_trumps_code,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,DispatchersSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\DispatchersSpec.cs,Dispatchers_must_use_pool_dispatcher_router_of_deployment_config,The following statement contains a magic number: var actual = ExpectMsg<string>(TimeSpan.FromMilliseconds(50));
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 2;
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 3;
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 4;
Magic Number,Akka.Tests.Dispatch,TestPriorityMailbox,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,PriorityGenerator,The following statement contains a magic number: return 5;
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: i < 30
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: actor.Tell(2.0);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: i < 30
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: i < 60
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: ExpectMsg(2.0);
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Can_use_unbounded_priority_mailbox,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Priority_mailbox_keeps_ordering_with_many_priority_values,The following statement contains a magic number: var values = new int[50];
Magic Number,Akka.Tests.Dispatch,MailboxesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\MailboxesSpec.cs,Priority_mailbox_keeps_ordering_with_many_priority_values,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(0.3));
Magic Number,Akka.Tests.Dispatch,XUnitAsyncTestsSanityCheck,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\XUnitAsyncTestsSanityCheck.cs,Async_tests_should_not_lose_ambient_context,The following statement contains a magic number: backgroundOps.Add(Task.Factory.StartNew(async () =>  				{  					for (var t = 0; t < 1000; t++)  						await Task.Delay(1);  				}));
Magic Number,Akka.Tests.Dispatch,XUnitAsyncTestsSanityCheck,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\XUnitAsyncTestsSanityCheck.cs,Async_tests_should_not_lose_ambient_context,The following statement contains a magic number: c < 50
Magic Number,Akka.Tests.Dispatch,XUnitAsyncTestsSanityCheck,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Dispatch\XUnitAsyncTestsSanityCheck.cs,Async_tests_should_not_lose_ambient_context,The following statement contains a magic number: t < 1000
Magic Number,Akka.Tests.Event,EventBusSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Event\EventBusSpec.cs,EventBus_allow_to_add_multiple_subscribers,The following statement contains a magic number: const int max = 10;
Magic Number,Akka.Tests.Event,EventStreamSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_subscriptions,The following statement contains a magic number: bus.Publish(new M { Value = 42 });
Magic Number,Akka.Tests.Event,EventStreamSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_subscriptions,The following statement contains a magic number: ExpectMsg(new M { Value = 42 });
Magic Number,Akka.Tests.Event,EventStreamSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_subscriptions,The following statement contains a magic number: bus.Publish(new M { Value = 43 });
Magic Number,Akka.Tests.Event,EventStreamSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Be_able_to_log_unhandled_messages,The following statement contains a magic number: var msg = new UnhandledMessage(42' system.DeadLetters' system.DeadLetters);
Magic Number,Akka.Tests.Event,EventStreamSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Event\EventStreamSpec.cs,Manage_log_levels,The following statement contains a magic number: ExpectMsg("OK"' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: cache.Put(cacheEntry' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: localClock.CompareAndSet(0' 4999);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: localClock.CompareAndSet(4999' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_not_reply_with_expired_but_not_yet_swept_out_entries,The following statement contains a magic number: localClock.CompareAndSet(4999' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: cache.Put(cacheEntry' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(0' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(5000' 0);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(0' 5000);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_sweep_out_expired_entries_on_cleanup,The following statement contains a magic number: localClock.CompareAndSet(5000' 0);
Magic Number,Akka.Tests.IO,SimpleDnsCacheSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\SimpleDnsCacheSpec.cs,Cache_should_be_updated_with_the_latest_resolved,The following statement contains a magic number: long ttl = 500;
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Forward_Incoming_Data_As_Received_Message_Instantly_As_Long_As_More_Data_Is_Available,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = Tcp.Instance.Apply(Sys).Settings.DirectBufferSize;                  var dataSize = bufferSize + 150;                  var bigData = new byte[dataSize];                  var buffer = ByteBuffer.Wrap(bigData);                    x.ServerSideChannel.Socket.SendBufferSize = 150000;                  var wrote = x.ServerSideChannel.Write(buffer);                  wrote.ShouldBe(dataSize);                    ExpectNoMsg(1000);                    x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                    x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == bufferSize);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == 150);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Forward_Incoming_Data_As_Received_Message_Instantly_As_Long_As_More_Data_Is_Available,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = Tcp.Instance.Apply(Sys).Settings.DirectBufferSize;                  var dataSize = bufferSize + 150;                  var bigData = new byte[dataSize];                  var buffer = ByteBuffer.Wrap(bigData);                    x.ServerSideChannel.Socket.SendBufferSize = 150000;                  var wrote = x.ServerSideChannel.Write(buffer);                  wrote.ShouldBe(dataSize);                    ExpectNoMsg(1000);                    x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                    x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == bufferSize);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == 150);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Forward_Incoming_Data_As_Received_Message_Instantly_As_Long_As_More_Data_Is_Available,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = Tcp.Instance.Apply(Sys).Settings.DirectBufferSize;                  var dataSize = bufferSize + 150;                  var bigData = new byte[dataSize];                  var buffer = ByteBuffer.Wrap(bigData);                    x.ServerSideChannel.Socket.SendBufferSize = 150000;                  var wrote = x.ServerSideChannel.Write(buffer);                  wrote.ShouldBe(dataSize);                    ExpectNoMsg(1000);                    x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                    x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == bufferSize);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == 150);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Forward_Incoming_Data_As_Received_Message_Instantly_As_Long_As_More_Data_Is_Available,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = Tcp.Instance.Apply(Sys).Settings.DirectBufferSize;                  var dataSize = bufferSize + 150;                  var bigData = new byte[dataSize];                  var buffer = ByteBuffer.Wrap(bigData);                    x.ServerSideChannel.Socket.SendBufferSize = 150000;                  var wrote = x.ServerSideChannel.Write(buffer);                  wrote.ShouldBe(dataSize);                    ExpectNoMsg(1000);                    x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                    x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == bufferSize);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.Count == 150);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_To_Network_And_Acknowledge,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    var ackedWrite = Tcp.Write.Create(ByteString.FromString("testdata")' Ack.Instance);                  var buffer = ByteBuffer.Allocate(100);                    Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' ackedWrite);                  writer.ExpectMsg(Ack.Instance);                  x.PullFromServerSide(remaining: 8' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(8' buffer.Limit);                     var unackedWrite = Tcp.Write.Create(ByteString.FromString("morestuff!")' Tcp.NoAck.Instance);                  buffer.Clear();                  Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' unackedWrite);                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  x.PullFromServerSide(remaining: 10' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  Assert.Equal("morestuff!"' ByteString.Create(buffer).DecodeString(Encoding.UTF8));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_To_Network_And_Acknowledge,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    var ackedWrite = Tcp.Write.Create(ByteString.FromString("testdata")' Ack.Instance);                  var buffer = ByteBuffer.Allocate(100);                    Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' ackedWrite);                  writer.ExpectMsg(Ack.Instance);                  x.PullFromServerSide(remaining: 8' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(8' buffer.Limit);                     var unackedWrite = Tcp.Write.Create(ByteString.FromString("morestuff!")' Tcp.NoAck.Instance);                  buffer.Clear();                  Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' unackedWrite);                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  x.PullFromServerSide(remaining: 10' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  Assert.Equal("morestuff!"' ByteString.Create(buffer).DecodeString(Encoding.UTF8));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_To_Network_And_Acknowledge,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    var ackedWrite = Tcp.Write.Create(ByteString.FromString("testdata")' Ack.Instance);                  var buffer = ByteBuffer.Allocate(100);                    Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' ackedWrite);                  writer.ExpectMsg(Ack.Instance);                  x.PullFromServerSide(remaining: 8' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(8' buffer.Limit);                     var unackedWrite = Tcp.Write.Create(ByteString.FromString("morestuff!")' Tcp.NoAck.Instance);                  buffer.Clear();                  Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' unackedWrite);                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  x.PullFromServerSide(remaining: 10' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  Assert.Equal("morestuff!"' ByteString.Create(buffer).DecodeString(Encoding.UTF8));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_To_Network_And_Acknowledge,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    var ackedWrite = Tcp.Write.Create(ByteString.FromString("testdata")' Ack.Instance);                  var buffer = ByteBuffer.Allocate(100);                    Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' ackedWrite);                  writer.ExpectMsg(Ack.Instance);                  x.PullFromServerSide(remaining: 8' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(8' buffer.Limit);                     var unackedWrite = Tcp.Write.Create(ByteString.FromString("morestuff!")' Tcp.NoAck.Instance);                  buffer.Clear();                  Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' unackedWrite);                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  x.PullFromServerSide(remaining: 10' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  Assert.Equal("morestuff!"' ByteString.Create(buffer).DecodeString(Encoding.UTF8));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_To_Network_And_Acknowledge,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    var ackedWrite = Tcp.Write.Create(ByteString.FromString("testdata")' Ack.Instance);                  var buffer = ByteBuffer.Allocate(100);                    Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' ackedWrite);                  writer.ExpectMsg(Ack.Instance);                  x.PullFromServerSide(remaining: 8' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(8' buffer.Limit);                     var unackedWrite = Tcp.Write.Create(ByteString.FromString("morestuff!")' Tcp.NoAck.Instance);                  buffer.Clear();                  Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' unackedWrite);                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  x.PullFromServerSide(remaining: 10' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  Assert.Equal("morestuff!"' ByteString.Create(buffer).DecodeString(Encoding.UTF8));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_To_Network_And_Acknowledge,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    var ackedWrite = Tcp.Write.Create(ByteString.FromString("testdata")' Ack.Instance);                  var buffer = ByteBuffer.Allocate(100);                    Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' ackedWrite);                  writer.ExpectMsg(Ack.Instance);                  x.PullFromServerSide(remaining: 8' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(8' buffer.Limit);                     var unackedWrite = Tcp.Write.Create(ByteString.FromString("morestuff!")' Tcp.NoAck.Instance);                  buffer.Clear();                  Assert.Equal(0' x.ServerSideChannel.Read(buffer));                  writer.Send(x.ConnectionActor' unackedWrite);                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));                  x.PullFromServerSide(remaining: 10' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  Assert.Equal("morestuff!"' ByteString.Create(buffer).DecodeString(Encoding.UTF8));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Send_Big_Buffers_To_Network_Correctly,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = 512*1024;                  var random = new Random(0);                  var testBytes = new byte[bufferSize];                  random.NextBytes(testBytes);                  var testData = ByteString.Create(testBytes' 0' testBytes.Length);                    var writer = CreateTestProbe();                    var write = Tcp.Write.Create(testData' Ack.Instance);                  var buffer = ByteBuffer.Allocate(bufferSize);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' write);                  x.PullFromServerSide(remaining: bufferSize' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(buffer' buffer.Limit());                    ByteString.Create(buffer).ShouldBe(testData);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Send_Big_Buffers_To_Network_Correctly,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = 512*1024;                  var random = new Random(0);                  var testBytes = new byte[bufferSize];                  random.NextBytes(testBytes);                  var testData = ByteString.Create(testBytes' 0' testBytes.Length);                    var writer = CreateTestProbe();                    var write = Tcp.Write.Create(testData' Ack.Instance);                  var buffer = ByteBuffer.Allocate(bufferSize);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' write);                  x.PullFromServerSide(remaining: bufferSize' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(buffer' buffer.Limit());                    ByteString.Create(buffer).ShouldBe(testData);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Send_Big_Buffers_To_Network_Correctly,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var bufferSize = 512*1024;                  var random = new Random(0);                  var testBytes = new byte[bufferSize];                  random.NextBytes(testBytes);                  var testData = ByteString.Create(testBytes' 0' testBytes.Length);                    var writer = CreateTestProbe();                    var write = Tcp.Write.Create(testData' Ack.Instance);                  var buffer = ByteBuffer.Allocate(bufferSize);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' write);                  x.PullFromServerSide(remaining: bufferSize' into: buffer' remainingRetries: 1000);                  buffer.Flip();                    //TODO: Buffer.limit                  //Assert.Equal(buffer' buffer.Limit());                    ByteString.Create(buffer).ShouldBe(testData);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_After_Not_Acknowledged_Data,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                  writer.Send(x.ConnectionActor'                      Tcp.Write.Create(ByteString.Create(new byte[] {42}' 0' 1)' Tcp.NoAck.Instance));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_Data_After_Not_Acknowledged_Data,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                  writer.Send(x.ConnectionActor'                      Tcp.Write.Create(ByteString.Create(new byte[] {42}' 0' 1)' Tcp.NoAck.Instance));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(500));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Not_Acknowledge_The_Completion_Of_An_NACKed_EmptyWrite,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                  writer.Send(x.ConnectionActor' Tcp.Write.Create(ByteString.Empty' Tcp.NoAck.Instance));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(250));                  writer.Send(x.ConnectionActor' Tcp.Write.Create(ByteString.Empty' new Tcp.NoAck(42)));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(250));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Not_Acknowledge_The_Completion_Of_An_NACKed_EmptyWrite,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                  writer.Send(x.ConnectionActor' Tcp.Write.Create(ByteString.Empty' Tcp.NoAck.Instance));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(250));                  writer.Send(x.ConnectionActor' Tcp.Write.Create(ByteString.Empty' new Tcp.NoAck(42)));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(250));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Not_Acknowledge_The_Completion_Of_An_NACKed_EmptyWrite,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                  writer.Send(x.ConnectionActor' Tcp.Write.Create(ByteString.Empty' Tcp.NoAck.Instance));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(250));                  writer.Send(x.ConnectionActor' Tcp.Write.Create(ByteString.Empty' new Tcp.NoAck(42)));                  writer.ExpectNoMsg(TimeSpan.FromMilliseconds(250));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_A_CompoundWrite_To_The_Network_And_Produce_Correct_ACKs,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    //TODO: Fix bug when empty write is used                  var compoundWrite = Tcp.CompoundWrite.Create(                      Tcp.Write.Create(ByteString.FromString("test1")' new Ack(1))'                      Tcp.Write.Create(ByteString.FromString("test2"))'                      //Tcp.Write.Create(ByteString.Empty' new Ack(3))'                      Tcp.Write.Create(ByteString.FromString("test4")' new Ack(4)));                    var buffer = ByteBuffer.Allocate(100);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' compoundWrite);                    x.PullFromServerSide(remaining: 15' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  ByteString.Create(buffer).DecodeString(Encoding.UTF8).ShouldBe("test1test2test4");                  writer.ExpectMsg(new Ack(1));                  //writer.ExpectMsg(new Ack(3));                  writer.ExpectMsg(new Ack(4));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_A_CompoundWrite_To_The_Network_And_Produce_Correct_ACKs,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    //TODO: Fix bug when empty write is used                  var compoundWrite = Tcp.CompoundWrite.Create(                      Tcp.Write.Create(ByteString.FromString("test1")' new Ack(1))'                      Tcp.Write.Create(ByteString.FromString("test2"))'                      //Tcp.Write.Create(ByteString.Empty' new Ack(3))'                      Tcp.Write.Create(ByteString.FromString("test4")' new Ack(4)));                    var buffer = ByteBuffer.Allocate(100);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' compoundWrite);                    x.PullFromServerSide(remaining: 15' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  ByteString.Create(buffer).DecodeString(Encoding.UTF8).ShouldBe("test1test2test4");                  writer.ExpectMsg(new Ack(1));                  //writer.ExpectMsg(new Ack(3));                  writer.ExpectMsg(new Ack(4));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_A_CompoundWrite_To_The_Network_And_Produce_Correct_ACKs,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    //TODO: Fix bug when empty write is used                  var compoundWrite = Tcp.CompoundWrite.Create(                      Tcp.Write.Create(ByteString.FromString("test1")' new Ack(1))'                      Tcp.Write.Create(ByteString.FromString("test2"))'                      //Tcp.Write.Create(ByteString.Empty' new Ack(3))'                      Tcp.Write.Create(ByteString.FromString("test4")' new Ack(4)));                    var buffer = ByteBuffer.Allocate(100);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' compoundWrite);                    x.PullFromServerSide(remaining: 15' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  ByteString.Create(buffer).DecodeString(Encoding.UTF8).ShouldBe("test1test2test4");                  writer.ExpectMsg(new Ack(1));                  //writer.ExpectMsg(new Ack(3));                  writer.ExpectMsg(new Ack(4));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_A_CompoundWrite_To_The_Network_And_Produce_Correct_ACKs,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    //TODO: Fix bug when empty write is used                  var compoundWrite = Tcp.CompoundWrite.Create(                      Tcp.Write.Create(ByteString.FromString("test1")' new Ack(1))'                      Tcp.Write.Create(ByteString.FromString("test2"))'                      //Tcp.Write.Create(ByteString.Empty' new Ack(3))'                      Tcp.Write.Create(ByteString.FromString("test4")' new Ack(4)));                    var buffer = ByteBuffer.Allocate(100);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' compoundWrite);                    x.PullFromServerSide(remaining: 15' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  ByteString.Create(buffer).DecodeString(Encoding.UTF8).ShouldBe("test1test2test4");                  writer.ExpectMsg(new Ack(1));                  //writer.ExpectMsg(new Ack(3));                  writer.ExpectMsg(new Ack(4));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Write_A_CompoundWrite_To_The_Network_And_Produce_Correct_ACKs,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  var writer = CreateTestProbe();                    //TODO: Fix bug when empty write is used                  var compoundWrite = Tcp.CompoundWrite.Create(                      Tcp.Write.Create(ByteString.FromString("test1")' new Ack(1))'                      Tcp.Write.Create(ByteString.FromString("test2"))'                      //Tcp.Write.Create(ByteString.Empty' new Ack(3))'                      Tcp.Write.Create(ByteString.FromString("test4")' new Ack(4)));                    var buffer = ByteBuffer.Allocate(100);                  x.ServerSideChannel.Read(buffer).ShouldBe(0);                  writer.Send(x.ConnectionActor' compoundWrite);                    x.PullFromServerSide(remaining: 15' into: buffer' remainingRetries: 1000);                  buffer.Flip();                  ByteString.Create(buffer).DecodeString(Encoding.UTF8).ShouldBe("test1test2test4");                  writer.ExpectMsg(new Ack(1));                  //writer.ExpectMsg(new Ack(3));                  writer.ExpectMsg(new Ack(4));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Respect_StopReading_And_ResumeReading,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata")));                  x.ConnectionHandler.Send(x.ConnectionActor' Tcp.SuspendReading.Instance);                    x.InterestCallReceiver.ExpectMsg(-(int) SocketAsyncOperation.Receive);                    x.Selector.Send(x.ConnectionActor' 1);                    x.InterestCallReceiver.ExpectNoMsg(100);                  x.ConnectionHandler.ExpectNoMsg(100);                    x.ConnectionHandler.Send(x.ConnectionActor' Tcp.ResumeReading.Instance);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Receive);                    x.ExpectReceivedString("testdata");              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Respect_StopReading_And_ResumeReading,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata")));                  x.ConnectionHandler.Send(x.ConnectionActor' Tcp.SuspendReading.Instance);                    x.InterestCallReceiver.ExpectMsg(-(int) SocketAsyncOperation.Receive);                    x.Selector.Send(x.ConnectionActor' 1);                    x.InterestCallReceiver.ExpectNoMsg(100);                  x.ConnectionHandler.ExpectNoMsg(100);                    x.ConnectionHandler.Send(x.ConnectionActor' Tcp.ResumeReading.Instance);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Receive);                    x.ExpectReceivedString("testdata");              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Respect_PullMode,The following statement contains a magic number: new EstablishedConnectionTest(this' pullMode: true).Run(x =>              {                  x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata")));                  x.ConnectionHandler.ExpectNoMsg(100);                    x.ConnectionActor.Tell(Tcp.ResumeReading.Instance);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Receive);                  x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.DecodeString(Encoding.ASCII) == "testdata");                    x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata2")));                  x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata3")));                    x.ConnectionHandler.ExpectNoMsg(100);                    x.ConnectionActor.Tell(Tcp.ResumeReading.Instance);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Receive);                  x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(                      m => m.Data.DecodeString(Encoding.ASCII) == "testdata2testdata3");              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Respect_PullMode,The following statement contains a magic number: new EstablishedConnectionTest(this' pullMode: true).Run(x =>              {                  x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata")));                  x.ConnectionHandler.ExpectNoMsg(100);                    x.ConnectionActor.Tell(Tcp.ResumeReading.Instance);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Receive);                  x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(m => m.Data.DecodeString(Encoding.ASCII) == "testdata");                    x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata2")));                  x.ServerSideChannel.Write(ByteBuffer.Wrap(Encoding.ASCII.GetBytes("testdata3")));                    x.ConnectionHandler.ExpectNoMsg(100);                    x.ConnectionActor.Tell(Tcp.ResumeReading.Instance);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Receive);                  x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                  x.ConnectionHandler.ExpectMsg<Tcp.Received>(                      m => m.Data.DecodeString(Encoding.ASCII) == "testdata2testdata3");              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Send_Only_One_ClosedEvent_To_The_Handler_If_The_Handler_Commanded_The_Close,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  x.ConnectionHandler.Send(x.ConnectionActor' Tcp.Close.Instance);                  x.ConnectionHandler.ExpectMsg(Tcp.Closed.Instance);                  x.ConnectionHandler.ExpectNoMsg(TimeSpan.FromMilliseconds(500));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_When_Peer_Aborted_The_Connection,The following statement contains a magic number: new EstablishedConnectionTest(this).Run(x =>              {                  x.AbortClose(x.ServerSideChannel);                  x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelReadable.Instance);                  var err = x.ConnectionHandler.ExpectMsg<Tcp.ErrorClosed>();                  err.GetErrorCause().ShouldBe(ConnectionResetByPeerMessage);                    x.ConnectionHandler.ExpectNoMsg(200);                    x.AssertThisConnectionActorTerminated();              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_Failed_connection_attempt_when_target_is_unreachable,The following statement contains a magic number: test.Run(x =>              {                  //x.ClientSideChannel.Socket.Poll(3000' SelectMode.SelectWrite).ShouldBe(true);  // In .NET we cant select on 'Connectable' (I think)                    Thread.Sleep(3000);                  x.Selector.Send(x.ConnectionActor' SelectionHandler.ChannelConnectable.Instance);                  x.UserHandler.ExpectMsg<Tcp.CommandFailed>();                    Watch(x.ConnectionActor);                  ExpectTerminated(x.ConnectionActor);              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_Failed_connection_attempt_when_target_cannot_be_resolved,The following statement contains a magic number: var address = new DnsEndPoint("notthere.local"' 666);
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_Failed_connection_attempt_when_target_cannot_be_resolved,The following statement contains a magic number: test.Run(x =>              {                  x.ConnectionActor.Tell(x.NewChannelRegistration());                  x.UserHandler.ExpectMsg<Tcp.CommandFailed>(TimeSpan.FromSeconds(30));              });
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_Report_Failed_connection_attempt_when_timing_out,The following statement contains a magic number: test.ConnectionActor = test.CreateConnectionActor(serverAddress: unboundAddress' timeout:TimeSpan.FromMilliseconds(100));
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_report_abort_before_handler_is_registered,The following statement contains a magic number: var bindAddress = new IPEndPoint(IPAddress.Loopback' 23402);
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_report_abort_before_handler_is_registered,The following statement contains a magic number: serverSocket.Listen(100);
Magic Number,Akka.Tests.IO,TcpConnectionSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,An_Outgoing_Connection_Must_report_abort_before_handler_is_registered,The following statement contains a magic number: Assert.Throws<SocketException>(() => socket.Receive(new byte[200]));
Magic Number,Akka.Tests.IO,LocalServerTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,Run,The following statement contains a magic number: LocalServerChannel.Socket.Listen(100);
Magic Number,Akka.Tests.IO,UnacceptedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,AcceptServerSideChannel,The following statement contains a magic number: localServer.Socket.Listen(100);
Magic Number,Akka.Tests.IO,EstablishedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,CloseServerSideAndWaitForClientReadable,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,Akka.Tests.IO,EstablishedConnectionTest,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpConnectionSpec.cs,PullFromServerSide,The following statement contains a magic number: PullFromServerSide(remaining' 1000' new ByteBuffer(new byte[remaining]));
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.Create(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.Create(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.Create(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_should_support_waiting_for_writes_with_backpressure,The following statement contains a magic number: new TestSetup(this).Run(x =>              {                  x.BindOptions = new[] {new Inet.SO.SendBufferSize(1024)};                  x.ConnectOptions = new[] {new Inet.SO.SendBufferSize(1024)};                    var actors = x.EstablishNewClientConnection();                    actors.ServerHandler.Send(actors.ServerConnection' Tcp.Write.Create(ByteString.Create(new byte[100000])' Ack.Instance));                  actors.ServerHandler.ExpectMsg(Ack.Instance);                    x.ExpectReceivedData(actors.ClientHandler' 100000);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_dont_report_Connected_when_endpoint_isnt_responding,The following statement contains a magic number: var endpoint = new IPEndPoint(IPAddress.Parse("192.0.2.1")' 23825);
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_handle_tcp_connection_actor_death_properly,The following statement contains a magic number: new TestSetup(this' shouldBindServer:false).Run(x =>              {                  var serverSocket = new Socket(SocketType.Stream' ProtocolType.Tcp);                  serverSocket.Bind(x.Endpoint);                  serverSocket.Listen(100);                    var connectCommander = CreateTestProbe();                  connectCommander.Send(Sys.Tcp()' new Tcp.Connect(x.Endpoint));                    var accept = serverSocket.Accept();                  connectCommander.ExpectMsg<Tcp.Connected>().RemoteAddress.AsInstanceOf<IPEndPoint>().Port.ShouldBe(x.Endpoint.Port);                  var connectionActor = connectCommander.LastSender;                  connectCommander.Send(connectionActor' PoisonPill.Instance);                    AwaitConditionNoThrow(() =>                  {                      try                      {                          var buffer = new byte[1024];                          return accept.Receive(buffer) == 0;                      }                      catch (SocketException ex)                      {                          return true;                      }                  }' TimeSpan.FromSeconds(3));                    VerifyActorTermination(connectionActor);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_handle_tcp_connection_actor_death_properly,The following statement contains a magic number: new TestSetup(this' shouldBindServer:false).Run(x =>              {                  var serverSocket = new Socket(SocketType.Stream' ProtocolType.Tcp);                  serverSocket.Bind(x.Endpoint);                  serverSocket.Listen(100);                    var connectCommander = CreateTestProbe();                  connectCommander.Send(Sys.Tcp()' new Tcp.Connect(x.Endpoint));                    var accept = serverSocket.Accept();                  connectCommander.ExpectMsg<Tcp.Connected>().RemoteAddress.AsInstanceOf<IPEndPoint>().Port.ShouldBe(x.Endpoint.Port);                  var connectionActor = connectCommander.LastSender;                  connectCommander.Send(connectionActor' PoisonPill.Instance);                    AwaitConditionNoThrow(() =>                  {                      try                      {                          var buffer = new byte[1024];                          return accept.Receive(buffer) == 0;                      }                      catch (SocketException ex)                      {                          return true;                      }                  }' TimeSpan.FromSeconds(3));                    VerifyActorTermination(connectionActor);              });
Magic Number,Akka.Tests.IO,TcpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpIntegrationSpec.cs,The_TCP_transport_implementation_handle_tcp_connection_actor_death_properly,The following statement contains a magic number: new TestSetup(this' shouldBindServer:false).Run(x =>              {                  var serverSocket = new Socket(SocketType.Stream' ProtocolType.Tcp);                  serverSocket.Bind(x.Endpoint);                  serverSocket.Listen(100);                    var connectCommander = CreateTestProbe();                  connectCommander.Send(Sys.Tcp()' new Tcp.Connect(x.Endpoint));                    var accept = serverSocket.Accept();                  connectCommander.ExpectMsg<Tcp.Connected>().RemoteAddress.AsInstanceOf<IPEndPoint>().Port.ShouldBe(x.Endpoint.Port);                  var connectionActor = connectCommander.LastSender;                  connectCommander.Send(connectionActor' PoisonPill.Instance);                    AwaitConditionNoThrow(() =>                  {                      try                      {                          var buffer = new byte[1024];                          return accept.Receive(buffer) == 0;                      }                      catch (SocketException ex)                      {                          return true;                      }                  }' TimeSpan.FromSeconds(3));                    VerifyActorTermination(connectionActor);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_accept_acceptable_connection_and_register_them_with_its_parent,The following statement contains a magic number: new TestSetup(this' pullMode: false).Run(x =>              {                  x.BindListener();                       x.AttemptConnectionToEndpoint();                  x.AttemptConnectionToEndpoint();                  x.AttemptConnectionToEndpoint();                    // since the batch-accept-limit is 2 we must only receive 2 accepted connections                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                    x.ExpectWorkerForCommand();                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // and pick up the last remaining connection on the next ChannelAcceptable                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_continue_to_accept_connections_after_a_previous_accept,The following statement contains a magic number: new TestSetup(this' pullMode: false).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_continue_to_accept_connections_after_a_previous_accept,The following statement contains a magic number: new TestSetup(this' pullMode: false).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,TcpListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,A_TCP_Listner_must_not_accept_connections_after_a_previous_accept_unit_read_is_reenabled,The following statement contains a magic number: new TestSetup(this' pullMode: true).Run(x =>              {                  x.BindListener();                    x.AttemptConnectionToEndpoint();                  ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 1));                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    // No more accepts are allowed now                  x.InterestCallReceiver.ExpectNoMsg(100);                    x.Listner.Tell(new Tcp.ResumeAccepting(batchSize: 2));                  x.InterestCallReceiver.ExpectMsg((int) SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                  // There is still one token remaining' accepting                  x.InterestCallReceiver.ExpectMsg((int)SocketAsyncOperation.Accept);                    x.AttemptConnectionToEndpoint();                  x.Listner.Tell(SelectionHandler.ChannelAcceptable.Instance);                  x.ExpectWorkerForCommand();                  x.SelectorRouter.ExpectNoMsg(100);                    // Tokens are depleted now                  x.InterestCallReceiver.ExpectNoMsg(100);              });
Magic Number,Akka.Tests.IO,ListenerParent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\TcpListenerSpec.cs,ListenerParent,The following statement contains a magic number: _listner = Context.ActorOf(Props.Create(() =>                          new TcpListener(test._selectorRouter.Ref'                              Tcp.Instance.Apply(Context.System)'                              this'                              test._bindCommander.Ref'                              new Tcp.Bind(_test._handler.Ref' test._endpoint' 100' new Inet.SocketOption[]{}' pullMode)))                                                                .WithDeploy(Deploy.Local));
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,UdpConnectedIntegrationSpec,The following statement contains a magic number: _addresses = TestUtils.TemporaryServerAddresses(3' udp: true).ToArray();
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_be_able_to_send_and_receive_without_binding,The following statement contains a magic number: var clientAddress = ExpectMsgPf(TimeSpan.FromSeconds(3)' ""' msg =>              {                  var received = msg as Udp.Received;                  if (received != null)                  {                      received.Data.ShouldBe(data1);                      return received.Sender;                  }                  throw new Exception();              });
Magic Number,Akka.Tests.IO,UdpConnectedIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpConnectedIntegrationSpec.cs,The_UDP_connection_oriented_implementation_must_be_able_to_send_and_receive_with_binding,The following statement contains a magic number: ExpectMsgPf(TimeSpan.FromSeconds(3)' ""' msg =>              {                  var received = msg as Udp.Received;                  if (received != null)                  {                      received.Data.ShouldBe(data1);                      received.Sender.ShouldBe(clientAddress);                      return received.Sender;                  }                  throw new Exception();              });
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,UdpIntegrationSpec,The following statement contains a magic number: _addresses = TestUtils.TemporaryServerAddresses(6' udp: true).ToArray();
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,SimpleSender,The following statement contains a magic number: commander.ExpectMsg<Udp.SimpleSenderReady>(TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_be_able_to_send_several_packet_back_and_forth_with_binding,The following statement contains a magic number: Enumerable.Range(0' 20).ForEach(_ => checkSendingToServer());
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_be_able_to_send_several_packet_back_and_forth_with_binding,The following statement contains a magic number: Enumerable.Range(0' 20).ForEach(_ => checkSendingToClient());
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_be_able_to_send_several_packet_back_and_forth_with_binding,The following statement contains a magic number: Enumerable.Range(0' 20).ForEach(i =>              {                  if (i%2 == 0) checkSendingToServer();                  else checkSendingToClient();              });
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_be_able_to_send_several_packet_back_and_forth_with_binding,The following statement contains a magic number: Enumerable.Range(0' 20).ForEach(i =>              {                  if (i%2 == 0) checkSendingToServer();                  else checkSendingToClient();              });
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_beforeBind_method_before_bind,The following statement contains a magic number: commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[2]' options: new[] {assertOption}));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_beforeBind_method_before_bind,The following statement contains a magic number: commander.ExpectMsg<Udp.Bound>(x => x.LocalAddress.ShouldBe(_addresses[2]));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_afterConnect_method_after_binding,The following statement contains a magic number: commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[3]' options: new[] { assertOption }));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_SocketOption_afterConnect_method_after_binding,The following statement contains a magic number: commander.ExpectMsg<Udp.Bound>(x => x.LocalAddress.ShouldBe(_addresses[3]));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_DatagramChannelCreator_create_method_when_opening_channel,The following statement contains a magic number: commander.Send(Udp.Instance.Apply(Sys).Manager' new Udp.Bind(TestActor' _addresses[4]' options: new[] { assertOption }));
Magic Number,Akka.Tests.IO,UdpIntegrationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\IO\UdpIntegrationSpec.cs,The_UDP_Fire_and_Forget_implementation_must_call_DatagramChannelCreator_create_method_when_opening_channel,The following statement contains a magic number: commander.ExpectMsg<Udp.Bound>(x => x.LocalAddress.ShouldBe(_addresses[4]));
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_one_null_element_signature_and_one_element_signature_should_be_false,The following statement contains a magic number: var signature2 = new MatchBuilderSignature(new object[] { 4711 });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_should_be_true,The following statement contains a magic number: var signature1 = new MatchBuilderSignature(new object[] { 4711' "42"' obj });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_should_be_true,The following statement contains a magic number: var signature2 = new MatchBuilderSignature(new object[] { 4711' "42"' obj });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_but_fewer_in_one_should_be_false,The following statement contains a magic number: var signature1 = new MatchBuilderSignature(new object[] { 4711' "42"' new object() });
Magic Number,Akka.Tests.MatchHandler,MatchBuilderSignatureTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchBuilderSignatureTests.cs,Equals_with_same_elements_in_signature_but_fewer_in_one_should_be_false,The following statement contains a magic number: var signature2 = new MatchBuilderSignature(new object[] { 4711' "42" });
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action,The following statement contains a magic number: lambda(4711' action);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate,The following statement contains a magic number: Predicate<string> predicate = s => s.Length > 5;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate,The following statement contains a magic number: XAssert.Equal(2' result.Arguments.Length' "Should contain the action and predicate delegate");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate,The following statement contains a magic number: lambda(4711' action' predicate);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate2 = s => s.Length >= 15 && s.Length < 20;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Predicate<string> predicate2 = s => s.Length >= 15 && s.Length < 20;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: XAssert.Equal(4' result.Arguments.Length' "Should contain the action and predicate delegate");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Assert.Same(action2' result.Arguments[2]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: Assert.Same(predicate2' result.Arguments[3]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_same_type,The following statement contains a magic number: lambda(4711' action1' predicate1' action2' predicate2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Predicate<string> predicate1 = s => s.Length > 5 && s.Length < 15;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Predicate<int> predicate2 = i => i < 10;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: XAssert.Equal(4' result.Arguments.Length' "Should contain the action and predicate delegates");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Assert.Same(action2' result.Arguments[2]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: Assert.Same(predicate2' result.Arguments[3]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: lambda(2' action1' predicate1' action2' predicate2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_actions_and_predicate_for_different_types,The following statement contains a magic number: lambda(4711' action1' predicate1' action2' predicate2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: Func<string' bool> func1 = s =>              {                  if(s.Length > 5)                  {                      updatedValue = s;                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: Func<int' bool> func2 = i =>              {                  if(i < 10)                  {                      updatedValue = i.ToString();                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: XAssert.Equal(2' result.Arguments.Length' "Should contain the funcs");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: lambda(2' func1' func2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_two_funcs_for_different_types,The following statement contains a magic number: lambda(4711' func1' func2);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: Func<string' bool> func1 = s =>              {                  if(s.Length > 5)                  {                      updatedValue = s;                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: Func<int' bool> func2 = i =>              {                  if(i < 10)                  {                      updatedValue = i.ToString();                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: XAssert.Equal(3' result.Arguments.Length' "Should contain the funcs");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: Assert.Same(func3' result.Arguments[2]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: lambda(2' func1' func2' func3);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_three_funcs_for_two_different_types,The following statement contains a magic number: lambda(4711' func1' func2' func3);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The following statement contains a magic number: i < 7
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The following statement contains a magic number: XAssert.Equal(15' result.Arguments.Length' "Should contain the action and predicate delegates");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_exactly_15_arguments,The following statement contains a magic number: lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionInt);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: i < 7
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: Predicate<int> predicateInt = i => i < 100;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: XAssert.Equal(15' result.Arguments.Length' "Should contain the action and predicate delegates");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: Assert.Equal(2' extraParamsArray.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: lambda(4711' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_with_more_than_15_arguments,The following statement contains a magic number: lambda(42' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' actionString' predicateString' extraParamsArray);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_that_expects_base_type,The following statement contains a magic number: lambda(4711' action);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate_that_expects_base_type,The following statement contains a magic number: Predicate<object> predicate = s => ((string) s).Length > 5;
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate_that_expects_base_type,The following statement contains a magic number: XAssert.Equal(2' result.Arguments.Length' "Should only contain the action delegate");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_action_and_predicate_that_expects_base_type,The following statement contains a magic number: lambda(4711' action' predicate);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_func_that_expects_base_type,The following statement contains a magic number: Func<object'bool> func = o =>              {                  var s = (string) o;                  if(s.Length > 5)                  {                      updatedValue = s;                      return true;                  }                  return false;              };
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_BuildLambdaExpression_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_BuildLambdaExpression_Tests.cs,Build_one_func_that_expects_base_type,The following statement contains a magic number: lambda(4711' func);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_15_arguments_When_creating_Then_array_with_the_values_are_returned,The following statement contains a magic number: var arguments = Enumerable.Range(1' 15).Select(i => new Argument(null' (Action<int>)(_ => { })' true)).ToList();
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_15_arguments_When_creating_Then_array_with_the_values_are_returned,The following statement contains a magic number: Assert.Equal(15' result.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_15_arguments_When_creating_Then_array_with_the_values_are_returned,The following statement contains a magic number: i < 15
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: var arguments = Enumerable.Range(1' 16).Select(i => new Argument(null' (Action<int>)(_ => { })' true)).ToList();
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: Assert.Equal(15' result.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: i < 14
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: Assert.IsType<object[]>(result[14]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: var extraArgs = (object[])result[14];
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: Assert.Equal(2' extraArgs.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: XAssert.Same(arguments[14].Value' extraArgs[0]' "Argument 14 did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_16_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_and_15,The following statement contains a magic number: XAssert.Same(arguments[15].Value' extraArgs[1]' "Argument 15 did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: var arguments = Enumerable.Range(1' 30).Select(i => new Argument(null' (Action<int>)(_ => { })' true)).ToList();
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: Assert.Equal(15' result.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: i < 14
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: Assert.IsType<object[]>(result[14]);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: var extraArgs = (object[])result[14];
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: Assert.Equal(16' extraArgs.Length);
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: XAssert.Same(arguments[i + 14].Value' extraArgs[i]' "Argument " + (i + 14) + " did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: XAssert.Same(arguments[i + 14].Value' extraArgs[i]' "Argument " + (i + 14) + " did not match");
Magic Number,Akka.Tests.MatchHandler,MatchExpressionBuilder_CreateArgumentValuesArray_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\MatchExpressionBuilder_CreateArgumentValuesArray_Tests.cs,Given_30_arguments_When_creating_Then_last_value_is_an_object_array_with_argument_14_to_29,The following statement contains a magic number: i < 16
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_3_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_3_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' bool> deleg = (value' a1' a2' a3) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_4_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_4_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_4_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_5_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_6_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_7_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_8_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_9_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_10_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_11_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_12_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_13_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14 };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_14_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14'15f };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,Given_a_15_arguments_delegate_When_building_and_invoking_Then_the_supplied_function_is_called,The following statement contains a magic number: Func<object' string' int' float' string' int' float' string' int' float' string' int' float' string' int' float'bool> deleg = (value' a1' a2' a3' a4' a5' a6' a7' a8' a9' a10' a11' a12' a13' a14' a15) =>              {                  updatedValue = value;                  updatedArgs[0] = a1;                  updatedArgs[1] = a2;                  updatedArgs[2] = a3;                  updatedArgs[3] = a4;                  updatedArgs[4] = a5;                  updatedArgs[5] = a6;                  updatedArgs[6] = a7;                  updatedArgs[7] = a8;                  updatedArgs[8] = a9;                  updatedArgs[9] = a10;                  updatedArgs[10] = a11;                  updatedArgs[11] = a12;                  updatedArgs[12] = a13;                  updatedArgs[13] = a14;                  updatedArgs[14] = a15;                  return true;              };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.MatchHandler,PartialActionBuilderTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\MatchHandler\PartialActionBuilderTests.cs,When_building_with_16_args_Then_it_fails,The following statement contains a magic number: var delegateArguments = new object[] { "a1"' 1' 3.0f' "a4"' 5' 6.0f' "a7"' 8' 9.0f' "a10"' 11' 12f' "a13"' 14' 15f'"a16" };
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_should_start_child_again_when_it_stops,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() =>                  new BackoffSupervisor(childProps' "c1"' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(3)' 0.2)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_should_start_child_again_when_it_stops,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() =>                  new BackoffSupervisor(childProps' "c1"' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(3)' 0.2)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_should_start_child_again_when_it_stops,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() =>                  new BackoffSupervisor(childProps' "c1"' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(3)' 0.2)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_should_forward_messages_to_the_child,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() =>                   new BackoffSupervisor(childProps' "c2"' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(3)' 0.2)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_should_forward_messages_to_the_child,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() =>                   new BackoffSupervisor(childProps' "c2"' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(3)' 0.2)));
Magic Number,Akka.Tests.Pattern,BackoffSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\BackoffSupervisorSpec.cs,BackoffSupervisor_should_forward_messages_to_the_child,The following statement contains a magic number: var supervisor = Sys.ActorOf(Props.Create(() =>                   new BackoffSupervisor(childProps' "c2"' TimeSpan.FromMilliseconds(100)' TimeSpan.FromSeconds(3)' 0.2)));
Magic Number,Akka.Tests.Pattern,ASynchronousCircuitBreakerThatIsClosed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_FailureCount_When_Call_Times_Out,The following statement contains a magic number: breaker.Instance.WithSyncCircuitBreaker( ( ) => Thread.Sleep( 500 ) );
Magic Number,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsClosed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Reset_Failure_Count_When_Call_Succeeds_After_Failure,The following statement contains a magic number: Assert.Equal( breaker.Instance.CurrentFailureCount' 4 );
Magic Number,Akka.Tests.Pattern,AnAsynchronousCircuitBreakerThatIsClosed,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,Should_Increment_Failure_Count_When_Call_Times_Out,The following statement contains a magic number: breaker.Instance.WithCircuitBreaker( () => Task.Factory.StartNew( ( ) =>              {                  Thread.Sleep( 500 );                  return SayTest( );              } ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 50 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 50 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 1000 )' TimeSpan.FromMilliseconds( 50 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,ShortResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 1000 )' TimeSpan.FromMilliseconds( 50 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 5000 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongCallTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 5000 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 100 )' TimeSpan.FromMilliseconds( 5000 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,LongResetTimeoutCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 1' TimeSpan.FromMilliseconds( 100 )' TimeSpan.FromMilliseconds( 5000 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,MultiFailureCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 5' TimeSpan.FromMilliseconds( 200 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,MultiFailureCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 5' TimeSpan.FromMilliseconds( 200 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Pattern,CircuitBreakerSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Pattern\CircuitBreakerSpec.cs,MultiFailureCb,The following statement contains a magic number: return new TestBreaker( new CircuitBreaker( 5' TimeSpan.FromMilliseconds( 200 )' TimeSpan.FromMilliseconds( 500 ) ) );
Magic Number,Akka.Tests.Routing,BroadcastSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\BroadcastSpec.cs,BroadcastGroup_router_must_broadcast_message_using_Tell,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,BroadcastSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\BroadcastSpec.cs,BroadcastGroup_router_must_broadcast_message_using_Ask,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_create_routees_from_configuration,The following statement contains a magic number: currentRoutees.Members.Count().ShouldBe(3);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router1.Tell(new Msg(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router1.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router2.Tell(new Msg2(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router2.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_create_routees_from_configuration,The following statement contains a magic number: currentRoutees.Members.Count().ShouldBe(3);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router3.Tell(new Msg(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_based_on_consistent_hash_key_of_message,The following statement contains a magic number: _router3.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router4.Tell(new Msg2(17' "A"));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_group_router_must_select_destination_with_defined_hash_mapping,The following statement contains a magic number: router4.Tell(new ConsistentHashableEnvelope("BB"' 17));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_adjust_node_ring_when_routee_dies,The following statement contains a magic number: var router5 =                  Sys.ActorOf(Props.Create<Echo>().WithRouter(new ConsistentHashingPool(2' null' null' null))' "router5");
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_adjust_node_ring_when_routee_dies,The following statement contains a magic number: ((RoutedActorRef)router5).Children.Count().ShouldBe(2);
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_adjust_node_ring_when_routee_dies,The following statement contains a magic number: AwaitAssert(() =>              {                  router5.Tell(new Msg("a"' "A")' TestActor);                  //verify that a different actor now owns this hash range                  var actorWhoDidntDie = ExpectMsg<IActorRef>(TimeSpan.FromMilliseconds(50));                  actorWhoDidntDie.ShouldNotBe(actorWhoDies);              }' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,ConsistentHashingRouterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ConsistentHashingRouterSpec.cs,Consistent_hashing_router_must_adjust_node_ring_when_routee_dies,The following statement contains a magic number: AwaitAssert(() =>              {                  router5.Tell(new Msg("a"' "A")' TestActor);                  //verify that a different actor now owns this hash range                  var actorWhoDidntDie = ExpectMsg<IActorRef>(TimeSpan.FromMilliseconds(50));                  actorWhoDidntDie.ShouldNotBe(actorWhoDies);              }' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,ListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ListenerSpec.cs,Listener_must_listen_in,The following statement contains a magic number: var fooLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ListenerSpec.cs,Listener_must_listen_in,The following statement contains a magic number: var barLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ListenerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ListenerSpec.cs,Listener_must_listen_in,The following statement contains a magic number: Assert.Equal(2' barCount.Current);
Magic Number,Akka.Tests.Routing,RandomSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: const int routeeCount = 7;
Magic Number,Akka.Tests.Routing,RandomSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () => {                  ExpectMsg("world");                  ExpectMsg("world");                  ExpectMsg("world");                  ExpectMsg("world");                  ExpectMsg("world");                  return true;              });
Magic Number,Akka.Tests.Routing,RandomSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RandomSpec.cs,Random_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: testLatch.Ready(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: var resizer = new DefaultResizer(2' 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: var resizer = new DefaultResizer(2' 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: c1.ShouldBe(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_capacity,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' rampupRate: 0.2d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' rampupRate: 0.2d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' rampupRate: 0.2d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(9' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(9' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(5' 5).ShouldBe(1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(5' 5).ShouldBe(1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(6' 6).ShouldBe(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(6' 6).ShouldBe(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_rampup,The following statement contains a magic number: resizer.Rampup(6' 6).ShouldBe(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: var resizer = new DefaultResizer(2' 10' backoffThreshold: 0.3d' backoffRate: 0.1d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(10' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(10' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(4' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(4' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(3' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(3' 10).ShouldBe(0);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(2' 10).ShouldBe(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(2' 10).ShouldBe(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(0' 10).ShouldBe(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(1' 9).ShouldBe(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_use_settings_to_evaluate_backoff,The following statement contains a magic number: resizer.Backoff(0' 9).ShouldBe(-1);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: var latch = new TestLatch(3);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: var resizer = new DefaultResizer(2' 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: var resizer = new DefaultResizer(2' 3);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_programmatically,The following statement contains a magic number: (RouteeSize(router)).ShouldBe(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_in_configuration,The following statement contains a magic number: var latch = new TestLatch(3);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_be_possible_to_define_in_configuration,The following statement contains a magic number: (RouteeSize(router)).ShouldBe(2);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: var resizer = new DefaultResizer(3' 5' pressureThreshold: 1' rampupRate: 0.1d' backoffRate: 0.0d'                  messagesPerResize: 1' backoffThreshold: 0.0d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: var resizer = new DefaultResizer(3' 5' pressureThreshold: 1' rampupRate: 0.1d' backoffRate: 0.0d'                  messagesPerResize: 1' backoffThreshold: 0.0d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: var resizer = new DefaultResizer(3' 5' pressureThreshold: 1' rampupRate: 0.1d' backoffRate: 0.0d'                  messagesPerResize: 1' backoffThreshold: 0.0d);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: Action<int' TimeSpan' int?> loopTillAppropriateSize = (loops' span' expectedBound) =>              {                  for (var i = 0; i < loops; i++)                  {                      router.Tell(span' TestActor);                      if (expectedBound.HasValue && RouteeSize(router) >= expectedBound.Value)                      {                          return;                      }                        //sending too quickly will result in skipped resize due to many resizeInProgress conflicts                      Thread.Sleep(TimeSpan.FromMilliseconds(20));                  }              };
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loopTillAppropriateSize(2' TimeSpan.FromMilliseconds(200)' null);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loopTillAppropriateSize(2' TimeSpan.FromMilliseconds(200)' null);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loopTillAppropriateSize(200' TimeSpan.FromMilliseconds(500)' resizer.UpperBound);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_grow_as_needed_under_pressure,The following statement contains a magic number: loopTillAppropriateSize(200' TimeSpan.FromMilliseconds(500)' resizer.UpperBound);
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,ResizerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ResizerSpec.cs,DefaultResizer_must_backoff,The following statement contains a magic number: Within(TimeSpan.FromSeconds(10)' () =>              {                    var resizer = new DefaultResizer(2' 5' pressureThreshold: 1' rampupRate: 1.0d' backoffRate: 1.0d'                 messagesPerResize: 2' backoffThreshold: 0.4d);                    var router = Sys.ActorOf(Props.Create<BackoffActor>().WithRouter(new RoundRobinPool(0' resizer)));                    // put some pressure on the router                  for (var i = 0; i < 200; i++)                  {                      router.Tell(150);                      if (RouteeSize(router) > 2)                           break;                        Thread.Sleep(20);                  }                    var z = RouteeSize(router);                  Assert.True(z > 2);                  Thread.Sleep(300);                    // let it cool down                  AwaitAssert(() =>                  {                      router.Tell(0); //trigger resize                      Thread.Sleep(20);                      RouteeSize(router).Should().BeLessThan(z);                  }' null' TimeSpan.FromSeconds(1));              });
Magic Number,Akka.Tests.Routing,RoundRobinSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobin_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: const int routeeCount = 7;
Magic Number,Akka.Tests.Routing,RoundRobinSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobin_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: Within(TimeSpan.FromSeconds(2)' () =>              {                  ExpectMsg("world");                  ExpectMsg("world");                  ExpectMsg("world");                  ExpectMsg("world");                  ExpectMsg("world");                  return true;              });
Magic Number,Akka.Tests.Routing,RoundRobinSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobin_must_be_able_to_shut_down_its_instance,The following statement contains a magic number: testLatch.Ready(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,RoundRobinSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobin_should_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: var routingLogic = new RoundRobinRoutingLogic(int.MaxValue - 5);
Magic Number,Akka.Tests.Routing,RoundRobinSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoundRobinSpec.cs,RoundRobin_should_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_evict_terminated_routees,The following statement contains a magic number: var router = Sys.ActorOf(new RoundRobinPool(2).Props(Props.Create<Echo>())' "router");
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_not_terminate_when_resizer_is_used,The following statement contains a magic number: routees.Count().ShouldBe(2);
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_not_terminate_when_resizer_is_used,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_be_able_to_send_their_routees,The following statement contains a magic number: var router = Sys.ActorOf(new BroadcastPool(5).Props(Props.Create<Echo>()));
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_use_configured_nr_of_instances_when_FromConfig,The following statement contains a magic number: ExpectMsg<Routees>().Members.Count().ShouldBe(3);
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_use_configured_nr_of_instances_when_router_is_specified,The following statement contains a magic number: var router = Sys.ActorOf(Props.Create<BlackHoleActor>().WithRouter(new RoundRobinPool(3))' "router1");
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_use_configured_nr_of_instances_when_router_is_specified,The following statement contains a magic number: ExpectMsg<Routees>().Members.Count().ShouldBe(3);
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_in_general_must_use_specified_resizer_when_resizer_not_configured,The following statement contains a magic number: ExpectMsg<Routees>().Members.Count().ShouldBe(2);
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_AddRoute_should_add_new_routee,The following statement contains a magic number: updatedRouter.Routees.Count().ShouldBe(2);
Magic Number,Akka.Tests.Routing,RoutingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Router_RemoveRoute_should_remove_existing_routee_and_leave_the_rest,The following statement contains a magic number: updatedRouter.Routees.Count().ShouldBe(2);
Magic Number,Akka.Tests.Routing,TestResizer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Resize,The following statement contains a magic number: return 2;
Magic Number,Akka.Tests.Routing,RouterSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\RoutingSpec.cs,Routers_must_use_provided_supervisor_strategy,The following statement contains a magic number: ExpectMsg("supervised"' TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_must_deliver_a_broadcast_message_using_tell,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new StopActor(14)));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedGroup(paths' TimeSpan.FromSeconds(3)).Props());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: var res = await routedActor.Ask<int>(0' TimeSpan.FromSeconds(10));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_must_return_response_even_if_one_of_the_actors_has_stopped,The following statement contains a magic number: res.ShouldBe(14);
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_only_return_one_response,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new StopActor(14)));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_only_return_one_response,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedGroup(paths' TimeSpan.FromSeconds(3)).Props());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_only_return_one_response,The following statement contains a magic number: ExpectMsg<int>(TimeSpan.FromSeconds(3));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_only_return_one_response,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_handle_failing_timeouts,The following statement contains a magic number: var actor1 = Sys.ActorOf(Props.Create(() => new StopActor(50)));
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_handle_failing_timeouts,The following statement contains a magic number: var routedActor = Sys.ActorOf(new ScatterGatherFirstCompletedGroup(paths' TimeSpan.FromSeconds(3)).Props());
Magic Number,Akka.Tests.Routing,ScatterGatherFirstCompletedSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\ScatterGatherFirstCompletedSpec.cs,Scatter_gather_router_should_handle_failing_timeouts,The following statement contains a magic number: var exception = await routedActor.Ask<Status.Failure>(0' TimeSpan.FromSeconds(5));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_router_must_deliver_messages_to_idle_actor,The following statement contains a magic number: var router = Sys.ActorOf(new SmallestMailboxPool(3).Props(Props.Create(() => new SmallestMailboxActor(usedActors))));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_router_must_deliver_messages_to_idle_actor,The following statement contains a magic number: router.Tell(Tuple.Create(2' received2));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_router_must_deliver_messages_to_idle_actor,The following statement contains a magic number: router.Tell(Tuple.Create(3' received3));
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_router_must_deliver_messages_to_idle_actor,The following statement contains a magic number: Assert.Equal(usedActors.Count' 4);
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_router_must_deliver_messages_to_idle_actor,The following statement contains a magic number: var path2 = usedActors[2];
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,Smallest_mailbox_router_must_deliver_messages_to_idle_actor,The following statement contains a magic number: var path3 = usedActors[3];
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,SmallestMail_should_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: var routingLogic = new SmallestMailboxRoutingLogic(int.MaxValue - 5);
Magic Number,Akka.Tests.Routing,SmallestMailboxSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\SmallestMailboxSpec.cs,SmallestMail_should_not_throw_IndexOutOfRangeException_when_counter_wraps_to_be_negative,The following statement contains a magic number: i < 10
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_deliver_a_broadcast_message_using_tell,The following statement contains a magic number: var doneLatch = new TestLatch(2);
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_deliver_a_broadcast_message_using_tell,The following statement contains a magic number: var routedActor = Sys.ActorOf(Props.Create<TestActor>()                  .WithRouter(new TailChoppingGroup(new[] { actor1.Path.ToString()' actor2.Path.ToString() }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(100))              ));
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_return_response_from_second_actor_after_inactivity_from_first_one,The following statement contains a magic number: var actor1 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(1000))' "Actor3");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_return_response_from_second_actor_after_inactivity_from_first_one,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(100))' "Actor4");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_return_response_from_second_actor_after_inactivity_from_first_one,The following statement contains a magic number: var routedActor = Sys.ActorOf(Props.Create<TestActor>()                  .WithRouter(new TailChoppingGroup(new[] { actor1.Path.ToString()' actor2.Path.ToString() }' TimeSpan.FromSeconds(1)' TimeSpan.FromMilliseconds(50))              ));
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var actor1 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(500))' "Actor5");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var actor2 = Sys.ActorOf(Props.Create(() => new TailChopTestActor(500))' "Actor6");
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var routedActor = Sys.ActorOf(Props.Create<TestActor>()                  .WithRouter(new TailChoppingGroup(                      new[]                      {                          actor1.Path.ToString()'                          actor2.Path.ToString()                      }'                      TimeSpan.FromMilliseconds(300)'                      TimeSpan.FromMilliseconds(50))                  ));
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: var routedActor = Sys.ActorOf(Props.Create<TestActor>()                  .WithRouter(new TailChoppingGroup(                      new[]                      {                          actor1.Path.ToString()'                          actor2.Path.ToString()                      }'                      TimeSpan.FromMilliseconds(300)'                      TimeSpan.FromMilliseconds(50))                  ));
Magic Number,Akka.Tests.Routing,TailChoppingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Routing\TailChoppingSpec.cs,Tail_chopping_router_must_throw_exception_if_no_result_will_arrive_within_the_given_time,The following statement contains a magic number: probe.ExpectMsg<Status.Failure>(TimeSpan.FromMilliseconds(700));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_decimal,The following statement contains a magic number: var message = 123.456m;
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_decimal_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123.456m };
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_float_message,The following statement contains a magic number: var message = new UntypedContainerMessage {Contents = 123.456f};
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_long_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123L };
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_double_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123.456d };
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_int_message,The following statement contains a magic number: var message = new UntypedContainerMessage { Contents = 123};
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_long,The following statement contains a magic number: var message = 123L;
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_double,The following statement contains a magic number: var message = 123.456d;
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_int,The following statement contains a magic number: var message = 123;
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_float,The following statement contains a magic number: var message = 123.456f;
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_address,The following statement contains a magic number: var message = new Address("abc"' "def"' "ghi"' 123);
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_RemoteScope,The following statement contains a magic number: var message = new RemoteScope(new Address("akka.tcp"' "foo"' "localhost"' 8080));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_RoundRobinPool,The following statement contains a magic number: var message = new RoundRobinPool(10' new DefaultResizer(0'1)'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_RandomPool,The following statement contains a magic number: var message = new RandomPool(10' new DefaultResizer(0' 1)'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_ConsistentHashPool,The following statement contains a magic number: var message = new ConsistentHashingPool(10'null'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_TailChoppingPool,The following statement contains a magic number: var message = new TailChoppingPool(10'null'supervisor'"abc"'TimeSpan.FromSeconds(10)'TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_TailChoppingPool,The following statement contains a magic number: var message = new TailChoppingPool(10'null'supervisor'"abc"'TimeSpan.FromSeconds(10)'TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_TailChoppingPool,The following statement contains a magic number: var message = new TailChoppingPool(10'null'supervisor'"abc"'TimeSpan.FromSeconds(10)'TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_ScatterGatherFirstCompletedPool,The following statement contains a magic number: var message = new ScatterGatherFirstCompletedPool(10'null'supervisor'"abc"'TimeSpan.MaxValue);
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_SmallestMailboxPool,The following statement contains a magic number: var message = new SmallestMailboxPool(10'null'supervisor'"abc");
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_serialize_Resizer,The following statement contains a magic number: var message = new DefaultResizer(1' 20);
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_get_serializer_by_binding,The following statement contains a magic number: Sys.Serialization.FindSerializerFor(new byte[]{1'2'3}).GetType().ShouldBe(typeof(ByteArraySerializer));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_get_serializer_by_binding,The following statement contains a magic number: Sys.Serialization.FindSerializerFor(new byte[]{1'2'3}).GetType().ShouldBe(typeof(ByteArraySerializer));
Magic Number,Akka.Tests.Serialization,SerializationSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,Can_get_serializer_by_binding,The following statement contains a magic number: Sys.Serialization.FindSerializerFor(123).GetType().ShouldBe(typeof(NewtonSoftJsonSerializer));
Magic Number,Akka.Tests.Serialization,ImmutableMessageWithPrivateCtor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,GetHashCode,The following statement contains a magic number: return ((Bar != null ? Bar.GetHashCode() : 0)*397) ^ (Foo != null ? Foo.GetHashCode() : 0);
Magic Number,Akka.Tests.Serialization,ImmutableMessage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Serialization\SerializationSpec.cs,GetHashCode,The following statement contains a magic number: return ((Bar != null ? Bar.GetHashCode() : 0)*397) ^ (Foo != null ? Foo.GetHashCode() : 0);
Magic Number,Akka.Tests.Util,ByteStringSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_correct_index_of_elements_in_string,The following statement contains a magic number: var b = ByteString.Create(new byte[] { 1 }) + ByteString.Create(new byte[] { 2 });
Magic Number,Akka.Tests.Util,ByteStringSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_correct_index_of_elements_in_string,The following statement contains a magic number: int offset = b.IndexOf(2);
Magic Number,Akka.Tests.Util,ByteStringSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_negative_one_when_an_element_was_not_found,The following statement contains a magic number: var b = ByteString.Create(new byte[] { 1 }) + ByteString.Create(new byte[] { 2 });
Magic Number,Akka.Tests.Util,ByteStringSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\ByteStringSpec.cs,A_concatenated_bytestring_must_return_negative_one_when_an_element_was_not_found,The following statement contains a magic number: int offset = b.IndexOf(3);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var items = new List<int>() { 1' 2' 3' 4' 5' 6 };
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var slice = items.Slice(2' 4);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: var slice = items.Slice(2' 4);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,Slice_should_return_correct_array_subset,The following statement contains a magic number: Assert.True(slice.SequenceEqual(new[] { 3' 4' 5' 6 }));
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var items = new List<int>() {1' 2' 3' 4' 5' 6};
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var from7 = items.From(7).Take(2);
Magic Number,Akka.Tests.Util,CollectionExtensionsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\CollectionExtensionsSpec.cs,From_should_return_empty_set_when_item_not_found,The following statement contains a magic number: var from7 = items.From(7).Take(2);
Magic Number,Akka.Tests.Util,ContinuousEnumeratorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\ContinuousEnumeratorSpec.cs,ContinuousEnumerator_should_iterate_list_overlapping,The following statement contains a magic number: var testList = Enumerable.Range(0' 10).ToList();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: var iter = new[] {8' 2' 5}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: var iter = new[] {8' 2' 5}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: var iter = new[] {8' 2' 5}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: iter.Next().Should().Be(8);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: iter.Next().Should().Be(2);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_next_for_elements,The following statement contains a magic number: iter.Next().Should().Be(5);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: var iter = new[] { 8' 2}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: var iter = new[] { 8' 2}.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: iter.Next().Should().Be(8);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_isempty,The following statement contains a magic number: iter.Next().Should().Be(2);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: var iter = new[] { 8' 2' 8' 5' 23 }.Iterator();
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: iter.Next().Should().Be(8);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: iter.Next().Should().Be(2);
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: vector.ShouldBeEquivalentTo(new[] { 8' 5' 23 });
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: vector.ShouldBeEquivalentTo(new[] { 8' 5' 23 });
Magic Number,Akka.Tests.Util.Internal.Collections,IteratorTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\Collections\IteratorTests.cs,Should_provide_vector_of_remaining_elements,The following statement contains a magic number: vector.ShouldBeEquivalentTo(new[] { 8' 5' 23 });
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: Func<string' string> updateWhenSignaled = i =>              {                  numberOfCallsToUpdateWhenSignaled++;                  hasEnteredUpdateMethod.Set();	//Signal THREAD 1 to update sharedVariable                  okToContinue.WaitOne(TimeSpan.FromSeconds(2));	//Wait for THREAD 1                  return "updated";              };
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: hasEnteredUpdateMethod.WaitOne(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun,The following statement contains a magic number: numberOfCallsToUpdateWhenSignaled.ShouldBe(2);
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: Func<string' Tuple<bool' string' string>> updateWhenSignaled = i =>              {                  numberOfCallsToUpdateWhenSignaled++;                  hasEnteredUpdateMethod.Set();	//Signal THREAD 1 to update sharedVariable                  okToContinue.WaitOne(TimeSpan.FromSeconds(2));	//Wait for THREAD 1                  return Tuple.Create(true' "updated"' "returnValue");              };
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: hasEnteredUpdateMethod.WaitOne(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_using_tuples,The following statement contains a magic number: numberOfCallsToUpdateWhenSignaled.ShouldBe(2);
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: Func<string' Tuple<bool' string' string>> updateWhenSignaled = s =>              {                  numberOfCallsToUpdateWhenSignaled++;                  hasEnteredUpdateMethod.Set();	//Signal to start-thread that we have entered the update method (it will chang                  okToContinue.WaitOne(TimeSpan.FromSeconds(2));	//Wait to be signalled                  var shouldUpdate = s == "";                  return Tuple.Create(shouldUpdate' "updated"' shouldUpdate ? "update" : "break");              };
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: hasEnteredUpdateMethod.WaitOne(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: task.Wait(TimeSpan.FromSeconds(2));
Magic Number,Akka.Tests.Util.Internal,InterlockedSpinTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Util\Internal\InterlockedSpinTests.cs,When_a_shared_variable_is_updated_on_another_thread_Then_the_update_method_is_rerun_but_as_the_break_condition_is_fulfilled_it_do_not_update,The following statement contains a magic number: numberOfCallsToUpdateWhenSignaled.ShouldBe(2);
Missing Default,Akka.Tests.Actor,ReplyActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,Receive,The following switch statement is missing a default case: switch (type)                  {                      case "complexRequest":                          {                              _replyTo = Sender;                              var worker = Context.ActorOf(Props.Create<WorkerActor>());                              worker.Tell("work");                              break;                          }                      case "complexRequest2":                          {                              var worker = Context.ActorOf(Props.Create<WorkerActor>());                              worker.Tell(new ReplyTo(Sender));                              break;                          }                      case "workDone":                          _replyTo.Tell("complexReply");                          break;                      case "simpleRequest":                          Sender.Tell("simpleReply");                          break;                  }
Missing Default,Akka.Tests.Actor,SenderActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Tests\Actor\ActorRefSpec.cs,Receive,The following switch statement is missing a default case: switch (msg)                  {                      case "complex": _replyTo.Tell("complexRequest"); break;                      case "complex2": _replyTo.Tell("complexRequest2"); break;                      case "simple": _replyTo.Tell("simpleRequest"); break;                      case "complexReply": _latch.CountDown(); break;                      case "simpleReply": _latch.CountDown(); break;                  }
