Implementation smell,Namespace,Class,File,Method,Description
Long Method,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,ReceiveGossip,The method has 105 lines of code.
Long Method,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The method has 135 lines of code.
Complex Method,Akka.Cluster,AutoDownBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\AutoDown.cs,OnReceive,Cyclomatic complexity of the method is 11
Complex Method,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,TryingToJoin,Cyclomatic complexity of the method is 9
Complex Method,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,Initialized,Cyclomatic complexity of the method is 17
Complex Method,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,Joining,Cyclomatic complexity of the method is 8
Complex Method,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,ReceiveGossip,Cyclomatic complexity of the method is 18
Complex Method,Akka.Cluster,ClusterDomainEventPublisher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,PublishDiff,Cyclomatic complexity of the method is 8
Complex Method,Akka.Cluster,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Member.cs,HighestPriorityOf,Cyclomatic complexity of the method is 11
Complex Method,Akka.Cluster,LeaderStatusMemberComparer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Member.cs,Compare,Cyclomatic complexity of the method is 8
Complex Method,Akka.Cluster,Reachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Reachability.cs,Merge,Cyclomatic complexity of the method is 11
Complex Method,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,ToBinary,Cyclomatic complexity of the method is 13
Complex Method,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,FromBinary,Cyclomatic complexity of the method is 13
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 13
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 14
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 15
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 15
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 8
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 18
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 12
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 13
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 16
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 17
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 12
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 12
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 15
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 13
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 17
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 12
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 15
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 13
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 10
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 14
Complex Method,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,Cyclomatic complexity of the method is 13
Long Parameter List,Akka.Cluster,GossipStats,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GossipStats,The method has 5 parameters. Parameters: receivedGossipCount' mergeCount' sameCount' newerCount' olderCount
Long Parameter List,Akka.Cluster,GossipStats,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,Copy,The method has 5 parameters. Parameters: receivedGossipCount' mergeCount' sameCount' newerCount' olderCount
Long Parameter List,Akka.Cluster,CurrentClusterState,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,CurrentClusterState,The method has 5 parameters. Parameters: members' unreachable' seenBy' leader' roleLeaderMap
Long Parameter List,Akka.Cluster,CurrentClusterState,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,Copy,The method has 5 parameters. Parameters: members' unreachable' seenBy' leader' roleLeaderMap
Long Parameter List,Akka.Cluster,SystemMemory,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,SystemMemory,The method has 5 parameters. Parameters: address' timestamp' used' available' max
Long Parameter List,Akka.Cluster,Cpu,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,Cpu,The method has 5 parameters. Parameters: address' timestamp' cores' systemLoadAverage' cpuCombined
Long Identifier,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,LeaderActionsOnConvergence,The length of the parameter hasPartionHandoffCompletedSuccessfully is 38.
Long Identifier,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,ReapUnreachableMembers,The length of the parameter newlyDetectedUnreachableMembers is 31.
Long Identifier,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,,The length of the parameter NumberOfGossipsBeforeShutdownWhenLeaderExits is 44.
Long Identifier,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,,The length of the parameter _failureDetectorReaperTaskCancellable is 37.
Long Identifier,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,,The length of the parameter _publishStatsTaskTaskCancellable is 32.
Long Identifier,Akka.Cluster,ClusterRemoteWatcher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterRemoteWatcher.cs,Props,The length of the parameter heartbeatExpectedResponseAfter is 30.
Long Identifier,Akka.Cluster,ClusterRemoteWatcher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterRemoteWatcher.cs,ClusterRemoteWatcher,The length of the parameter heartbeatExpectedResponseAfter is 30.
Long Identifier,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,,The length of the parameter _failureDetectorImplementationClass is 35.
Long Identifier,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,,The length of the parameter _heartbeatExpectedResponseAfter is 31.
Long Identifier,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,,The length of the parameter _unreachableNodesReaperInterval is 31.
Long Identifier,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,,The length of the parameter _gossipDifferentViewProbability is 31.
Long Identifier,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,,The length of the parameter _reduceGossipDifferentViewProbability is 37.
Long Identifier,Akka.Cluster,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Gossip.cs,,The length of the parameter ConvergenceSkipUnreachableWithMemberStatus is 42.
Long Identifier,Akka.Cluster,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Gossip.cs,,The length of the parameter RemoveUnreachableWithMemberStatus is 33.
Long Identifier,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,,The length of the parameter _reachabilityStatusFromProtoCache is 33.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Join__Descriptor is 33.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Join__FieldAccessorTable is 41.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Welcome__Descriptor is 36.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Welcome__FieldAccessorTable is 44.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_GossipEnvelope__Descriptor is 43.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_GossipEnvelope__FieldAccessorTable is 51.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_GossipStatus__Descriptor is 41.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_GossipStatus__FieldAccessorTable is 49.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Gossip__Descriptor is 35.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Gossip__FieldAccessorTable is 43.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_GossipOverview__Descriptor is 43.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_GossipOverview__FieldAccessorTable is 51.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_ObserverReachability__Descriptor is 49.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_ObserverReachability__FieldAccessorTable is 57.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_SubjectReachability__Descriptor is 48.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_SubjectReachability__FieldAccessorTable is 56.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Member__Descriptor is 35.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Member__FieldAccessorTable is 43.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_VectorClock__Descriptor is 40.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_VectorClock__FieldAccessorTable is 48.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_VectorClock_Version__Descriptor is 48.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_VectorClock_Version__FieldAccessorTable is 56.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_MetricsGossipEnvelope__Descriptor is 50.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_MetricsGossipEnvelope__FieldAccessorTable is 58.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_MetricsGossip__Descriptor is 42.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_MetricsGossip__FieldAccessorTable is 50.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics__Descriptor is 40.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics__FieldAccessorTable is 48.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics_Number__Descriptor is 47.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics_Number__FieldAccessorTable is 55.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics_EWMA__Descriptor is 45.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics_EWMA__FieldAccessorTable is 53.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics_Metric__Descriptor is 47.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_NodeMetrics_Metric__FieldAccessorTable is 55.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Empty__Descriptor is 34.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Empty__FieldAccessorTable is 42.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Address__Descriptor is 36.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_Address__FieldAccessorTable is 44.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_UniqueAddress__Descriptor is 42.
Long Identifier,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter internal__static_UniqueAddress__FieldAccessorTable is 50.
Long Identifier,Akka.Cluster.Proto.Msg,GossipOverview,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter ObserverReachabilityFieldNumber is 31.
Long Identifier,Akka.Cluster.Proto.Msg,ObserverReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter _observerReachabilityFieldNames is 31.
Long Identifier,Akka.Cluster.Proto.Msg,ObserverReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter _observerReachabilityFieldTags is 30.
Long Identifier,Akka.Cluster.Proto.Msg,ObserverReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter SubjectReachabilityFieldNumber is 30.
Long Identifier,Akka.Cluster.Proto.Msg,SubjectReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter _subjectReachabilityFieldNames is 30.
Long Identifier,Akka.Cluster.Proto.Msg,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter rolesIndexesMemoizedSerializedSize is 34.
Long Identifier,Akka.Cluster.Proto.Msg,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter _metricsGossipEnvelopeFieldNames is 32.
Long Identifier,Akka.Cluster.Proto.Msg,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,,The length of the parameter _metricsGossipEnvelopeFieldTags is 31.
Long Statement,Akka.Cluster,AutoDownBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\AutoDown.cs,ScheduleUnreachable,The length of the statement  "                var cancelable = Scheduler.ScheduleTellOnceCancelable(_autoDownUnreachableAfter' Self' new AutoDown.UnreachableTimeout(node)' Self); " is 132.
Long Statement,Akka.Cluster,Cluster,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Cluster.cs,GetClusterCoreRef,The length of the statement  "                return await _clusterDaemons.Ask<IActorRef>(InternalClusterAction.GetClusterCoreRef.Instance' timeout).ConfigureAwait(false); " is 125.
Long Statement,Akka.Cluster,ClusterActorRefProvider,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterActorRefProvider.cs,Init,The length of the statement  "            //Complete the usual RemoteActorRefProvider initializations - need access to transports and RemoteWatcher before clustering can work " is 132.
Long Statement,Akka.Cluster,ClusterDeployer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterActorRefProvider.cs,ParseConfig,The length of the statement  "                    throw new ArgumentException(string.Format("Cluster-aware router can only wrap Pool or Group' got [{0}]"' deploy.RouterConfig.GetType())); " is 137.
Long Statement,Akka.Cluster,ClusterDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,CreateChildren,The length of the statement  "            _coreSupervisor = Context.ActorOf(Props.Create<ClusterCoreSupervisor>().WithDispatcher(_settings.UseDispatcher)' "core"); " is 121.
Long Statement,Akka.Cluster,ClusterCoreSupervisor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,CreateChildren,The length of the statement  "            _coreDaemon = Context.ActorOf(Props.Create(() => new ClusterCoreDaemon(_publisher)).WithDispatcher(Context.Props.Dispatcher)' "daemon"); " is 136.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,JoinSeedNodes,The length of the statement  "                        _seedNodeProcess = Context.ActorOf(Props.Create(() => new FirstSeedNodeProcess(seedNodes))' "firstSeedNodeProcess-" + _seedNodeProcessCounter); " is 143.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,JoinSeedNodes,The length of the statement  "                        _seedNodeProcess = Context.ActorOf(Props.Create(() => new JoinSeedNodeProcess(seedNodes)).WithDispatcher(_cluster.Settings.UseDispatcher)' "joinSeedNodeProcess-" + _seedNodeProcessCounter); " is 189.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,Joining,The length of the statement  "                    if (localMember.Status != MemberStatus.Down && localMember.Status != MemberStatus.Leaving && localMember.Status != MemberStatus.Exiting) " is 136.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,Welcome,The length of the statement  "            if (!_latestGossip.Members.IsEmpty) throw new InvalidOperationException("Welcome can only be done from an empty state"); " is 120.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,ReceiveGossip,The length of the statement  "                _log.Debug(@"""Couldn't establish a causal relationship between ""remote"" gossip and ""local"" gossip - Remote[{0}] - Local[{1}] - merged them into [{2}]"""' " is 158.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,SendGossip,The length of the statement  "                    preferredGossipTarget = ImmutableList.CreateRange(localGossip.Members.Where(m => !localGossip.SeenByNode(m.UniqueAddress) && " is 124.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,LeaderActionsOnConvergence,The length of the statement  "            //TODO (from JVM Akka) implement partion handoff and a check if it is completed - now just returns TRUE - e.g. has completed successfully " is 137.
Long Statement,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,ReapUnreachableMembers,The length of the statement  "                            _log.Info("Marking node(s) as REACHABLE [{0}]"' newlyDetectedReachableMembers.Select(m => m.ToString()).Aggregate((a' b) => a + "' " + b)); " is 139.
Long Statement,Akka.Cluster,HeartbeatNodeRing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterHeartbeat.cs,Receivers,The length of the statement  "            var slice = NodeRing.From(sender).Skip(1).Take(MonitoredByNumberOfNodes).ToList(); //grab members furthest from this peer " is 121.
Long Statement,Akka.Cluster,NodeMetrics,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,Merge,The length of the statement  "            if(Address != that.Address) throw new ArgumentException(string.Format("NodeMetrics.merge is only allowed for the same address. {0} != {1}"' Address' that.Address)); " is 164.
Long Statement,Akka.Cluster,SystemMemory,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,ExtractSystemMemory,The length of the statement  "                var max = nodeMetrics.Metric(SystemMemoryAvailable) != null ? (long?)Convert.ToInt64(nodeMetrics.Metric(SystemMemoryMax).SmoothValue) : null; " is 141.
Long Statement,Akka.Cluster,Cpu,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,ExtractCpu,The length of the statement  "               var systemLoadAverage = nodeMetrics.Metric(SystemLoadAverage) != null ? (double?)nodeMetrics.Metric(SystemLoadAverage).SmoothValue : null; " is 138.
Long Statement,Akka.Cluster,Cpu,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,ExtractCpu,The length of the statement  "                return new Cpu(nodeMetrics.Address' nodeMetrics.Timestamp' Convert.ToInt32(processors.Value)' systemLoadAverage' cpuCombined); " is 126.
Long Statement,Akka.Cluster,PerformanceCounterMetricsCollector,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,Metrics,The length of the statement  "            return ImmutableHashSet.Create<Metric>(new []{ Processors()' SystemLoadAverage()' SystemMaxMemory()' SystemMemoryAvailable()' ClrProcessMemoryUsed() }); " is 152.
Long Statement,Akka.Cluster,MetricsCollector,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,Get,The length of the statement  "            if (fqcn == typeof (PerformanceCounterMetricsCollector).AssemblyQualifiedName) return new PerformanceCounterMetricsCollector(system); " is 133.
Long Statement,Akka.Cluster,MetricsCollector,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,Get,The length of the statement  "                throw new ConfigurationException(string.Format("Could not create custom metrics collector {0} because: {1}"' fqcn' ex.Message)); " is 128.
Long Statement,Akka.Cluster,AddressComparer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Member.cs,Compare,The length of the statement  "                if (!x.Host.Equals(y.Host)) return String.Compare(x.Host.GetOrElse("")' y.Host.GetOrElse("")' StringComparison.Ordinal); " is 120.
Long Statement,Akka.Cluster,VectorClock,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\VectorClock.cs,CompareOnlyTo,The length of the statement  "            return Compare(_versions.GetEnumerator()' that._versions.GetEnumerator()' order == Ordering.Concurrent ? Ordering.FullOrder : order); " is 133.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,ToBinary,The length of the statement  "            if (obj is ClusterHeartbeatSender.Heartbeat) return AddressToProtoByteArray(((ClusterHeartbeatSender.Heartbeat)obj).From); " is 122.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,ToBinary,The length of the statement  "            if (obj is ClusterHeartbeatSender.HeartbeatRsp) return UniqueAddressToProtoByteArray(((ClusterHeartbeatSender.HeartbeatRsp)obj).From); " is 134.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,ToBinary,The length of the statement  "            if (obj is InternalClusterAction.InitJoinAck) return AddressToProtoByteArray(((InternalClusterAction.InitJoinAck)obj).Address); " is 127.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,ToBinary,The length of the statement  "            if (obj is InternalClusterAction.InitJoinNack) return AddressToProtoByteArray(((InternalClusterAction.InitJoinNack)obj).Address); " is 129.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,FromBinary,The length of the statement  "            if (type == typeof(InternalClusterAction.InitJoinAck)) return new InternalClusterAction.InitJoinAck(AddressFromBinary(bytes)); " is 126.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,FromBinary,The length of the statement  "            if (type == typeof(InternalClusterAction.InitJoinNack)) return new InternalClusterAction.InitJoinNack(AddressFromBinary(bytes)); " is 128.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,FromBinary,The length of the statement  "            if (type == typeof(ClusterHeartbeatSender.Heartbeat)) return new ClusterHeartbeatSender.Heartbeat(AddressFromBinary(bytes)); " is 124.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,FromBinary,The length of the statement  "            if (type == typeof(ClusterHeartbeatSender.HeartbeatRsp)) return new ClusterHeartbeatSender.HeartbeatRsp(UniqueAddressFromBinary(bytes)); " is 136.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,AddressToProto,The length of the statement  "                throw new ArgumentException(string.Format("Address [{0}] could not be serialized: host or port missing."' address)' "address"); " is 127.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,GossipToProto,The length of the statement  "            Func<Member' Msg.Member.Builder> memberToProto = member => Msg.Member.CreateBuilder().SetAddressIndex(mapUniqueAddress(member.UniqueAddress)) " is 141.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,MetricsGossipEnvelopeFromProto,The length of the statement  "            Func<Msg.NodeMetrics' NodeMetrics> nodeMetricsFromProto = metrics => new NodeMetrics(addressMapping[metrics.AddressIndex]' metrics.Timestamp' metrics.MetricsList.Select(metricFromProto).ToImmutableHashSet()); " is 208.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,GossipFromProto,The length of the statement  "            Func<Msg.Member' Member> memberFromProto = member => Member.Create(addressMapping[member.AddressIndex]' member.HasUpNumber ? member.UpNumber : 0' MemberStatusFromProto[member.Status]' " is 183.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,GossipStatusFromProto,The length of the statement  "            return new GossipStatus(UniqueAddressFromProto(status.From)' VectorClockFromProto(status.Version' status.AllHashesList)); " is 121.
Long Statement,Akka.Cluster.Proto,ClusterMessageSerializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\ClusterMessageSerializer.cs,VectorClockFromProto,The length of the statement  "                    version.VersionsList.ToImmutableSortedDictionary(version1 => VectorClock.Node.FromHash(hashMapping[version1.HashIndex])' " is 120.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_joinFieldNames' field_name' global::System.StringComparer.Ordinal); " is 122.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(); " is 127.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeNode,The length of the statement  "            result.node_ = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(result.node_).MergeFrom(value).BuildPartial(); " is 120.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_welcomeFieldNames' field_name' global::System.StringComparer.Ordinal); " is 125.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(); " is 127.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            result.from_ = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(result.from_).MergeFrom(value).BuildPartial(); " is 120.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_gossipEnvelopeFieldNames' field_name' global::System.StringComparer.Ordinal); " is 132.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(); " is 127.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(); " is 127.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            result.from_ = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(result.from_).MergeFrom(value).BuildPartial(); " is 120.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_gossipStatusFieldNames' field_name' global::System.StringComparer.Ordinal); " is 130.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(); " is 127.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder(); " is 123.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            result.from_ = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder(result.from_).MergeFrom(value).BuildPartial(); " is 120.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeVersion,The length of the statement  "            result.version_ = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder(result.version_).MergeFrom(value).BuildPartial(); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_gossipFieldNames' field_name' global::System.StringComparer.Ordinal); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry); " is 143.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry); " is 131.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder(); " is 129.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder(); " is 123.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeOverview,The length of the statement  "            result.overview_ = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder(result.overview_).MergeFrom(value).BuildPartial(); " is 129.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeVersion,The length of the statement  "            result.version_ = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder(result.version_).MergeFrom(value).BuildPartial(); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_gossipOverviewFieldNames' field_name' global::System.StringComparer.Ordinal); " is 132.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.observerReachability_' global::Akka.Cluster.Proto.Msg.ObserverReachability.DefaultInstance' extensionRegistry); " is 158.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_observerReachabilityFieldNames' field_name' global::System.StringComparer.Ordinal); " is 138.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.subjectReachability_' global::Akka.Cluster.Proto.Msg.SubjectReachability.DefaultInstance' extensionRegistry); " is 156.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_subjectReachabilityFieldNames' field_name' global::System.StringComparer.Ordinal); " is 137.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_memberFieldNames' field_name' global::System.StringComparer.Ordinal); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "                int field_ordinal = global::System.Array.BinarySearch(_versionFieldNames' field_name' global::System.StringComparer.Ordinal); " is 125.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_vectorClockFieldNames' field_name' global::System.StringComparer.Ordinal); " is 129.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.versions_' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.DefaultInstance' extensionRegistry); " is 151.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_metricsGossipEnvelopeFieldNames' field_name' global::System.StringComparer.Ordinal); " is 139.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder subBuilder = global::Akka.Cluster.Proto.Msg.MetricsGossip.CreateBuilder(); " is 127.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeGossip,The length of the statement  "            result.gossip_ = global::Akka.Cluster.Proto.Msg.MetricsGossip.CreateBuilder(result.gossip_).MergeFrom(value).BuildPartial(); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_metricsGossipFieldNames' field_name' global::System.StringComparer.Ordinal); " is 131.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.Address.DefaultInstance' extensionRegistry); " is 137.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.nodeMetrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.DefaultInstance' extensionRegistry); " is 140.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "                int field_ordinal = global::System.Array.BinarySearch(_numberFieldNames' field_name' global::System.StringComparer.Ordinal); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "                int field_ordinal = global::System.Array.BinarySearch(_eWMAFieldNames' field_name' global::System.StringComparer.Ordinal); " is 122.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "                int field_ordinal = global::System.Array.BinarySearch(_metricFieldNames' field_name' global::System.StringComparer.Ordinal); " is 124.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "                  global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.CreateBuilder(); " is 149.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "                  global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.CreateBuilder(); " is 145.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeNumber,The length of the statement  "                result.number_ = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.CreateBuilder(result.number_).MergeFrom(value).BuildPartial(); " is 135.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeEwma,The length of the statement  "                result.ewma_ = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.CreateBuilder(result.ewma_).MergeFrom(value).BuildPartial(); " is 129.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_nodeMetricsFieldNames' field_name' global::System.StringComparer.Ordinal); " is 129.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "              input.ReadMessageArray(tag' field_name' result.metrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.DefaultInstance' extensionRegistry); " is 149.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_emptyFieldNames' field_name' global::System.StringComparer.Ordinal); " is 123.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_addressFieldNames' field_name' global::System.StringComparer.Ordinal); " is 125.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The length of the statement  "            int field_ordinal = global::System.Array.BinarySearch(_uniqueAddressFieldNames' field_name' global::System.StringComparer.Ordinal); " is 131.
Long Statement,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeAddress,The length of the statement  "            result.address_ = global::Akka.Cluster.Proto.Msg.Address.CreateBuilder(result.address_).MergeFrom(value).BuildPartial(); " is 120.
Long Statement,Akka.Cluster.Routing,ClusterRouterGroupSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Routing\ClusterRoutingConfig.cs,FromConfig,The length of the statement  "            return new ClusterRouterGroupSettings(config.GetInt("nr-of-instances")' config.GetBoolean("cluster.allow-local-routees")' config.GetString("cluster.use-role")' ImmutableHashSet.Create(config.GetStringList("routees.paths").ToArray())); " is 234.
Long Statement,Akka.Cluster.Routing,ClusterRouterPoolSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Routing\ClusterRoutingConfig.cs,FromConfig,The length of the statement  "            return new ClusterRouterPoolSettings(config.GetInt("nr-of-instances")' config.GetBoolean("cluster.allow-local-routees")' config.GetString("cluster.use-role")' config.GetInt("cluster.max-nr-of-instances-per-node")); " is 214.
Long Statement,Akka.Cluster.Routing,ClusterRouterGroup,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Routing\ClusterRoutingConfig.cs,IsManagementMessage,The length of the statement  "            return message is ClusterEvent.IClusterDomainEvent || message is ClusterEvent.CurrentClusterState || base.IsManagementMessage(message); " is 135.
Long Statement,Akka.Cluster.Routing,ClusterRouterGroup,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Routing\ClusterRoutingConfig.cs,WithFallback,The length of the statement  "            if (localFallback != null && (localFallback.Local is ClusterRouterGroup)) throw new ConfigurationException("ClusterRouterGroup is not allowed to wrap a ClusterRouterGroup"); " is 173.
Long Statement,Akka.Cluster.Routing,ClusterRouterPool,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Routing\ClusterRoutingConfig.cs,IsManagementMessage,The length of the statement  "            return message is ClusterEvent.IClusterDomainEvent || message is ClusterEvent.CurrentClusterState || base.IsManagementMessage(message); " is 135.
Long Statement,Akka.Cluster.Routing,ClusterRouterPool,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Routing\ClusterRoutingConfig.cs,WithFallback,The length of the statement  "            if(otherClusterRouterPool != null && otherClusterRouterPool.Local is ClusterRouterPool) throw new ConfigurationException("ClusterRouterPool is not allowed to wrap a ClusterRouterPool"); " is 185.
Complex Conditional,Akka.Cluster,ClusterEvent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,DiffLeader,The conditional expression  "(newLeader == null && oldGossip.Leader(selfUniqueAddress) == null)                   || newLeader != null && newLeader.Equals(oldGossip.Leader(selfUniqueAddress))"  is complex.
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetConfig".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetBoolean".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetConfig".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetString".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetInt".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetStringList".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetStringList".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetInt".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetString".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetDouble".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetInt".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetInt".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetBoolean".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetString".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetTimeSpan".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetConfig".
Virtual Method Call from Constructor,Akka.Cluster,ClusterSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterSettings.cs,ClusterSettings,The constructor "ClusterSettings" calls a virtual method "GetBoolean".
Magic Number,Akka.Cluster,Join,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GetHashCode,The following statement contains a magic number: return (_node.GetHashCode() * 397) ^ _roles.GetHashCode();
Magic Number,Akka.Cluster,Welcome,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GetHashCode,The following statement contains a magic number: return (_from.GetHashCode() * 397) ^ _gossip.GetHashCode();
Magic Number,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GossipTick,The following statement contains a magic number: _cluster.Scheduler.ScheduleOnce(new TimeSpan(_cluster.Settings.GossipInterval.Ticks / 3)' Self'                      InternalClusterAction.GossipSpeedupTick.Instance);
Magic Number,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GossipTick,The following statement contains a magic number: _cluster.Scheduler.ScheduleOnce(new TimeSpan(_cluster.Settings.GossipInterval.Ticks * 2 / 3)' Self'                      InternalClusterAction.GossipSpeedupTick.Instance);
Magic Number,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GossipTick,The following statement contains a magic number: _cluster.Scheduler.ScheduleOnce(new TimeSpan(_cluster.Settings.GossipInterval.Ticks * 2 / 3)' Self'                      InternalClusterAction.GossipSpeedupTick.Instance);
Magic Number,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,IsGossipSpeedupNeeded,The following statement contains a magic number: return _latestGossip.Overview.Seen.Count < _latestGossip.Members.Count / 2;
Magic Number,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,LeaderActions,The following statement contains a magic number: const int firstNotice = 20;
Magic Number,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,LeaderActions,The following statement contains a magic number: const int periodicNotice = 60;
Magic Number,Akka.Cluster,VectorClockStats,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,GetHashCode,The following statement contains a magic number: return (_versionSize * 397) ^ _seenLatest;
Magic Number,Akka.Cluster,ClusterEvent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,DiffMemberEvents,The following statement contains a magic number: var changedMembers = membersGroupedByAddress                  .Where(g => g.Count() == 2 && g.First().Status != g.Skip(1).First().Status)                  .Select(g => g.First());
Magic Number,Akka.Cluster,MemberStatusChange,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,MemberStatusChange,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash*23 + _member.GetHashCode();
Magic Number,Akka.Cluster,MemberRemoved,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,MemberRemoved,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash*23 + base.GetHashCode();
Magic Number,Akka.Cluster,MemberRemoved,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash*23 + _previousStatus.GetHashCode();
Magic Number,Akka.Cluster,LeaderChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,LeaderChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + (_leader == null ? 0 : _leader.GetHashCode());
Magic Number,Akka.Cluster,RoleLeaderChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,RoleLeaderChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + _role.GetHashCode();
Magic Number,Akka.Cluster,RoleLeaderChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + (_leader == null ? 0 : _leader.GetHashCode());
Magic Number,Akka.Cluster,ReachabilityEvent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,ReachabilityEvent,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash * 23 + _member.GetHashCode();
Magic Number,Akka.Cluster,ReachabilityChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,ReachabilityChanged,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash*23 + _reachability.GetHashCode();
Magic Number,Akka.Cluster,CurrentInternalStats,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: var hash = 17;
Magic Number,Akka.Cluster,CurrentInternalStats,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash*23 + _gossipStats.GetHashCode();
Magic Number,Akka.Cluster,CurrentInternalStats,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterEvent.cs,GetHashCode,The following statement contains a magic number: hash = hash*23 + _vclockStats.GetHashCode();
Magic Number,Akka.Cluster,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Gossip.GetHashCode();
Magic Number,Akka.Cluster,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterMetricsCollector.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Reply.GetHashCode();
Magic Number,Akka.Cluster,GossipStatus,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Gossip.cs,GetHashCode,The following statement contains a magic number: return (_from.GetHashCode() * 397) ^ _version.GetHashCode();
Magic Number,Akka.Cluster,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Member.cs,PickHighestPriority,The following statement contains a magic number: g.Count() == 2
Magic Number,Akka.Cluster,Record,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Reachability.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Version.GetHashCode();
Magic Number,Akka.Cluster,Record,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Reachability.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Status.GetHashCode();
Magic Number,Akka.Cluster,Record,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Reachability.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Subject != null ? Subject.GetHashCode() : 0);
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,ClusterMessages,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,ClusterMessages,The following statement contains a magic number: pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {          descriptor = root;          internal__static_Join__Descriptor = Descriptor.MessageTypes[0];          internal__static_Join__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Join' global::Akka.Cluster.Proto.Msg.Join.Builder>(internal__static_Join__Descriptor'                  new string[] { "Node"' "Roles"' });          internal__static_Welcome__Descriptor = Descriptor.MessageTypes[1];          internal__static_Welcome__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Welcome' global::Akka.Cluster.Proto.Msg.Welcome.Builder>(internal__static_Welcome__Descriptor'                  new string[] { "From"' "Gossip"' });          internal__static_GossipEnvelope__Descriptor = Descriptor.MessageTypes[2];          internal__static_GossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipEnvelope' global::Akka.Cluster.Proto.Msg.GossipEnvelope.Builder>(internal__static_GossipEnvelope__Descriptor'                  new string[] { "From"' "To"' "SerializedGossip"' });          internal__static_GossipStatus__Descriptor = Descriptor.MessageTypes[3];          internal__static_GossipStatus__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipStatus' global::Akka.Cluster.Proto.Msg.GossipStatus.Builder>(internal__static_GossipStatus__Descriptor'                  new string[] { "From"' "AllHashes"' "Version"' });          internal__static_Gossip__Descriptor = Descriptor.MessageTypes[4];          internal__static_Gossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Gossip' global::Akka.Cluster.Proto.Msg.Gossip.Builder>(internal__static_Gossip__Descriptor'                  new string[] { "AllAddresses"' "AllRoles"' "AllHashes"' "Members"' "Overview"' "Version"' });          internal__static_GossipOverview__Descriptor = Descriptor.MessageTypes[5];          internal__static_GossipOverview__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.GossipOverview' global::Akka.Cluster.Proto.Msg.GossipOverview.Builder>(internal__static_GossipOverview__Descriptor'                  new string[] { "Seen"' "ObserverReachability"' });          internal__static_ObserverReachability__Descriptor = Descriptor.MessageTypes[6];          internal__static_ObserverReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.ObserverReachability' global::Akka.Cluster.Proto.Msg.ObserverReachability.Builder>(internal__static_ObserverReachability__Descriptor'                  new string[] { "AddressIndex"' "Version"' "SubjectReachability"' });          internal__static_SubjectReachability__Descriptor = Descriptor.MessageTypes[7];          internal__static_SubjectReachability__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.SubjectReachability' global::Akka.Cluster.Proto.Msg.SubjectReachability.Builder>(internal__static_SubjectReachability__Descriptor'                  new string[] { "AddressIndex"' "Status"' "Version"' });          internal__static_Member__Descriptor = Descriptor.MessageTypes[8];          internal__static_Member__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Member' global::Akka.Cluster.Proto.Msg.Member.Builder>(internal__static_Member__Descriptor'                  new string[] { "AddressIndex"' "UpNumber"' "Status"' "RolesIndexes"' });          internal__static_VectorClock__Descriptor = Descriptor.MessageTypes[9];          internal__static_VectorClock__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock' global::Akka.Cluster.Proto.Msg.VectorClock.Builder>(internal__static_VectorClock__Descriptor'                  new string[] { "Timestamp"' "Versions"' });          internal__static_VectorClock_Version__Descriptor = internal__static_VectorClock__Descriptor.NestedTypes[0];          internal__static_VectorClock_Version__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.Builder>(internal__static_VectorClock_Version__Descriptor'                  new string[] { "HashIndex"' "Timestamp"' });          internal__static_MetricsGossipEnvelope__Descriptor = Descriptor.MessageTypes[10];          internal__static_MetricsGossipEnvelope__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope' global::Akka.Cluster.Proto.Msg.MetricsGossipEnvelope.Builder>(internal__static_MetricsGossipEnvelope__Descriptor'                  new string[] { "From"' "Gossip"' "Reply"' });          internal__static_MetricsGossip__Descriptor = Descriptor.MessageTypes[11];          internal__static_MetricsGossip__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.MetricsGossip' global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder>(internal__static_MetricsGossip__Descriptor'                  new string[] { "AllAddresses"' "AllMetricNames"' "NodeMetrics"' });          internal__static_NodeMetrics__Descriptor = Descriptor.MessageTypes[12];          internal__static_NodeMetrics__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics' global::Akka.Cluster.Proto.Msg.NodeMetrics.Builder>(internal__static_NodeMetrics__Descriptor'                  new string[] { "AddressIndex"' "Timestamp"' "Metrics"' });          internal__static_NodeMetrics_Number__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[0];          internal__static_NodeMetrics_Number__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder>(internal__static_NodeMetrics_Number__Descriptor'                  new string[] { "Type"' "Value32"' "Value64"' "Serialized"' });          internal__static_NodeMetrics_EWMA__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[1];          internal__static_NodeMetrics_EWMA__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder>(internal__static_NodeMetrics_EWMA__Descriptor'                  new string[] { "Value"' "Alpha"' });          internal__static_NodeMetrics_Metric__Descriptor = internal__static_NodeMetrics__Descriptor.NestedTypes[2];          internal__static_NodeMetrics_Metric__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.Builder>(internal__static_NodeMetrics_Metric__Descriptor'                  new string[] { "NameIndex"' "Number"' "Ewma"' });          internal__static_Empty__Descriptor = Descriptor.MessageTypes[13];          internal__static_Empty__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Empty' global::Akka.Cluster.Proto.Msg.Empty.Builder>(internal__static_Empty__Descriptor'                  new string[] { });          internal__static_Address__Descriptor = Descriptor.MessageTypes[14];          internal__static_Address__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.Address' global::Akka.Cluster.Proto.Msg.Address.Builder>(internal__static_Address__Descriptor'                  new string[] { "System"' "Hostname"' "Port"' "Protocol"' });          internal__static_UniqueAddress__Descriptor = Descriptor.MessageTypes[15];          internal__static_UniqueAddress__FieldAccessorTable =               new pb::FieldAccess.FieldAccessorTable<global::Akka.Cluster.Proto.Msg.UniqueAddress' global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder>(internal__static_UniqueAddress__Descriptor'                  new string[] { "Address"' "Uid"' });          return null;        };
Magic Number,Akka.Cluster.Proto.Msg,Join,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteStringArray(2' field_names[1]' roles_);
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasNode) {                  subBuilder.MergeFrom(Node);                }                input.ReadMessage(subBuilder' extensionRegistry);                Node = subBuilder.BuildPartial();                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.roles_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasNode) {                  subBuilder.MergeFrom(Node);                }                input.ReadMessage(subBuilder' extensionRegistry);                Node = subBuilder.BuildPartial();                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.roles_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.Gossip.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Gossip.CreateBuilder();                if (result.hasGossip) {                  subBuilder.MergeFrom(Gossip);                }                input.ReadMessage(subBuilder' extensionRegistry);                Gossip = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.Gossip.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Gossip.CreateBuilder();                if (result.hasGossip) {                  subBuilder.MergeFrom(Gossip);                }                input.ReadMessage(subBuilder' extensionRegistry);                Gossip = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasTo) {                  subBuilder.MergeFrom(To);                }                input.ReadMessage(subBuilder' extensionRegistry);                To = subBuilder.BuildPartial();                break;              }              case 26: {                result.hasSerializedGossip = input.ReadBytes(ref result.serializedGossip_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasTo) {                  subBuilder.MergeFrom(To);                }                input.ReadMessage(subBuilder' extensionRegistry);                To = subBuilder.BuildPartial();                break;              }              case 26: {                result.hasSerializedGossip = input.ReadBytes(ref result.serializedGossip_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasTo) {                  subBuilder.MergeFrom(To);                }                input.ReadMessage(subBuilder' extensionRegistry);                To = subBuilder.BuildPartial();                break;              }              case 26: {                result.hasSerializedGossip = input.ReadBytes(ref result.serializedGossip_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 26: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 26: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.UniqueAddress.Builder subBuilder = global::Akka.Cluster.Proto.Msg.UniqueAddress.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 26: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allRoles_);                break;              }              case 26: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 34: {                input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry);                break;              }              case 42: {                global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder();                if (result.hasOverview) {                  subBuilder.MergeFrom(Overview);                }                input.ReadMessage(subBuilder' extensionRegistry);                Overview = subBuilder.BuildPartial();                break;              }              case 50: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allRoles_);                break;              }              case 26: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 34: {                input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry);                break;              }              case 42: {                global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder();                if (result.hasOverview) {                  subBuilder.MergeFrom(Overview);                }                input.ReadMessage(subBuilder' extensionRegistry);                Overview = subBuilder.BuildPartial();                break;              }              case 50: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allRoles_);                break;              }              case 26: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 34: {                input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry);                break;              }              case 42: {                global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder();                if (result.hasOverview) {                  subBuilder.MergeFrom(Overview);                }                input.ReadMessage(subBuilder' extensionRegistry);                Overview = subBuilder.BuildPartial();                break;              }              case 50: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allRoles_);                break;              }              case 26: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 34: {                input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry);                break;              }              case 42: {                global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder();                if (result.hasOverview) {                  subBuilder.MergeFrom(Overview);                }                input.ReadMessage(subBuilder' extensionRegistry);                Overview = subBuilder.BuildPartial();                break;              }              case 50: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allRoles_);                break;              }              case 26: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 34: {                input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry);                break;              }              case 42: {                global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder();                if (result.hasOverview) {                  subBuilder.MergeFrom(Overview);                }                input.ReadMessage(subBuilder' extensionRegistry);                Overview = subBuilder.BuildPartial();                break;              }              case 50: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.UniqueAddress.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allRoles_);                break;              }              case 26: {                input.ReadStringArray(tag' field_name' result.allHashes_);                break;              }              case 34: {                input.ReadMessageArray(tag' field_name' result.members_' global::Akka.Cluster.Proto.Msg.Member.DefaultInstance' extensionRegistry);                break;              }              case 42: {                global::Akka.Cluster.Proto.Msg.GossipOverview.Builder subBuilder = global::Akka.Cluster.Proto.Msg.GossipOverview.CreateBuilder();                if (result.hasOverview) {                  subBuilder.MergeFrom(Overview);                }                input.ReadMessage(subBuilder' extensionRegistry);                Overview = subBuilder.BuildPartial();                break;              }              case 50: {                global::Akka.Cluster.Proto.Msg.VectorClock.Builder subBuilder = global::Akka.Cluster.Proto.Msg.VectorClock.CreateBuilder();                if (result.hasVersion) {                  subBuilder.MergeFrom(Version);                }                input.ReadMessage(subBuilder' extensionRegistry);                Version = subBuilder.BuildPartial();                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10:              case 8: {                input.ReadInt32Array(tag' field_name' result.seen_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.observerReachability_' global::Akka.Cluster.Proto.Msg.ObserverReachability.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10:              case 8: {                input.ReadInt32Array(tag' field_name' result.seen_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.observerReachability_' global::Akka.Cluster.Proto.Msg.ObserverReachability.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10:              case 8: {                input.ReadInt32Array(tag' field_name' result.seen_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.observerReachability_' global::Akka.Cluster.Proto.Msg.ObserverReachability.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.subjectReachability_' global::Akka.Cluster.Proto.Msg.SubjectReachability.DefaultInstance' extensionRegistry);                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.subjectReachability_' global::Akka.Cluster.Proto.Msg.SubjectReachability.DefaultInstance' extensionRegistry);                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.subjectReachability_' global::Akka.Cluster.Proto.Msg.SubjectReachability.DefaultInstance' extensionRegistry);                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 32: {                result.hasVersion = input.ReadInt64(ref result.version_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasUpNumber = input.ReadInt32(ref result.upNumber_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 34:              case 32: {                input.ReadInt32Array(tag' field_name' result.rolesIndexes_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasUpNumber = input.ReadInt32(ref result.upNumber_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 34:              case 32: {                input.ReadInt32Array(tag' field_name' result.rolesIndexes_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasUpNumber = input.ReadInt32(ref result.upNumber_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 34:              case 32: {                input.ReadInt32Array(tag' field_name' result.rolesIndexes_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasUpNumber = input.ReadInt32(ref result.upNumber_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 34:              case 32: {                input.ReadInt32Array(tag' field_name' result.rolesIndexes_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasUpNumber = input.ReadInt32(ref result.upNumber_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 34:              case 32: {                input.ReadInt32Array(tag' field_name' result.rolesIndexes_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasUpNumber = input.ReadInt32(ref result.upNumber_);                break;              }              case 24: {                object unknown;                if(input.ReadEnum(ref result.status_' out unknown)) {                  result.hasStatus = true;                } else if(unknown is int) {                  if (unknownFields == null) {                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                  }                  unknownFields.MergeVarintField(3' (ulong)(int)unknown);                }                break;              }              case 34:              case 32: {                input.ReadInt32Array(tag' field_name' result.rolesIndexes_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    result.hasHashIndex = input.ReadInt32(ref result.hashIndex_);                    break;                  }                  case 16: {                    result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    result.hasHashIndex = input.ReadInt32(ref result.hashIndex_);                    break;                  }                  case 16: {                    result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.versions_' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                break;              }              case 18: {                input.ReadMessageArray(tag' field_name' result.versions_' global::Akka.Cluster.Proto.Msg.VectorClock.Types.Version.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.Address.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Address.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder subBuilder = global::Akka.Cluster.Proto.Msg.MetricsGossip.CreateBuilder();                if (result.hasGossip) {                  subBuilder.MergeFrom(Gossip);                }                input.ReadMessage(subBuilder' extensionRegistry);                Gossip = subBuilder.BuildPartial();                break;              }              case 24: {                result.hasReply = input.ReadBool(ref result.reply_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.Address.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Address.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder subBuilder = global::Akka.Cluster.Proto.Msg.MetricsGossip.CreateBuilder();                if (result.hasGossip) {                  subBuilder.MergeFrom(Gossip);                }                input.ReadMessage(subBuilder' extensionRegistry);                Gossip = subBuilder.BuildPartial();                break;              }              case 24: {                result.hasReply = input.ReadBool(ref result.reply_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.Address.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Address.CreateBuilder();                if (result.hasFrom) {                  subBuilder.MergeFrom(From);                }                input.ReadMessage(subBuilder' extensionRegistry);                From = subBuilder.BuildPartial();                break;              }              case 18: {                global::Akka.Cluster.Proto.Msg.MetricsGossip.Builder subBuilder = global::Akka.Cluster.Proto.Msg.MetricsGossip.CreateBuilder();                if (result.hasGossip) {                  subBuilder.MergeFrom(Gossip);                }                input.ReadMessage(subBuilder' extensionRegistry);                Gossip = subBuilder.BuildPartial();                break;              }              case 24: {                result.hasReply = input.ReadBool(ref result.reply_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.Address.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allMetricNames_);                break;              }              case 26: {                input.ReadMessageArray(tag' field_name' result.nodeMetrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.Address.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allMetricNames_);                break;              }              case 26: {                input.ReadMessageArray(tag' field_name' result.nodeMetrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                input.ReadMessageArray(tag' field_name' result.allAddresses_' global::Akka.Cluster.Proto.Msg.Address.DefaultInstance' extensionRegistry);                break;              }              case 18: {                input.ReadStringArray(tag' field_name' result.allMetricNames_);                break;              }              case 26: {                input.ReadMessageArray(tag' field_name' result.nodeMetrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    object unknown;                    if(input.ReadEnum(ref result.type_' out unknown)) {                      result.hasType = true;                    } else if(unknown is int) {                      if (unknownFields == null) {                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                      }                      unknownFields.MergeVarintField(1' (ulong)(int)unknown);                    }                    break;                  }                  case 16: {                    result.hasValue32 = input.ReadUInt32(ref result.value32_);                    break;                  }                  case 24: {                    result.hasValue64 = input.ReadUInt64(ref result.value64_);                    break;                  }                  case 34: {                    result.hasSerialized = input.ReadBytes(ref result.serialized_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    object unknown;                    if(input.ReadEnum(ref result.type_' out unknown)) {                      result.hasType = true;                    } else if(unknown is int) {                      if (unknownFields == null) {                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                      }                      unknownFields.MergeVarintField(1' (ulong)(int)unknown);                    }                    break;                  }                  case 16: {                    result.hasValue32 = input.ReadUInt32(ref result.value32_);                    break;                  }                  case 24: {                    result.hasValue64 = input.ReadUInt64(ref result.value64_);                    break;                  }                  case 34: {                    result.hasSerialized = input.ReadBytes(ref result.serialized_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    object unknown;                    if(input.ReadEnum(ref result.type_' out unknown)) {                      result.hasType = true;                    } else if(unknown is int) {                      if (unknownFields == null) {                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                      }                      unknownFields.MergeVarintField(1' (ulong)(int)unknown);                    }                    break;                  }                  case 16: {                    result.hasValue32 = input.ReadUInt32(ref result.value32_);                    break;                  }                  case 24: {                    result.hasValue64 = input.ReadUInt64(ref result.value64_);                    break;                  }                  case 34: {                    result.hasSerialized = input.ReadBytes(ref result.serialized_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    object unknown;                    if(input.ReadEnum(ref result.type_' out unknown)) {                      result.hasType = true;                    } else if(unknown is int) {                      if (unknownFields == null) {                        unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                      }                      unknownFields.MergeVarintField(1' (ulong)(int)unknown);                    }                    break;                  }                  case 16: {                    result.hasValue32 = input.ReadUInt32(ref result.value32_);                    break;                  }                  case 24: {                    result.hasValue64 = input.ReadUInt64(ref result.value64_);                    break;                  }                  case 34: {                    result.hasSerialized = input.ReadBytes(ref result.serialized_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 9: {                    result.hasValue = input.ReadDouble(ref result.value_);                    break;                  }                  case 17: {                    result.hasAlpha = input.ReadDouble(ref result.alpha_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 9: {                    result.hasValue = input.ReadDouble(ref result.value_);                    break;                  }                  case 17: {                    result.hasAlpha = input.ReadDouble(ref result.alpha_);                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    result.hasNameIndex = input.ReadInt32(ref result.nameIndex_);                    break;                  }                  case 18: {                    global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.CreateBuilder();                    if (result.hasNumber) {                      subBuilder.MergeFrom(Number);                    }                    input.ReadMessage(subBuilder' extensionRegistry);                    Number = subBuilder.BuildPartial();                    break;                  }                  case 26: {                    global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.CreateBuilder();                    if (result.hasEwma) {                      subBuilder.MergeFrom(Ewma);                    }                    input.ReadMessage(subBuilder' extensionRegistry);                    Ewma = subBuilder.BuildPartial();                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    result.hasNameIndex = input.ReadInt32(ref result.nameIndex_);                    break;                  }                  case 18: {                    global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.CreateBuilder();                    if (result.hasNumber) {                      subBuilder.MergeFrom(Number);                    }                    input.ReadMessage(subBuilder' extensionRegistry);                    Number = subBuilder.BuildPartial();                    break;                  }                  case 26: {                    global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.CreateBuilder();                    if (result.hasEwma) {                      subBuilder.MergeFrom(Ewma);                    }                    input.ReadMessage(subBuilder' extensionRegistry);                    Ewma = subBuilder.BuildPartial();                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {                  case 0: {                    throw pb::InvalidProtocolBufferException.InvalidTag();                  }                  default: {                    if (pb::WireFormat.IsEndGroupTag(tag)) {                      if (unknownFields != null) {                        this.UnknownFields = unknownFields.Build();                      }                      return this;                    }                    if (unknownFields == null) {                      unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                    }                    ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                    break;                  }                  case 8: {                    result.hasNameIndex = input.ReadInt32(ref result.nameIndex_);                    break;                  }                  case 18: {                    global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Number.CreateBuilder();                    if (result.hasNumber) {                      subBuilder.MergeFrom(Number);                    }                    input.ReadMessage(subBuilder' extensionRegistry);                    Number = subBuilder.BuildPartial();                    break;                  }                  case 26: {                    global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.Builder subBuilder = global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.EWMA.CreateBuilder();                    if (result.hasEwma) {                      subBuilder.MergeFrom(Ewma);                    }                    input.ReadMessage(subBuilder' extensionRegistry);                    Ewma = subBuilder.BuildPartial();                    break;                  }                }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                break;              }              case 26: {                input.ReadMessageArray(tag' field_name' result.metrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                break;              }              case 26: {                input.ReadMessageArray(tag' field_name' result.metrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 8: {                result.hasAddressIndex = input.ReadInt32(ref result.addressIndex_);                break;              }              case 16: {                result.hasTimestamp = input.ReadInt64(ref result.timestamp_);                break;              }              case 26: {                input.ReadMessageArray(tag' field_name' result.metrics_' global::Akka.Cluster.Proto.Msg.NodeMetrics.Types.Metric.DefaultInstance' extensionRegistry);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                result.hasSystem = input.ReadString(ref result.system_);                break;              }              case 18: {                result.hasHostname = input.ReadString(ref result.hostname_);                break;              }              case 24: {                result.hasPort = input.ReadUInt32(ref result.port_);                break;              }              case 34: {                result.hasProtocol = input.ReadString(ref result.protocol_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                result.hasSystem = input.ReadString(ref result.system_);                break;              }              case 18: {                result.hasHostname = input.ReadString(ref result.hostname_);                break;              }              case 24: {                result.hasPort = input.ReadUInt32(ref result.port_);                break;              }              case 34: {                result.hasProtocol = input.ReadString(ref result.protocol_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                result.hasSystem = input.ReadString(ref result.system_);                break;              }              case 18: {                result.hasHostname = input.ReadString(ref result.hostname_);                break;              }              case 24: {                result.hasPort = input.ReadUInt32(ref result.port_);                break;              }              case 34: {                result.hasProtocol = input.ReadString(ref result.protocol_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                result.hasSystem = input.ReadString(ref result.system_);                break;              }              case 18: {                result.hasHostname = input.ReadString(ref result.hostname_);                break;              }              case 24: {                result.hasPort = input.ReadUInt32(ref result.port_);                break;              }              case 34: {                result.hasProtocol = input.ReadString(ref result.protocol_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.Address.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Address.CreateBuilder();                if (result.hasAddress) {                  subBuilder.MergeFrom(Address);                }                input.ReadMessage(subBuilder' extensionRegistry);                Address = subBuilder.BuildPartial();                break;              }              case 16: {                result.hasUid = input.ReadUInt32(ref result.uid_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Builder,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,MergeFrom,The following statement contains a magic number: switch (tag) {              case 0: {                throw pb::InvalidProtocolBufferException.InvalidTag();              }              default: {                if (pb::WireFormat.IsEndGroupTag(tag)) {                  if (unknownFields != null) {                    this.UnknownFields = unknownFields.Build();                  }                  return this;                }                if (unknownFields == null) {                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);                }                ParseUnknownField(input' unknownFields' extensionRegistry' tag' field_name);                break;              }              case 10: {                global::Akka.Cluster.Proto.Msg.Address.Builder subBuilder = global::Akka.Cluster.Proto.Msg.Address.CreateBuilder();                if (result.hasAddress) {                  subBuilder.MergeFrom(Address);                }                input.ReadMessage(subBuilder' extensionRegistry);                Address = subBuilder.BuildPartial();                break;              }              case 16: {                result.hasUid = input.ReadUInt32(ref result.uid_);                break;              }            }
Magic Number,Akka.Cluster.Proto.Msg,Welcome,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(2' field_names[1]' Gossip);
Magic Number,Akka.Cluster.Proto.Msg,GossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(2' field_names[2]' To);
Magic Number,Akka.Cluster.Proto.Msg,GossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(2' field_names[2]' To);
Magic Number,Akka.Cluster.Proto.Msg,GossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteBytes(3' field_names[1]' SerializedGossip);
Magic Number,Akka.Cluster.Proto.Msg,GossipStatus,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteStringArray(2' field_names[0]' allHashes_);
Magic Number,Akka.Cluster.Proto.Msg,GossipStatus,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(3' field_names[2]' Version);
Magic Number,Akka.Cluster.Proto.Msg,GossipStatus,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(3' field_names[2]' Version);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteStringArray(2' field_names[2]' allRoles_);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteStringArray(2' field_names[2]' allRoles_);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteStringArray(3' field_names[1]' allHashes_);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(4' field_names[3]' members_);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(4' field_names[3]' members_);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(5' field_names[4]' Overview);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(5' field_names[4]' Overview);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(6' field_names[5]' Version);
Magic Number,Akka.Cluster.Proto.Msg,Gossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(6' field_names[5]' Version);
Magic Number,Akka.Cluster.Proto.Msg,GossipOverview,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(2' field_names[0]' observerReachability_);
Magic Number,Akka.Cluster.Proto.Msg,ObserverReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(2' field_names[1]' subjectReachability_);
Magic Number,Akka.Cluster.Proto.Msg,ObserverReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(4' field_names[2]' Version);
Magic Number,Akka.Cluster.Proto.Msg,ObserverReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(4' field_names[2]' Version);
Magic Number,Akka.Cluster.Proto.Msg,SubjectReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteEnum(3' field_names[1]' (int) Status' Status);
Magic Number,Akka.Cluster.Proto.Msg,SubjectReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(4' field_names[2]' Version);
Magic Number,Akka.Cluster.Proto.Msg,SubjectReachability,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(4' field_names[2]' Version);
Magic Number,Akka.Cluster.Proto.Msg,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt32(2' field_names[3]' UpNumber);
Magic Number,Akka.Cluster.Proto.Msg,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt32(2' field_names[3]' UpNumber);
Magic Number,Akka.Cluster.Proto.Msg,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteEnum(3' field_names[2]' (int) Status' Status);
Magic Number,Akka.Cluster.Proto.Msg,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteEnum(3' field_names[2]' (int) Status' Status);
Magic Number,Akka.Cluster.Proto.Msg,Member,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WritePackedInt32Array(4' field_names[1]' rolesIndexesMemoizedSerializedSize' rolesIndexes_);
Magic Number,Akka.Cluster.Proto.Msg,VectorClock,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(2' field_names[1]' versions_);
Magic Number,Akka.Cluster.Proto.Msg,Version,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(2' field_names[1]' Timestamp);
Magic Number,Akka.Cluster.Proto.Msg,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(2' field_names[1]' Gossip);
Magic Number,Akka.Cluster.Proto.Msg,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteBool(3' field_names[2]' Reply);
Magic Number,Akka.Cluster.Proto.Msg,MetricsGossipEnvelope,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteBool(3' field_names[2]' Reply);
Magic Number,Akka.Cluster.Proto.Msg,MetricsGossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteStringArray(2' field_names[1]' allMetricNames_);
Magic Number,Akka.Cluster.Proto.Msg,MetricsGossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(3' field_names[2]' nodeMetrics_);
Magic Number,Akka.Cluster.Proto.Msg,MetricsGossip,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(3' field_names[2]' nodeMetrics_);
Magic Number,Akka.Cluster.Proto.Msg,NodeMetrics,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(2' field_names[2]' Timestamp);
Magic Number,Akka.Cluster.Proto.Msg,NodeMetrics,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteInt64(2' field_names[2]' Timestamp);
Magic Number,Akka.Cluster.Proto.Msg,NodeMetrics,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessageArray(3' field_names[1]' metrics_);
Magic Number,Akka.Cluster.Proto.Msg,Number,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteUInt32(2' field_names[2]' Value32);
Magic Number,Akka.Cluster.Proto.Msg,Number,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteUInt32(2' field_names[2]' Value32);
Magic Number,Akka.Cluster.Proto.Msg,Number,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteUInt64(3' field_names[3]' Value64);
Magic Number,Akka.Cluster.Proto.Msg,Number,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteUInt64(3' field_names[3]' Value64);
Magic Number,Akka.Cluster.Proto.Msg,Number,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteBytes(4' field_names[0]' Serialized);
Magic Number,Akka.Cluster.Proto.Msg,EWMA,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteDouble(2' field_names[0]' Alpha);
Magic Number,Akka.Cluster.Proto.Msg,Metric,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(2' field_names[2]' Number);
Magic Number,Akka.Cluster.Proto.Msg,Metric,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(2' field_names[2]' Number);
Magic Number,Akka.Cluster.Proto.Msg,Metric,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteMessage(3' field_names[0]' Ewma);
Magic Number,Akka.Cluster.Proto.Msg,Address,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteString(1' field_names[3]' System);
Magic Number,Akka.Cluster.Proto.Msg,Address,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteString(2' field_names[0]' Hostname);
Magic Number,Akka.Cluster.Proto.Msg,Address,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteUInt32(3' field_names[1]' Port);
Magic Number,Akka.Cluster.Proto.Msg,Address,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteString(4' field_names[2]' Protocol);
Magic Number,Akka.Cluster.Proto.Msg,Address,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteString(4' field_names[2]' Protocol);
Magic Number,Akka.Cluster.Proto.Msg,UniqueAddress,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\Proto\Msg\ClusterMessages.cs,WriteTo,The following statement contains a magic number: output.WriteUInt32(2' field_names[1]' Uid);
Missing Default,Akka.Cluster,ClusterCoreDaemon,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster\ClusterDaemon.cs,ReceiveGossip,The following switch statement is missing a default case: switch (gossipType)                  {                      case ReceiveGossipType.Merge:                          _gossipStats = _gossipStats.IncrementMergeCount();                          break;                      case ReceiveGossipType.Same:                          _gossipStats = _gossipStats.IncrementSameCount();                          break;                      case ReceiveGossipType.Newer:                          _gossipStats = _gossipStats.IncrementNewerCount();                          break;                      case ReceiveGossipType.Older:                          _gossipStats = _gossipStats.IncrementOlderCount();                          break;                  }
