Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Akka.TestKit.Tests.Xunit2,TestKit_Config_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKit_Config_Tests.cs,DefaultValues_should_be_correct,The length of the parameter callingThreadDispatcherTypeName is 31.
Long Statement,Akka.TestKit.Tests.TestActorRefTests,BossActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\BossActor.cs,SupervisorStrategy,The length of the statement  "            return new OneForOneStrategy(maxNrOfRetries: 5' withinTimeRange: TimeSpan.FromSeconds(1)' localOnlyDecider: ex => ex is ActorKilledException ? Directive.Restart : Directive.Escalate); " is 183.
Long Statement,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_must_stop_when_sent_a_PoisonPill,The length of the statement  "            ExpectMsg<WrappedTerminated>(w => w.Terminated.ActorRef == a' TimeSpan.FromSeconds(10)' string.Format("that the terminated actor was the one killed' i.e. {0}"' a.Path)); " is 169.
Long Statement,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_must_support_futures,The length of the statement  "            if(!task.Wait(DefaultTimeout)) XAssert.Fail("Timed out");    //Using a timeout to stop the test if there is something wrong with the code " is 137.
Long Statement,Akka.TestKit.Tests.Xunit2,TestKit_Config_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKit_Config_Tests.cs,DefaultValues_should_be_correct,The length of the statement  "            var callingThreadDispatcherTypeName = typeof(CallingThreadDispatcherConfigurator).FullName + "' " + typeof(CallingThreadDispatcher).Assembly.GetName().Name; " is 156.
Long Statement,Akka.Testkit.Tests.TestKitBaseTests,DilatedTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\DilatedTests.cs,ExpectMsgAllOf_should_dilate_timeout,The length of the statement  "            Assert.True(Math.Abs(diff - ExpectedTimeout) <= DiffDelta' string.Format("Expected the timeout to be {0} but in fact it was {1}."' ExpectedTimeout' diff)); " is 155.
Long Statement,Akka.Testkit.Tests.TestKitBaseTests,DilatedTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\DilatedTests.cs,FishForMessage_should_dilate_timeout,The length of the statement  "            Assert.True(Math.Abs(diff - ExpectedTimeout) <= DiffDelta' string.Format("Expected the timeout to be {0} but in fact it was {1}."' ExpectedTimeout' diff)); " is 155.
Long Statement,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Predicate_should_continue_when_type_is_other_but_we_ignore_other_types_and_return_correct_messages,The length of the statement  "            ReceiveWhile<string>(s => s.Length == 1' shouldIgnoreOtherMessageTypes: true).ShouldOnlyContainInOrder("1"' "2"' "3"'"5"); " is 122.
Virtual Method Call from Constructor,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,EventFilterTestBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\EventFilterTestBase.cs,EventFilterTestBase,The constructor "EventFilterTestBase" calls a virtual method "SendRawLogEventMessage".
Magic Number,Akka.TestKit.Tests.TestActorRefTests,BossActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\BossActor.cs,SupervisorStrategy,The following statement contains a magic number: return new OneForOneStrategy(maxNrOfRetries: 5' withinTimeRange: TimeSpan.FromSeconds(1)' localOnlyDecider: ex => ex is ActorKilledException ? Directive.Restart : Directive.Escalate);
Magic Number,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_name_must_start_with_double_dollar_sign,The following statement contains a magic number: Assert.Equal(testActorRef.Path.Name.Substring(0' 2)' "$$");
Magic Number,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_must_support_reply_via_sender,The following statement contains a magic number: Counter = 4;
Magic Number,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_must_support_reply_via_sender,The following statement contains a magic number: Counter = 4;
Magic Number,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_must_stop_when_sent_a_PoisonPill,The following statement contains a magic number: ExpectMsg<WrappedTerminated>(w => w.Terminated.ActorRef == a' TimeSpan.FromSeconds(10)' string.Format("that the terminated actor was the one killed' i.e. {0}"' a.Path));
Magic Number,Akka.TestKit.Tests.TestActorRefTests,TestActorRefSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\TestActorRefSpec.cs,TestActorRef_must_restart_when_killed,The following statement contains a magic number: Counter = 2;
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Does_not_deliver_message_prematurely,The following statement contains a magic number: Scheduler.Advance(TimeSpan.FromMilliseconds(999));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Does_not_deliver_message_prematurely,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(20));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Delivers_messages_scheduled_for_same_time_in_order_they_were_added,The following statement contains a magic number: _testReceiveActor.Tell(new ScheduleOnceMessage(TimeSpan.FromSeconds(1)' 2));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Delivers_messages_scheduled_for_same_time_in_order_they_were_added,The following statement contains a magic number: Assert.Equal(2' secondId);
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Keeps_delivering_rescheduled_message,The following statement contains a magic number: _testReceiveActor.Tell(new RescheduleMessage(TimeSpan.FromSeconds(5)' TimeSpan.FromSeconds(5)));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Keeps_delivering_rescheduled_message,The following statement contains a magic number: _testReceiveActor.Tell(new RescheduleMessage(TimeSpan.FromSeconds(5)' TimeSpan.FromSeconds(5)));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Keeps_delivering_rescheduled_message,The following statement contains a magic number: Scheduler.Advance(TimeSpan.FromSeconds(5));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Keeps_delivering_rescheduled_message,The following statement contains a magic number: i < 500
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Uses_initial_delay_to_schedule_first_rescheduled_message,The following statement contains a magic number: _testReceiveActor.Tell(new RescheduleMessage(TimeSpan.FromSeconds(1)' TimeSpan.FromSeconds(5)));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Doesnt_reschedule_cancelled,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(20));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: _testReceiveActor.Tell(new ScheduleOnceMessage(TimeSpan.FromSeconds(2)' 2));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: _testReceiveActor.Tell(new ScheduleOnceMessage(TimeSpan.FromSeconds(2)' 2));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: _testReceiveActor.Tell(new ScheduleOnceMessage(TimeSpan.FromSeconds(3)' 3));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: _testReceiveActor.Tell(new ScheduleOnceMessage(TimeSpan.FromSeconds(3)' 3));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: Scheduler.AdvanceTo(Scheduler.Now.AddSeconds(2));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromMilliseconds(20));
Magic Number,Akka.TestKit.Tests,TestSchedulerTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestSchedulerTests.cs,Advance_to_takes_us_to_correct_time,The following statement contains a magic number: Assert.Equal(2' secondId);
Magic Number,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,AllTestForEventFilterBase<TLogEvent>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\AllTestForEventFilterBase.cs,Specified_numbers_of_messagesan_be_intercepted,The following statement contains a magic number: _testingEventFilter.ForLogLevel(LogLevel).Expect(2' () =>              {                  LogMessage("whatever");                  LogMessage("whatever");              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,AllTestForEventFilterBase<TLogEvent>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\AllTestForEventFilterBase.cs,Make_sure_async_works,The following statement contains a magic number: _testingEventFilter.ForLogLevel(LogLevel).Expect(1' TimeSpan.FromMilliseconds(100)' () =>              {                  Task.Delay(TimeSpan.FromMilliseconds(10)).ContinueWith(t => { LogMessage("whatever"); });              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,AllTestForEventFilterBase<TLogEvent>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\AllTestForEventFilterBase.cs,Make_sure_async_works,The following statement contains a magic number: _testingEventFilter.ForLogLevel(LogLevel).Expect(1' TimeSpan.FromMilliseconds(100)' () =>              {                  Task.Delay(TimeSpan.FromMilliseconds(10)).ContinueWith(t => { LogMessage("whatever"); });              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,AllTestForEventFilterBase<TLogEvent>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\AllTestForEventFilterBase.cs,Chain_many_filters,The following statement contains a magic number: _testingEventFilter                  .ForLogLevel(LogLevel'message:"Message 1").And                  .ForLogLevel(LogLevel'message:"Message 3")                  .Expect(2'() =>                  {                      LogMessage("Message 1");                      LogMessage("Message 2");                      LogMessage("Message 3");                    });
Magic Number,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,AllTestForEventFilterBase<TLogEvent>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\AllTestForEventFilterBase.cs,Should_timeout_if_too_few_messages,The following statement contains a magic number: var exception = XAssert.Throws<TrueException>(() =>              {                  _testingEventFilter.ForLogLevel(LogLevel).Expect(2' TimeSpan.FromMilliseconds(50)' () =>                  {                      LogMessage("whatever");                  });              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestEventListenerTests,AllTestForEventFilterBase<TLogEvent>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestEventListenerTests\AllTestForEventFilterBase.cs,Should_timeout_if_too_few_messages,The following statement contains a magic number: var exception = XAssert.Throws<TrueException>(() =>              {                  _testingEventFilter.ForLogLevel(LogLevel).Expect(2' TimeSpan.FromMilliseconds(50)' () =>                  {                      LogMessage("whatever");                  });              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestKitBaseTests,AwaitAssertTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKitBaseTests\AwaitAssertTests.cs,AwaitAssert_must_throw_exception_when_assertion_is_invalid,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(300)' TimeSpan.FromSeconds(1)' () =>              {                  Assert.Throws<EqualException>(() =>                      AwaitAssert(() => Assert.Equal("foo"' "bar")' TimeSpan.FromMilliseconds(500)' TimeSpan.FromMilliseconds(300)));              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestKitBaseTests,AwaitAssertTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKitBaseTests\AwaitAssertTests.cs,AwaitAssert_must_throw_exception_when_assertion_is_invalid,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(300)' TimeSpan.FromSeconds(1)' () =>              {                  Assert.Throws<EqualException>(() =>                      AwaitAssert(() => Assert.Equal("foo"' "bar")' TimeSpan.FromMilliseconds(500)' TimeSpan.FromMilliseconds(300)));              });
Magic Number,Akka.TestKit.Tests.Xunit2.TestKitBaseTests,AwaitAssertTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKitBaseTests\AwaitAssertTests.cs,AwaitAssert_must_throw_exception_when_assertion_is_invalid,The following statement contains a magic number: Within(TimeSpan.FromMilliseconds(300)' TimeSpan.FromSeconds(1)' () =>              {                  Assert.Throws<EqualException>(() =>                      AwaitAssert(() => Assert.Equal("foo"' "bar")' TimeSpan.FromMilliseconds(500)' TimeSpan.FromMilliseconds(300)));              });
Magic Number,Akka.TestKit.Tests.Xunit2,TestKit_Config_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKit_Config_Tests.cs,DefaultValues_should_be_correct,The following statement contains a magic number: TestKitSettings.DefaultTimeout.ShouldBe(TimeSpan.FromSeconds(5));
Magic Number,Akka.TestKit.Tests.Xunit2,TestKit_Config_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKit_Config_Tests.cs,DefaultValues_should_be_correct,The following statement contains a magic number: TestKitSettings.SingleExpectDefault.ShouldBe(TimeSpan.FromSeconds(3));
Magic Number,Akka.TestKit.Tests.Xunit2,TestKit_Config_Tests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\Xunit2\TestKit_Config_Tests.cs,DefaultValues_should_be_correct,The following statement contains a magic number: TestKitSettings.TestEventFilterLeeway.ShouldBe(TimeSpan.FromSeconds(3));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,DilatedTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\DilatedTests.cs,Dilates_correctly_using_timeFactor,The following statement contains a magic number: Assert.Equal(Dilated(TimeSpan.FromSeconds(1))' TimeSpan.FromSeconds(4));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,DilatedTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\DilatedTests.cs,ReceiveN_should_dilate_timeout,The following statement contains a magic number: Intercept(() => ReceiveN(42' TimeSpan.FromMilliseconds(Timeout)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ExpectTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ExpectTests.cs,ExpectMsgAllOf_should_timeout_when_not_receiving_any_messages,The following statement contains a magic number: Intercept(() => ExpectMsgAllOf(TimeSpan.FromMilliseconds(100)' "3"' "1"' "2"));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ExpectTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ExpectTests.cs,ExpectMsgAllOf_should_timeout_if_to_few_messages,The following statement contains a magic number: Intercept(() => ExpectMsgAllOf(TimeSpan.FromMilliseconds(100)' "3"' "1"' "2"));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveN_should_receive_correct_number_of_messages,The following statement contains a magic number: ReceiveN(3).ShouldOnlyContainInOrder("1"' "2"' "3");
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveN_should_timeout_if_no_messages,The following statement contains a magic number: Intercept(() => ReceiveN(3' TimeSpan.FromMilliseconds(10)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveN_should_timeout_if_no_messages,The following statement contains a magic number: Intercept(() => ReceiveN(3' TimeSpan.FromMilliseconds(10)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveN_should_timeout_if_to_few_messages,The following statement contains a magic number: Intercept(() => ReceiveN(3' TimeSpan.FromMilliseconds(100)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveN_should_timeout_if_to_few_messages,The following statement contains a magic number: Intercept(() => ReceiveN(3' TimeSpan.FromMilliseconds(100)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_return_matched_message,The following statement contains a magic number: TestActor.Tell(2);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_return_matched_message,The following statement contains a magic number: TestActor.Tell(10);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_return_matched_message,The following statement contains a magic number: TestActor.Tell(20);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_return_matched_message,The following statement contains a magic number: FishForMessage<int>(i => i>=10).ShouldBe(10);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_return_matched_message,The following statement contains a magic number: FishForMessage<int>(i => i>=10).ShouldBe(10);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_timeout_if_no_messages,The following statement contains a magic number: Intercept(() => FishForMessage(_=>false' TimeSpan.FromMilliseconds(10)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,FishForMessage_should_timeout_if_to_few_messages,The following statement contains a magic number: Intercept(() => FishForMessage(_ => false' TimeSpan.FromMilliseconds(100)));
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Filter_should_on_a_timeout_return_no_messages,The following statement contains a magic number: ReceiveWhile<object>(_ => _' TimeSpan.FromMilliseconds(10)).Count.ShouldBe(0);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Filter_should_break_on_function_returning_null_and_return_correct_messages,The following statement contains a magic number: TestActor.Tell(2);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Filter_should_break_on_function_returning_null_and_return_correct_messages,The following statement contains a magic number: TestActor.Tell(99999.0);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Filter_should_break_on_function_returning_null_and_return_correct_messages,The following statement contains a magic number: TestActor.Tell(4);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Filter_should_not_consume_last_message_that_didnt_match,The following statement contains a magic number: TestActor.Tell(4711);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Filter_should_not_consume_last_message_that_didnt_match,The following statement contains a magic number: ExpectMsg(4711);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Predicate_should_on_a_timeout_return_no_messages,The following statement contains a magic number: ReceiveWhile<object>(_ => false' TimeSpan.FromMilliseconds(10)).Count.ShouldBe(0);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Predicate_should_break_when_type_is_wrong_and_we_dont_ignore_those_and_return_correct_messages,The following statement contains a magic number: TestActor.Tell(4);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Predicate_should_continue_when_type_is_other_but_we_ignore_other_types_and_return_correct_messages,The following statement contains a magic number: TestActor.Tell(4);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Predicate_should_not_consume_last_message_that_didnt_match,The following statement contains a magic number: TestActor.Tell(4711);
Magic Number,Akka.Testkit.Tests.TestKitBaseTests,ReceiveTests,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestKitBaseTests\ReceiveTests.cs,ReceiveWhile_Predicate_should_not_consume_last_message_that_didnt_match,The following statement contains a magic number: ExpectMsg(4711);
Missing Default,Akka.TestKit.Tests.TestActorRefTests,ReplyActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\ReplyActor.cs,ReceiveMessage,The following switch statement is missing a default case: switch(strMessage)              {                  case "complexRequest":                      _replyTo = Sender;                      var worker = new TestActorRef<WorkerActor>(System' Props.Create<WorkerActor>());                      worker.Tell("work");                      return true;                  case "complexRequest2":                      var worker2 = new TestActorRef<WorkerActor>(System' Props.Create<WorkerActor>());                      worker2.Tell(Sender' Self);                      return true;                  case "workDone":                      _replyTo.Tell("complexReply"' Self);                      return true;                  case "simpleRequest":                      Sender.Tell("simpleReply"' Self);                      return true;              }
Missing Default,Akka.TestKit.Tests.TestActorRefTests,SenderActor,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.TestKit.Tests\TestActorRefTests\SenderActor.cs,ReceiveMessage,The following switch statement is missing a default case: switch(strMessage)              {                  case "complex":                      _replyActor.Tell("complexRequest"' Self);                      return true;                  case "complex2":                      _replyActor.Tell("complexRequest2"' Self);                      return true;                  case "simple":                      _replyActor.Tell("simpleRequest"' Self);                      return true;                  case "complexReply":                      TestActorRefSpec.Counter--;                      return true;                  case "simpleReply":                      TestActorRefSpec.Counter--;                      return true;              }
