Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,Cyclomatic complexity of the method is 13
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Local.AsInstanceOf<RoundRobinPool>().NrOfInstances.ShouldBe(20); " is 122.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Settings.AsInstanceOf<ClusterRouterPoolSettings>().MaxInstancesPerNode.ShouldBe(3); " is 141.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_group,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Local.AsInstanceOf<RoundRobinGroup>().Paths.ShouldBe(new[]{ "/user/myservice" }); " is 140.
Long Statement,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_group,The length of the statement  "            deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Settings.AsInstanceOf<ClusterRouterGroupSettings>().RouteesPaths.ShouldBe(new[] { "/user/myservice" }); " is 162.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_role_leader_changed,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.RoleLeaderChanged)))); " is 200.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_current_cluster_state_when_subscribe,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.IClusterDomainEvent)))); " is 202.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_events_corresponding_to_current_state_when_subscribe,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsEvents' ImmutableHashSet.Create(typeof(ClusterEvent.IMemberEvent)' typeof(ClusterEvent.ReachabilityEvent)))); " is 233.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_should_support_unsubscribe,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.IMemberEvent)))); " is 195.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_seen_changed,The length of the statement  "            _publisher.Tell(new InternalClusterAction.Subscribe(subscriber.Ref' ClusterEvent.SubscriptionInitialStateMode.InitialStateAsSnapshot' ImmutableHashSet.Create(typeof(ClusterEvent.SeenChanged)))); " is 194.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_new_members,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(s => s.Address).ToImmutableHashSet()))' ClusterEvent.DiffSeen(g1' g2' selfDummyAddress)); " is 168.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_changed_status_of_members,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(s => s.Address).ToImmutableHashSet()))' ClusterEvent.DiffSeen(g1' g2' selfDummyAddress)); " is 168.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_convergence_changes,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.SeenChanged(true' ImmutableHashSet.Create(aUp.Address' bUp.Address)))' ClusterEvent.DiffSeen(g1' g2' selfDummyAddress)); " is 171.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_convergence_changes,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.SeenChanged(true' ImmutableHashSet.Create(aUp.Address' bUp.Address' eJoining.Address)))' ClusterEvent.DiffSeen(g2' g1' selfDummyAddress)); " is 189.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_leader_changes,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.MemberRemoved(aRemoved' MemberStatus.Up))' ClusterEvent.DiffMemberEvents(g1' g2)); " is 133.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_leader_changes,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.SeenChanged(true' s2.Select(a => a.Address).ToImmutableHashSet()))' ClusterEvent.DiffSeen(g1' g2' selfDummyAddress)); " is 168.
Long Statement,Akka.Cluster.Tests,ClusterDomainEventSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventSpec.cs,DomainEvents_must_be_produced_for_leader_changes,The length of the statement  "            Assert.Equal(ImmutableList.Create(new ClusterEvent.LeaderChanged(bUp.Address))' ClusterEvent.DiffLeader(g1' g2' selfDummyAddress)); " is 131.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,EmptyState,The length of the statement  "                ImmutableHashSet.Create<UniqueAddress>()' new DefaultFailureDetectorRegistry<Address>(() => new FailureDetectorStub())); " is 120.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_init_with_self,The length of the statement  "            _emptyState.Init(ImmutableHashSet.Create<UniqueAddress>(aa' bb' cc)).ActiveReceivers.ShouldBe(ImmutableHashSet.Create<UniqueAddress>(bb' cc)); " is 142.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_init_without_self,The length of the statement  "            _emptyState.Init(ImmutableHashSet.Create<UniqueAddress>(bb' cc)).ActiveReceivers.ShouldBe(ImmutableHashSet.Create<UniqueAddress>(bb' cc)); " is 138.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_not_use_removed_members,The length of the statement  "            _emptyState.AddMember(bb).AddMember(cc).RemoveMember(bb).ActiveReceivers.ShouldBe(ImmutableHashSet.Create<UniqueAddress>(cc)); " is 126.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_use_specified_number_of_members,The length of the statement  "            _emptyState.AddMember(cc).AddMember(dd).AddMember(bb).AddMember(ee).ActiveReceivers.ShouldBe(ImmutableHashSet.Create<UniqueAddress>(bb'cc'dd)); " is 143.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_update_FailureDetector_in_active_set,The length of the statement  "            s2.FailureDetector.IsMonitoring(ee.Address).ShouldBeFalse("Never added (ee) to active set' so we should not be monitoring it even if we did receive HeartbeatRsp from it"); " is 171.
Long Statement,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The length of the statement  "                    Debug.WriteLine("Failure context: i = {0}' node = {1}' op={2}' unreachable={3}' ringReceivers={4}' ringNodes={5}"' i' node' operation'  " is 134.
Long Statement,Akka.Cluster.Tests,ClusterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_allowed_to_join_and_leave_with_local_address,The length of the statement  "            var sys2 = ActorSystem.Create("ClusterSpec2"' ConfigurationFactory.ParseString(@"akka.actor.provider = ""Akka.Cluster.ClusterActorRefProvider' Akka.Cluster"" " is 157.
Long Statement,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,Calculate_the_EWMA_for_multiple_variable_datastreams,The length of the statement  "                streamingDataSet = streamingDataSet.Union(changes.ToDictionary(metric => metric.Name' metric => metric)).ToImmutableDictionary(pair => pair.Key' pair => pair.Value); " is 165.
Long Statement,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_merge_members_by_status_priority,The length of the statement  "            Assert.Equal(new []{MemberStatus.Up' MemberStatus.Leaving' MemberStatus.Up}' merged1.Members.Select(m => m.Status).ToArray()); " is 126.
Long Statement,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_merge_members_by_status_priority,The length of the statement  "            Assert.Equal(new []{MemberStatus.Up' MemberStatus.Leaving' MemberStatus.Up}' merged2.Members.Select(m => m.Status).ToArray()); " is 126.
Long Statement,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The length of the statement  "                new GossipOverview(Reachability.Empty.Unreachable(a2.UniqueAddress' b1.UniqueAddress).Unreachable(a2.UniqueAddress' e1.UniqueAddress))); " is 136.
Long Statement,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The length of the statement  "            var sample2 = new NodeMetrics(_node1' 2' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30))); " is 122.
Long Statement,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_not_merge_2_NodeMetrics_if_master_is_more_recent,The length of the statement  "            var sample2 = new NodeMetrics(_node1' 0' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30))); " is 122.
Long Statement,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The length of the statement  "            var expected = new Dictionary<UniqueAddress' long> { { nodeA' 6 }' { nodeB' 5 }' { nodeC' 7 }' { nodeD' 1} }.ToImmutableDictionary(); " is 133.
Long Statement,Akka.Cluster.Tests.Routing,ClusterRouterSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Routing\ClusterRouterSupervisorSpec.cs,Cluster_aware_routers_must_use_provided_supervisor_strategy,The length of the statement  "                })' null)' new ClusterRouterPoolSettings(1' true' null' 1)).Props(Props.Create(() => new KillableActor(TestActor)))' "therouter"); " is 130.
Long Statement,Akka.Cluster.Tests.Routing,ClusterRouterSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Routing\ClusterRouterSupervisorSpec.cs,Cluster_aware_routers_must_use_default_supervisor_strategy_when_none_specified,The length of the statement  "            var router = Sys.ActorOf(Props.Create(() => new RestartableActor(TestActor)).WithRouter(FromConfig.Instance)' "router1"); " is 121.
Virtual Method Call from Constructor,Akka.Cluster.Tests,ClusterSpecBase,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterSpecBase.cs,ClusterSpecBase,The constructor "ClusterSpecBase" calls a virtual method "WithFallback".
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_down_unreachable_after_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_down_unreachable_when_becoming_leader_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_when_loosing_leadership_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_when_loosing_leadership_inbetween_detection_and_specified_duration,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_when_unreachable_become_reachable_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_when_unreachable_become_reachable_inbetween_detection_and_specified_duration,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_is_removed_inbetween_detection_and_specified_duration,The following statement contains a magic number: var a = AutoDownActor(TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests,AutoDownSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\AutoDownSpec.cs,AutoDown_must_not_down_unreachable_is_removed_inbetween_detection_and_specified_duration,The following statement contains a magic number: ExpectNoMsg(TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(8' settings.FailureDetectorConfig.GetDouble("threshold"));
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(1000' settings.FailureDetectorConfig.GetInt("max-sample-size"));
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMilliseconds(100)' settings.FailureDetectorConfig.GetTimeSpan("min-std-deviation"));
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(3)' settings.FailureDetectorConfig.GetTimeSpan("acceptable-heartbeat-pause"));
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(5)' settings.SeedNodeTimeout);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(10)' settings.RetryUnsuccessfulJoinAfter);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(2)' settings.GossipTimeToLive);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(5' settings.MonitoredByNrOfMembers);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(5)' settings.HeartbeatExpectedResponseAfter);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(.8' settings.GossipDifferentViewProbability);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(400' settings.ReduceGossipDifferentViewProbability);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromMilliseconds(33)' settings.SchedulerTickDuration);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(512' settings.SchedulerTicksPerWheel);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(3)' settings.MetricsGossipInterval);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_must_be_able_to_parse_generic_cluster_config_elements,The following statement contains a magic number: Assert.Equal(TimeSpan.FromSeconds(12)' settings.MetricsMovingAverageHalfLife);
Magic Number,Akka.Cluster.Tests,ClusterConfigSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterConfigSpec.cs,Clustering_should_have_correct_default_fork_join_dispatcher,The following statement contains a magic number: Assert.Equal(4' threadCount);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Local.AsInstanceOf<RoundRobinPool>().NrOfInstances.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Settings.TotalInstances.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_pool,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterPool>().Settings.AsInstanceOf<ClusterRouterPoolSettings>().MaxInstancesPerNode.ShouldBe(3);
Magic Number,Akka.Cluster.Tests,ClusterDeployerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDeployerSpec.cs,RemoteDeployer_must_be_able_to_parse_akka_actor_deployment_with_specified_cluster_group,The following statement contains a magic number: deployment.RouterConfig.AsInstanceOf<ClusterRouterGroup>().Settings.TotalInstances.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_leader_changed,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_leader_changed_when_old_leader_leaves_and_is_removed,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_leader_changed_when_old_leader_leaves_and_is_removed,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_not_publish_leader_changed_when_same_leader,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_role_leader_changed,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_current_cluster_state_when_subscribe,The following statement contains a magic number: _memberSubscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_events_corresponding_to_current_state_when_subscribe,The following statement contains a magic number: var received = subscriber.ReceiveN(4);
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_send_events_corresponding_to_current_state_when_subscribe,The following statement contains a magic number: subscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_should_support_unsubscribe,The following statement contains a magic number: subscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_seen_changed,The following statement contains a magic number: subscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterDomainEventPublisherSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterDomainEventPublisherSpec.cs,ClusterDomainEventPublisher_must_publish_seen_changed,The following statement contains a magic number: subscriber.ExpectNoMsg(TimeSpan.FromMilliseconds(500));
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,EmptyState,The following statement contains a magic number: return new ClusterHeartbeatSenderState(new HeartbeatNodeRing(selfUniqueAddress' new[] { selfUniqueAddress }' 3)'                  ImmutableHashSet.Create<UniqueAddress>()' new DefaultFailureDetectorRegistry<Address>(() => new FailureDetectorStub()));
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: var nodes =                  Enumerable.Range(1' rnd.Next(10' 200))                      .Select(n => new UniqueAddress(new Address("akka.tcp"' "sys"' "n" + n' 2552)' n))                      .ToList();
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: var nodes =                  Enumerable.Range(1' rnd.Next(10' 200))                      .Select(n => new UniqueAddress(new Address("akka.tcp"' "sys"' "n" + n' 2552)' n))                      .ToList();
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: var nodes =                  Enumerable.Range(1' rnd.Next(10' 200))                      .Select(n => new UniqueAddress(new Address("akka.tcp"' "sys"' "n" + n' 2552)' n))                      .ToList();
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: const int Unreachable = 2;
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: const int HeartbeatRsp = 3;
Magic Number,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following statement contains a magic number: i <= 100000
Magic Number,Akka.Cluster.Tests,ClusterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_allowed_to_join_and_leave_with_local_address,The following statement contains a magic number: Within(TimeSpan.FromSeconds(5)' () =>                  {                      AwaitAssert(() =>                      {                          Cluster.Get(sys2).State.Members.Count.ShouldBe(1);                          Cluster.Get(sys2).State.Members.First().Status.ShouldBe(MemberStatus.Up);                      });                  });
Magic Number,Akka.Cluster.Tests,ClusterSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterSpec.cs,A_cluster_must_be_allowed_to_join_and_leave_with_local_address,The following statement contains a magic number: Within(TimeSpan.FromSeconds(5)' () =>                  {                      AwaitAssert(() =>                      {                          Cluster.Get(sys2).IsTerminated.ShouldBe(true);                      });                  });
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: var ds = new EWMA(100.0d' 0.18) + 100.0D + 100.0D + 100.0D;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: var ds = new EWMA(100.0d' 0.18) + 100.0D + 100.0D + 100.0D;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: var ds = new EWMA(100.0d' 0.18) + 100.0D + 100.0D + 100.0D;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: var ds = new EWMA(100.0d' 0.18) + 100.0D + 100.0D + 100.0D;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: var ds = new EWMA(100.0d' 0.18) + 100.0D + 100.0D + 100.0D;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: Assert.True(ds.Value >= 100.0D - 0.001 && ds.Value <= 100.0D + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: Assert.True(ds.Value >= 100.0D - 0.001 && ds.Value <= 100.0D + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: Assert.True(ds.Value >= 100.0D - 0.001 && ds.Value <= 100.0D + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_same_emwa_for_constant_values,The following statement contains a magic number: Assert.True(ds.Value >= 100.0D - 0.001 && ds.Value <= 100.0D + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d0 = new EWMA(1000.0D' 2.0 / (1 + 10));
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d0 = new EWMA(1000.0D' 2.0 / (1 + 10));
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d0 = new EWMA(1000.0D' 2.0 / (1 + 10));
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d0.Value >= 1000.0D - 0.01 && d0.Value <= 1000.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d0.Value >= 1000.0D - 0.01 && d0.Value <= 1000.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d0.Value >= 1000.0D - 0.01 && d0.Value <= 1000.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d0.Value >= 1000.0D - 0.01 && d0.Value <= 1000.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d1 = d0 + 10.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d1.Value >= 820.0D - 0.01 && d1.Value <= 820.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d1.Value >= 820.0D - 0.01 && d1.Value <= 820.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d1.Value >= 820.0D - 0.01 && d1.Value <= 820.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d1.Value >= 820.0D - 0.01 && d1.Value <= 820.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d2 = d1 + 10.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d2.Value >= 672.73D - 0.01 && d2.Value <= 672.73D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d2.Value >= 672.73D - 0.01 && d2.Value <= 672.73D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d2.Value >= 672.73D - 0.01 && d2.Value <= 672.73D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d2.Value >= 672.73D - 0.01 && d2.Value <= 672.73D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d3 = d2 + 10.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d3.Value >= 552.23D - 0.01 && d3.Value <= 552.23D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d3.Value >= 552.23D - 0.01 && d3.Value <= 552.23D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d3.Value >= 552.23D - 0.01 && d3.Value <= 552.23D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d3.Value >= 552.23D - 0.01 && d3.Value <= 552.23D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: var d4 = d3 + 10.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d4.Value >= 453.64D - 0.01 && d4.Value <= 453.64D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d4.Value >= 453.64D - 0.01 && d4.Value <= 453.64D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d4.Value >= 453.64D - 0.01 && d4.Value <= 453.64D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(d4.Value >= 453.64D - 0.01 && d4.Value <= 453.64D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: dn = dn + 10.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: i < 100
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(dn.Value >= 10.0D - 0.1 && dn.Value <= 10.0D + 0.1);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(dn.Value >= 10.0D - 0.1 && dn.Value <= 10.0D + 0.1);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(dn.Value >= 10.0D - 0.1 && dn.Value <= 10.0D + 0.1);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_ewma_for_normal_decay,The following statement contains a magic number: Assert.True(dn.Value >= 10.0D - 0.1 && dn.Value <= 10.0D + 0.1);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: var d0 = new EWMA(100.0D' 1.0);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d0.Value >= 100.0D - 0.01 && d0.Value <= 100.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d0.Value >= 100.0D - 0.01 && d0.Value <= 100.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d0.Value >= 100.0D - 0.01 && d0.Value <= 100.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d0.Value >= 100.0D - 0.01 && d0.Value <= 100.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d1.Value >= 1.0D - 0.01 && d1.Value <= 1.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d1.Value >= 1.0D - 0.01 && d1.Value <= 1.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: var d2 = d1 + 57.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d2.Value >= 57.0D - 0.01 && d2.Value <= 57.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d2.Value >= 57.0D - 0.01 && d2.Value <= 57.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d2.Value >= 57.0D - 0.01 && d2.Value <= 57.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d2.Value >= 57.0D - 0.01 && d2.Value <= 57.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: var d3 = d2 + 10.0d;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d3.Value >= 10.0D - 0.01 && d3.Value <= 10.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d3.Value >= 10.0D - 0.01 && d3.Value <= 10.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d3.Value >= 10.0D - 0.01 && d3.Value <= 10.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_correct_emwa_value_for_alpha_10_max_bias_towards_latest_value,The following statement contains a magic number: Assert.True(d3.Value >= 10.0D - 0.01 && d3.Value <= 10.0D + 0.01);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_alpha_from_halflife_and_collect_interval,The following statement contains a magic number: var expectedAlpha = 0.1;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_alpha_from_halflife_and_collect_interval,The following statement contains a magic number: var n = 19;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_alpha_from_halflife_and_collect_interval,The following statement contains a magic number: var halfLife = n / 2.8854;
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_alpha_from_halflife_and_collect_interval,The following statement contains a magic number: var halfLifeDuration = TimeSpan.FromMilliseconds(halfLife * 1000);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_alpha_from_halflife_and_collect_interval,The following statement contains a magic number: Assert.True(alpha >= expectedAlpha - 0.001 && alpha <= expectedAlpha + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_alpha_from_halflife_and_collect_interval,The following statement contains a magic number: Assert.True(alpha >= expectedAlpha - 0.001 && alpha <= expectedAlpha + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_sane_alpha_from_short_halflife,The following statement contains a magic number: var alpha = EWMA.CalculateAlpha(TimeSpan.FromMilliseconds(1)' TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_sane_alpha_from_short_halflife,The following statement contains a magic number: Assert.True(alpha >= 1.0d - 0.001 && alpha <= 1.0d + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_sane_alpha_from_short_halflife,The following statement contains a magic number: Assert.True(alpha >= 1.0d - 0.001 && alpha <= 1.0d + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_sane_alpha_from_long_halflife,The following statement contains a magic number: var alpha = EWMA.CalculateAlpha(TimeSpan.FromDays(1)' TimeSpan.FromSeconds(3));
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_sane_alpha_from_long_halflife,The following statement contains a magic number: Assert.True(alpha >= 0.0d - 0.001 && alpha <= 0.0d + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,DataStream_must_calculate_sane_alpha_from_long_halflife,The following statement contains a magic number: Assert.True(alpha >= 0.0d - 0.001 && alpha <= 0.0d + 0.001);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,Calculate_the_EWMA_for_multiple_variable_datastreams,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,Calculate_the_EWMA_for_multiple_variable_datastreams,The following statement contains a magic number: usedMemory =                      usedMemory.Concat(Enumerable.Repeat(Convert.ToByte(ThreadLocalRandom.Current.Next(127))' 1024))                          .ToArray();
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,Calculate_the_EWMA_for_multiple_variable_datastreams,The following statement contains a magic number: usedMemory =                      usedMemory.Concat(Enumerable.Repeat(Convert.ToByte(ThreadLocalRandom.Current.Next(127))' 1024))                          .ToArray();
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,Calculate_the_EWMA_for_multiple_variable_datastreams,The following statement contains a magic number: var changes = _collector.Sample().Metrics.Select(latest =>                  {                      Metric previous;                      if (!streamingDataSet.TryGetValue(latest.Name' out previous)) return latest;                      if (latest.IsSmooth && latest.Value != previous.Value)                      {                          var updated = previous + latest;                          updated.IsSmooth.ShouldBeTrue();                          Assert.False(Math.Abs(updated.SmoothValue - previous.SmoothValue) < 0.01);                          return updated;                      }                      else return latest;                  });
Magic Number,Akka.Cluster.Tests,EWMASpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\EWMASpec.cs,Calculate_the_EWMA_for_multiple_variable_datastreams,The following statement contains a magic number: Enumerable.Range(1' 50)
Magic Number,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g1 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e1)'                  new GossipOverview(Reachability.Empty.Unreachable(a2.UniqueAddress' e1.UniqueAddress)));
Magic Number,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g2 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e1)'                  new GossipOverview(Reachability.Empty.Unreachable(a2.UniqueAddress' b1.UniqueAddress).Unreachable(a2.UniqueAddress' e1.UniqueAddress)));
Magic Number,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g3 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e2.CopyUp(4)));
Magic Number,Akka.Cluster.Tests,GossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\GossipSpec.cs,A_gossip_must_know_who_is_youngest,The following statement contains a magic number: var g3 = new Gossip(ImmutableSortedSet.Create(a2' b1.CopyUp(3)' e2.CopyUp(4)));
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_specified_number_of_nodes_as_receivers,The following statement contains a magic number: var ring = new HeartbeatNodeRing(cc' _nodes' 3);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_specified_number_of_nodes_as_receivers,The following statement contains a magic number: receivers.Count.ShouldBe(3);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The following statement contains a magic number: new HeartbeatNodeRing(cc' _nodes' 4).MyReceivers.Value.ShouldBe(expected);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The following statement contains a magic number: new HeartbeatNodeRing(cc' _nodes' 5).MyReceivers.Value.ShouldBe(expected);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_all_except_own_as_receivers_when_less_than_total_number_of_nodes,The following statement contains a magic number: new HeartbeatNodeRing(cc' _nodes' 6).MyReceivers.Value.ShouldBe(expected);
Magic Number,Akka.Cluster.Tests,HeartbeatNodeRingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\HeartbeatNodeRingSpec.cs,HeartbeatNodeRing_must_pick_none_when_alone,The following statement contains a magic number: var ring = new HeartbeatNodeRing(cc' new[] {cc}' 3);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m1 = TestMember.Create(new Address("akka.tcp"' "sys1"' "host1"' 9000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m2 = TestMember.Create(new Address("akka.tcp"' "sys1"' "host1"' 10000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m3 = TestMember.Create(new Address("cluster"' "sys2"' "host2"' 8000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m4 = TestMember.Create(new Address("cluster"' "sys2"' "host2"' 9000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_be_sorted_by_address_correctly,The following statement contains a magic number: var m5 = TestMember.Create(new Address("cluster"' "sys1"' "host2"' 10000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_have_stable_equals_and_hash_code,The following statement contains a magic number: var address = new Address("akka.tcp"' "sys1"' "host1"' 9000);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_have_stable_equals_and_hash_code,The following statement contains a magic number: var m11 = Member.Create(new UniqueAddress(address' -3)' ImmutableHashSet.Create<string>());
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_have_stable_equals_and_hash_code,The following statement contains a magic number: var m3 = TestMember.Create(address.WithPort(10000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_consistent_ordering_and_equals,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "sys1"' "host1"' 9001);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_consistent_ordering_and_equals,The following statement contains a magic number: var address2 = address1.WithPort(9002);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_consistent_ordering_and_equals,The following statement contains a magic number: var b = Member.Create(new UniqueAddress(address1' -3)' ImmutableHashSet.Create<string>());
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_with_sorted_set,The following statement contains a magic number: var address1 = new Address("akka.tcp"' "sys1"' "host1"' 9001);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_with_sorted_set,The following statement contains a magic number: var address2 = address1.WithPort(9002);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,MemberOrdering_must_work_with_sorted_set,The following statement contains a magic number: var address3 = address1.WithPort(9003);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_port,The following statement contains a magic number: Assert.Equal(4' seq.Count);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_port,The following statement contains a magic number: Assert.Equal(Address.Parse("akka://sys@darkstar:1112")' seq[2]);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_port,The following statement contains a magic number: Assert.Equal(Address.Parse("akka://sys@darkstar:1113")' seq[3]);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name,The following statement contains a magic number: Assert.Equal(4' seq.Count);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name,The following statement contains a magic number: Assert.Equal(Address.Parse("akka://sys@darkstar2:1110")' seq[2]);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name,The following statement contains a magic number: Assert.Equal(Address.Parse("akka://sys@darkstar3:1110")' seq[3]);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name_and_port,The following statement contains a magic number: Assert.Equal(4' seq.Count);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name_and_port,The following statement contains a magic number: Assert.Equal(Address.Parse("akka://sys@darkstar2:1110")' seq[2]);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,AddressOrdering_must_order_addresses_by_host_name_and_port,The following statement contains a magic number: Assert.Equal(Address.Parse("akka://sys@darkstar2:1111")' seq[3]);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var address = new Address("akka.tcp"' "sys1"' "host1"' 5000);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m2 = TestMember.Create(address.WithPort(7000)' MemberStatus.Joining);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m3 = TestMember.Create(address.WithPort(3000)' MemberStatus.Exiting);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m4 = TestMember.Create(address.WithPort(6000)' MemberStatus.Exiting);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m5 = TestMember.Create(address.WithPort(2000)' MemberStatus.Down);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m6 = TestMember.Create(address.WithPort(4000)' MemberStatus.Down);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m7 = TestMember.Create(address.WithPort(8000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MemberOrderingSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MemberOrderingSpec.cs,LeaderOrdering_must_order_members_with_status_joining_exiting_down_last,The following statement contains a magic number: var m8 = TestMember.Create(address.WithPort(9000)' MemberStatus.Up);
Magic Number,Akka.Cluster.Tests,MetricsCollectorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsCollectorSpec.cs,Metric_must_merge_2_metrics_that_are_tracking_the_same_metric,The following statement contains a magic number: i <= 20
Magic Number,Akka.Cluster.Tests,MetricsCollectorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsCollectorSpec.cs,MetricsCollector_collect_50_node_metrics_samples_in_an_acceptable_duration,The following statement contains a magic number: Assert.True(sample.Metrics.Count >= 3);
Magic Number,Akka.Cluster.Tests,MetricsCollectorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsCollectorSpec.cs,MetricsCollector_collect_50_node_metrics_samples_in_an_acceptable_duration,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Akka.Cluster.Tests,MetricsCollectorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsCollectorSpec.cs,MetricsCollector_collect_50_node_metrics_samples_in_an_acceptable_duration,The following statement contains a magic number: Enumerable.Range(1' 50)
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_add_new_NodeMetrics,The following statement contains a magic number: var m1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_add_new_NodeMetrics,The following statement contains a magic number: var m2 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2555)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_add_new_NodeMetrics,The following statement contains a magic number: Assert.True(m1.Metrics.Count > 3);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_add_new_NodeMetrics,The following statement contains a magic number: Assert.True(m2.Metrics.Count > 3);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_add_new_NodeMetrics,The following statement contains a magic number: g2.Nodes.Count.ShouldBe(2);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_peer_metrics,The following statement contains a magic number: var m1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_peer_metrics,The following statement contains a magic number: var m2 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2555)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_peer_metrics,The following statement contains a magic number: g1.Nodes.Count.ShouldBe(2);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_peer_metrics,The following statement contains a magic number: var m2Updated = m2.Copy(metrics: _collector.Sample().Metrics' timestamp: m2.Timestamp + 1000);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_peer_metrics,The following statement contains a magic number: g2.Nodes.Count.ShouldBe(2);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_an_existing_metric_set_for_a_node_and_update_node_ring,The following statement contains a magic number: var m1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_an_existing_metric_set_for_a_node_and_update_node_ring,The following statement contains a magic number: var m2 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2555)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_an_existing_metric_set_for_a_node_and_update_node_ring,The following statement contains a magic number: var m3 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2556)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_an_existing_metric_set_for_a_node_and_update_node_ring,The following statement contains a magic number: var m2Updated = m2.Copy(metrics: _collector.Sample().Metrics' timestamp: m2.Timestamp + 1000);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_merge_an_existing_metric_set_for_a_node_and_update_node_ring,The following statement contains a magic number: Assert.True(mergedGossip.Nodes.All(x => x.Metrics.Count > 3));
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_get_the_current_NodeMetrics_if_it_exists_in_local_nodes,The following statement contains a magic number: var m1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' StandardMetrics.NewTimestamp()'                 _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_remove_a_node_if_it_is_no_longer_up,The following statement contains a magic number: var m1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_remove_a_node_if_it_is_no_longer_up,The following statement contains a magic number: var m2 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2555)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_remove_a_node_if_it_is_no_longer_up,The following statement contains a magic number: g1.Nodes.Count.ShouldBe(2);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_filter_nodes,The following statement contains a magic number: var m1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_filter_nodes,The following statement contains a magic number: var m2 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2555)' StandardMetrics.NewTimestamp()'                  _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricsGossipSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricsGossipSpec.cs,MetricsGossip_must_filter_nodes,The following statement contains a magic number: g1.Nodes.Count.ShouldBe(2);
Magic Number,Akka.Cluster.Tests,MetricValuesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricValuesSpec.cs,MetricValuesSpec,The following statement contains a magic number: _node1 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2554)' 1' _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,MetricValuesSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\MetricValuesSpec.cs,MetricValuesSpec,The following statement contains a magic number: _node2 = new NodeMetrics(new Address("akka.tcp"' "sys"' "a"' 2555)' 1' _collector.Sample().Metrics);
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_return_correct_result_for_2_same_nodes,The following statement contains a magic number: new NodeMetrics(_node1' 1).Equals(new NodeMetrics(_node1' 2)).ShouldBeTrue();
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_return_correct_result_for_2_NOT_same_nodes,The following statement contains a magic number: new NodeMetrics(_node1' 1).Equals(new NodeMetrics(_node2' 2)).ShouldBeFalse();
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: var sample1 = new NodeMetrics(_node1' 1'                  ImmutableHashSet.Create<Metric>(Metric.Create("a"' 10)' Metric.Create("b"' 20)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: var sample1 = new NodeMetrics(_node1' 1'                  ImmutableHashSet.Create<Metric>(Metric.Create("a"' 10)' Metric.Create("b"' 20)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: var sample2 = new NodeMetrics(_node1' 2' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: var sample2 = new NodeMetrics(_node1' 2' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: var sample2 = new NodeMetrics(_node1' 2' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: merged.Metric("a").Value.ShouldBe(11);
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: merged.Metric("b").Value.ShouldBe(20);
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_merge_2_NodeMetrics_by_most_recent,The following statement contains a magic number: merged.Metric("c").Value.ShouldBe(30);
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_not_merge_2_NodeMetrics_if_master_is_more_recent,The following statement contains a magic number: var sample1 = new NodeMetrics(_node1' 1'                   ImmutableHashSet.Create<Metric>(Metric.Create("a"' 10)' Metric.Create("b"' 20)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_not_merge_2_NodeMetrics_if_master_is_more_recent,The following statement contains a magic number: var sample1 = new NodeMetrics(_node1' 1'                   ImmutableHashSet.Create<Metric>(Metric.Create("a"' 10)' Metric.Create("b"' 20)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_not_merge_2_NodeMetrics_if_master_is_more_recent,The following statement contains a magic number: var sample2 = new NodeMetrics(_node1' 0' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30)));
Magic Number,Akka.Cluster.Tests,NodeMetricsSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\NodeMetricsSpec.cs,NodeMetrics_must_not_merge_2_NodeMetrics_if_master_is_more_recent,The following statement contains a magic number: var sample2 = new NodeMetrics(_node1' 0' ImmutableHashSet.Create<Metric>(Metric.Create("a"' 11)' Metric.Create("c"' 30)));
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_be_pruned_when_all_records_of_an_observer_are_reachable,The following statement contains a magic number: var expected2 = ImmutableHashSet.Create(                  new Reachability.Record(nodeD' nodeC' Reachability.ReachabilityStatus.Unreachable' 1)'                  new Reachability.Record(nodeB' nodeD' Reachability.ReachabilityStatus.Unreachable' 5)'                  new Reachability.Record(nodeB' nodeE' Reachability.ReachabilityStatus.Unreachable' 6)                  );
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_be_pruned_when_all_records_of_an_observer_are_reachable,The following statement contains a magic number: var expected2 = ImmutableHashSet.Create(                  new Reachability.Record(nodeD' nodeC' Reachability.ReachabilityStatus.Unreachable' 1)'                  new Reachability.Record(nodeB' nodeD' Reachability.ReachabilityStatus.Unreachable' 5)'                  new Reachability.Record(nodeB' nodeE' Reachability.ReachabilityStatus.Unreachable' 6)                  );
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4)                  );
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4)                  );
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4)                  );
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var records = ImmutableList.Create(                  new Reachability.Record(nodeA' nodeB' Reachability.ReachabilityStatus.Reachable' 2)'                  new Reachability.Record(nodeC' nodeB' Reachability.ReachabilityStatus.Unreachable' 2)'                  new Reachability.Record(nodeA' nodeD' Reachability.ReachabilityStatus.Unreachable' 3)'                  new Reachability.Record(nodeD' nodeB' Reachability.ReachabilityStatus.Terminated' 4)                  );
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var versions = ImmutableDictionary.CreateRange(new[]              {                  new KeyValuePair<UniqueAddress' long>(nodeA' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeC' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeD' 4)              });
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var versions = ImmutableDictionary.CreateRange(new[]              {                  new KeyValuePair<UniqueAddress' long>(nodeA' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeC' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeD' 4)              });
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_aggregated_status,The following statement contains a magic number: var versions = ImmutableDictionary.CreateRange(new[]              {                  new KeyValuePair<UniqueAddress' long>(nodeA' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeC' 3)'                  new KeyValuePair<UniqueAddress' long>(nodeD' 4)              });
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_have_correct_status_for_a_mix_of_nodes,The following statement contains a magic number: r.ObserversGroupedByUnreachable                  .Should()                  .HaveCount(3);
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r1 = new Reachability(ImmutableList.Create<Reachability.Record>()'                  new Dictionary<UniqueAddress' long> {{nodeA' 3}' {nodeB' 5}' {nodeC' 7}}.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r1 = new Reachability(ImmutableList.Create<Reachability.Record>()'                  new Dictionary<UniqueAddress' long> {{nodeA' 3}' {nodeB' 5}' {nodeC' 7}}.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r1 = new Reachability(ImmutableList.Create<Reachability.Record>()'                  new Dictionary<UniqueAddress' long> {{nodeA' 3}' {nodeB' 5}' {nodeC' 7}}.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r2 = new Reachability(ImmutableList.Create<Reachability.Record>()'                  new Dictionary<UniqueAddress' long> { { nodeA' 6 }' { nodeB' 2 }' { nodeD' 1 } }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var r2 = new Reachability(ImmutableList.Create<Reachability.Record>()'                  new Dictionary<UniqueAddress' long> { { nodeA' 6 }' { nodeB' 2 }' { nodeD' 1 } }.ToImmutableDictionary());
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var expected = new Dictionary<UniqueAddress' long> { { nodeA' 6 }' { nodeB' 5 }' { nodeC' 7 }' { nodeD' 1} }.ToImmutableDictionary();
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var expected = new Dictionary<UniqueAddress' long> { { nodeA' 6 }' { nodeB' 5 }' { nodeC' 7 }' { nodeD' 1} }.ToImmutableDictionary();
Magic Number,Akka.Cluster.Tests,ReachabilitySpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ReachabilitySpec.cs,ReachabilityTable_must_merge_versions_correctly,The following statement contains a magic number: var expected = new Dictionary<UniqueAddress' long> { { nodeA' 6 }' { nodeB' 5 }' { nodeC' 7 }' { nodeD' 1} }.ToImmutableDictionary();
Magic Number,Akka.Cluster.Tests,StartupWithOneThreadSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\StartupWithOneThreadSpec.cs,A_cluster_must_startup_with_one_dispatcher_thread,The following statement contains a magic number: Assert.True(totalStartupTime < (Sys.Settings.CreationTimeout - TimeSpan.FromSeconds(2)).TotalMilliseconds);
Magic Number,Akka.Cluster.Tests,StartupWithOneThreadSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\StartupWithOneThreadSpec.cs,A_cluster_must_startup_with_one_dispatcher_thread,The following statement contains a magic number: Assert.True(totalStartupTime < (Sys.Settings.CreationTimeout - TimeSpan.FromSeconds(2)).TotalMilliseconds);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,Must_correctly_merge_two_clocks,The following statement contains a magic number: Assert.Equal(3' merged1.Versions.Count);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,Must_correctly_merge_two_clocks,The following statement contains a magic number: Assert.Equal(3' merged2.Versions.Count);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,Must_correctly_merge_two_disjoint_vector_clocks,The following statement contains a magic number: Assert.Equal(4' merged1.Versions.Count);
Magic Number,Akka.Cluster.Tests,VectorClockSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\VectorClockSpec.cs,Must_correctly_merge_two_disjoint_vector_clocks,The following statement contains a magic number: Assert.Equal(4' merged2.Versions.Count);
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var address = new Address("akka.tcp"' "system"' "some.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var uniqueAddress = new UniqueAddress(address' 17);
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var address2 = new Address("akka.tcp"' "system"' "other.host.org"' 4711);
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var uniqueAddress2 = new UniqueAddress(address2' 18);
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var mg = new MetricsGossip(ImmutableHashSet.Create<NodeMetrics>(new[]              {                  new NodeMetrics(a1.Address' 4711' ImmutableHashSet.Create<Metric>(new Metric("foo"' 1.2' null)))'                  new NodeMetrics(b1.Address' 4712'                      ImmutableHashSet.Create<Metric>(new Metric("foo"' 2.1' new EWMA(100.0' 0.18))                          ' new Metric("bar1"' Double.MinValue' null)' new Metric("bar2"' float.MaxValue' null)'                          new Metric("bar3"' int.MaxValue' null)' new Metric("bar4"' long.MaxValue' null)'                           new Metric("bar5"' double.MaxValue' null)))              }));
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var mg = new MetricsGossip(ImmutableHashSet.Create<NodeMetrics>(new[]              {                  new NodeMetrics(a1.Address' 4711' ImmutableHashSet.Create<Metric>(new Metric("foo"' 1.2' null)))'                  new NodeMetrics(b1.Address' 4712'                      ImmutableHashSet.Create<Metric>(new Metric("foo"' 2.1' new EWMA(100.0' 0.18))                          ' new Metric("bar1"' Double.MinValue' null)' new Metric("bar2"' float.MaxValue' null)'                          new Metric("bar3"' int.MaxValue' null)' new Metric("bar4"' long.MaxValue' null)'                           new Metric("bar5"' double.MaxValue' null)))              }));
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var mg = new MetricsGossip(ImmutableHashSet.Create<NodeMetrics>(new[]              {                  new NodeMetrics(a1.Address' 4711' ImmutableHashSet.Create<Metric>(new Metric("foo"' 1.2' null)))'                  new NodeMetrics(b1.Address' 4712'                      ImmutableHashSet.Create<Metric>(new Metric("foo"' 2.1' new EWMA(100.0' 0.18))                          ' new Metric("bar1"' Double.MinValue' null)' new Metric("bar2"' float.MaxValue' null)'                          new Metric("bar3"' int.MaxValue' null)' new Metric("bar4"' long.MaxValue' null)'                           new Metric("bar5"' double.MaxValue' null)))              }));
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var mg = new MetricsGossip(ImmutableHashSet.Create<NodeMetrics>(new[]              {                  new NodeMetrics(a1.Address' 4711' ImmutableHashSet.Create<Metric>(new Metric("foo"' 1.2' null)))'                  new NodeMetrics(b1.Address' 4712'                      ImmutableHashSet.Create<Metric>(new Metric("foo"' 2.1' new EWMA(100.0' 0.18))                          ' new Metric("bar1"' Double.MinValue' null)' new Metric("bar2"' float.MaxValue' null)'                          new Metric("bar3"' int.MaxValue' null)' new Metric("bar4"' long.MaxValue' null)'                           new Metric("bar5"' double.MaxValue' null)))              }));
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var mg = new MetricsGossip(ImmutableHashSet.Create<NodeMetrics>(new[]              {                  new NodeMetrics(a1.Address' 4711' ImmutableHashSet.Create<Metric>(new Metric("foo"' 1.2' null)))'                  new NodeMetrics(b1.Address' 4712'                      ImmutableHashSet.Create<Metric>(new Metric("foo"' 2.1' new EWMA(100.0' 0.18))                          ' new Metric("bar1"' Double.MinValue' null)' new Metric("bar2"' float.MaxValue' null)'                          new Metric("bar3"' int.MaxValue' null)' new Metric("bar4"' long.MaxValue' null)'                           new Metric("bar5"' double.MaxValue' null)))              }));
Magic Number,Akka.Cluster.Tests.Proto,ClusterMessageSerializerSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Proto\ClusterMessageSerializerSpec.cs,ClusterMessages_must_be_serializable,The following statement contains a magic number: var mg = new MetricsGossip(ImmutableHashSet.Create<NodeMetrics>(new[]              {                  new NodeMetrics(a1.Address' 4711' ImmutableHashSet.Create<Metric>(new Metric("foo"' 1.2' null)))'                  new NodeMetrics(b1.Address' 4712'                      ImmutableHashSet.Create<Metric>(new Metric("foo"' 2.1' new EWMA(100.0' 0.18))                          ' new Metric("bar1"' Double.MinValue' null)' new Metric("bar2"' float.MaxValue' null)'                          new Metric("bar3"' int.MaxValue' null)' new Metric("bar4"' long.MaxValue' null)'                           new Metric("bar5"' double.MaxValue' null)))              }));
Magic Number,Akka.Cluster.Tests.Routing,ClusterRouterSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Routing\ClusterRouterSupervisorSpec.cs,Cluster_aware_routers_must_use_provided_supervisor_strategy,The following statement contains a magic number: ExpectMsg("supervised"' TimeSpan.FromSeconds(2));
Magic Number,Akka.Cluster.Tests.Routing,ClusterRouterSupervisorSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\Routing\ClusterRouterSupervisorSpec.cs,Cluster_aware_routers_must_use_default_supervisor_strategy_when_none_specified,The following statement contains a magic number: ExpectMsg("restarted"' TimeSpan.FromSeconds(2));
Missing Default,Akka.Cluster.Tests,ClusterHeartBeatSenderStateSpec,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Cluster.Tests\ClusterHeartBeatSenderStateSpec.cs,ClusterHeartbeatSenderState_must_behave_correctly_for_random_operations,The following switch statement is missing a default case: switch (operation)                      {                          case Add:                              if (node != selfUniqueAddress && !state.Ring.NodeRing.Contains(node))                              {                                  var oldUnreachable = state.Unreachable;                                  state = state.AddMember(node);                                  //keep unreachable                                  (oldUnreachable.Except(state.ActiveReceivers)).ShouldBe(ImmutableHashSet.Create<UniqueAddress>());                                  state.FailureDetector.IsMonitoring(node.Address).ShouldBeFalse();                                  state.FailureDetector.IsAvailable(node.Address).ShouldBeTrue();                              }                              break;                          case Remove:                              if (node != selfUniqueAddress && state.Ring.NodeRing.Contains(node))                              {                                  var oldUnreachable = state.Unreachable;                                  state = state.RemoveMember(node);                                  // keep unreachable' unless it was the removed                                  if(oldUnreachable.Contains(node))                                      oldUnreachable.Except(state.ActiveReceivers).ShouldBe(ImmutableHashSet.Create(node));                                  else                                      (oldUnreachable.Except(state.ActiveReceivers)).ShouldBe(ImmutableHashSet.Create<UniqueAddress>());                                    state.FailureDetector.IsMonitoring(node.Address).ShouldBeFalse();                                  state.FailureDetector.IsAvailable(node.Address).ShouldBeTrue();                                  Assert.False(state.ActiveReceivers.Any(x => x == node));                              }                              break;                          case Unreachable:                              if (node != selfUniqueAddress && state.ActiveReceivers.Contains(node))                              {                                  state.FailureDetector.Heartbeat(node.Address); //make sure the FD is created                                  Fd(state' node).MarkNodeAsUnavailable();                                  state.FailureDetector.IsMonitoring(node.Address).ShouldBeTrue();                                  state.FailureDetector.IsAvailable(node.Address).ShouldBeFalse();                              }                              break;                          case HeartbeatRsp:                              if (node != selfUniqueAddress && state.Ring.NodeRing.Contains(node))                              {                                  var oldUnreachable = state.Unreachable;                                  var oldReceivers = state.ActiveReceivers;                                  var oldRingReceivers = state.Ring.MyReceivers.Value;                                  state = state.HeartbeatRsp(node);                                    if(oldUnreachable.Contains(node))                                      Assert.False(state.Unreachable.Contains(node));                                  if(oldUnreachable.Contains(node) && !oldRingReceivers.Contains(node))                                      state.FailureDetector.IsMonitoring(node.Address).ShouldBeFalse();                                  if(oldRingReceivers.Contains(node))                                      state.FailureDetector.IsMonitoring(node.Address).ShouldBeTrue();                                    state.Ring.MyReceivers.Value.ShouldBe(oldRingReceivers);                                  state.FailureDetector.IsAvailable(node.Address).ShouldBeTrue();                              }                              break;                      }
