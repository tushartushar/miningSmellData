Implementation smell,Namespace,Class,File,Method,Description
Long Method,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The method has 117 lines of code.
Long Method,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The method has 138 lines of code.
Long Method,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The method has 159 lines of code.
Long Method,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The method has 132 lines of code.
Long Method,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Descend,The method has 163 lines of code.
Long Method,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,Logic,The method has 111 lines of code.
Complex Method,Akka.Streams.Actors,ActorPublisher<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorPublisher.cs,AroundReceive,Cyclomatic complexity of the method is 14
Complex Method,Akka.Streams.Actors,ActorSubscriber,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorSubscriber.cs,AroundReceive,Cyclomatic complexity of the method is 9
Complex Method,Akka.Streams.Dsl,DelimiterFramingStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,DoParse,Cyclomatic complexity of the method is 8
Complex Method,Akka.Streams.Implementation,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,BufferElement,Cyclomatic complexity of the method is 8
Complex Method,Akka.Streams.Implementation,ActorRefSourceActor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefSourceActor.cs,ReceiveElement,Cyclomatic complexity of the method is 10
Complex Method,Akka.Streams.Implementation,StreamLayout,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,Validate,Cyclomatic complexity of the method is 21
Complex Method,Akka.Streams.Implementation,MaterializerSession,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,ResolveMaterialized,Cyclomatic complexity of the method is 9
Complex Method,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,Receive,Cyclomatic complexity of the method is 25
Complex Method,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,Cyclomatic complexity of the method is 11
Complex Method,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Descend,Cyclomatic complexity of the method is 16
Complex Method,Akka.Streams.Implementation.Fusing,BuildStructuralInfo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,AddModule,Cyclomatic complexity of the method is 11
Complex Method,Akka.Streams.Implementation.Fusing,GraphAssembly,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphAssembly.cs,Materialize,Cyclomatic complexity of the method is 12
Complex Method,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,ProcessEvent,Cyclomatic complexity of the method is 10
Complex Method,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,PushOne,Cyclomatic complexity of the method is 9
Complex Method,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,SetCallback,Cyclomatic complexity of the method is 8
Long Parameter List,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,ActorMaterializerSettings,The method has 11 parameters. Parameters: initialInputBufferSize' maxInputBufferSize' dispatcher' supervisionDecider' subscriptionTimeoutSettings' isDebugLogging' outputBurstLimit' isFuzzingMode' isAutoFusing' maxFixedBufferSize' syncProcessingLimit
Long Parameter List,Akka.Streams,FanInShape<T0;T1;T2;T3;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanInShape.cs,FanInShape,The method has 5 parameters. Parameters: outlet' in0' in1' in2' in3
Long Parameter List,Akka.Streams,FanInShape<T0;T1;T2;T3;T4;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanInShape.cs,FanInShape,The method has 6 parameters. Parameters: outlet' in0' in1' in2' in3' in4
Long Parameter List,Akka.Streams,FanInShape<T0;T1;T2;T3;T4;T5;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanInShape.cs,FanInShape,The method has 7 parameters. Parameters: outlet' in0' in1' in2' in3' in4' in5
Long Parameter List,Akka.Streams,FanInShape<T0;T1;T2;T3;T4;T5;T6;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanInShape.cs,FanInShape,The method has 8 parameters. Parameters: outlet' in0' in1' in2' in3' in4' in5' in6
Long Parameter List,Akka.Streams,FanInShape<T0;T1;T2;T3;T4;T5;T6;T7;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanInShape.cs,FanInShape,The method has 9 parameters. Parameters: outlet' in0' in1' in2' in3' in4' in5' in6' in7
Long Parameter List,Akka.Streams,FanInShape<T0;T1;T2;T3;T4;T5;T6;T7;T8;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanInShape.cs,FanInShape,The method has 10 parameters. Parameters: outlet' in0' in1' in2' in3' in4' in5' in6' in7' in8
Long Parameter List,Akka.Streams,FanOutShape<TIn;T0;T1;T2;T3>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanOutShape.cs,FanOutShape,The method has 5 parameters. Parameters: inlet' out0' out1' out2' out3
Long Parameter List,Akka.Streams,FanOutShape<TIn;T0;T1;T2;T3;T4>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanOutShape.cs,FanOutShape,The method has 6 parameters. Parameters: inlet' out0' out1' out2' out3' out4
Long Parameter List,Akka.Streams,FanOutShape<TIn;T0;T1;T2;T3;T4;T5>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanOutShape.cs,FanOutShape,The method has 7 parameters. Parameters: inlet' out0' out1' out2' out3' out4' out5
Long Parameter List,Akka.Streams,FanOutShape<TIn;T0;T1;T2;T3;T4;T5;T6>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanOutShape.cs,FanOutShape,The method has 8 parameters. Parameters: inlet' out0' out1' out2' out3' out4' out5' out6
Long Parameter List,Akka.Streams,FanOutShape<TIn;T0;T1;T2;T3;T4;T5;T6;T7>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanOutShape.cs,FanOutShape,The method has 9 parameters. Parameters: inlet' out0' out1' out2' out3' out4' out5' out6' out7
Long Parameter List,Akka.Streams,FanOutShape<TIn;T0;T1;T2;T3;T4;T5;T6;T7;T8>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\FanOutShape.cs,FanOutShape,The method has 10 parameters. Parameters: inlet' out0' out1' out2' out3' out4' out5' out6' out7' out8
Long Parameter List,Akka.Streams,StructuralInfo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Fusing.cs,StructuralInfo,The method has 5 parameters. Parameters: upstreams' downstreams' inOwners' outOwners' allModules
Long Parameter List,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The method has 5 parameters. Parameters: g0' g1' g2' combineMaterializers' buildBlock
Long Parameter List,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The method has 6 parameters. Parameters: g0' g1' g2' g3' combineMaterializers' buildBlock
Long Parameter List,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The method has 7 parameters. Parameters: g0' g1' g2' g3' g4' combineMaterializers' buildBlock
Long Parameter List,Akka.Streams.Dsl,FlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\FlowOperations.cs,BatchWeighted,The method has 5 parameters. Parameters: flow' max' costFunction' seed' aggregate
Long Parameter List,Akka.Streams.Dsl,FlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\FlowOperations.cs,Throttle,The method has 5 parameters. Parameters: flow' elements' per' maximumBurst' mode
Long Parameter List,Akka.Streams.Dsl,FlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\FlowOperations.cs,Throttle,The method has 6 parameters. Parameters: flow' cost' per' maximumBurst' calculateCost' mode
Long Parameter List,Akka.Streams.Dsl,Sink,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Sink.cs,ActorRefWithAck,The method has 5 parameters. Parameters: actorRef' onInitMessage' ackMessage' onCompleteMessage' onFailureMessage
Long Parameter List,Akka.Streams.Dsl,SubFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SubFlowOperations.cs,BatchWeighted,The method has 5 parameters. Parameters: flow' max' costFunction' seed' aggregate
Long Parameter List,Akka.Streams.Dsl,SubFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SubFlowOperations.cs,Throttle,The method has 5 parameters. Parameters: flow' elements' per' maximumBurst' mode
Long Parameter List,Akka.Streams.Dsl,SubFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SubFlowOperations.cs,Throttle,The method has 6 parameters. Parameters: flow' cost' per' maximumBurst' calculateCost' mode
Long Parameter List,Akka.Streams.Dsl,SourceOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SourceOperations.cs,BatchWeighted,The method has 5 parameters. Parameters: flow' max' costFunction' seed' aggregate
Long Parameter List,Akka.Streams.Dsl,SourceOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SourceOperations.cs,Throttle,The method has 5 parameters. Parameters: flow' elements' per' maximumBurst' mode
Long Parameter List,Akka.Streams.Dsl,SourceOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SourceOperations.cs,Throttle,The method has 6 parameters. Parameters: flow' cost' per' maximumBurst' calculateCost' mode
Long Parameter List,Akka.Streams.Dsl,TcpExt,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Tcp.cs,Bind,The method has 6 parameters. Parameters: host' port' backlog' options' halfClose' idleTimeout
Long Parameter List,Akka.Streams.Dsl,TcpExt,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Tcp.cs,BindAndHandle,The method has 8 parameters. Parameters: handler' materializer' host' port' backlog' options' halfClose' idleTimeout
Long Parameter List,Akka.Streams.Dsl,TcpExt,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Tcp.cs,OutgoingConnection,The method has 6 parameters. Parameters: remoteAddress' localAddress' options' halfClose' connectionTimeout' idleTimeout
Long Parameter List,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,BatchWeighted,The method has 5 parameters. Parameters: flow' max' costFunction' seed' aggregate
Long Parameter List,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,GroupBy,The method has 5 parameters. Parameters: flow' maxSubstreams' groupingFunc' toFunc' deprecatedAndThenFunc
Long Parameter List,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,Throttle,The method has 5 parameters. Parameters: flow' elements' per' maximumBurst' mode
Long Parameter List,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,Throttle,The method has 6 parameters. Parameters: flow' cost' per' maximumBurst' calculateCost' mode
Long Parameter List,Akka.Streams.Implementation,ActorMaterializerImpl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorMaterializerImpl.cs,ActorMaterializerImpl,The method has 6 parameters. Parameters: system' settings' dispatchers' supervisor' haveShutDown' flowNames
Long Parameter List,Akka.Streams.Implementation,ActorRefBackpressureSinkStage<TIn>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,ActorRefBackpressureSinkStage,The method has 5 parameters. Parameters: actorRef' onInitMessage' ackMessage' onCompleteMessage' onFailureMessage
Long Parameter List,Akka.Streams.Implementation,FanoutOutputs<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\FanoutProcessorImpl.cs,FanoutOutputs,The method has 5 parameters. Parameters: maxBufferSize' initialBufferSize' self' pump' afterShutdown
Long Parameter List,Akka.Streams.Implementation,Throttle<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Throttle.cs,Throttle,The method has 5 parameters. Parameters: cost' per' maximumBurst' costCalculation' mode
Long Parameter List,Akka.Streams.Implementation,CompositeModule,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,CompositeModule,The method has 6 parameters. Parameters: subModules' shape' downstreams' upstreams' materializedValueComputation' attributes
Long Parameter List,Akka.Streams.Implementation,FusedModule,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,FusedModule,The method has 7 parameters. Parameters: subModules' shape' downstreams' upstreams' materializedValueComputation' attributes' info
Long Parameter List,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,GraphInterpreterShell,The method has 7 parameters. Parameters: assembly' inHandlers' outHandlers' logics' shape' settings' materializer
Long Parameter List,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Descend,The method has 5 parameters. Parameters: module' inheritedAttributes' structInfo' openGroup' indent
Long Parameter List,Akka.Streams.Implementation.Fusing,BuildStructuralInfo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,AddModule,The method has 5 parameters. Parameters: module' group' inheritedAttributes' indent' oldShape
Long Parameter List,Akka.Streams.Implementation.Fusing,GraphAssembly,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphAssembly.cs,GraphAssembly,The method has 6 parameters. Parameters: stages' originalAttributes' inlets' inletOwners' outlets' outletOwners
Long Parameter List,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,GraphInterpreter,The method has 8 parameters. Parameters: assembly' materializer' log' inHandlers' outHandlers' logics' onAsyncInput' fuzzingMode
Long Parameter List,Akka.Streams.Implementation.IO,FilePublisher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\FilePublisher.cs,Props,The method has 5 parameters. Parameters: f' completionPromise' chunkSize' initialBuffer' maxBuffer
Long Parameter List,Akka.Streams.Implementation.IO,FilePublisher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\FilePublisher.cs,FilePublisher,The method has 5 parameters. Parameters: f' completionPromise' chunkSize' initialBuffer' maxBuffer
Long Parameter List,Akka.Streams.Implementation.IO,ConnectionSourceStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\TcpStages.cs,ConnectionSourceStage,The method has 7 parameters. Parameters: tcpManager' endpoint' backlog' options' halfClose' idleTimeout' bindShutdownTimeout
Long Parameter List,Akka.Streams.Implementation.IO,OutgoingConnectionStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\TcpStages.cs,OutgoingConnectionStage,The method has 6 parameters. Parameters: tcpManager' remoteAddress' localAddress' options' halfClose' connectionTimeout
Long Parameter List,Akka.Streams.Stage,GraphStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,PassAlong,The method has 5 parameters. Parameters: from' to' doFinish' doFail' doPull
Long Parameter List,Akka.Streams.Stage,Reading<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,Reading,The method has 6 parameters. Parameters: inlet' n' previous' andThen' onClose' logic
Long Parameter List,Akka.Streams.Stage,EmittingSingle<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,EmittingSingle,The method has 5 parameters. Parameters: out' element' previous' andThen' logic
Long Parameter List,Akka.Streams.Stage,EmittingIterator<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,EmittingIterator,The method has 5 parameters. Parameters: out' enumerator' previous' andThen' logic
Long Parameter List,Akka.Streams.Stage,PassAlongHandler<TOut;TIn>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,PassAlongHandler,The method has 5 parameters. Parameters: from' to' logic' doFinish' doFail
Long Parameter List,Akka.Streams.Stage,StageActorRef,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,StageActorRef,The method has 5 parameters. Parameters: provider' log' getAsyncCallback' initialReceive' path
Long Identifier,Akka.Streams.Implementation,ReactiveStreamsCompliance,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ReactiveStreamsCompliance.cs,,The length of the parameter CanNotSubscribeTheSameSubscriberMultipleTimes is 45.
Long Identifier,Akka.Streams.Implementation,ReactiveStreamsCompliance,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ReactiveStreamsCompliance.cs,,The length of the parameter NumberOfElementsInRequestMustBePositiveMsg is 42.
Long Identifier,Akka.Streams.Implementation,ReactiveStreamsCompliance,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ReactiveStreamsCompliance.cs,,The length of the parameter NumberOfElementsInRequestMustBePositiveException is 48.
Long Identifier,Akka.Streams.Implementation,ReactiveStreamsCompliance,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ReactiveStreamsCompliance.cs,,The length of the parameter CanNotSubscribeTheSameSubscriberMultipleTimesException is 54.
Long Identifier,Akka.Streams.Implementation,ReactiveStreamsCompliance,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ReactiveStreamsCompliance.cs,,The length of the parameter SubscriptionMustNotBeNullException is 34.
Long Identifier,Akka.Streams.Implementation.Fusing,SubstreamHandler,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\StreamOfStreams.cs,,The length of the parameter _willCompleteAfterInitialElement is 32.
Long Identifier,Akka.Streams.Implementation.IO,ConnectionSourceStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\TcpStages.cs,,The length of the parameter _connectionFlowsAwaitingInitialization is 38.
Long Statement,Akka.Streams,ActorMaterializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,Create,The length of the statement  "                supervisor: context.ActorOf(StreamSupervisor.Props(settings' haveShutDown).WithDispatcher(settings.Dispatcher)' StreamSupervisor.NextName())' " is 141.
Long Statement,Akka.Streams,ActorMaterializer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,ActorSystemOf,The length of the statement  "            throw new ArgumentException($"ActorRefFactory context must be a ActorSystem or ActorContext' got [{context.GetType()}]"); " is 121.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,Create,The length of the statement  "                throw new ArgumentException("Couldn't build an actor materializer settings. `akka.stream.materializer` config path is not defined."); " is 133.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithInputBuffer,The length of the statement  "            return new ActorMaterializerSettings(initialSize' maxSize' Dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 224.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithDispatcher,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 246.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithSupervisionStrategy,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' decider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 235.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithDebugLogging,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' isEnabled' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 241.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithFuzzingMode,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' isFuzzingMode' IsAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 246.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithAutoFusing,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' isAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 246.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithMaxFixedBufferSize,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' maxFixedBufferSize' SyncProcessingLimit); " is 246.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithSyncProcessingLimit,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' SupervisionDecider' SubscriptionTimeoutSettings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' MaxFixedBufferSize' limit); " is 232.
Long Statement,Akka.Streams,ActorMaterializerSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,WithSubscriptionTimeoutSettings,The length of the statement  "            return new ActorMaterializerSettings(InitialInputBufferSize' MaxInputBufferSize' Dispatcher' SupervisionDecider' settings' IsDebugLogging' OutputBurstLimit' IsFuzzingMode' IsAutoFusing' MaxFixedBufferSize' SyncProcessingLimit); " is 227.
Long Statement,Akka.Streams,StreamSubscriptionTimeoutSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,Create,The length of the statement  "                case "no": case "off": case "false": case "noop": mode = StreamSubscriptionTimeoutTerminationMode.NoopTermination; break; " is 121.
Long Statement,Akka.Streams,StreamSubscriptionTimeoutSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,Create,The length of the statement  "                default: throw new ArgumentException("akka.stream.materializer.subscribtion-timeout.mode was not defined or has invalid value. Valid values are: no' off' false' noop' warn' cancel"); " is 182.
Long Statement,Akka.Streams,FanInShape<TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\FanInShape.cs,CopyFromPorts,The length of the statement  "            if (outlets.Length != 1) throw new ArgumentException($"Proposed outlets [{string.Join("' "' outlets)}] do not fit FanInShape"); " is 127.
Long Statement,Akka.Streams,FanInShape<TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\FanInShape.cs,CopyFromPorts,The length of the statement  "            if (inlets.Length != Inlets.Length) throw new ArgumentException($"Proposed inlets [{string.Join("' "' inlets)}] do not fit FanInShape"); " is 136.
Long Statement,Akka.Streams,BidiShape<TIn1;TOut1;TIn2;TOut2>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Shape.cs,CopyFromPorts,The length of the statement  "            return new BidiShape<TIn1' TOut1' TIn2' TOut2>((Inlet<TIn1>)i[0]' (Outlet<TOut1>)o[0]' (Inlet<TIn2>)i[1]' (Outlet<TOut2>)o[1]); " is 127.
Long Statement,Akka.Streams.Actors,ActorPublisher<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorPublisher.cs,AroundPreStart,The length of the statement  "                Context.System.Scheduler.ScheduleTellOnce(SubscriptionTimeout' Self' SubscriptionTimeoutExceeded.Instance' Self' _scheduledSubscriptionTimeout); " is 144.
Long Statement,Akka.Streams.Actors,ActorSubscriberImpl<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorSubscriber.cs,OnSubscribe,The length of the statement  "            if (subscription == null) throw new ArgumentNullException(nameof(subscription)' "OnSubscribe requires subscription to be defined"); " is 131.
Long Statement,Akka.Streams.Actors,ActorSubscriberImpl<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorSubscriber.cs,OnNext,The length of the statement  "            if (element == null) throw new ArgumentNullException(nameof(element)' "OnNext requires provided element not to be null"); " is 121.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "            var shape0 = builder.Add<TShape0' TMat0' Func<TMat1' Func<TMat2' TMatOut>>>(g0' m0 => (m1 => (m2 => combineMaterializers(m0' m1' m2)))); " is 136.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "			var shape1 = builder.Add<TShape1' Func<TMat1' Func<TMat2' TMatOut>>' TMat1' Func<TMat2' TMatOut>>(g1' (f' m1) => f(m1)); " is 120.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "            var shape0 = builder.Add<TShape0' TMat0' Func<TMat1' Func<TMat2' Func<TMat3' TMatOut>>>>(g0' m0 => (m1 => (m2 => (m3 => combineMaterializers(m0' m1' m2' m3))))); " is 161.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "			var shape1 = builder.Add<TShape1' Func<TMat1' Func<TMat2' Func<TMat3' TMatOut>>>' TMat1' Func<TMat2' Func<TMat3' TMatOut>>>(g1' (f' m1) => f(m1)); " is 146.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "			var shape2 = builder.Add<TShape2' Func<TMat2' Func<TMat3' TMatOut>>' TMat2' Func<TMat3' TMatOut>>(g2' (f' m2) => f(m2)); " is 120.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "            var shape0 = builder.Add<TShape0' TMat0' Func<TMat1' Func<TMat2' Func<TMat3' Func<TMat4' TMatOut>>>>>(g0' m0 => (m1 => (m2 => (m3 => (m4 => combineMaterializers(m0' m1' m2' m3' m4)))))); " is 186.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "			var shape1 = builder.Add<TShape1' Func<TMat1' Func<TMat2' Func<TMat3' Func<TMat4' TMatOut>>>>' TMat1' Func<TMat2' Func<TMat3' Func<TMat4' TMatOut>>>>(g1' (f' m1) => f(m1)); " is 172.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "			var shape2 = builder.Add<TShape2' Func<TMat2' Func<TMat3' Func<TMat4' TMatOut>>>' TMat2' Func<TMat3' Func<TMat4' TMatOut>>>(g2' (f' m2) => f(m2)); " is 146.
Long Statement,Akka.Streams.Dsl,GraphDsl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\GraphApply.cs,Create,The length of the statement  "			var shape3 = builder.Add<TShape3' Func<TMat3' Func<TMat4' TMatOut>>' TMat3' Func<TMat4' TMatOut>>(g3' (f' m3) => f(m3)); " is 120.
Long Statement,Akka.Streams.Dsl,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\ZipWith.cs,PushAll,The length of the statement  "				Push(_stage.Out' _stage._zipper(Grab(_stage.In0)' Grab(_stage.In1)' Grab(_stage.In2)' Grab(_stage.In3)' Grab(_stage.In4))); " is 123.
Long Statement,Akka.Streams.Dsl,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\ZipWith.cs,PushAll,The length of the statement  "				Push(_stage.Out' _stage._zipper(Grab(_stage.In0)' Grab(_stage.In1)' Grab(_stage.In2)' Grab(_stage.In3)' Grab(_stage.In4)' Grab(_stage.In5))); " is 141.
Long Statement,Akka.Streams.Dsl,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\ZipWith.cs,PushAll,The length of the statement  "				Push(_stage.Out' _stage._zipper(Grab(_stage.In0)' Grab(_stage.In1)' Grab(_stage.In2)' Grab(_stage.In3)' Grab(_stage.In4)' Grab(_stage.In5)' Grab(_stage.In6))); " is 159.
Long Statement,Akka.Streams.Dsl,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\ZipWith.cs,PushAll,The length of the statement  "				Push(_stage.Out' _stage._zipper(Grab(_stage.In0)' Grab(_stage.In1)' Grab(_stage.In2)' Grab(_stage.In3)' Grab(_stage.In4)' Grab(_stage.In5)' Grab(_stage.In6)' Grab(_stage.In7))); " is 177.
Long Statement,Akka.Streams.Dsl,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\ZipWith.cs,PushAll,The length of the statement  "				Push(_stage.Out' _stage._zipper(Grab(_stage.In0)' Grab(_stage.In1)' Grab(_stage.In2)' Grab(_stage.In3)' Grab(_stage.In4)' Grab(_stage.In5)' Grab(_stage.In6)' Grab(_stage.In7)' Grab(_stage.In8))); " is 195.
Long Statement,Akka.Streams.Dsl,BidiFlow<TIn1;TOut1;TIn2;TOut2;TMat>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\BidiFlow.cs,AtopMat,The length of the statement  "                .ReplaceShape(new BidiShape<TIn1' TOut12' TIn21' TOut2>(Shape.Inlet1' (Outlet<TOut12>)outs[0]' (Inlet<TIn21>)ins[1]' Shape.Outlet2))); " is 134.
Long Statement,Akka.Streams.Dsl,BidiFlow<TIn1;TOut1;TIn2;TOut2;TMat>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\BidiFlow.cs,JoinMat,The length of the statement  "                .ReplaceShape(new FlowShape<TIn1' TOut2>((Inlet<TIn1>)Shape.Inlets.First()' (Outlet<TOut2>)Shape.Outlets.ElementAt(1)))); " is 121.
Long Statement,Akka.Streams.Dsl,FlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\FlowOperations.cs,PrefixAndTail,The length of the statement  "            return (Flow<TIn' Tuple<IImmutableList<TOut>' Source<TOut' NotUsed>>' TMat>)InternalFlowOperations.PrefixAndTail(flow' n); " is 122.
Long Statement,Akka.Streams.Dsl,FlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\FlowOperations.cs,SplitWhen,The length of the statement  "            return flow.SplitWhen(substreamCancelStrategy' predicate' (f' s) => ((Flow<TIn' Source<TOut' NotUsed>' TMat>) f).To(s)); " is 120.
Long Statement,Akka.Streams.Dsl,FlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\FlowOperations.cs,SplitAfter,The length of the statement  "            return flow.SplitAfter(substreamCancelStrategy' predicate' (f' s) => ((Flow<TIn' Source<TOut' NotUsed>' TMat>) f).To(s)); " is 121.
Long Statement,Akka.Streams.Dsl,FramingDecoderStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,OnPush,The length of the statement  "                    return context.Fail(new FramingException($"Maximum allowed message size is {_maximumMessageLength} but tried to send {messageSize} bytes")); " is 140.
Long Statement,Akka.Streams.Dsl,DelimiterFramingStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,DoParse,The length of the statement  "                    return context.Fail(new FramingException($"Read {_buffer.Count} bytes which is more than {_maximumLineBytes} without seeing a line terminator")); " is 145.
Long Statement,Akka.Streams.Dsl,LengthFieldFramingStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,DoParse,The length of the statement  "                        return context.Fail(new FramingException($"Maximum allowed frame size is {_maximumFramelength} but decoded frame header reported size {_frameSize}")); " is 150.
Long Statement,Akka.Streams.Dsl,SubFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SubFlowOperations.cs,PrefixAndTail,The length of the statement  "            return (SubFlow<Tuple<IImmutableList<TOut>' Source<TOut' NotUsed>>' TMat' TClosed>)InternalFlowOperations.PrefixAndTail(flow' n); " is 129.
Long Statement,Akka.Streams.Dsl,SubFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\SubFlowOperations.cs,Throttle,The length of the statement  "            return (SubFlow<TOut' TMat' TClosed>)InternalFlowOperations.Throttle(flow' cost' per' maximumBurst' calculateCost' mode); " is 121.
Long Statement,Akka.Streams.Dsl,Source,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Source.cs,ActorPublisher,The length of the statement  "            return new Source<T' IActorRef>(new ActorPublisherSource<T>(props' DefaultAttributes.ActorPublisherSource' Shape<T>("ActorPublisherSource"))); " is 142.
Long Statement,Akka.Streams.Dsl,Source,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Source.cs,ActorRef,The length of the statement  "            if (overflowStrategy == OverflowStrategy.Backpressure) throw new NotSupportedException("Backpressure overflow strategy is not supported"); " is 138.
Long Statement,Akka.Streams.Dsl,Source,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Source.cs,ActorRef,The length of the statement  "            return new Source<T' IActorRef>(new ActorRefSource<T>(bufferSize' overflowStrategy' DefaultAttributes.ActorRefSource' Shape<T>("ActorRefSource"))); " is 147.
Long Statement,Akka.Streams.Implementation,ActorMaterializerSession,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorMaterializerImpl.cs,MaterializeGraph,The length of the statement  "                var t = graph.Assembly.Materialize(effectiveAttributes' graph.MaterializedValueIds' materializedValues' RegisterSource); " is 120.
Long Statement,Akka.Streams.Implementation,ActorMaterializerSession,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorMaterializerImpl.cs,MaterializeGraph,The length of the statement  "                var shell = new GraphInterpreterShell(graph.Assembly' inHandlers' outHandlers' logics' graph.Shape' calculatedSettings' _materializer); " is 135.
Long Statement,Akka.Streams.Implementation,ActorMaterializerSession,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorMaterializerImpl.cs,MaterializeGraph,The length of the statement  "                    : _materializer.ActorOf(ActorGraphInterpreter.Props(shell)' StageName(effectiveAttributes)' calculatedSettings.Dispatcher); " is 123.
Long Statement,Akka.Streams.Implementation,ActorMaterializerSession,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorMaterializerImpl.cs,ProcessorFor,The length of the statement  "                return ActorProcessorFactory.Create<TIn' TOut>(_materializer.ActorOf(props' StageName(effectiveAttributes)' settings.Dispatcher)); " is 130.
Long Statement,Akka.Streams.Implementation,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,PostStop,The length of the statement  "                StopCallback(promise => promise.SetException(new IllegalStateException("Stream is terminated. QueueSink is detached"))); " is 120.
Long Statement,Akka.Streams.Implementation,ActorRefSourceActor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefSourceActor.cs,DrainBufferThenComplete,The length of the statement  "                    "Dropping element because Status.Success received already' only draining already buffered elements: [{0}] (pending: [{1}])"' " is 124.
Long Statement,Akka.Streams.Implementation,MultiStreamOutputProcessor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamOfStreamProcessors.cs,SubscriptionTimedOut,The length of the statement  "                case StreamSubscriptionTimeoutTerminationMode.CancelTermination: Cancel(target' SubscriptionTimeoutSettings.Timeout); break; " is 124.
Long Statement,Akka.Streams.Implementation,MultiStreamOutputProcessor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamOfStreamProcessors.cs,SubscriptionTimedOut,The length of the statement  "                case StreamSubscriptionTimeoutTerminationMode.WarnTermination: Warn(target' SubscriptionTimeoutSettings.Timeout); break; " is 120.
Long Statement,Akka.Streams.Implementation,MultiStreamOutputProcessor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamOfStreamProcessors.cs,Cancel,The length of the statement  "                    $"Publisher {typedTarget} you are trying to subscribe to has been shut-down because exceeing its subscription timeout")); " is 121.
Long Statement,Akka.Streams.Implementation,ActorSubscription,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorPublisher.cs,Create,The length of the statement  "            return (IActorSubscription) Activator.CreateInstance(subscriptionType' implementor' UntypedSubscriber.ToTyped(subscriber)); " is 123.
Long Statement,Akka.Streams.Implementation,StreamLayout,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,Validate,The length of the statement  "            var graphValues = module.SubModules.SelectMany(m => m is GraphModule ? ((GraphModule)m).MaterializedValueIds : Enumerable.Empty<IModule>()); " is 140.
Long Statement,Akka.Streams.Implementation,CompositeModule,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,ToString,The length of the statement  "                   $"\n    {string.Join("\n    "' SubModules.Select(m => m.Attributes.GetNameLifted() ?? m.ToString().Replace("\n"' "\n    ")))}" + " is 128.
Long Statement,Akka.Streams.Implementation,FusedModule,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,ToString,The length of the statement  "                   $"\n    {string.Join("\n    "' SubModules.Select(m => m.Attributes.GetNameLifted() ?? m.ToString().Replace("\n"' "\n    ")))}" + " is 128.
Long Statement,Akka.Streams.Implementation,MaterializerSession,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,RegisterSource,The length of the statement  "                _materializedValueSources.Add(materializedSource.Computation' new LinkedList<IMaterializedValueSource>(new[] { materializedSource })); " is 134.
Long Statement,Akka.Streams.Implementation,SubscriberManagement<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\SubscriberManagement.cs,MoreRequested,The length of the statement  "                        ReactiveStreamsCompliance.TryOnError(subscription.Subscriber' ReactiveStreamsCompliance.NumberOfElementsInRequestMustBePositiveException); " is 138.
Long Statement,Akka.Streams.Implementation,Pumps,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Transfer.cs,WaitForUpstream,The length of the statement  "            self.TransferState = new WaitingForUpstreamSubscription(waitForUpstream' new TransferPhase(self.TransferState' self.CurrentAction)); " is 132.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,Init,The length of the statement  "                var output = (ActorGraphInterpreter.IActorOutputBoundary) typeof(ActorGraphInterpreter.ActorOutputBoundary<>).Instantiate(outputType' Self' this' i); " is 149.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,Receive,The length of the statement  "                        $"Streaming actor has been already stopped processing (normally)' but not all of its inputs or outputs have been subscribed in [{_settings.SubscriptionTimeoutSettings.Timeout}]. Aborting actor now.")); " is 201.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,Receive,The length of the statement  "                    if (GraphInterpreter.IsDebug) Console.WriteLine($"{Interpreter.Name}  Request {requestMore.Demand} id={requestMore.Id}"); " is 121.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,RunBatch,The length of the statement  "                        Materializer.ScheduleOnce(_settings.SubscriptionTimeoutSettings.Timeout' () => Self.Tell(new ActorGraphInterpreter.Abort(this))); " is 129.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,GetInterpreter,The length of the statement  "            return new GraphInterpreter(_assembly' Materializer' Log' _inHandlers' _outHandlers' _logics' (logic' @event' handler) => " is 121.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,GetLogger,The length of the statement  "            return new BusLogging(Materializer.System.EventStream' Self.ToString()' typeof(GraphInterpreterShell)' new DefaultLogMessageFormatter()); " is 137.
Long Statement,Akka.Streams.Implementation.Fusing,EnumeratorInterpreter<TIn;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\EnumeratorInterpreter.cs,Init,The length of the statement  "            var tup = assembly.Materialize(Attributes.None' assembly.Stages.Select(x => x.Module).ToArray()' new Dictionary<IModule' object>()' _ => { }); " is 142.
Long Statement,Akka.Streams.Implementation.Fusing,EnumeratorInterpreter<TIn;TOut>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\EnumeratorInterpreter.cs,Init,The length of the statement  "                onAsyncInput: (_1' _2' _3) => { throw new NotSupportedException("IteratorInterpreter does not support asynchronous events.");}' " is 127.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Aggressive,The length of the statement  "            // First perform normalization by descending the module tree and recording information in the BuildStructuralInfo instance. " is 123.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Aggressive,The length of the statement  "            // Extract the full topological information from the builder before removing assembly-internal (fused) wirings in the next step. " is 128.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The length of the statement  "                if ((copy = enumerator.Current as CopiedModule) != null && (graphStageModule = copy.CopyOf as GraphStageModule) != null) " is 120.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The length of the statement  "                if ((copy = enumerator.Current as CopiedModule) != null && (graphStageModule = copy.CopyOf as GraphStageModule) != null) " is 120.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The length of the statement  "            var asyncAttrs = IsAsync((CopiedModule) firstModule) ? new Attributes(Attributes.AsyncBoundary.Instance) : Attributes.None; " is 123.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The length of the statement  "            return new GraphModule(new GraphAssembly(stages' attributes' ins' inOwners' outs' outOwners)' shape' attr' materializedValueIds); " is 129.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Descend,The length of the statement  "                    $"entering {module.GetType().Name} (hash={module.GetHashCode()}' async={isAsync}' name={module.Attributes.GetNameLifted()}' dispatcher={GetDispatcher(module)})"); " is 162.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Descend,The length of the statement  "                            $"subMat\n  {string.Empty.PadLeft(indent*2)}{string.Join("\n  " + string.Empty.PadLeft(indent*2)' subMat.Select(p => $"{p.Key.GetType().Name}[{p.Key.GetHashCode()}] -> {p.Value}"))}"); " is 184.
Long Statement,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,RewriteMaterializer,The length of the statement  "                var result = new Combine(combine.Combinator' RewriteMaterializer(subMat' combine.Left' mapping)' RewriteMaterializer(subMat' combine.Right' mapping)); " is 150.
Long Statement,Akka.Streams.Implementation.Fusing,BuildStructuralInfo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Dump,The length of the statement  "            NewInputs.ForEach(kvp => Console.WriteLine($"    {kvp.Key} ({Hash(kvp.Key)}) -> {string.Join("'"' kvp.Value.Select(Hash))}")); " is 126.
Long Statement,Akka.Streams.Implementation.Fusing,BuildStructuralInfo,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Dump,The length of the statement  "            NewInputs.ForEach(kvp => Console.WriteLine($"    {kvp.Key} ({Hash(kvp.Key)}) -> {string.Join("'"' kvp.Value.Select(Hash))}")); " is 126.
Long Statement,Akka.Streams.Implementation.Fusing,GraphAssembly,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphAssembly.cs,Create,The length of the statement  "            if (connectionsCount <= 0) throw new ArgumentException($"Sum of inlets ({inletsCount}) and outlets ({outletsCount}) must be > 0"); " is 130.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,Execute,The length of the statement  "            if (IsDebug) Console.WriteLine($"{Name} ---------------- EXECUTE {QueueStatus()} (running={RunningStagesCount}' shutdown={ShutdownCounters()})"); " is 145.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,Execute,The length of the statement  "            if (IsDebug) Console.WriteLine($"{Name} ---------------- {QueueStatus()} (running={RunningStagesCount}' shutdown={ShutdownCounters()})"); " is 137.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,ProcessEvent,The length of the statement  "            // this must be the state after returning without delivering any signals' to avoid double-finalization of some unlucky stage " is 124.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,ProcessEvent,The length of the statement  "                if (IsDebug) Console.WriteLine($"{Name} PULL {InOwnerName(connection)} -> {OutOwnerName(connection)} ({OutHandlers[connection]}) [{OutLogicName(connection)}]"); " is 160.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,ProcessEvent,The length of the statement  "                if (IsDebug) Console.WriteLine($"{Name} CANCEL {InOwnerName(connection)} -> {OutOwnerName(connection)} ({OutHandlers[connection]}) [{OutLogicName(connection)}]"); " is 162.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,ProcessEvent,The length of the statement  "                    if (IsDebug) Console.WriteLine($"{Name} COMPLETE {OutOwnerName(connection)} -> {InOwnerName(connection)} ({InHandlers[connection]}) [{InLogicName(connection)}]"); " is 162.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,ProcessElement,The length of the statement  "            if (IsDebug) Console.WriteLine($"{Name} PUSH {OutOwnerName(connection)} -> {InOwnerName(connection)}'  {ConnectionSlots[connection]} ({InHandlers[connection]}) [{InLogicName(connection)}]"); " is 190.
Long Statement,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,Enqueue,The length of the statement  "            if (IsDebug && _queueTail - _queueHead > _mask) throw new Exception($"{Name} internal queue full ({QueueStatus()}) + {connection}"); " is 132.
Long Statement,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,PreStart,The length of the statement  "                _cancelable.CancelTask.ContinueWith(t => callback()' TaskContinuationOptions.AttachedToParent | TaskContinuationOptions.ExecuteSynchronously); " is 142.
Long Statement,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,OnPushStrategy,The length of the statement  "                        return () => { FailStage(new BufferOverflowException($"Buffer overflow for Delay combinator (max capacity was: {_size})!")); }; " is 127.
Long Statement,Akka.Streams.Implementation.Fusing,Log<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Ops.cs,PreStart,The length of the statement  "                    throw new Exception("Log stage can only provide LoggingAdapter when used with ActorMaterializer! Provide a LoggingAdapter explicitly or use the actor based flow materializer."' ex); " is 181.
Long Statement,Akka.Streams.Implementation.IO,FileSubscriber,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\FileSubscriber.cs,Props,The length of the statement  "            return Actor.Props.Create(()=> new FileSubscriber(f' completionPromise' bufferSize' fileMode)).WithDeploy(Deploy.Local); " is 120.
Long Statement,Akka.Streams.Implementation.IO,InputStreamPublisher,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\InputStreamPublisher.cs,Props,The length of the statement  "            return Actor.Props.Create(()=> new InputStreamPublisher(inputstream' completionSource' chunkSize)).WithDeploy(Deploy.Local); " is 124.
Long Statement,Akka.Streams.Implementation.IO,InputStreamAdapter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\InputStreamSinkStage.cs,Read,The length of the statement  "            if (offset + count > buffer.Length) throw new ArgumentException("offset + count must be smaller or equal to the array length"); " is 127.
Long Statement,Akka.Streams.Implementation.IO,FileSink,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\IOSinks.cs,Create,The length of the statement  "            var dispatcher = context.EffectiveAttributes.GetAttribute(DefaultAttributes.IODispatcher.AttributeList.First()) as ActorAttributes.Dispatcher; " is 142.
Long Statement,Akka.Streams.Implementation.IO,FileSource,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\IOSources.cs,Create,The length of the statement  "            var props = FilePublisher.Props(_f' ioResultPromise' _chunkSize' settings.InitialInputBufferSize' settings.MaxInputBufferSize); " is 127.
Long Statement,Akka.Streams.Implementation.IO,FileSource,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\IOSources.cs,Create,The length of the statement  "            var dispatcher = context.EffectiveAttributes.GetAttribute(DefaultAttributes.IODispatcher.GetAttribute<ActorAttributes.Dispatcher>()); " is 133.
Long Statement,Akka.Streams.Implementation.IO,ConnectionSourceStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\TcpStages.cs,PreStart,The length of the statement  "                _stage._tcpManager.Tell(new Tcp.Bind(StageActorRef' _stage._endpoint' _stage._backlog' _stage._options' pullMode: true)' StageActorRef); " is 136.
Long Statement,Akka.Streams.Stage,GraphStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,Pull,The length of the statement  "            if ((Interpreter.PortStates[conn] & (GraphInterpreter.InReady | GraphInterpreter.InClosed)) == GraphInterpreter.InReady) " is 120.
Long Statement,Akka.Streams.Stage,GraphStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,IsAvailable,The length of the statement  "            var normalArrived = (Interpreter.PortStates[connection] & (GraphInterpreter.InReady | GraphInterpreter.InFailed)) == GraphInterpreter.InReady; " is 142.
Long Statement,Akka.Streams.Stage,GraphStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,Push,The length of the statement  "            if ((Interpreter.PortStates[connection] & (GraphInterpreter.OutReady | GraphInterpreter.OutClosed)) == GraphInterpreter.OutReady && (element != null)) " is 150.
Long Statement,Akka.Streams.Stage,GraphStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,GetStageActorRef,The length of the statement  "                _stageActorRef = new StageActorRef(provider' actorMaterializer.Logger' r => GetAsyncCallback<Tuple<IActorRef' object>>(tuple => r(tuple))' receive' path); " is 154.
Virtual Method Call from Constructor,Akka.Streams.Implementation,ActorMaterializerImpl,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorMaterializerImpl.cs,ActorMaterializerImpl,The constructor "ActorMaterializerImpl" calls a virtual method "HasPath".
Virtual Method Call from Constructor,Akka.Streams.Implementation,InputBunch,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\FanIn.cs,InputBunch,The constructor "InputBunch" calls a virtual method "OnDepleted".
Virtual Method Call from Constructor,Akka.Streams.Implementation,InputBunch,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\FanIn.cs,InputBunch,The constructor "InputBunch" calls a virtual method "OnCompleteWhenNoInput".
Virtual Method Call from Constructor,Akka.Streams.Implementation,InputBunch,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\FanIn.cs,InputBunch,The constructor "InputBunch" calls a virtual method "OnError".
Virtual Method Call from Constructor,Akka.Streams.Implementation,Unzip<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\FanOut.cs,Unzip,The constructor "Unzip" calls a virtual method "DequeueInputElement".
Virtual Method Call from Constructor,Akka.Streams.Stage,SubSinkInlet<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,SubSinkInlet,The constructor "SubSinkInlet" calls a virtual method "OnPush".
Virtual Method Call from Constructor,Akka.Streams.Stage,SubSinkInlet<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,SubSinkInlet,The constructor "SubSinkInlet" calls a virtual method "OnUpstreamFinish".
Virtual Method Call from Constructor,Akka.Streams.Stage,SubSinkInlet<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Stage\GraphStage.cs,SubSinkInlet,The constructor "SubSinkInlet" calls a virtual method "OnUpstreamFailure".
Empty Catch Block,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,TryAbort,The method has an empty catch block.
Magic Number,Akka.Streams,StreamSubscriptionTimeoutSettings,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\ActorMaterializer.cs,GetHashCode,The following statement contains a magic number: return ((int)Mode * 397) ^ Timeout.GetHashCode();
Magic Number,Akka.Streams,InputBuffer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Attributes.cs,GetHashCode,The following statement contains a magic number: return (Initial*397) ^ Max;
Magic Number,Akka.Streams,LogLevels,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Attributes.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (int) OnFinish;
Magic Number,Akka.Streams,LogLevels,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Attributes.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode*397) ^ (int) OnFailure;
Magic Number,Akka.Streams,BidiShape<TIn1;TOut1;TIn2;TOut2>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Shape.cs,CopyFromPorts,The following statement contains a magic number: i.Length != 2
Magic Number,Akka.Streams,BidiShape<TIn1;TOut1;TIn2;TOut2>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Shape.cs,CopyFromPorts,The following statement contains a magic number: o.Length != 2
Magic Number,Akka.Streams.Actors,WatermarkRequestStrategy,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\RequestStrategies.cs,WatermarkRequestStrategy,The following statement contains a magic number: LowWatermark = Math.Max(1' highWatermark / 2);
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var pendingCount = 2;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var downstreamRunning = 2;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var pendingCount = 3;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var downstreamRunning = 3;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var pendingCount = 4;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var downstreamRunning = 4;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var pendingCount = 5;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var downstreamRunning = 5;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var pendingCount = 6;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var downstreamRunning = 6;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var pendingCount = 7;
Magic Number,Akka.Streams.Dsl,UnzipWithStageLogic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\CodeGen\Dsl\UnzipWith.cs,UnzipWithStageLogic,The following statement contains a magic number: var downstreamRunning = 7;
Magic Number,Akka.Streams.Dsl,Framing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,LengthField,The following statement contains a magic number: fieldLength < 1 || fieldLength > 4
Magic Number,Akka.Streams.Dsl,Framing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,SimpleFramingProtocol,The following statement contains a magic number: var decoder = LengthField(4' maximumMessageLength + 4' 0' ByteOrder.BigEndian).Select(b => b.Drop(4));
Magic Number,Akka.Streams.Dsl,Framing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,SimpleFramingProtocol,The following statement contains a magic number: var decoder = LengthField(4' maximumMessageLength + 4' 0' ByteOrder.BigEndian).Select(b => b.Drop(4));
Magic Number,Akka.Streams.Dsl,Framing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,SimpleFramingProtocol,The following statement contains a magic number: var decoder = LengthField(4' maximumMessageLength + 4' 0' ByteOrder.BigEndian).Select(b => b.Drop(4));
Magic Number,Akka.Streams.Dsl,FramingDecoderStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,OnPush,The following statement contains a magic number: var header = ByteString.Create(new[]                  {                      Convert.ToByte((messageSize >> 24) & 0xFF)'                      Convert.ToByte((messageSize >> 16) & 0xFF)'                      Convert.ToByte((messageSize >> 8) & 0xFF)'                      Convert.ToByte(messageSize & 0xFF)                  });
Magic Number,Akka.Streams.Dsl,FramingDecoderStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,OnPush,The following statement contains a magic number: var header = ByteString.Create(new[]                  {                      Convert.ToByte((messageSize >> 24) & 0xFF)'                      Convert.ToByte((messageSize >> 16) & 0xFF)'                      Convert.ToByte((messageSize >> 8) & 0xFF)'                      Convert.ToByte(messageSize & 0xFF)                  });
Magic Number,Akka.Streams.Dsl,FramingDecoderStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Framing.cs,OnPush,The following statement contains a magic number: var header = ByteString.Create(new[]                  {                      Convert.ToByte((messageSize >> 24) & 0xFF)'                      Convert.ToByte((messageSize >> 16) & 0xFF)'                      Convert.ToByte((messageSize >> 8) & 0xFF)'                      Convert.ToByte(messageSize & 0xFF)                  });
Magic Number,Akka.Streams.Dsl,StreamConverters,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\StreamConverters.cs,AsInputStream,The following statement contains a magic number: readTimeout = readTimeout ?? TimeSpan.FromSeconds(5);
Magic Number,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,InterleaveGraph,The following statement contains a magic number: return GraphDsl.Create(graph' (builder' shape) =>              {                  // TODO Use Dsl.Interleave.Create                  var interleave = builder.Add(new Interleave<T1' T2>(2' segmentSize));                  var r = builder.From(shape);                  r.To(interleave.In(1));                  return new FlowShape<T1' T2>(interleave.In(0)' interleave.Out);              });
Magic Number,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,MergeGraph,The following statement contains a magic number: return GraphDsl.Create(other' (builder' shape) =>              {                  var merge = builder.Add(new Merge<TIn' TOut>(2' eagerComplete));                  var r = builder.From(shape);                  r.To(merge.In(1));                  return new FlowShape<TIn' TOut>(merge.In(0)' merge.Out);              });
Magic Number,Akka.Streams.Dsl.Internal,InternalFlowOperations,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Dsl\Internal\InternalFlowOperations.cs,AlsoToGraph,The following statement contains a magic number: return GraphDsl.Create(that' (b' r) =>              {                  var broadcast = b.Add(new Broadcast<TOut>(2));                  b.From(broadcast.Out(1)).To(r);                  return new FlowShape<TOut' TOut>(broadcast.In' broadcast.Out(0));              });
Magic Number,Akka.Streams.Implementation,ActorRefBackpressureSinkStage<TIn>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,CreateLogic,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation,ActorRefBackpressureSinkStage<TIn>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,CreateLogic,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,Logic,The following statement contains a magic number: _speed = (long)(((double)stage._cost/stage._per.Ticks)*1073741824);
Magic Number,Akka.Streams.Implementation,Buffer,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Buffers.cs,Create,The following statement contains a magic number: return Create<T>(size' m != null ? m.Settings.MaxFixedBufferSize : 1000000000);
Magic Number,Akka.Streams.Implementation,SubstreamSubscription,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\FanOut.cs,GetHashCode,The following statement contains a magic number: return (Parent.GetHashCode() * 397) ^ Substream.GetHashCode();
Magic Number,Akka.Streams.Implementation,ResizableMultiReaderRingBuffer<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ResizableMultiReaderRingBuffer.cs,ResizableMultiReaderRingBuffer,The following statement contains a magic number: (maxSize & (maxSize - 1)) != 0 || maxSize <= 0 || maxSize > int.MaxValue / 2
Magic Number,Akka.Streams.Implementation,QueueSink<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Sinks.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation,QueueSink<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Sinks.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation,StreamLayout,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamLayout.cs,Validate,The following statement contains a magic number: var indent = string.Empty.PadLeft(level * 2);
Magic Number,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,GraphInterpreterShell,The following statement contains a magic number: _abortLimit = _eventLimit * 2;
Magic Number,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,RunBatch,The following statement contains a magic number: var effectiveLimit = !_settings.IsFuzzingMode                      ? _eventLimit                      : (ThreadLocalRandom.Current.Next(2) == 0                          ? (Thread.Yield() ? 1 : 0)                          : ThreadLocalRandom.Current.Next(2));
Magic Number,Akka.Streams.Implementation.Fusing,GraphInterpreterShell,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,RunBatch,The following statement contains a magic number: var effectiveLimit = !_settings.IsFuzzingMode                      ? _eventLimit                      : (ThreadLocalRandom.Current.Next(2) == 0                          ? (Thread.Yield() ? 1 : 0)                          : ThreadLocalRandom.Current.Next(2));
Magic Number,Akka.Streams.Implementation.Fusing,BatchingActorInputBoundary,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\ActorGraphInterpreter.cs,BatchingActorInputBoundary,The following statement contains a magic number: _requestBatchSize = Math.Max(1' _inputBuffer.Length/2);
Magic Number,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The following statement contains a magic number: var inlets = ImmutableArray.CreateBuilder<Inlet>(2);
Magic Number,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,FuseGroup,The following statement contains a magic number: var outlets = ImmutableArray.CreateBuilder<Outlet>(2);
Magic Number,Akka.Streams.Implementation.Fusing,Fusing,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\Fusing.cs,Descend,The following statement contains a magic number: Log(indent'                                  $"dissolving graph module {module.ToString().Replace("\n"' $"\n{string.Empty.PadLeft(indent*2)}")}");
Magic Number,Akka.Streams.Implementation.Fusing,GraphInterpreter,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphInterpreter.cs,GraphInterpreter,The following statement contains a magic number: _eventQueue = new int[1 << (32 - (assembly.ConnectionCount - 1).NumberOfLeadingZeros())];
Magic Number,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,OnTimer,The following statement contains a magic number: waitTime > 10
Magic Number,Akka.Streams.Implementation.IO,InputStreamSinkStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\InputStreamSinkStage.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation.IO,InputStreamSinkStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\InputStreamSinkStage.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation.IO,InputStreamSinkStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\InputStreamSinkStage.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: _dataQueue = new BlockingCollection<IStreamToAdapterMessage>(maxBuffer + 2);
Magic Number,Akka.Streams.Implementation.IO,OutputStreamSourceStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\OutputStreamSourceStage.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Implementation.IO,OutputStreamSourceStage,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\IO\OutputStreamSourceStage.cs,CreateLogicAndMaterializedValue,The following statement contains a magic number: var maxBuffer = inheritedAttributes.GetAttribute(new Attributes.InputBuffer(16' 16)).Max;
Magic Number,Akka.Streams.Util,Option,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Option.cs,GetHashCode,The following statement contains a magic number: return (EqualityComparer<T>.Default.GetHashCode(Value)*397) ^ HasValue.GetHashCode();
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x |= (x >> 2);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x |= (x >> 4);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x |= (x >> 8);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x |= (x >> 16);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x = ((x >> 2) & 0x33333333) + (x & 0x33333333);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x = ((x >> 4) + x) & 0x0f0f0f0f;
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x += x >> 8;
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: x += x >> 16;
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfLeadingZeros,The following statement contains a magic number: return sizeof (int)*8 - x;
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfTrailingZeros,The following statement contains a magic number: return 32;
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfTrailingZeros,The following statement contains a magic number: x = (((x >> 2) & 0x33333333) + (x & 0x33333333));
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfTrailingZeros,The following statement contains a magic number: x = (((x >> 4) + x) & 0x0f0f0f0f);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfTrailingZeros,The following statement contains a magic number: x += (x >> 8);
Magic Number,Akka.Streams.Util,Int32Extensions,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Util\Int32Extensions.cs,NumberOfTrailingZeros,The following statement contains a magic number: x += (x >> 16);
Missing Default,Akka.Streams.Actors,ActorPublisher<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorPublisher.cs,OnNext,The following switch statement is missing a default case: switch (_lifecycleState)              {                  case LifecycleState.Active:                  case LifecycleState.PreSubscriber:                  case LifecycleState.CompleteThenStop:                      if (_demand > 0)                      {                          _demand--;                          ReactiveStreamsCompliance.TryOnNext(_subscriber' element);                      }                      else                      {                          throw new IllegalStateException(                              "OnNext is not allowed when the stream has not requested elements' total demand was 0");                      }                      break;                  case LifecycleState.ErrorEmitted: throw new IllegalStateException("OnNext must not be called after OnError");                  case LifecycleState.Completed: throw new IllegalStateException("OnNext must not be called after OnComplete");                  case LifecycleState.Canceled: break;              }
Missing Default,Akka.Streams.Actors,ActorPublisher<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorPublisher.cs,OnComplete,The following switch statement is missing a default case: switch (_lifecycleState)              {                  case LifecycleState.Active:                  case LifecycleState.PreSubscriber:                  case LifecycleState.CompleteThenStop:                      _lifecycleState = LifecycleState.Completed;                      _onError = null;                      if (_subscriber != null)                      {                          // otherwise onComplete will be called when the subscription arrives                          try                          {                              ReactiveStreamsCompliance.TryOnComplete(_subscriber);                          }                          finally                          {                              _subscriber = null;                          }                      }                      break;                  case LifecycleState.ErrorEmitted: throw new IllegalStateException("OnComplete must not be called after OnError");                  case LifecycleState.Completed: throw new IllegalStateException("OnComplete must only be called once");                  case LifecycleState.Canceled: break;              }
Missing Default,Akka.Streams.Actors,ActorPublisher<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorPublisher.cs,OnError,The following switch statement is missing a default case: switch (_lifecycleState)              {                  case LifecycleState.Active:                  case LifecycleState.PreSubscriber:                  case LifecycleState.CompleteThenStop:                      _lifecycleState = LifecycleState.ErrorEmitted;                      _onError = new OnErrorBlock(cause' false);                      if (_subscriber != null)                      {                          // otherwise onError will be called when the subscription arrives                          try                          {                              ReactiveStreamsCompliance.TryOnError(_subscriber' cause);                          }                          finally                          {                              _subscriber = null;                          }                      }                      break;                  case LifecycleState.ErrorEmitted: throw new IllegalStateException("OnError must only be called once");                  case LifecycleState.Completed: throw new IllegalStateException("OnError must not be called after OnComplete");                  case LifecycleState.Canceled: break;              }
Missing Default,Akka.Streams.Actors,ActorPublisher<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Actors\ActorPublisher.cs,AroundReceive,The following switch statement is missing a default case: switch (_lifecycleState)                  {                      case LifecycleState.PreSubscriber:                          _scheduledSubscriptionTimeout.Cancel();                          _subscriber = subscriber;                          _lifecycleState = LifecycleState.Active;                          ReactiveStreamsCompliance.TryOnSubscribe(subscriber' new ActorPublisherSubscription(Self));                          break;                      case LifecycleState.ErrorEmitted:                          if (_onError.Stop) Context.Stop(Self);                          ReactiveStreamsCompliance.TryOnSubscribe(subscriber' CancelledSubscription.Instance);                          ReactiveStreamsCompliance.TryOnError(subscriber' _onError.Cause);                          break;                      case LifecycleState.Completed:                          ReactiveStreamsCompliance.TryOnSubscribe(subscriber' CancelledSubscription.Instance);                          ReactiveStreamsCompliance.TryOnComplete(subscriber);                          break;                      case LifecycleState.CompleteThenStop:                          Context.Stop(Self);                          ReactiveStreamsCompliance.TryOnSubscribe(subscriber' CancelledSubscription.Instance);                          ReactiveStreamsCompliance.TryOnComplete(subscriber);                          break;                      case LifecycleState.Active:                      case LifecycleState.Canceled:                          ReactiveStreamsCompliance.TryOnSubscribe(subscriber' CancelledSubscription.Instance);                          ReactiveStreamsCompliance.TryOnError(subscriber' _subscriber == subscriber                              ? new IllegalStateException("Cannot subscribe the same subscriber multiple times")                              : new IllegalStateException("Only supports one subscriber"));                          break;                  }
Missing Default,Akka.Streams.Implementation,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefBackpressureSinkStage.cs,BufferElement,The following switch statement is missing a default case: switch (_source._overflowStrategy)                      {                          case OverflowStrategy.DropHead:                              _buffer.DropHead();                              EnqueueAndSuccess(element' promise);                              break;                          case OverflowStrategy.DropTail:                              _buffer.DropTail();                              EnqueueAndSuccess(element' promise);                              break;                          case OverflowStrategy.DropBuffer:                              _buffer.Clear();                              EnqueueAndSuccess(element' promise);                              break;                          case OverflowStrategy.DropNew:                              promise.SetResult(QueueOfferResult.Dropped.Instance);                              break;                          case OverflowStrategy.Fail:                              var bufferOverflowException =                                  new BufferOverflowException($"Buffer overflow (max capacity was: {_source._maxBuffer})!");                              promise.SetResult(new QueueOfferResult.Failure(bufferOverflowException));                              _source._completion.SetException(bufferOverflowException);                              FailStage(bufferOverflowException);                              break;                          case OverflowStrategy.Backpressure:                              if (_pendingOffer != null)                                  promise.SetException(                                      new IllegalStateException(                                          "You have to wait for previous offer to be resolved to send another request."));                              else                                  _pendingOffer = new Tuple<TOut' Offered>(element' promise);                              break;                      }
Missing Default,Akka.Streams.Implementation,ActorRefSourceActor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\ActorRefSourceActor.cs,ReceiveElement,The following switch statement is missing a default case: switch (OverflowStrategy)                      {                          case OverflowStrategy.DropHead:                              Log.Debug("Dropping the head element because buffer is full and overflowStrategy is: [DropHead]");                              Buffer.DropHead();                              Buffer.Enqueue(message);                              break;                          case OverflowStrategy.DropTail:                              Log.Debug("Dropping the tail element because buffer is full and overflowStrategy is: [DropTail]");                              Buffer.DropTail();                              Buffer.Enqueue(message);                              break;                          case OverflowStrategy.DropBuffer:                              Log.Debug("Dropping all the buffered elements because buffer is full and overflowStrategy is: [DropBuffer]");                              Buffer.Clear();                              Buffer.Enqueue(message);                              break;                          case OverflowStrategy.DropNew:                              // do not enqueue new element if the buffer is full                              Log.Debug("Dropping the new element because buffer is full and overflowStrategy is: [DropNew]");                              break;                          case OverflowStrategy.Fail:                              Log.Error("Failing because buffer is full and overflowStrategy is: [Fail]");                              OnErrorThenStop(new BufferOverflowException($"Buffer overflow' max capacity was ({BufferSize})"));                              break;                          case OverflowStrategy.Backpressure:                              // there is a precondition check in Source.actorRefSource factory method                              Log.Debug("Backpressuring because buffer is full and overflowStrategy is: [Backpressure]");                              break;                      }
Missing Default,Akka.Streams.Implementation,MultiStreamOutputProcessor<T>,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\StreamOfStreamProcessors.cs,SubscriptionTimedOut,The following switch statement is missing a default case: switch (SubscriptionTimeoutSettings.Mode)              {                  case StreamSubscriptionTimeoutTerminationMode.CancelTermination: Cancel(target' SubscriptionTimeoutSettings.Timeout); break;                  case StreamSubscriptionTimeoutTerminationMode.WarnTermination: Warn(target' SubscriptionTimeoutSettings.Timeout); break;              }
Missing Default,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,Logic,The following switch statement is missing a default case: switch (_decider(ex))                              {                                  case Directive.Stop:                                      FailStage(ex);                                      break;                                  case Directive.Restart:                                      RestartState();                                      break;                                  case Directive.Resume:                                      break;                              }
Missing Default,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,Logic,The following switch statement is missing a default case: switch (_decider(ex))                              {                                  case Directive.Stop:                                      FailStage(ex);                                      break;                                  case Directive.Restart:                                      RestartState();                                      break;                                  case Directive.Resume:                                      break;                              }
Missing Default,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,Logic,The following switch statement is missing a default case: switch (_decider(ex))                                  {                                      case Directive.Stop:                                          FailStage(ex);                                          break;                                      case Directive.Restart:                                          RestartState();                                          if (!HasBeenPulled(_shape.Inlet)) Pull(_shape.Inlet);                                          break;                                      case Directive.Resume:                                          break;                                  }
Missing Default,Akka.Streams.Implementation.Fusing,Logic,C:\research\architectureSmells\repos\rogeralsing_akka.net\src\core\Akka.Streams\Implementation\Fusing\GraphStages.cs,Flush,The following switch statement is missing a default case: switch (_decider(ex))                          {                              case Directive.Stop:                                  FailStage(ex);                                  break;                              case Directive.Restart:                                  RestartState();                                  break;                              case Directive.Resume:                                  _pending = Option<TIn>.None;                                  break;                          }
