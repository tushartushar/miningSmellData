Implementation smell,Namespace,Class,File,Method,Description
Long Method,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The method has 203 lines of code.
Complex Method,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,OnContentChanged,Cyclomatic complexity of the method is 8
Complex Method,WPFLocalizeExtension.Engine,ObjectDependencyManager,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\ObjectDependencyManager.cs,CleanUp,Cyclomatic complexity of the method is 8
Complex Method,WPFLocalizeExtension.Extensions,FELoc,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\FELoc.cs,FormatOutput,Cyclomatic complexity of the method is 16
Complex Method,WPFLocalizeExtension.Extensions,LocExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\LocExtension.cs,ResourceChanged,Cyclomatic complexity of the method is 9
Complex Method,WPFLocalizeExtension.Extensions,LocExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\LocExtension.cs,FormatOutput,Cyclomatic complexity of the method is 16
Complex Method,WPFLocalizeExtension.Providers,CSVEmbeddedLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVEmbeddedLocalizationProvider.cs,GetLocalizedObject,Cyclomatic complexity of the method is 12
Complex Method,WPFLocalizeExtension.Providers,CSVLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProvider.cs,GetLocalizedObject,Cyclomatic complexity of the method is 12
Complex Method,WPFLocalizeExtension.Providers,ParentChangedNotifierHelper,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ParentChangedNotifierHelper.cs,GetValueOrRegisterParentNotifier,Cyclomatic complexity of the method is 12
Complex Method,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,Cyclomatic complexity of the method is 24
Long Parameter List,WPFLocalizeExtension.Extensions,LocExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\LocExtension.cs,GetLocalizedValue,The method has 5 parameters. Parameters: key' targetCulture' target' converter' converterParameter
Long Identifier,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,OnGapsChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Identifier,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,,The length of the parameter IgnoreDuplicateStringReferencesProperty is 39.
Long Identifier,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,,The length of the parameter IgnoreDuplicateControlReferencesProperty is 40.
Long Identifier,WPFLocalizeExtension.Engine,LocalizeDictionary,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\LocalizeDictionary.cs,,The length of the parameter IncludeInvariantCultureProperty is 31.
Long Statement,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,OnContentChanged,The length of the statement  "                // allowed according to https://msdn.microsoft.com/de-de/library/system.windows.documents.inlinecollection%28v=vs.110%29.aspx are " is 129.
Long Statement,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,OnContentChanged,The length of the statement  "                // Inline' String (creates an implicit Run)' UIElement (creates an implicit InlineUIContainer with the supplied UIElement inside)'  " is 130.
Long Statement,WPFLocalizeExtension.Engine,LocalizeDictionary,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\LocalizeDictionary.cs,AvailableCulturesCollectionChanged,The length of the statement  "                if (!_includeInvariantCulture && MergedAvailableCultures.Count > 1 && MergedAvailableCultures.Contains(CultureInfo.InvariantCulture)) " is 133.
Long Statement,WPFLocalizeExtension.Engine,LocalizeDictionary,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\LocalizeDictionary.cs,GetIsInDesignMode,The length of the statement  "                        _isInDesignMode = (bool)Dispatcher.Invoke(DispatcherPriority.Normal' TimeSpan.FromMilliseconds(100)' new Func<bool>(GetIsInDesignMode)); " is 136.
Long Statement,WPFLocalizeExtension.Engine,ParentNotifiers,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\ParentNotifiers.cs,Add,The length of the statement  "			_inner.Add(new TypedWeakReference<DependencyObject>(target)' new TypedWeakReference<ParentChangedNotifier>(parentChangedNotifier)); " is 131.
Long Statement,WPFLocalizeExtension.Engine,SafeTargetInfo,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\SafeTargetInfo.cs,FromTargetInfo,The length of the statement  "            return new SafeTargetInfo(targetInfo.TargetObject' targetInfo.TargetProperty' targetInfo.TargetPropertyType' targetInfo.TargetPropertyIndex); " is 141.
Long Statement,WPFLocalizeExtension.Extensions,FELoc,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\FELoc.cs,FormatOutput,The length of the statement  "            string resKeyNameProp = LocalizeDictionary.Instance.GetFullyQualifiedResourceKey(epName + LocalizeDictionary.GetSeparation(targetObject) + epProp' targetObject); " is 161.
Long Statement,WPFLocalizeExtension.Extensions,LocExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\LocExtension.cs,FormatOutput,The length of the statement  "                var resKeyNameProp = LocalizeDictionary.Instance.GetFullyQualifiedResourceKey(epName + LocalizeDictionary.GetSeparation(targetObject) + epProp' targetObject); " is 158.
Long Statement,WPFLocalizeExtension.Extensions,LocExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\LocExtension.cs,SetBinding,The length of the statement  "            var result = ProvideValue(new SimpleProvideValueServiceProvider(targetObject' targetProperty' targetPropertyType' targetPropertyIndex)); " is 136.
Long Statement,WPFLocalizeExtension.Providers,CSVEmbeddedLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVEmbeddedLocalizationProvider.cs,GetAssembly,The length of the statement  "            return target?.GetValueOrRegisterParentNotifier<string>(DefaultAssemblyProperty' ParentChangedAction' _parentNotifiers);  " is 120.
Long Statement,WPFLocalizeExtension.Providers,CSVEmbeddedLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVEmbeddedLocalizationProvider.cs,GetDictionary,The length of the statement  "            return target?.GetValueOrRegisterParentNotifier<string>(DefaultDictionaryProperty' ParentChangedAction' _parentNotifiers); " is 122.
Long Statement,WPFLocalizeExtension.Providers,CSVEmbeddedLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVEmbeddedLocalizationProvider.cs,GetLocalizedObject,The length of the statement  "                    filename = assemblyInAppDomain.GetManifestResourceNames().FirstOrDefault(r => r.Contains($"{dictionary}{(string.IsNullOrEmpty(culture.Name) ? "" : "-")}{culture.Name}")); " is 170.
Long Statement,WPFLocalizeExtension.Providers,CSVEmbeddedLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVEmbeddedLocalizationProvider.cs,GetLocalizedObject,The length of the statement  "                        using (var reader = new StreamReader(assemblyInAppDomain.GetManifestResourceStream(filename) ?? throw new InvalidOperationException()' Encoding.Default)) " is 153.
Long Statement,WPFLocalizeExtension.Providers,CSVLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProvider.cs,GetDictionary,The length of the statement  "            return target?.GetValueOrRegisterParentNotifier<string>(DefaultDictionaryProperty' ParentChangedAction' _parentNotifiers); " is 122.
Long Statement,WPFLocalizeExtension.Providers,CSVLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProvider.cs,GetAssembly,The length of the statement  "            return target?.GetValueOrRegisterParentNotifier<string>(CSVEmbeddedLocalizationProvider.DefaultAssemblyProperty' ParentChangedAction' _parentNotifiers); " is 152.
Long Statement,WPFLocalizeExtension.Providers,CSVLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProvider.cs,GetLocalizedObject,The length of the statement  "                csvPath = Path.Combine(csvDirectory' dictionary + (string.IsNullOrEmpty(culture.Name) ? "" : "." + culture.Name) + ".csv"); " is 123.
Long Statement,WPFLocalizeExtension.Providers,CSVLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProvider.cs,GetLocalizedObject,The length of the statement  "                    OnProviderError(target' key' "A file for the provided culture " + culture.EnglishName + " does not exist at " + csvPath + "."); " is 127.
Long Statement,WPFLocalizeExtension.Providers,ParentChangedNotifierHelper,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ParentChangedNotifierHelper.cs,GetValueOrRegisterParentNotifier,The length of the statement  "		        // If this failed' try again using the Parent property (sometimes this is not covered by the VisualTreeHelper class :-P. " is 120.
Long Statement,WPFLocalizeExtension.Providers,ParentChangedNotifierHelper,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ParentChangedNotifierHelper.cs,GetValue,The length of the statement  "                    // If this failed' try again using the Parent property (sometimes this is not covered by the VisualTreeHelper class :-P. " is 120.
Long Statement,WPFLocalizeExtension.Providers,ParentChangedNotifierHelper,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ParentChangedNotifierHelper.cs,GetValueOrRegisterParentNotifier,The length of the statement  "            return target.GetValueOrRegisterParentNotifier(depObj => depObj.GetValueSync<T>(property)' parentChangedAction' parentNotifiers); " is 129.
Long Statement,WPFLocalizeExtension.Providers,ParentChangedNotifierHelper,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ParentChangedNotifierHelper.cs,GetParent,The length of the statement  "            return (DependencyObject)depObj.Dispatcher.Invoke(new Func<DependencyObject>(() => GetParentInternal(depObj' isVisualTree))); " is 125.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProvider.cs,GetAssembly,The length of the statement  "            var assembly = target.GetValueOrRegisterParentNotifier<string>(DefaultAssemblyProperty' ParentChangedAction' _parentNotifiers); " is 127.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProvider.cs,GetDictionary,The length of the statement  "            var dictionary = target.GetValueOrRegisterParentNotifier<string>(DefaultDictionaryProperty' ParentChangedAction' _parentNotifiers); " is 131.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,IsFileOfInterest,The length of the statement  "            if (!(f.EndsWith(".resx"' StringComparison.OrdinalIgnoreCase) || f.EndsWith(".resources.dll"' StringComparison.OrdinalIgnoreCase) || " is 132.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The length of the statement  "                // Get the directory of the executing assembly (some strange path in the middle of nowhere on the disk and attach "\tmp"' e.g.: " is 127.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The length of the statement  "                var assemblyDir = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) ?? throw new InvalidOperationException()' "tmp"); " is 144.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The length of the statement  "                // The proposed approach of Andras (http://wpflocalizeextension.codeplex.com/discussions/66098?ProjectName=wpflocalizeextension) " is 128.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The length of the statement  "                    if (availableResource.EndsWith(resManagerNameToSearch) && possiblePrefixes.Any(p => availableResource.StartsWith(p + "."))) " is 123.
Long Statement,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The length of the statement  "                    throw new ArgumentException(string.Format("No resource manager for dictionary '{0}' in assembly '{1}' found! ({1}.{0})"' resourceDictionary' resourceAssembly)); " is 160.
Complex Conditional,WPFLocalizeExtension.Extensions,LocExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\LocExtension.cs,FormatOutput,The conditional expression  "LocalizeDictionary.Instance.OutputMissingKeys                          && !string.IsNullOrEmpty(_key) && (targetType == typeof(String) || targetType == typeof(object))"  is complex.
Complex Conditional,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,IsFileOfInterest,The conditional expression  "!(f.EndsWith(".resx"' StringComparison.OrdinalIgnoreCase) || f.EndsWith(".resources.dll"' StringComparison.OrdinalIgnoreCase) ||                    f.EndsWith(".resources"' StringComparison.OrdinalIgnoreCase)) &&                  !dir.Equals(Path.GetDirectoryName(f)' StringComparison.OrdinalIgnoreCase)"  is complex.
Empty Catch Block,WPFLocalizeExtension.Engine,EnumComboBox,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\EnumComboBox.cs,SetType,The method has an empty catch block.
Empty Catch Block,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,OnContentChanged,The method has an empty catch block.
Empty Catch Block,WPFLocalizeExtension.Providers,CSVLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProviderBase.cs,OnProviderChanged,The method has an empty catch block.
Empty Catch Block,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The method has an empty catch block.
Empty Catch Block,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,GetResourceManager,The method has an empty catch block.
Empty Catch Block,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,OnProviderChanged,The method has an empty catch block.
Magic Number,WPFLocalizeExtension.Engine,GapTextControl,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\GapTextControl.cs,OnContentChanged,The following statement contains a magic number: var itemIndex = int.Parse(match.Groups[2].Value);
Magic Number,WPFLocalizeExtension.Engine,LocalizeDictionary,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Engine\LocalizeDictionary.cs,GetIsInDesignMode,The following statement contains a magic number: _isInDesignMode = (bool)Dispatcher.Invoke(DispatcherPriority.Normal' TimeSpan.FromMilliseconds(100)' new Func<bool>(GetIsInDesignMode));
Magic Number,WPFLocalizeExtension.Extensions,LocTextExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\Compatibility.cs,FormatOutput,The following statement contains a magic number: textMain = string.Format(                      LocalizeDictionary.Instance.SpecificCulture'                      textMain'                      _formatSegments[0] ?? string.Empty'                      _formatSegments[1] ?? string.Empty'                      _formatSegments[2] ?? string.Empty'                      _formatSegments[3] ?? string.Empty'                      _formatSegments[4] ?? string.Empty);
Magic Number,WPFLocalizeExtension.Extensions,LocTextExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\Compatibility.cs,FormatOutput,The following statement contains a magic number: textMain = string.Format(                      LocalizeDictionary.Instance.SpecificCulture'                      textMain'                      _formatSegments[0] ?? string.Empty'                      _formatSegments[1] ?? string.Empty'                      _formatSegments[2] ?? string.Empty'                      _formatSegments[3] ?? string.Empty'                      _formatSegments[4] ?? string.Empty);
Magic Number,WPFLocalizeExtension.Extensions,LocTextExtension,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Extensions\Compatibility.cs,FormatOutput,The following statement contains a magic number: textMain = string.Format(                      LocalizeDictionary.Instance.SpecificCulture'                      textMain'                      _formatSegments[0] ?? string.Empty'                      _formatSegments[1] ?? string.Empty'                      _formatSegments[2] ?? string.Empty'                      _formatSegments[3] ?? string.Empty'                      _formatSegments[4] ?? string.Empty);
Magic Number,WPFLocalizeExtension.Providers,CSVEmbeddedLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVEmbeddedLocalizationProvider.cs,GetLocalizedObject,The following statement contains a magic number: parts.Length < 2
Magic Number,WPFLocalizeExtension.Providers,CSVLocalizationProvider,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProvider.cs,GetLocalizedObject,The following statement contains a magic number: parts.Length < 2
Magic Number,WPFLocalizeExtension.Providers,CSVLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProviderBase.cs,ParseKey,The following statement contains a magic number: outKey = split[2];
Magic Number,WPFLocalizeExtension.Providers,CSVLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProviderBase.cs,ParseKey,The following statement contains a magic number: split.Length == 3
Magic Number,WPFLocalizeExtension.Providers,CSVLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\CSVLocalizationProviderBase.cs,ParseKey,The following statement contains a magic number: split.Length == 2
Magic Number,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,ParseKey,The following statement contains a magic number: outKey = split[2];
Magic Number,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,ParseKey,The following statement contains a magic number: split.Length == 3
Magic Number,WPFLocalizeExtension.Providers,ResxLocalizationProviderBase,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\Providers\ResxLocalizationProviderBase.cs,ParseKey,The following statement contains a magic number: split.Length == 2
Magic Number,WPFLocalizeExtension.TypeConverters,ThicknessConverter,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\TypeConverters\ThicknessConverter.cs,ConvertFrom,The following statement contains a magic number: switch (parts.Length)                  {                      case 1:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          result = new Thickness(d1);                          break;                        case 2:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          result = new Thickness(d1' d2' d1' d2);                          break;                        case 4:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          double.TryParse(parts[2]' NumberStyles.Any' culture' out d3);                          double.TryParse(parts[3]' NumberStyles.Any' culture' out d4);                          result = new Thickness(d1' d2' d3' d4);                          break;                  }
Magic Number,WPFLocalizeExtension.TypeConverters,ThicknessConverter,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\TypeConverters\ThicknessConverter.cs,ConvertFrom,The following statement contains a magic number: switch (parts.Length)                  {                      case 1:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          result = new Thickness(d1);                          break;                        case 2:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          result = new Thickness(d1' d2' d1' d2);                          break;                        case 4:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          double.TryParse(parts[2]' NumberStyles.Any' culture' out d3);                          double.TryParse(parts[3]' NumberStyles.Any' culture' out d4);                          result = new Thickness(d1' d2' d3' d4);                          break;                  }
Magic Number,WPFLocalizeExtension.TypeConverters,ThicknessConverter,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\TypeConverters\ThicknessConverter.cs,ConvertFrom,The following statement contains a magic number: switch (parts.Length)                  {                      case 1:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          result = new Thickness(d1);                          break;                        case 2:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          result = new Thickness(d1' d2' d1' d2);                          break;                        case 4:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          double.TryParse(parts[2]' NumberStyles.Any' culture' out d3);                          double.TryParse(parts[3]' NumberStyles.Any' culture' out d4);                          result = new Thickness(d1' d2' d3' d4);                          break;                  }
Magic Number,WPFLocalizeExtension.TypeConverters,ThicknessConverter,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\TypeConverters\ThicknessConverter.cs,ConvertFrom,The following statement contains a magic number: switch (parts.Length)                  {                      case 1:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          result = new Thickness(d1);                          break;                        case 2:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          result = new Thickness(d1' d2' d1' d2);                          break;                        case 4:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          double.TryParse(parts[2]' NumberStyles.Any' culture' out d3);                          double.TryParse(parts[3]' NumberStyles.Any' culture' out d4);                          result = new Thickness(d1' d2' d3' d4);                          break;                  }
Missing Default,WPFLocalizeExtension.TypeConverters,ThicknessConverter,D:\research\architectureSmells\repos1\SeriousM_WPFLocalizationExtension\src\TypeConverters\ThicknessConverter.cs,ConvertFrom,The following switch statement is missing a default case: switch (parts.Length)                  {                      case 1:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          result = new Thickness(d1);                          break;                        case 2:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          result = new Thickness(d1' d2' d1' d2);                          break;                        case 4:                          double.TryParse(parts[0]' NumberStyles.Any' culture' out d1);                          double.TryParse(parts[1]' NumberStyles.Any' culture' out d2);                          double.TryParse(parts[2]' NumberStyles.Any' culture' out d3);                          double.TryParse(parts[3]' NumberStyles.Any' culture' out d4);                          result = new Thickness(d1' d2' d3' d4);                          break;                  }
