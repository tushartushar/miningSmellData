Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Blade.Tools.Quality.Build.Templates,InitClassTemplateBase,C:\repos\vannatech_blade\source\Tools\Quality\Core\Build\Templates\InitClassTemplate.cs,Write,The length of the statement  "            textToAppend = textToAppend.Replace(global::System.Environment.NewLine' (global::System.Environment.NewLine + this.currentIndentField)); " is 136.
Long Statement,Blade.Tools.Quality.Build.Templates,TestClassTemplateBase,C:\repos\vannatech_blade\source\Tools\Quality\Core\Build\Templates\TestClassTemplate.cs,Write,The length of the statement  "            textToAppend = textToAppend.Replace(global::System.Environment.NewLine' (global::System.Environment.NewLine + this.currentIndentField)); " is 136.
Empty Catch Block,Blade.Tools.Quality.Hosting,TestHost,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestHost.cs,CleanProcess,The method has an empty catch block.
Magic Number,Blade.Tools.Quality.Hosting,TestServer,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestServer.cs,TestServer,The following statement contains a magic number: _port = (int)((double)DateTime.Now.Millisecond * 56.0 + 8000.0);
Magic Number,Blade.Tools.Quality.Hosting,TestServer,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestServer.cs,TestServer,The following statement contains a magic number: _port = (int)((double)DateTime.Now.Millisecond * 56.0 + 8000.0);
Magic Number,Blade.Tools.Quality.Hosting,TestHost,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestHost.cs,Connect,The following statement contains a magic number: var id = Guid.NewGuid().ToString("N").Substring(8' 8);
Magic Number,Blade.Tools.Quality.Hosting,TestHost,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestHost.cs,Connect,The following statement contains a magic number: var id = Guid.NewGuid().ToString("N").Substring(8' 8);
Magic Number,Blade.Tools.Quality.Hosting,TestHost,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestHost.cs,WaitForClients,The following statement contains a magic number: while (_clients.Count < count)              {                  if (!_connectEvent.WaitOne(30000))                      throw new InvalidOperationException("Unable to connect to client.");                    _connectEvent.Reset();              }
Magic Number,Blade.Tools.Quality.Hosting,TestHost,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestHost.cs,CreateProcess,The following statement contains a magic number: try              {                  var info = new ProcessStartInfo(client.ExePath' client.Arguments + " " + url);                  info.UseShellExecute = false;                    var proc = Process.Start(info);                  var handle = WaitForWindow(proc);                    if (handle != IntPtr.Zero)                      ShowWindowAsync(handle' 11);                    return proc;              }              catch              {                  return null;              }
Magic Number,Blade.Tools.Quality.Hosting,TestHost,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestHost.cs,WaitForWindow,The following statement contains a magic number: try              {                  if (proc.HasExited)                  {                      return IntPtr.Zero;                  }                    proc.WaitForInputIdle(3000);                  return proc.MainWindowHandle;              }              catch (InvalidOperationException)              {                  return IntPtr.Zero;              }
Magic Number,Blade.Tools.Quality.Hosting,TestExecutor,C:\repos\vannatech_blade\source\Tools\Quality\Core\Hosting\TestExecutor.cs,RunTest,The following statement contains a magic number: if (count > 0)              {                  // wait for tests to complete                  if (!waitEvent.WaitOne(DefaultTimeout * 1000))                  {                      results.Add(new TestExecutionResult                      {                          ErrorMessage = "The test timed out' after " + DefaultTimeout + " seconds."                      });                  }              }
Magic Number,Blade.Tools.Quality.Web,HttpHandler,C:\repos\vannatech_blade\source\Tools\Quality\Core\Web\HttpHandler.cs,GenerateETag,The following statement contains a magic number: if (buffer.Length < 64)                  localBuffer = Enumerable.Repeat<byte>(0' 64).ToArray();              else              {                  localBuffer = new byte[64];                  Array.Copy(buffer' localBuffer' 64);              }
Magic Number,Blade.Tools.Quality.Web,HttpHandler,C:\repos\vannatech_blade\source\Tools\Quality\Core\Web\HttpHandler.cs,GenerateETag,The following statement contains a magic number: if (buffer.Length < 64)                  localBuffer = Enumerable.Repeat<byte>(0' 64).ToArray();              else              {                  localBuffer = new byte[64];                  Array.Copy(buffer' localBuffer' 64);              }
Magic Number,Blade.Tools.Quality.Web,HttpHandler,C:\repos\vannatech_blade\source\Tools\Quality\Core\Web\HttpHandler.cs,GenerateETag,The following statement contains a magic number: if (buffer.Length < 64)                  localBuffer = Enumerable.Repeat<byte>(0' 64).ToArray();              else              {                  localBuffer = new byte[64];                  Array.Copy(buffer' localBuffer' 64);              }
Magic Number,Blade.Tools.Quality.Web,HttpHandler,C:\repos\vannatech_blade\source\Tools\Quality\Core\Web\HttpHandler.cs,GenerateETag,The following statement contains a magic number: if (buffer.Length < 64)                  localBuffer = Enumerable.Repeat<byte>(0' 64).ToArray();              else              {                  localBuffer = new byte[64];                  Array.Copy(buffer' localBuffer' 64);              }
