Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Laan.Sql.Formatter.Test,TestExecStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestExecStatementFormatting.cs,Can_Format_Exec_Statement_With_Implicit_Arguments_That_Do_Require_Wrapping,The length of the statement  "            var sql = @"exec SomeFunc 10' 'Ben'' '2016-12-05'' 1' 'a093203jwjlsdflsldfkjhdkfsjdkfjshdkjfhskjdsdfoirDFsds23234534dfsd'"; " is 123.
Long Statement,Laan.Sql.Formatter.Test,TestExecuteSqlStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestExecuteSqlStatementFormatting.cs,Can_Format_Select_Within_spExecuteSql,The length of the statement  "                  N'select TOP (@p0) T.Id' T.Name from [Transaction] T where T.Type in (''Process''' ''TransferFrom'') and T.Code in (@p1) and T.Name <> @p2'' " is 140.
Long Statement,Laan.Sql.Formatter.Test,TestBlockStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestBlockStatementFormatting.cs,Can_Format_Begin_End_Block_With_If_Else_Statement,The length of the statement  "            var actual = sut.Execute( "IF @A > 1 BEGIN SELECT TOP 20 Field1' Field2 FROM dbo.Table T END ELSE BEGIN SELECT @ID END" ); " is 122.
Long Statement,Laan.Sql.Formatter.Test,TestCreateStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestCreateStatementFormatting.cs,Can_Format_Simple_Create_Index_Statement,The length of the statement  "            var actual = sut.Execute(@"CREATE UNIQUE NONCLUSTERED INDEX [IX_Sites_Code] ON dbo.Sites (Code) WITH (IGNORE_DUP_KEY = ON )"); " is 126.
Long Statement,Laan.Sql.Formatter.Test,TestCreateStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestCreateStatementFormatting.cs,Can_Format_Complex_Create_Index_Statement,The length of the statement  "            var actual = sut.Execute(@"CREATE UNIQUE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address] ( [AddressLine1] ASC' [AddressLine2] DESC' [City] ASC' [StateProvinceID] DESC' [PostalCode] ASC) WITH (PAD_INDEX  = OFF' STATISTICS_NORECOMPUTE  = OFF' SORT_IN_TEMPDB = OFF' IGNORE_DUP_KEY = OFF' DROP_EXISTING = OFF' ONLINE = OFF' ALLOW_ROW_LOCKS  = ON' ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]"); " is 446.
Long Statement,Laan.Sql.Formatter.Test,TestCreateStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestCreateStatementFormatting.cs,Can_Format_Complex_Create_Index_Statement,The length of the statement  "                "CREATE UNIQUE NONCLUSTERED INDEX [IX_Address_AddressLine1_AddressLine2_City_StateProvinceID_PostalCode] ON [Person].[Address]"' " is 128.
Long Statement,Laan.Sql.Formatter.Test,TestCreateStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestCreateStatementFormatting.cs,Can_Format_Complex_Create_Index_Statement,The length of the statement  "                "WITH ( PAD_INDEX = OFF' STATISTICS_NORECOMPUTE = OFF' SORT_IN_TEMPDB = OFF' IGNORE_DUP_KEY = OFF' DROP_EXISTING = OFF' ONLINE = OFF' ALLOW_ROW_LOCKS = ON' ALLOW_PAGE_LOCKS = ON ) ON [PRIMARY]" " is 193.
Long Statement,Laan.Sql.Formatter.Test,TestCteStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestCteStatementFormatting.cs,Can_Format_Muliple_Ctes,The length of the statement  "            var actual = sut.Execute("WITH A AS( SELECT Num  =1)' B AS (SELECT 1 AS P FROM X JOIN Y ON X.I = Y.I)  SELECT * FROM A"); " is 121.
Long Statement,Laan.Sql.Formatter.Test,TestSelectStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestSelectStatementFormatting.cs,Can_Format_Select_Statement_With_Group_By_Multiple_Columns_With_Having_Clause,The length of the statement  "            var actual = sut.Execute( "SELECT COUNT(*) FROM dbo.Table T GROUP BY A.FieldID' B.FieldID' C.FieldID HAVING COUNT(*) > 1" ); " is 124.
Long Statement,Laan.Sql.Formatter.Test,TestSelectStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestSelectStatementFormatting.cs,Can_Format_Select_Statement_With_Group_By_Multiple_Columns_With_Multiple_Having_Clauses,The length of the statement  "            var actual = sut.Execute( "SELECT COUNT(*) FROM dbo.Table T GROUP BY A.FieldID HAVING COUNT(*) > 1 AND SUM(A.Total)<10 " ); " is 123.
Long Statement,Laan.Sql.Formatter.Test,TestSelectStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestSelectStatementFormatting.cs,Can_Format_Select_Statement_With_Nested_Select_In_From,The length of the statement  "            var actual = sut.Execute( "SELECT A.ID' COUNT(*) FROM ( SELECT Name FROM Server.db.owner.Tables T JOIN OtherTable O ON O.ID = T.ID WHERE T.ID = 'ben' ) AS X " ); " is 161.
Long Statement,Laan.Sql.Formatter.Test,TestSelectStatementFormatting,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\TestSelectStatementFormatting.cs,Can_Format_Select_With_Multiple_Froms_With_Joins,The length of the statement  "            var actual = sut.Execute( "select id from table1 t1 join other1 o1 on t1.id = o1.id' table2 t2 join other2 o2 on t2.id = o2.id" ); " is 130.
Magic Number,Laan.Sql.Formatter.Test,BaseFormattingTest,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\BaseFormattingTest.cs,DisplayLists,The following statement contains a magic number: const int offset = 5;
Magic Number,Laan.Sql.Formatter.Test,BaseFormattingTest,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\BaseFormattingTest.cs,DisplayLists,The following statement contains a magic number: int width = 95;
Magic Number,Laan.Sql.Formatter.Test,BaseFormattingTest,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\BaseFormattingTest.cs,DisplayLists,The following statement contains a magic number: result.AppendFormat( "{0}\n"' new string( '-'' width * 2 + offset ) );
Magic Number,Laan.Sql.Formatter.Test,BaseFormattingTest,D:\research\architectureSmells\repos\benlaan_sqlformat\Laan.SQL.Formatter.Test\BaseFormattingTest.cs,DisplayLists,The following statement contains a magic number: string flag = expectedLine == actualLine ? " " : new string( Convert.ToChar( 187 )' 1 );
