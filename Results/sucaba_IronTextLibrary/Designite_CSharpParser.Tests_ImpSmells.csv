Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,CSharpParser.Tests,BasicTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser.Tests\BasicTest.cs,AreCompatibleStates,The method has 5 parameters. Parameters: data' terms' table' p' q
Magic Number,CSharpParser.Tests,BasicTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser.Tests\BasicTest.cs,BigRecognizerTest,The following statement contains a magic number: Test(path' TestFlags.RunRecognizer' 3);
Magic Number,CSharpParser.Tests,BasicTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser.Tests\BasicTest.cs,BigTest,The following statement contains a magic number: Test(path' TestFlags.All' 3);
Magic Number,CSharpParser.Tests,BasicTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser.Tests\BasicTest.cs,TestLoad,The following statement contains a magic number: timer.ElapsedMilliseconds > 1000
Missing Default,CSharpParser.Tests,BasicTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser.Tests\BasicTest.cs,GetShift,The following switch statement is missing a default case: switch (x.Kind)              {                  case ParserActionKind.Shift:                  case ParserActionKind.ShiftReduce:                      return x;                  case ParserActionKind.Conflict:                      int start = x.Value1;                      int count = x.Value2;                      int last = start + count;                      for (; start != last; ++start)                      {                          var cAction = ParserAction.Decode(data.ParserConflictActionTable[start]);                          switch (cAction.Kind)                          {                              case ParserActionKind.Shift:                              case ParserActionKind.ShiftReduce:                                  return cAction;                          }                      }                        break;              }
Missing Default,CSharpParser.Tests,BasicTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser.Tests\BasicTest.cs,GetShift,The following switch statement is missing a default case: switch (cAction.Kind)                          {                              case ParserActionKind.Shift:                              case ParserActionKind.ShiftReduce:                                  return cAction;                          }
