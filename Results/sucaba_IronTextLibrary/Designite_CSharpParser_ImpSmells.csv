Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,DelegateDeclaration,The method has 7 parameters. Parameters: attributes' modifiers' returnType' id' typeParams' formalParams' typeParameterConstraints
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,EnumDeclaration,The method has 6 parameters. Parameters: attributes' modifiers' id' enumBase' body' semi
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,JoinClause,The method has 5 parameters. Parameters: type' identifier' expression1' expression2' expression3
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,JoinIntoClause,The method has 6 parameters. Parameters: type' identifier1' expression1' expression2' expression3' identifier2
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,InterfaceDeclaration,The method has 9 parameters. Parameters: attributes' modifiers' partial' id' typeParams' interfaceBase' typeParamsConstraints' body' semi
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,InterfaceMethodDeclaration,The method has 7 parameters. Parameters: attributes' new' returnType' identifier' typeParams' formalParams' typeParameterConstraints
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,InterfacePropertyDeclaration,The method has 5 parameters. Parameters: attributes' new' type' id' accessors
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,InterfaceIndexerDeclaration,The method has 5 parameters. Parameters: attributes' new' type' formalParams' accessors
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,StructDeclaration,The method has 8 parameters. Parameters: attributes' modifier' partial' id' typeParameters' interfaces' typeParameterConstraints' body
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,ClassDeclaration,The method has 8 parameters. Parameters: attributes' modifiers' partial' identifier' typeParameters' classBase' typeParamConstraints' body
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,MethodHeader,The method has 8 parameters. Parameters: attributes' modifiers' partial' returnType' memberName' typeParameters' formalParams' typeParamConstraints
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,FixedParameter,The method has 5 parameters. Parameters: attributes' modfier' type' id' defaultArgument
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,PropertyDeclaration,The method has 5 parameters. Parameters: attributes' modifiers' type' name' accessors
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,EventDeclaration,The method has 5 parameters. Parameters: attributes' modifiers' type' memberName' accessorDeclarations
Long Parameter List,CSharpParser,ICsGrammar,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Grammar\Grammar.Arrays.cs,BinaryOperatorDeclarator,The method has 6 parameters. Parameters: type' op' paramType1' paramId1' paramType2' paramId2
Magic Number,CSharpParser,Program,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Program.cs,Main,The following statement contains a magic number: using (var interp = new Interpreter<ICsGrammar>())              {                  TestLoad(timer' path' interp);                    //int tokenCount = interp.Scan(input' path).Count();                  //Console.WriteLine("token count = {0}"' tokenCount);                  for (int i = 0; i != 10; ++i)                  {                      timer.Reset();                      using (var input = new StreamReader(path))                      {                          timer.Start();                          interp.Parse(input' path);                          timer.Stop();                      }                        Console.WriteLine(                          "{1}(1'1): message : Parsing time={0}sec"'                          timer.Elapsed.TotalSeconds'                          path);                  }              }
Magic Number,CSharpParser,Program,C:\repos\sucaba_IronTextLibrary\Src\Sandbox\CSharpParser\Program.cs,TestLoad,The following statement contains a magic number: if (timer.ElapsedMilliseconds > 1000)              {                  Console.WriteLine(                      "{1}(1'1): warning : Language loading is too slow time={0}sec"'                      timer.Elapsed.TotalSeconds'                      path);              }
