Implementation smell,Namespace,Class,File,Method,Description
Long Method,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The method has 107 lines of code.
Complex Method,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,ExceptValues,Cyclomatic complexity of the method is 8
Complex Method,IronText.Tests.Algorithm,IntIntervalTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntIntervalTest.cs,TestIntervalRelation,Cyclomatic complexity of the method is 8
Complex Method,IronText.Tests.Algorithm,TdfaSimulationLexer,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\Simulation\TdfaSimulationLexer.cs,Accept,Cyclomatic complexity of the method is 8
Complex Method,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,ExceptValues,Cyclomatic complexity of the method is 8
Complex Method,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Scan1,Cyclomatic complexity of the method is 14
Complex Method,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,Cyclomatic complexity of the method is 10
Complex Method,IronText.Tests.Samples,DynamicLinq,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,FindIEnumerable,Cyclomatic complexity of the method is 10
Complex Method,IronText.Tests.Syntax.Re2IL,ScannerTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerTest.cs,TestScanner,Cyclomatic complexity of the method is 8
Long Statement,IronText.Tests.Lib.IL.Generators,GrammarSerializerTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Lib\IL\Generators\GrammarSerializerTest.cs,Test,The length of the statement  "            var factory = new CachedMethod<Func<Grammar>>("GrammarSerializerTest.Assembly0"' (emit' args) => { target.Build(emit); return emit.Ret(); }).Delegate; " is 150.
Long Statement,IronText.Tests.Lib.IL.Generators,ReadOnlyTableGeneratorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Lib\IL\Generators\ReadOnlyTableGeneratorTest.cs,Test,The length of the statement  "            var getCell = new CachedMethod<Func<int'int'int>>("TableSerializerTest.Assembly0"' (emit' args) => { target.Build(emit); return emit.Ret(); }).Delegate; " is 152.
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,single_range_set_contains_only_elements_in_range,The following statement contains a magic number: int middle = (int)(((long)start + finish) / 2);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,set_from_intervals_array_contains_only_element_in_these_ranges,The following statement contains a magic number: int middle = (int)(((long)interval.First + interval.Last) / 2);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,equility_and_hash_to_set_with_different_size_works_according_to_the_content,The following statement contains a magic number: BitSetType otherSetType = new BitSetType(10);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,complement_returns_correct_result,The following statement contains a magic number: int countToCheck = 1000;
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,addall_with_set_of_different_size,The following statement contains a magic number: var otherSetType = new BitSetType(10);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,addall_with_set_of_different_size,The following statement contains a magic number: var other = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,addall_with_set_of_different_size,The following statement contains a magic number: var other = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,addall_with_set_of_different_size,The following statement contains a magic number: var other = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,intersect_with_set_of_different_size,The following statement contains a magic number: var otherSetType = new BitSetType(10);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,intersect_with_set_of_different_size,The following statement contains a magic number: var y = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,intersect_with_set_of_different_size,The following statement contains a magic number: var y = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,intersect_with_set_of_different_size,The following statement contains a magic number: var y = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,complement_with_set_of_different_size_returns_correct_result,The following statement contains a magic number: var otherSetType = new BitSetType(10);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,complement_with_set_of_different_size_returns_correct_result,The following statement contains a magic number: var y = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,complement_with_set_of_different_size_returns_correct_result,The following statement contains a magic number: var y = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,complement_with_set_of_different_size_returns_correct_result,The following statement contains a magic number: var y = otherSetType.Of(2' 5' 9);
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,complement_with_set_of_different_size_returns_correct_result,The following statement contains a magic number: int countToCheck = 1000;
Magic Number,IronText.Tests.Algorithm,BitSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BitSetTest.cs,ExceptValues,The following statement contains a magic number: int middle = (int)(((long)x + y) / 2);
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                      new IntArrow<int>(2' 20)'                      new IntArrow<int>(5' 10' 30)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                      new IntArrow<int>(2' 20)'                      new IntArrow<int>(5' 10' 30)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                      new IntArrow<int>(2' 20)'                      new IntArrow<int>(5' 10' 30)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                      new IntArrow<int>(2' 20)'                      new IntArrow<int>(5' 10' 30)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                      new IntArrow<int>(2' 20)'                      new IntArrow<int>(5' 10' 30)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                      new IntArrow<int>(2' 20)'                      new IntArrow<int>(5' 10' 30)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 0));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(20' Eval(node' 2));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(20' Eval(node' 2));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(DefaultValue' Eval(node' 3));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(DefaultValue' Eval(node' 4));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(30' Eval(node' 5));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(30' Eval(node' 5));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(30' Eval(node' 10));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(30' Eval(node' 10));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,Test0,The following statement contains a magic number: Assert.AreEqual(DefaultValue' Eval(node' 11));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleValueInterval,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 10)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleValueInterval,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 0));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 5' 10)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: var intArrows =                   new []                  {                      new IntArrow<int>(0' 5' 10)'                  };
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 0));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 3));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 3));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 5));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: Assert.AreEqual(10' Eval(node' 5));
Magic Number,IronText.Tests.Algorithm,BinaryDecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\BinaryDecisionTreeBuilderTest.cs,SingleInterval,The following statement contains a magic number: Assert.AreEqual(DefaultValue' Eval(node' 6));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: var frequency = new UniformIntFrequency(new IntInterval(-100' 100));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: var frequency = new UniformIntFrequency(new IntInterval(-100' 100));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: const int DefaultValue = -100;
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(3' 49' 1));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(3' 49' 1));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(51' 1));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(54' 100' 1));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(54' 100' 1));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestSameActionUnification,The following statement contains a magic number: var bounds = new IntInterval(0' 1000);
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestElementaryChecks,The following statement contains a magic number: const int DefaultValue = -100;
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestElementaryChecks,The following statement contains a magic number: var bounds = new IntInterval(0' 9);
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestElementaryChecks,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(2' 100));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestElementaryChecks,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(2' 100));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestElementaryChecks,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(5' 200));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestElementaryChecks,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(5' 200));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.DefaultValue = 0.0000001;
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(1' 520.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(2' 49' 3.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(2' 49' 3.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(2' 49' 3.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(50' 236.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(50' 236.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(51' 100' 2.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(51' 100' 2.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: frequency.Set(new IntArrow<double>(51' 100' 2.0));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(2' 49' 2));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(2' 49' 2));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(2' 49' 2));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(50' 3));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(50' 3));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(51' 100' 4));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(51' 100' 4));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: elementToAction.Set(new IntArrow<int>(51' 100' 4));
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(2' node.Decide(2) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(2' node.Decide(2) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(2' node.Decide(49) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(2' node.Decide(49) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(3' node.Decide(50) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(3' node.Decide(50) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(4' node.Decide(51) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(4' node.Decide(51) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(4' node.Decide(100) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(4' node.Decide(100) );
Magic Number,IronText.Tests.Algorithm,DecisionTreeBuilderTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\DecisionTreeBuilderTest.cs,TestBalanced,The following statement contains a magic number: Assert.AreEqual(-1' node.Decide(200) );
Magic Number,IronText.Tests.Algorithm,IntIntervalTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntIntervalTest.cs,TestIntervalRelation,The following statement contains a magic number: const int last1 = 4;
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,SparseTableTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntMaps\SparseTableTest.cs,Test,The following statement contains a magic number: var data = new int[']              {                  { 2' 3' 0' 1' 0 }'                  { 0' 3' 0' 0' 4 }'                  { 2' 0' 5' 0' 0 }'                  { 0' 0' 0' 5' 0 }'                  { 2' 0' 0' 0' 4 }'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: target.Set(new IntArrow<double>(0' 5' X));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(X' target.Get(5));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: target.Set(new IntArrow<double>(4' 5' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: target.Set(new IntArrow<double>(4' 5' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(Y' target.Get(4));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(Y' target.Get(5));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(X' target.Get(2));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(1000));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: target.Clear(new IntInterval(3' 4));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: target.Clear(new IntInterval(3' 4));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(X' target.Get(2));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(3));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(4));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(Y' target.Get(5));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(6));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(X' target.Get(2));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(3));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(4));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(Y' target.Get(5));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(6));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: target.Clear(new IntInterval(6' int.MaxValue));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(X' target.Get(2));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(3));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(4));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(Y' target.Get(5));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(D' target.Get(6));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(                  new []                   {                      new IntArrow<double>(0' 2' X)'                      new IntArrow<double>(5' 5' Y)'                  }'                  target.Enumerate());
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(                  new []                   {                      new IntArrow<double>(0' 2' X)'                      new IntArrow<double>(5' 5' Y)'                  }'                  target.Enumerate());
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(                  new []                   {                      new IntArrow<double>(0' 2' X)'                      new IntArrow<double>(5' 5' Y)'                  }'                  target.Enumerate());
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,Test,The following statement contains a magic number: i != 10
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(0' 5' X));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(9' 9' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(9' 9' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(11' 14' Z));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(11' 14' Z));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(20' 25' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(20' 25' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var bounds = new IntInterval(3' 22);
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var bounds = new IntInterval(3' 22);
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsCoverMultipleArrowsEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(3' 5' X)'                   new IntArrow<double>(6' 8' D)'                   new IntArrow<double>(9' 9' Y)'                  new IntArrow<double>(10' 10' D)'                   new IntArrow<double>(11' 14' Z)'                  new IntArrow<double>(15' 19' D)'                   new IntArrow<double>(20' 22' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(0' 5' X));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(9' 9' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(9' 9' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(11' 14' Z));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(11' 14' Z));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(20' 25' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: target.Set(new IntArrow<double>(20' 25' Y));
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: var bounds = new IntInterval(21' 24);
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: var bounds = new IntInterval(21' 24);
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(21' 24' Y)'              };
Magic Number,IronText.Tests.Algorithm,MutableIntMapTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\MutableIntMapTest.cs,WhenBoundsAreInsideSingleArrowEnumerateCoverage,The following statement contains a magic number: var expected = new[]              {                  new IntArrow<double>(21' 24' Y)'              };
Magic Number,IronText.Tests.Algorithm,SetOrthohonatorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\SetOrthohonatorTest.cs,TestOrthohonate,The following statement contains a magic number: Assert.AreEqual(4' outputSets.Count);
Magic Number,IronText.Tests.Algorithm,SetOrthohonatorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\SetOrthohonatorTest.cs,TestOrthohonateAdd,The following statement contains a magic number: Assert.AreEqual(4' outputSets.Count);
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,single_range_set_contains_only_elements_in_range,The following statement contains a magic number: int middle = (int)(((long)start + finish) / 2);
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,set_from_intervals_array_contains_only_element_in_these_ranges,The following statement contains a magic number: int middle = (int)(((long)interval.First + interval.Last) / 2);
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,identical_sets_are_equal,The following statement contains a magic number: var sets = new IntSet[]              {                  IntSet.Of(10)'                  IntSet.Of(10)'                  IntSet.Range(10' 10)'                  IntSet.Range(10' 10)'                  IntSet.Ranges(                      new []                      {                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                          new IntInterval(10' 10)'                      })'              };
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,complement_returns_correct_result,The following statement contains a magic number: int countToCheck = 1000;
Magic Number,IronText.Tests.Algorithm,IntervalIntSetTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Algorithm\IntervalIntSetTest.cs,ExceptValues,The following statement contains a magic number: int middle = (int)(((long)x + y) / 2);
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,ScannerErrorRecovery,The following statement contains a magic number: AssertErrors(0' 3);
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,ScannerErrorRecovery,The following statement contains a magic number: AssertErrors(0' 3);
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,TailScannerErrorRecovery,The following statement contains a magic number: AssertErrors(0' 2' "One lexical error for incomplete token and one syntax error for unexpected EOI");
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,LocalCorrections,The following statement contains a magic number: AssertErrors(0' 3);
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,LocalCorrectionWithBeacon,The following statement contains a magic number: AssertErrors(0' 2);
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,TailLocalCorrections,The following statement contains a magic number: AssertErrors(0' 2);
Magic Number,IronText.Tests.Framework,ErrorRecoveryTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ErrorRecoveryTest.cs,AllLevelsRecovery,The following statement contains a magic number: AssertErrors(1' 2);
Magic Number,IronText.Tests.Framework,NondeterministicCalc,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\GlrTest.cs,Number,The following statement contains a magic number: return 3;
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(7' Eval("1 + 2 * 3"));
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(9' Eval("1 + 2 ^ 3"));
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(512' Eval("2 ^ 3 ^ 2"));
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(4' Eval("8 / 4 * 2"));
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(7' Eval("3 + 2 2"));
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(8' Eval("3 + 2 2 + 1"));
Magic Number,IronText.Tests.Framework,OperatorPrecedenceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\OperatorPrecedenceTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(8' Eval("2 2 2"));
Magic Number,IronText.Tests.Framework,LineColumnHandlingTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(context.Result[2]' hlocs[2]);
Magic Number,IronText.Tests.Framework,LineColumnHandlingTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(context.Result[2]' hlocs[2]);
Magic Number,IronText.Tests.Framework,LineColumnHandlingTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(context.Result[3]' hlocs[3]);
Magic Number,IronText.Tests.Framework,LineColumnHandlingTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(context.Result[3]' hlocs[3]);
Magic Number,IronText.Tests.Framework,LineColumnHandlingTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(context.Result[4]' hlocs[4]);
Magic Number,IronText.Tests.Framework,LineColumnHandlingTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(context.Result[4]' hlocs[4]);
Magic Number,IronText.Tests.Framework,LCLang,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,MultiLineTerm,The following statement contains a magic number: int innerLineCount = (length - prefix - suffix - 2) / 2;
Magic Number,IronText.Tests.Framework,LCLang,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,MultiLineTerm,The following statement contains a magic number: int innerLineCount = (length - prefix - suffix - 2) / 2;
Magic Number,IronText.Tests.Framework,LCLang,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\LineColumnHandlingTest.cs,SingleLineNLTerm,The following statement contains a magic number: int expectedLine = (buffer[start + length - 2] - '0');
Magic Number,IronText.Tests.Framework,MergeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,ResolvingAmbiguities,The following statement contains a magic number: Assert.AreEqual(6' interp.Context.Result.Value);
Magic Number,IronText.Tests.Framework,MergeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,ResolvingAmbiguities,The following statement contains a magic number: Assert.AreEqual(5' interp.Context.Result.Value);
Magic Number,IronText.Tests.Framework,MergeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,ResolvingAmbiguities,The following statement contains a magic number: Assert.AreEqual(6' interp.Context.Result.Value);
Magic Number,IronText.Tests.Framework,AmbiguousCalculator,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,UnaryPlus,The following statement contains a magic number: return new Expr(x.Value' precedence: 3' assoc: Associativity.Left);
Magic Number,IronText.Tests.Framework,AmbiguousCalculator,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,UnaryMinus,The following statement contains a magic number: return new Expr(-x.Value' precedence: 3' assoc: Associativity.Right);
Magic Number,IronText.Tests.Framework,AmbiguousCalculator,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,Mult,The following statement contains a magic number: return new Expr(x.Value * y.Value' precedence: 2' assoc: Associativity.Left);
Magic Number,IronText.Tests.Framework,AmbiguousCalculator,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,Div,The following statement contains a magic number: return new Expr(x.Value / y.Value' precedence: 2' assoc: Associativity.Left);
Magic Number,IronText.Tests.Framework,AmbiguousCalculator,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MergeTest.cs,Constant,The following statement contains a magic number: return new Expr(value' precedence: 10);
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: Loc[] expectedLocations = new Loc[] {                  new Loc(document' 0' 1)'                  new Loc(document' 1' 4)'                  new Loc(document' 4' 7)'                  new Loc(document' 7' 8)               };
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: Loc[] expectedLocations = new Loc[] {                  new Loc(document' 0' 1)'                  new Loc(document' 1' 4)'                  new Loc(document' 4' 7)'                  new Loc(document' 7' 8)               };
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: Loc[] expectedLocations = new Loc[] {                  new Loc(document' 0' 1)'                  new Loc(document' 1' 4)'                  new Loc(document' 4' 7)'                  new Loc(document' 7' 8)               };
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: Loc[] expectedLocations = new Loc[] {                  new Loc(document' 0' 1)'                  new Loc(document' 1' 4)'                  new Loc(document' 4' 7)'                  new Loc(document' 7' 8)               };
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: Loc[] expectedLocations = new Loc[] {                  new Loc(document' 0' 1)'                  new Loc(document' 1' 4)'                  new Loc(document' 4' 7)'                  new Loc(document' 7' 8)               };
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: var allTokens = new Scanner(Scan1' input' document' null' scanAction' 10' logging).ToArray();
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Test,The following statement contains a magic number: var scanner = new Scanner(Scan1' new StringReader(" a11")' Loc.MemoryString' null' scanAction' 10' logging);
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Scan1,The following statement contains a magic number: switch (cursor.InnerState)              {                  case 0: goto M0;                  case 1: goto MDIGIT;                  case 2: goto MSPACE;                  default: goto L0;              }
Magic Number,IronText.Tests.Framework,ScannerApisUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScannerApisUseCase.cs,Scan1,The following statement contains a magic number: cursor.InnerState = 2;
Magic Number,IronText.Tests.Framework,ScanSentinelTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ScanSentinelTest.cs,ExplicitSentinelCharTest,The following statement contains a magic number: Assert.AreEqual(                      new[] { new Msg(TOK1' ASB.Value' new Loc(0' 3)) }'                      tokens);
Magic Number,IronText.Tests.Framework,SppfProducerTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\SppfProducerTest.cs,TestAmbiguousTree,The following statement contains a magic number: Assert.AreEqual(3' numNodes.Length' "Leaf SPPF nodes should be shared");
Magic Number,IronText.Tests.Framework,SppfProducerTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\SppfProducerTest.cs,TestAmbiguousTree,The following statement contains a magic number: Assert.AreEqual(2' powNodes.Length' "Leaf SPPF nodes should be shared");
Magic Number,IronText.Tests.Framework,NondeterministicCalcForTree,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\SppfProducerTest.cs,Number,The following statement contains a magic number: return 3;
Magic Number,IronText.Tests.Framework,StartRulesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\StartRulesTest.cs,Test,The following statement contains a magic number: value == 2 || value == 4
Magic Number,IronText.Tests.Framework,StartRulesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\StartRulesTest.cs,Test,The following statement contains a magic number: value == 2 || value == 4
Magic Number,IronText.Tests.Framework,StartRulesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\StartRulesTest.cs,Test,The following statement contains a magic number: new[] {0' 1' 2' 3' 4}
Magic Number,IronText.Tests.Framework,StartRulesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\StartRulesTest.cs,Test,The following statement contains a magic number: new[] {0' 1' 2' 3' 4}
Magic Number,IronText.Tests.Framework,StartRulesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\StartRulesTest.cs,Test,The following statement contains a magic number: new[] {0' 1' 2' 3' 4}
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,StaticMethodTest,The following statement contains a magic number: Assert.AreEqual(555' Eval("555"));
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,StaticMethodTest,The following statement contains a magic number: Assert.AreEqual(555' Eval(spaces + "555" + spaces));
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,StaticMethodTest,The following statement contains a magic number: Assert.AreEqual(555' Eval( "/* prefix */ 555 // suffix" + spaces));
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,Operatives,The following statement contains a magic number: Assert.AreEqual(2' Eval("(- (/ (* (+ 2 5) 5) 7) 3)"));
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,Scope,The following statement contains a magic number: Assert.AreEqual(444' Eval("(begin (let x 444) x)")' "Single frame definition and use broken");
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,Scope,The following statement contains a magic number: Assert.AreEqual(111' Eval("(begin (let x 111) (begin x))")' "Namespace inheritance broken");
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,Scope,The following statement contains a magic number: Assert.AreEqual(444' Eval("(begin (let x 111) (begin (let x 444) x))")' "Parent frame cell overriding broken");
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,Scope,The following statement contains a magic number: Assert.AreEqual(111' Eval("(begin (let x 111) (begin (let x 444) x) x)")' "Popping child frame broken");
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,TestEval,The following statement contains a magic number: Assert.AreEqual(11' Eval("(begin (let x 44) (eval \"(/ x 4)\"))"));
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,ProgrammaticallyPassTokens,The following statement contains a magic number: Assert.AreEqual(60' result);
Magic Number,IronText.Tests.Framework,MixedFeaturesTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\MixedFeaturesTest.cs,ProgrammaticallyPassTokens,The following statement contains a magic number: Assert.AreEqual(60' result);
Magic Number,IronText.Tests.Framework,ParserAbstractionTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ParserAbstractionTest.cs,BaseAbstractClassTest,The following statement contains a magic number: Assert.AreEqual(6' result.Value);
Magic Number,IronText.Tests.Framework,ParserAbstractionTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\ParserAbstractionTest.cs,BaseInterfaceTest,The following statement contains a magic number: Assert.AreEqual(6' result.Value);
Magic Number,IronText.Tests.Extensibility,LanguageDescriptorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Extensions\LanguageDescriptorTest.cs,LanguageDescriptorCollectDataFromTypeMetadata,The following statement contains a magic number: Assert.AreEqual(2' target.SymbolResolver.Definitions.Count());
Magic Number,IronText.Tests.Framework.Attributes,MetaAttributeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\MetaAttributeTests.cs,Test,The following statement contains a magic number: Assert.GreaterOrEqual(fields.Length' 2);
Magic Number,IronText.Tests.Framework.Attributes,LanguageServiceAttributeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\LanguageServiceAttributeTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(new Loc(0' 3)' context.LastNonTermLocation);
Magic Number,IronText.Tests.Framework.Attributes,LanguageServiceAttributeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\LanguageServiceAttributeTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(new Loc(0' 3)' context.LastTermLocation);
Magic Number,IronText.Tests.Framework.Attributes,LanguageServiceAttributeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\LanguageServiceAttributeTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(new Loc(0' 4)' context.Nested.LastNonTermLocation);
Magic Number,IronText.Tests.Framework.Attributes,LanguageServiceAttributeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\LanguageServiceAttributeTest.cs,Test,The following statement contains a magic number: Assert.AreEqual(new Loc(0' 4)' context.Nested.LastTermLocation);
Magic Number,IronText.Tests.Framework.Attributes,ThisAsTokenAttributeTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Attributes\ThisAsTokenAttributeTest.cs,InterfaceAsRootContext,The following statement contains a magic number: Assert.AreEqual(94' result);
Magic Number,IronText.Tests.Framework.Performance,Lalr1DfaPerformanceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Performance\Lalr1DfaPerformanceTest.cs,Test,The following statement contains a magic number: const int tokenCount = 50;
Magic Number,IronText.Tests.Framework.Performance,Lalr1DfaPerformanceTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Framework\Performance\Lalr1DfaPerformanceTest.cs,Test,The following statement contains a magic number: const int ruleSize = 10;
Magic Number,IronText.Tests.Lib.IL.Generators,ImplementationGeneratorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Lib\IL\Generators\ImplementationGeneratorTest.cs,TestInterfaceImplementation,The following statement contains a magic number: inst.ValueProperty2 = 555;
Magic Number,IronText.Tests.Lib.IL.Generators,ImplementationGeneratorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Lib\IL\Generators\ImplementationGeneratorTest.cs,TestAbstractClassImplementation,The following statement contains a magic number: inst.ValueProperty2 = 555;
Magic Number,IronText.Tests.Lib.IL.Generators,ReadOnlyTableGeneratorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Lib\IL\Generators\ReadOnlyTableGeneratorTest.cs,Test,The following statement contains a magic number: const int rows = 2;
Magic Number,IronText.Tests.Lib.IL.Generators,ReadOnlyTableGeneratorTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Lib\IL\Generators\ReadOnlyTableGeneratorTest.cs,Test,The following statement contains a magic number: const int columns = 3;
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,EnumeratePerf,The following statement contains a magic number: const int N = 100000000;
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: const int N = 10000000;
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: int y = 456;
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: var r4 = inst.VirtFact(5);
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: var r5 = inst.ThisFact(5);
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: var r6 = VClass.StaticFact(5);
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: var r7 = baseInst.VirtFact(5);
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: var r10 = contr.FactExplicit(5);
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: var r11 = contr.FactImplicit(5);
Magic Number,IronText.Tests.Performance,ExperimentsTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Performance\ExperimentsTest.cs,CallPerformanceTest,The following statement contains a magic number: int factArg = 10;
Magic Number,IronText.Tests.IO,LocTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\IO\LocTest.cs,SourceLocationCreateTest,The following statement contains a magic number: int character = 20;
Magic Number,IronText.Tests.IO,LocTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\IO\LocTest.cs,EqualsTest,The following statement contains a magic number: int characterNumber = 893892;
Magic Number,IronText.Tests.IO,LocTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\IO\LocTest.cs,GetHashTest,The following statement contains a magic number: int characterNumber = 893892;
Magic Number,IronText.Tests.Samples,MyArchiver,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\CommandLineSampleTest.cs,QuotedWord,The following statement contains a magic number: string text = new string(buffer' start + 1' length - 2);
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var employees = new Employee[]              {                  new Employee { Id = 10' FirstName = "John"'     LastName = "Doe"'     Age = 25 }'                  new Employee { Id = 20' FirstName = "Samantha"' LastName = "Wells"'   Age = 35 }'                  new Employee { Id = 30' FirstName = "Michel"'   LastName = "Jackson"' Age = 45 }'              };
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var employees = new Employee[]              {                  new Employee { Id = 10' FirstName = "John"'     LastName = "Doe"'     Age = 25 }'                  new Employee { Id = 20' FirstName = "Samantha"' LastName = "Wells"'   Age = 35 }'                  new Employee { Id = 30' FirstName = "Michel"'   LastName = "Jackson"' Age = 45 }'              };
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var employees = new Employee[]              {                  new Employee { Id = 10' FirstName = "John"'     LastName = "Doe"'     Age = 25 }'                  new Employee { Id = 20' FirstName = "Samantha"' LastName = "Wells"'   Age = 35 }'                  new Employee { Id = 30' FirstName = "Michel"'   LastName = "Jackson"' Age = 45 }'              };
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var employees = new Employee[]              {                  new Employee { Id = 10' FirstName = "John"'     LastName = "Doe"'     Age = 25 }'                  new Employee { Id = 20' FirstName = "Samantha"' LastName = "Wells"'   Age = 35 }'                  new Employee { Id = 30' FirstName = "Michel"'   LastName = "Jackson"' Age = 45 }'              };
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var employees = new Employee[]              {                  new Employee { Id = 10' FirstName = "John"'     LastName = "Doe"'     Age = 25 }'                  new Employee { Id = 20' FirstName = "Samantha"' LastName = "Wells"'   Age = 35 }'                  new Employee { Id = 30' FirstName = "Michel"'   LastName = "Jackson"' Age = 45 }'              };
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var employees = new Employee[]              {                  new Employee { Id = 10' FirstName = "John"'     LastName = "Doe"'     Age = 25 }'                  new Employee { Id = 20' FirstName = "Samantha"' LastName = "Wells"'   Age = 35 }'                  new Employee { Id = 30' FirstName = "Michel"'   LastName = "Jackson"' Age = 45 }'              };
Magic Number,IronText.Tests.Samples,DynamicLinqTest,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\Samples\DynamicLinqTest.cs,LinqTest,The following statement contains a magic number: var query = DynamicLinq.Compile<Func<IQueryable<string>>>(                              "from e in $0 where e.Age > $1 select e.FirstName"'                              employees.AsQueryable()' //.AsQueryable() is optional in this case                              30);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,NodeCountTest,The following statement contains a magic number: Assert.AreEqual(4' SampleTree.Match<LeafCounter>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,NodeCountTest,The following statement contains a magic number: Assert.AreEqual(4' CountLeafs(SampleTree));
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectDepthFirst,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 4' 2' 6' 7' 5' 1 }' SampleTree.Match<CollectDepthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectDepthFirst,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 4' 2' 6' 7' 5' 1 }' SampleTree.Match<CollectDepthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectDepthFirst,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 4' 2' 6' 7' 5' 1 }' SampleTree.Match<CollectDepthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectDepthFirst,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 4' 2' 6' 7' 5' 1 }' SampleTree.Match<CollectDepthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectDepthFirst,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 4' 2' 6' 7' 5' 1 }' SampleTree.Match<CollectDepthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectDepthFirst,The following statement contains a magic number: Assert.AreEqual(new [] { 3' 4' 2' 6' 7' 5' 1 }' SampleTree.Match<CollectDepthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectLeftToRigth,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 3' 4' 5' 6' 7 }' SampleTree.Match<CollectLeftToRigth>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectLeftToRigth,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 3' 4' 5' 6' 7 }' SampleTree.Match<CollectLeftToRigth>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectLeftToRigth,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 3' 4' 5' 6' 7 }' SampleTree.Match<CollectLeftToRigth>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectLeftToRigth,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 3' 4' 5' 6' 7 }' SampleTree.Match<CollectLeftToRigth>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectLeftToRigth,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 3' 4' 5' 6' 7 }' SampleTree.Match<CollectLeftToRigth>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectLeftToRigth,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 3' 4' 5' 6' 7 }' SampleTree.Match<CollectLeftToRigth>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectTopDownDepthFirstTest,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 5' 3' 4' 6' 7 }' SampleTree.Match<CollectBreadthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectTopDownDepthFirstTest,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 5' 3' 4' 6' 7 }' SampleTree.Match<CollectBreadthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectTopDownDepthFirstTest,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 5' 3' 4' 6' 7 }' SampleTree.Match<CollectBreadthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectTopDownDepthFirstTest,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 5' 3' 4' 6' 7 }' SampleTree.Match<CollectBreadthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectTopDownDepthFirstTest,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 5' 3' 4' 6' 7 }' SampleTree.Match<CollectBreadthFirst>().Result);
Magic Number,IronText.Tests.UseCases,ImplicitAstUseCase,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Src\IronText.Core.Tests\UseCases\ImplicitAstUseCase.cs,TestCollectTopDownDepthFirstTest,The following statement contains a magic number: Assert.AreEqual(new [] { 1' 2' 5' 3' 4' 6' 7 }' SampleTree.Match<CollectBreadthFirst>().Result);
