Implementation smell,Namespace,Class,File,Method,Description
Long Method,IronText.Lib.NfaVM.Runtime,PikeNfaVM,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\NfaVM\Runtime\PikeNfaVM.cs,Run,The method has 65 lines of code.
Complex Method,IronText.Lib.NfaVM.Runtime,PikeNfaVM,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\NfaVM\Runtime\PikeNfaVM.cs,Run,Cyclomatic complexity of the method is 35
Long Statement,IronText.Lib.RegularAst,FragmentBuilder,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\RegularAst\Backend\InMemoryNfaCompiler\FragmentBuilder.cs,Visit,The length of the statement  "		optional = Enumerable.Range (0' node.MaxCount - node.MinCount).Select (_ => NfaFragment.ZeroOrOne (Build (node.Inner))); " is 120.
Magic Number,IronText.Lib.Sre,SreSyntax,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\Sre\Grammar.cs,Range,The following statement contains a magic number: if (len % 2 != 0) {  	throw new Exception ("Invalid range pairs.");  }  
Magic Number,IronText.Lib.Sre,SreSyntax,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\Sre\Grammar.cs,Range,The following statement contains a magic number: for (int i = 0; i < len; i += 2) {  	intervals.Add (new IntInterval (text [i]' text [i + 1]));  }  
Magic Number,IronText.Lib.Sre,SreSyntax,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\Sre\Grammar.cs,Range,The following statement contains a magic number: i += 2
Magic Number,IronText.Lib.Sre,SreSyntax,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\Sre\Grammar.cs,Char,The following statement contains a magic number: return new Chr (buffer [start + 2]);  
Missing Default,IronText.Lib.Sre,SreSyntax,D:\newReposJune17\sucaba_IronTextLibrary\Src\Sandbox\IronText.Lib.Stem\Sre\Grammar.cs,EscapeChar,The following switch statement is missing a default case: switch (value) {  case '\n':  	return @"\n";  case '\r':  	return @"\r";  case '"':  	return @"\""";  case '\\':  	return @"\\";  }  
