Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Cecil.Tests,SecurityDeclarationTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\SecurityDeclarationTests.cs,PrettyPrintValue,Cyclomatic complexity of the method is 9
Complex Method,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,PrettyPrintValue,Cyclomatic complexity of the method is 9
Long Statement,Mono.Cecil.Tests,BaseTestFixture,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\BaseTestFixture.cs,GetResourceModule,The length of the statement  "			return ModuleDefinition.ReadModule (GetAssemblyResourcePath (name' typeof (BaseTestFixture).Assembly)' new ReaderParameters (mode)); " is 132.
Long Statement,Mono.Cecil.Tests,BaseTestFixture,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\BaseTestFixture.cs,GetResourceImage,The length of the statement  "			using (var fs = new FileStream (GetAssemblyResourcePath (name' typeof (BaseTestFixture).Assembly)' FileMode.Open' FileAccess.Read)) " is 131.
Long Statement,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,TripleNestedTypeWithScope,The length of the statement  "			Assert.AreEqual ("Bingo.Foo`1+Bar`1+Baz`1' Bingo' Culture=neutral' PublicKeyToken=null"' TypeParser.ToParseable (type)); " is 120.
Long Statement,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceMixedArguments,The length of the statement  "			var fullname = string.Format ("System.Collections.Generic.Dictionary`2[Mono.Cecil.Tests.TypeParserTests'[System.String' {0}]]"' " is 127.
Long Statement,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceTwoNonFqArguments,The length of the statement  "			var fullname = string.Format ("System.Collections.Generic.Dictionary`2[Mono.Cecil.Tests.TypeParserTests+Bar'Mono.Cecil.Tests.TypeParserTests+Bar]' {0}"' typeof (object).Assembly.FullName); " is 188.
Long Statement,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,ComplexGenericInstanceMixedArguments,The length of the statement  "			var fullname = string.Format ("System.Collections.Generic.Dictionary`2[[System.String' {0}]'Mono.Cecil.Tests.TypeParserTests+Foo`2[Mono.Cecil.Tests.TypeParserTests'[System.Int32' {0}]]]"' " is 187.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportStringByRef,The length of the statement  "				method_by_ref.Parameters.Add (new ParameterDefinition (module.Import (new ByReferenceType (typeof (string).ToDefinition ())))); " is 127.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportStringConcat,The length of the statement  "				il.Emit (OpCodes.Call' module.Import (typeof (string).GetMethod ("Concat"' new [] { typeof (string)' typeof (string) }).ToDefinition ())); " is 138.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ContextGenericTest,The length of the statement  "			// by mixing open generics with 2 & 1 parameters' we make sure the right context is used (because otherwise' an exception will be thrown) " is 137.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ContextGenericTest,The length of the statement  "			Assert.AreEqual ("G1 Mono.Cecil.Tests.ImportCecilTests/ContextGeneric1Method2`1<Mono.Cecil.Tests.ImportCecilTests/ContextGeneric2Method1`2<G2'H2>>::GenericMethod<R1'S1>(R1'S1)"' method.FullName); " is 195.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ContextGenericTest,The length of the statement  "			Assert.AreEqual ("R2 Mono.Cecil.Tests.ImportCecilTests/ContextGeneric2Method1`2<Mono.Cecil.Tests.ImportCecilTests/ContextGeneric1Method2`1<G1>'System.Collections.Generic.IList`1<T>>::GenericMethod<R2>(G2'H2)"' method.FullName); " is 227.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ContextGenericTest,The length of the statement  "			Assert.AreEqual ("A Mono.Cecil.Tests.ImportCecilTests/NestedGenericsA`1/NestedGenericsB`1/NestedGenericsC`1<System.String'System.Int32'System.Single>::GenericMethod(B'C)"' method.FullName); " is 189.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ContextGenericTest,The length of the statement  "			Assert.AreEqual ("Mono.Cecil.Tests.ImportCecilTests/Generic`1<TS> Mono.Cecil.Tests.ImportCecilTests/Generic`1<System.String>::ComplexGenericMethod<TS>(T'TS)"' method.FullName); " is 176.
Long Statement,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,LoadTestModule,The length of the statement  "				File.WriteAllBytes (Path.Combine (Path.Combine (Path.GetTempPath ()' "cecil")' module.Name + ".dll")' stream.ToArray ()); " is 121.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportStringConcat,The length of the statement  "				il.Emit (OpCodes.Call' module.Import (typeof (string).GetMethod ("Concat"' new [] { typeof (string)' typeof (string) }))); " is 122.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethodSpec,The length of the statement  "				il.Emit (OpCodes.Callvirt' module.Import (typeof (Generic<string>).GetMethod ("GenericMethod").MakeGenericMethod (typeof (int)))); " is 130.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportComplexGenericMethodSpec,The length of the statement  "				il.Emit (OpCodes.Callvirt' module.Import (typeof (Generic<string>).GetMethod ("ComplexGenericMethod").MakeGenericMethod (typeof (int)))); " is 137.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericTypeDefFromContext,The length of the statement  "			Assert.AreEqual ("Mono.Cecil.Tests.ImportReflectionTests/Generic`1<Mono.Cecil.Tests.ImportReflectionTests/Foo`1<TFoo>>"' " is 120.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethodFromContext,The length of the statement  "			Assert.AreEqual ("T Mono.Cecil.Tests.ImportReflectionTests/Generic`1<System.Collections.Generic.List`1<TFoo>>::Method(T)"' " is 122.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethodOnOpenGenericType,The length of the statement  "			Assert.AreEqual ("TS Mono.Cecil.Tests.ImportReflectionTests/Generic`1<T>::GenericMethod(T'TS)"' generic_method.FullName); " is 121.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethodOnOpenGenericType,The length of the statement  "			Assert.AreEqual ("TS Mono.Cecil.Tests.ImportReflectionTests/Generic`1<T>::GenericMethod<TS>(T'TS)"' generic_method.FullName); " is 125.
Long Statement,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,LoadTestModule,The length of the statement  "				File.WriteAllBytes (Path.Combine (Path.Combine (Path.GetTempPath ()' "cecil")' module.Name + ".dll")' stream.ToArray ()); " is 121.
Long Statement,Mono.Cecil.Tests,SecurityDeclarationTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\SecurityDeclarationTests.cs,DefineSecurityDeclarationByBlob,The length of the statement  "			var module = ModuleDefinition.CreateModule ("SecDecBlob.dll"' new ModuleParameters { Kind = ModuleKind.Dll' Runtime = TargetRuntime.Net_2_0 }); " is 143.
Long Statement,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,DictionaryOfStringTypeDefinitionTryGetValue,The length of the statement  "			Assert.AreEqual ("System.Boolean System.Collections.Generic.Dictionary`2<System.String'Mono.Cecil.TypeDefinition>::TryGetValue(!0'!1&)"' " is 136.
Long Statement,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,DictionaryOfStringTypeDefinitionTryGetValue,The length of the statement  "			Assert.AreEqual ("System.Boolean System.Collections.Generic.Dictionary`2::TryGetValue(TKey'TValue&)"' definition.FullName); " is 123.
Long Statement,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,ExportedTypeFromModule,The length of the statement  "			var reference = new TypeReference ("Module.A"' "Foo"' current_module' AssemblyNameReference.Parse (mma.Assembly.FullName)' false); " is 130.
Long Statement,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,TypeForwarder,The length of the statement  "			var reference = new TypeReference ("System.Diagnostics"' "DebuggableAttribute"' current_module' AssemblyNameReference.Parse (types.Assembly.FullName)' false); " is 158.
Long Statement,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,NestedTypeForwarder,The length of the statement  "			reference.DeclaringType = new TypeReference ("System.Diagnostics"' "DebuggableAttribute"' current_module' AssemblyNameReference.Parse (types.Assembly.FullName)' false); " is 168.
Long Statement,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,BoxedArraysArguments,The length of the statement  "			AssertCustomAttribute (".ctor ((Object:(Object[]:{(Object:(String:\"2\"))' (Object:(I4:2))' (Object:(Char:'c'))}))' (Object:(Object[]:{(Object:(Object[]:{(Object:(I4:1))' (Object:(I4:2))' (Object:(I4:3))}))' (Object:(String:null))})))"' attribute); " is 248.
Long Statement,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,FieldsAndProperties,The length of the statement  "			AssertCustomAttributeArgument ("(Object:(Object[]:{(Object:(I4:1))' (Object:(String:\"2\"))' (Object:(Char:'3'))}))"' argument); " is 128.
Long Statement,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,BoxedEnumReference,The length of the statement  "			// [Foo (new object [] { Bingo.Fuel' Bingo.Binga }' null' Pan = System.Security.AccessControl.AceFlags.NoPropagateInherit)] " is 123.
Long Statement,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,ClosedGenericTypeOf,The length of the statement  "			Assert.AreEqual ("System.Collections.Generic.Dictionary`2<System.String'OpenGeneric`2<Machin'System.Int32>[']>"' type.FullName); " is 128.
Long Statement,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,DefineCustomAttributeFromBlob,The length of the statement  "			var module = ModuleDefinition.CreateModule ("CaBlob.dll"' new ModuleParameters { Kind = ModuleKind.Dll' Runtime = TargetRuntime.Net_2_0 }); " is 139.
Long Statement,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,DefineCustomAttributeFromBlob,The length of the statement  "			var assembly_title_ctor = module.Import (typeof (System.Reflection.AssemblyTitleAttribute).GetConstructor (new [] {typeof (string)})); " is 134.
Magic Number,Mono.Cecil.Tests,AssemblyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\AssemblyTests.cs,ParseLowerCaseNameParts,The following statement contains a magic number: Assert.AreEqual (2' name.Version.Major);
Magic Number,Mono.Cecil.Tests,VariableTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\VariableTests.cs,RemoveAtVariableIndex,The following statement contains a magic number: Assert.AreEqual (2' z.Index);
Magic Number,Mono.Cecil.Tests,VariableTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\VariableTests.cs,RemoveVariableIndex,The following statement contains a magic number: Assert.AreEqual (2' z.Index);
Magic Number,Mono.Cecil.Tests,VariableTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\VariableTests.cs,InsertVariableIndex,The following statement contains a magic number: Assert.AreEqual (2' z.Index);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,OpenGenericType,The following statement contains a magic number: Assert.AreEqual (2' type.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,ThreeDimensionalArray,The following statement contains a magic number: Assert.AreEqual (3' array.Rank);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceExternArguments,The following statement contains a magic number: Assert.AreEqual (2' instance.GenericArguments.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceExternArguments,The following statement contains a magic number: Assert.AreEqual (2' type.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceMixedArguments,The following statement contains a magic number: Assert.AreEqual (2' instance.GenericArguments.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceMixedArguments,The following statement contains a magic number: Assert.AreEqual (2' type.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceTwoNonFqArguments,The following statement contains a magic number: Assert.AreEqual (2' instance.GenericArguments.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,GenericInstanceTwoNonFqArguments,The following statement contains a magic number: Assert.AreEqual (2' type.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,ComplexGenericInstanceMixedArguments,The following statement contains a magic number: Assert.AreEqual (2' instance.GenericArguments.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,ComplexGenericInstanceMixedArguments,The following statement contains a magic number: Assert.AreEqual (2' type.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeParserTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeParserTests.cs,ComplexGenericInstanceMixedArguments,The following statement contains a magic number: Assert.AreEqual (2' instance.GenericArguments.Count);
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportStringArray,The following statement contains a magic number: var array = new string [2' 2];
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportStringArray,The following statement contains a magic number: var array = new string [2' 2];
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportGenericMethod,The following statement contains a magic number: Assert.AreEqual (42' generic_identity (new Generic<int> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportGenericMethod,The following statement contains a magic number: Assert.AreEqual (42' generic_identity (new Generic<int> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportComplexGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,ImportComplexGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportCecilTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportCecilTests.cs,GetTestCaseName,The following statement contains a magic number: var stack_frame = stack_trace.GetFrame (2);
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportInt,The following statement contains a magic number: Assert.AreEqual (42' add (40' 2));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportInt,The following statement contains a magic number: Assert.AreEqual (42' add (40' 2));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportInt,The following statement contains a magic number: Assert.AreEqual (42' add (40' 2));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportStringArray,The following statement contains a magic number: var array = new string [2' 2];
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportStringArray,The following statement contains a magic number: var array = new string [2' 2];
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethod,The following statement contains a magic number: Assert.AreEqual (42' generic_identity (new Generic<int> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethod,The following statement contains a magic number: Assert.AreEqual (42' generic_identity (new Generic<int> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportComplexGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,ImportComplexGenericMethodSpec,The following statement contains a magic number: Assert.AreEqual (42' gen_spec_id (new Generic<string> ()' 42));
Magic Number,Mono.Cecil.Tests,ImportReflectionTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImportReflectionTests.cs,GetTestCaseName,The following statement contains a magic number: var stack_frame = stack_trace.GetFrame (2);
Magic Number,Mono.Cecil.Tests,ParameterTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ParameterTests.cs,ArrayMarshaler,The following statement contains a magic number: Assert.AreEqual (66' info.Size);
Magic Number,Mono.Cecil.Tests,ParameterTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ParameterTests.cs,ArrayMarshaler,The following statement contains a magic number: Assert.AreEqual (2' info.SizeParameterIndex);
Magic Number,Mono.Cecil.Tests,ParameterTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ParameterTests.cs,ArrayMarshaler,The following statement contains a magic number: parameter = pan.Parameters [3];
Magic Number,Mono.Cecil.Tests,ParameterTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ParameterTests.cs,RemoveAtParameterIndex,The following statement contains a magic number: Assert.AreEqual (2' z.Index);
Magic Number,Mono.Cecil.Tests,ParameterTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ParameterTests.cs,RemoveParameterIndex,The following statement contains a magic number: Assert.AreEqual (2' z.Index);
Magic Number,Mono.Cecil.Tests,ParameterTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ParameterTests.cs,InsertParameterIndex,The following statement contains a magic number: Assert.AreEqual (2' z.Index);
Magic Number,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,RectangularArrayResolveGetMethod,The following statement contains a magic number: var get_a_b = GetReference<Func<int[']' int>' MethodReference> (matrix => matrix [2' 2]);
Magic Number,Mono.Cecil.Tests,ResolveTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ResolveTests.cs,RectangularArrayResolveGetMethod,The following statement contains a magic number: var get_a_b = GetReference<Func<int[']' int>' MethodReference> (matrix => matrix [2' 2]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<sbyte> (-12' attribute.ConstructorArguments [0]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<byte> (242' attribute.ConstructorArguments [1]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<bool> (true' attribute.ConstructorArguments [2]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<bool> (false' attribute.ConstructorArguments [3]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<ushort> (4242' attribute.ConstructorArguments [4]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<ushort> (4242' attribute.ConstructorArguments [4]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<short> (-1983' attribute.ConstructorArguments [5]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<short> (-1983' attribute.ConstructorArguments [5]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives1,The following statement contains a magic number: AssertArgument<char> ('c'' attribute.ConstructorArguments [6]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<int> (-100000' attribute.ConstructorArguments [0]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<uint> (200000' attribute.ConstructorArguments [1]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<float> (12.12f' attribute.ConstructorArguments [2]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<float> (12.12f' attribute.ConstructorArguments [2]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<long> (long.MaxValue' attribute.ConstructorArguments [3]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<ulong> (ulong.MaxValue' attribute.ConstructorArguments [4]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<double> (64.646464' attribute.ConstructorArguments [5]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,Primitives2,The following statement contains a magic number: AssertArgument<double> (64.646464' attribute.ConstructorArguments [5]);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,FieldsAndProperties,The following statement contains a magic number: Assert.AreEqual (2' attribute.Fields.Count);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,FieldsAndProperties,The following statement contains a magic number: Assert.AreEqual (2' attribute.Properties.Count);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,FieldsAndProperties,The following statement contains a magic number: AssertArgument (42' argument);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,TypeDefinitionEnum,The following statement contains a magic number: Assert.AreEqual ((short) 2' attribute.ConstructorArguments [0].Value);
Magic Number,Mono.Cecil.Tests,CustomAttributesTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\CustomAttributesTests.cs,BoxedEnumReference,The following statement contains a magic number: Assert.AreEqual (2' attribute.ConstructorArguments.Count);
Magic Number,Mono.Cecil.Tests,Formatter,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\Formatter.cs,FormatLabel,The following statement contains a magic number: return "IL_" + label.Substring (label.Length - 4);
Magic Number,Mono.Cecil.Tests,MethodBodyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\MethodBodyTests.cs,FilterMaxStack,The following statement contains a magic number: Assert.AreEqual (2' method.Body.MaxStackSize);
Magic Number,Mono.Cecil.Tests,MethodBodyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\MethodBodyTests.cs,InsertAfterLastInstruction,The following statement contains a magic number: body.Instructions.Insert (2' third);
Magic Number,Mono.Cecil.Tests,TypeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeTests.cs,TypeLayout,The following statement contains a magic number: Assert.AreEqual (16' foo.ClassSize);
Magic Number,Mono.Cecil.Tests,TypeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeTests.cs,SimpleInterfaces,The following statement contains a magic number: Assert.AreEqual (2' interfaces.Count);
Magic Number,Mono.Cecil.Tests,TypeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeTests.cs,GenericTypeDefinition,The following statement contains a magic number: Assert.AreEqual (2' foo.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeTests.cs,ConstrainedGenericType,The following statement contains a magic number: Assert.AreEqual (2' t.Constraints.Count);
Magic Number,Mono.Cecil.Tests,TypeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeTests.cs,GenericConstraintOnGenericParameter,The following statement contains a magic number: Assert.AreEqual (3' duel.GenericParameters.Count);
Magic Number,Mono.Cecil.Tests,TypeTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\TypeTests.cs,GenericConstraintOnGenericParameter,The following statement contains a magic number: var t3 = duel.GenericParameters [2];
Magic Number,Mono.Cecil.Tests,PropertyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\PropertyTests.cs,AbstractMethod,The following statement contains a magic number: Assert.AreEqual (3' properties.Count);
Magic Number,Mono.Cecil.Tests,PropertyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\PropertyTests.cs,AbstractMethod,The following statement contains a magic number: property = properties [2];
Magic Number,Mono.Cecil.Tests,PropertyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\PropertyTests.cs,OtherMethod,The following statement contains a magic number: Assert.AreEqual (2' property.OtherMethods.Count);
Magic Number,Mono.Cecil.Tests,PropertyTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\PropertyTests.cs,SetOnlyIndexer,The following statement contains a magic number: Assert.AreEqual (2' parameters.Count);
Magic Number,Mono.Cecil.Tests,EventTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\EventTests.cs,OtherMethod,The following statement contains a magic number: Assert.AreEqual (2' @event.OtherMethods.Count);
Magic Number,Mono.Cecil.Tests,MethodTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\MethodTests.cs,AbstractMethod,The following statement contains a magic number: Assert.AreEqual (2' type.Methods.Count);
Magic Number,Mono.Cecil.Tests,MethodTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\MethodTests.cs,VarArgs,The following statement contains a magic number: Assert.AreEqual (3' module_type.Methods.Count);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldLayout,The following statement contains a magic number: Assert.AreEqual (2' field.Offset);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldLayout,The following statement contains a magic number: field = fields [2];
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldLayout,The following statement contains a magic number: Assert.AreEqual (4' field.Offset);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldRVA,The following statement contains a magic number: Assert.AreEqual (16' field.InitialValue.Length);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldRVA,The following statement contains a magic number: Assert.AreEqual (2' buffer.ReadUInt32 ());
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldRVA,The following statement contains a magic number: Assert.AreEqual (3' buffer.ReadUInt32 ());
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,FieldRVA,The following statement contains a magic number: Assert.AreEqual (4' buffer.ReadUInt32 ());
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,ArrayFields,The following statement contains a magic number: Assert.AreEqual (2' array.Rank);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,ArrayFields,The following statement contains a magic number: Assert.AreEqual (2' array.Rank);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,ArrayFields,The following statement contains a magic number: Assert.AreEqual (4' array.Dimensions [0].UpperBound);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,EnumFieldsConstant,The following statement contains a magic number: Assert.AreEqual (2' (int) field.Constant);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,NestedEnumOfGenericTypeDefinition,The following statement contains a magic number: Assert.AreEqual (2' field.Constant);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,NestedEnumOfGenericTypeDefinition,The following statement contains a magic number: Assert.AreEqual (12' field.Constant);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,MarshalAsFixedStr,The following statement contains a magic number: Assert.AreEqual (42' info.Size);
Magic Number,Mono.Cecil.Tests,FieldTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\FieldTests.cs,MarshalAsFixedArray,The following statement contains a magic number: Assert.AreEqual (12' info.Size);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,ImageSections,The following statement contains a magic number: Assert.AreEqual (3' image.Sections.Length);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,ImageSections,The following statement contains a magic number: Assert.AreEqual (".reloc"' image.Sections [2].Name);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,TablesHeap,The following statement contains a magic number: Assert.AreEqual (4' heap [Table.TypeRef].Length);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,TablesHeap,The following statement contains a magic number: Assert.AreEqual (2' heap [Table.TypeDef].Length);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,TablesHeap,The following statement contains a magic number: Assert.AreEqual (2' heap [Table.Method].Length);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,TablesHeap,The following statement contains a magic number: Assert.AreEqual (4' heap [Table.MemberRef].Length);
Magic Number,Mono.Cecil.Tests,ImageReadTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ImageReadTests.cs,TablesHeap,The following statement contains a magic number: Assert.AreEqual (2' heap [Table.CustomAttribute].Length);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,MultiModules,The following statement contains a magic number: Assert.AreEqual (3' assembly.Modules.Count);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,MultiModules,The following statement contains a magic number: Assert.AreEqual ("modb.netmodule"' assembly.Modules [2].Name);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,MultiModules,The following statement contains a magic number: Assert.AreEqual ("46c5c577-11b2-4ea0-bb3c-3c71f1331dd0"' assembly.Modules [2].Mvid.ToString ());
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,MultiModules,The following statement contains a magic number: Assert.AreEqual (ModuleKind.NetModule' assembly.Modules [2].Kind);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,AssemblyReferences,The following statement contains a magic number: Assert.AreEqual (new Version (2' 0' 0' 0)' reference.Version);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,ModuleReferences,The following statement contains a magic number: Assert.AreEqual (2' module.ModuleReferences.Count);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,Types,The following statement contains a magic number: Assert.AreEqual (2' module.Types.Count);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,ExportedTypeFromNetModule,The following statement contains a magic number: Assert.AreEqual (2' module.ExportedTypes.Count);
Magic Number,Mono.Cecil.Tests,ModuleTests,D:\research\architectureSmells\repos1\sucaba_IronTextLibrary\Deps\cecil\Test\Mono.Cecil.Tests\ModuleTests.cs,NestedTypeForwarder,The following statement contains a magic number: Assert.AreEqual (2' module.ExportedTypes.Count);
