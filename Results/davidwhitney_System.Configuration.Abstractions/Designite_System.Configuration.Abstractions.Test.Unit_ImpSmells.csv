Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Setting_WhenExceptionRaisedAndBothActionsSupplied_PerformsAction,The length of the parameter insteadOfThrowingConversionException is 36.
Long Identifier,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Setting_WhenExceptionRaisedAndBothActionsSupplied_PerformsAction,The length of the parameter insteadOfThrowingMissingKeyException is 36.
Long Identifier,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Setting_WhenExceptionRaisedAndConversionActionSupplied_PerformsAction,The length of the parameter insteadOfThrowingConversionException is 36.
Long Statement,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Indexer_WhenSettingExists_RunsAnyRegisteredInterceptorsAndReturnsSetting,The length of the statement  "            _wrapper = new AppSettingsExtended(_underlyingConfiguration' new List<IConfigurationInterceptor>{new TestInterceptor("return this")}); " is 134.
Long Statement,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,IndexerById_WhenSettingExists_RunsAnyRegisteredInterceptorsAndReturnsSetting,The length of the statement  "            _wrapper = new AppSettingsExtended(_underlyingConfiguration' new List<IConfigurationInterceptor>{new TestInterceptor("return this")}); " is 134.
Long Statement,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Get_WhenSettingExistsAndInterceptorPresent_ReturnsSetting,The length of the statement  "            _wrapper = new AppSettingsExtended(_underlyingConfiguration' new List<IConfigurationInterceptor> { new TestInterceptor("return this") }); " is 137.
Long Statement,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,GetById_WhenSettingExistsAndInterceptorPresent_ReturnsSetting,The length of the statement  "            _wrapper = new AppSettingsExtended(_underlyingConfiguration' new List<IConfigurationInterceptor> { new TestInterceptor("return this") }); " is 137.
Long Statement,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Indexer_WhenSettingDoesNotExist_AndInterceptorPresentReturnsNull,The length of the statement  "            _wrapper = new AppSettingsExtended(_underlyingConfiguration' new List<IConfigurationInterceptor> { new NullInterceptor() }); " is 124.
Long Statement,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Setting_WhenExceptionRaisedAndBothActionsSupplied_PerformsAction,The length of the statement  "            var val = _wrapper.AppSetting("key-that-fails-cast"' insteadOfThrowingMissingKeyException' insteadOfThrowingConversionException); " is 129.
Magic Number,System.Configuration.Abstractions.Test.Unit,ConnectionStringsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConnectionStringsExtendedTests.cs,ConnectionStrings_Are_Enumerable,The following statement contains a magic number: Assert.That(_wrapper.Raw.Count' Is.EqualTo(2));
Magic Number,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Setting_RequestAnInt_ConvertsSettingValue,The following statement contains a magic number: Assert.That(val' Is.EqualTo(123));
Magic Number,System.Configuration.Abstractions.Test.Unit,AppSettingsExtendedTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\AppSettingsExtendedTests.cs,Map_WithMultipleTypes_Maps,The following statement contains a magic number: Assert.That(settingsDto.doublee' Is.EqualTo(123m));
Magic Number,System.Configuration.Abstractions.Test.Unit,ConfigurationManagerTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConfigurationManagerTests.cs,RegisterTypeConverters_WhenRunInConcurrentEnvironment_DoesNotThrow,The following statement contains a magic number: var addAction = new Action(() =>              {                  try                  {                      for (var i = 0; i < 99999; i++)                      {                          ConfigurationManager.RegisterTypeConverters(converter);                      }                  }                  catch (Exception ex)                  {                      exception = ex;                      threadExceptioned = true;                  }              });
Magic Number,System.Configuration.Abstractions.Test.Unit,ConfigurationManagerTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConfigurationManagerTests.cs,RegisterTypeConverters_WhenRunInConcurrentEnvironment_DoesNotThrow,The following statement contains a magic number: Enumerable.Range(0' 50).Select(i => new Thread(() => addAction())).ToList().ForEach(t => t.Start());
Magic Number,System.Configuration.Abstractions.Test.Unit,ConfigurationManagerTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConfigurationManagerTests.cs,RegisterTypeConverters_WhenRunInConcurrentEnvironment_DoesNotThrow,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,System.Configuration.Abstractions.Test.Unit,ConfigurationManagerTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConfigurationManagerTests.cs,RegisterInterceptors_WhenRunInConcurrentEnvironment_DoesNotThrow,The following statement contains a magic number: var addAction = new Action(() =>              {                  try                  {                      for (var i = 0; i < 99999; i++)                      {                          ConfigurationManager.RegisterInterceptors(new TestInterceptor());                      }                  }                  catch (Exception ex)                  {                      exception = ex;                      threadExceptioned = true;                  }              });
Magic Number,System.Configuration.Abstractions.Test.Unit,ConfigurationManagerTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConfigurationManagerTests.cs,RegisterInterceptors_WhenRunInConcurrentEnvironment_DoesNotThrow,The following statement contains a magic number: Enumerable.Range(0' 50).Select(i => new Thread(() => addAction())).ToList().ForEach(t => t.Start());
Magic Number,System.Configuration.Abstractions.Test.Unit,ConfigurationManagerTests,D:\research\architectureSmells\repos\davidwhitney_System.Configuration.Abstractions\System.Configuration.Abstractions.Test.Unit\ConfigurationManagerTests.cs,RegisterInterceptors_WhenRunInConcurrentEnvironment_DoesNotThrow,The following statement contains a magic number: Thread.Sleep(500);
