Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,Cyclomatic complexity of the method is 18
Long Statement,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The length of the statement  "		_workingorder = new MarketOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _globalIdService.GetNextOrderId ()); " is 122.
Long Statement,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The length of the statement  "		_workingorder = new LimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ()); " is 129.
Long Statement,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The length of the statement  "		_workingorder = new StopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ()); " is 128.
Long Statement,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The length of the statement  "		_workingorder = new StopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ()); " is 144.
Long Statement,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The length of the statement  "		_workingorder = new TrailingStopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _auxprice' _globalIdService.GetNextOrderId ()); " is 139.
Long Statement,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The length of the statement  "		_workingorder = new TrailingStopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ()); " is 152.
Magic Number,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The following statement contains a magic number: switch (_selectedordertype) {  case 0:  	_workingorder = new MarketOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = 0;  	break;  case 1:  	_workingorder = new LimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = _price;  	break;  case 2:  	_workingorder = new StopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = _price;  	//_workingorder.LimitPrice = 0;  	break;  case 3:  	_workingorder = new StopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 4:  	_workingorder = new TrailingStopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 5:  	_workingorder = new TrailingStopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  }  
Magic Number,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The following statement contains a magic number: switch (_selectedordertype) {  case 0:  	_workingorder = new MarketOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = 0;  	break;  case 1:  	_workingorder = new LimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = _price;  	break;  case 2:  	_workingorder = new StopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = _price;  	//_workingorder.LimitPrice = 0;  	break;  case 3:  	_workingorder = new StopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 4:  	_workingorder = new TrailingStopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 5:  	_workingorder = new TrailingStopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  }  
Magic Number,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The following statement contains a magic number: switch (_selectedordertype) {  case 0:  	_workingorder = new MarketOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = 0;  	break;  case 1:  	_workingorder = new LimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = _price;  	break;  case 2:  	_workingorder = new StopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = _price;  	//_workingorder.LimitPrice = 0;  	break;  case 3:  	_workingorder = new StopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 4:  	_workingorder = new TrailingStopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 5:  	_workingorder = new TrailingStopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  }  
Magic Number,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The following statement contains a magic number: switch (_selectedordertype) {  case 0:  	_workingorder = new MarketOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = 0;  	break;  case 1:  	_workingorder = new LimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = _price;  	break;  case 2:  	_workingorder = new StopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = _price;  	//_workingorder.LimitPrice = 0;  	break;  case 3:  	_workingorder = new StopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 4:  	_workingorder = new TrailingStopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 5:  	_workingorder = new TrailingStopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  }  
Missing Default,Modules.OrderTicket.ViewModel,OrderTicketViewModel,C:\repos\letianzj_QuantTrading\Source\RealTimeTrading\Modules.OrderTicket\ViewModel\OrderTicketViewModel.cs,OnPlaceOrder,The following switch statement is missing a default case: switch (_selectedordertype) {  case 0:  	_workingorder = new MarketOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = 0;  	break;  case 1:  	_workingorder = new LimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = 0;  	//_workingorder.LimitPrice = _price;  	break;  case 2:  	_workingorder = new StopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _globalIdService.GetNextOrderId ());  	//_workingorder.StopPrice = _price;  	//_workingorder.LimitPrice = 0;  	break;  case 3:  	_workingorder = new StopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 4:  	_workingorder = new TrailingStopOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _auxprice' _globalIdService.GetNextOrderId ());  	break;  case 5:  	_workingorder = new TrailingStopLimitOrder (_fullsymbol' _selectedbuysell == 0 ? _size : -_size' _price' _auxprice' _globalIdService.GetNextOrderId ());  	break;  }  
