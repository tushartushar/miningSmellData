Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ClassicStrategies,EMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\EMASimple.cs,_barlisttracker_GotNewBar,The length of the statement  "                        SendIndicators(new string[] { "Time: " + _currenttime.ToString()' " EMA:" + ema.ToString("F2"' System.Globalization.CultureInfo.InvariantCulture) }); " is 149.
Long Statement,ClassicStrategies,EMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\EMASimple.cs,GotTick,The length of the statement  "            if ((Calc.OpenPL(k.TradePrice' _positiontracker[k.FullSymbol]) + _positiontracker[k.FullSymbol].ClosedPL > TotalProfitTarget) || " is 128.
Long Statement,ClassicStrategies,EMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\EMASimple.cs,GotTick,The length of the statement  "                    (Calc.OpenPL(k.TradePrice' _positiontracker[k.FullSymbol]) + _positiontracker[k.FullSymbol].ClosedPL < TotalLossTolerance)) " is 123.
Long Statement,ClassicStrategies,SMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\SMASimple.cs,_barlisttracker_GotNewBar,The length of the statement  "                        SendIndicators(new string[] { "Time: "+_currenttime.ToString()' " SMA:"+sma.ToString("F2"' System.Globalization.CultureInfo.InvariantCulture) }); " is 145.
Long Statement,ClassicStrategies,SMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\SMASimple.cs,GotTick,The length of the statement  "            if ((Calc.OpenPL(k.TradePrice' _positiontracker[k.FullSymbol]) + _positiontracker[k.FullSymbol].ClosedPL > TotalProfitTarget) || " is 128.
Long Statement,ClassicStrategies,SMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\SMASimple.cs,GotTick,The length of the statement  "                    (Calc.OpenPL(k.TradePrice' _positiontracker[k.FullSymbol]) + _positiontracker[k.FullSymbol].ClosedPL < TotalLossTolerance)) " is 123.
Complex Conditional,ClassicStrategies,EMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\EMASimple.cs,_barlisttracker_GotNewBar,The conditional expression  "(_positiontracker[sym].isLong && (closes.Last() < ema))                          || (_positiontracker[sym].isShort && (closes.Last() > ema))"  is complex.
Complex Conditional,ClassicStrategies,SMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\SMASimple.cs,_barlisttracker_GotNewBar,The conditional expression  "(_positiontracker[sym].isLong && (closes.Last() < sma))                          || (_positiontracker[sym].isShort && (closes.Last() > sma))"  is complex.
Magic Number,ClassicStrategies,EMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\EMASimple.cs,_barlisttracker_GotNewBar,The following statement contains a magic number: if (_isactive && _issymbolactive[idx])              {                  BarList bl = _barlisttracker[sym' interval];                    double[] closes = Calc.Decimal2Double(bl.Close());                  // when NewBar is triggered' the latest bar only has one tick                  closes = closes.Take(closes.Length - 1).ToArray();                    EMAResult result = AnalysisEngine.EMA(closes' _barslookback' false);                    if (result.Values.Count == 0)           // Not enough bars                      return;                    // check                  if (!_waittobefilled[idx])                  {                      double ema = result.Values.Last();                      if (_positiontracker[sym].isFlat)                      {                                                    // if our current price is above EMA                          if (closes.Last() > ema)                          {                              SendDebug("Cross above EMA' buy");                              _waittobefilled[idx] = true;                              SendOrder(new MarketOrder(sym' sym.Contains("STK")?_tradesize:2));                          }                          // if our current price is below EMA                          else if (closes.Last() < ema)                          {                              SendDebug("Cross below EMA' sell");                              _waittobefilled[idx] = true;                              SendOrder(new MarketOrder(sym' -(sym.Contains("STK") ? _tradesize : 2)));                          }                      }                      else if ( (_positiontracker[sym].isLong && (closes.Last() < ema))                          || (_positiontracker[sym].isShort && (closes.Last() > ema)) )                      {                          SendDebug("Counter trend' exit.");                          _waittobefilled[idx] = true;                          SendOrder(new MarketOrderFlat(_positiontracker[sym]));                            }                        // this way we can debug our indicators during development                      // indicators are sent in the same order as they are named above                      if (_waittobefilled[idx])                          SendIndicators(new string[] { "Time: " + _currenttime.ToString()' " EMA:" + ema.ToString("F2"' System.Globalization.CultureInfo.InvariantCulture) });                  }              }
Magic Number,ClassicStrategies,EMASimple,C:\repos\letianzj_QuantTrading\Source\TradingStrategies\ClassicStrategies\EMASimple.cs,_barlisttracker_GotNewBar,The following statement contains a magic number: if (_isactive && _issymbolactive[idx])              {                  BarList bl = _barlisttracker[sym' interval];                    double[] closes = Calc.Decimal2Double(bl.Close());                  // when NewBar is triggered' the latest bar only has one tick                  closes = closes.Take(closes.Length - 1).ToArray();                    EMAResult result = AnalysisEngine.EMA(closes' _barslookback' false);                    if (result.Values.Count == 0)           // Not enough bars                      return;                    // check                  if (!_waittobefilled[idx])                  {                      double ema = result.Values.Last();                      if (_positiontracker[sym].isFlat)                      {                                                    // if our current price is above EMA                          if (closes.Last() > ema)                          {                              SendDebug("Cross above EMA' buy");                              _waittobefilled[idx] = true;                              SendOrder(new MarketOrder(sym' sym.Contains("STK")?_tradesize:2));                          }                          // if our current price is below EMA                          else if (closes.Last() < ema)                          {                              SendDebug("Cross below EMA' sell");                              _waittobefilled[idx] = true;                              SendOrder(new MarketOrder(sym' -(sym.Contains("STK") ? _tradesize : 2)));                          }                      }                      else if ( (_positiontracker[sym].isLong && (closes.Last() < ema))                          || (_positiontracker[sym].isShort && (closes.Last() > ema)) )                      {                          SendDebug("Counter trend' exit.");                          _waittobefilled[idx] = true;                          SendOrder(new MarketOrderFlat(_positiontracker[sym]));                            }                        // this way we can debug our indicators during development                      // indicators are sent in the same order as they are named above                      if (_waittobefilled[idx])                          SendIndicators(new string[] { "Time: " + _currenttime.ToString()' " EMA:" + ema.ToString("F2"' System.Globalization.CultureInfo.InvariantCulture) });                  }              }
