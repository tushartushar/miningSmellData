Implementation smell,Namespace,Class,File,Method,Description
Long Statement,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength3,The length of the statement  "                DICOMIOSettings settings = new DICOMIOSettings() { TransferSyntax = TransferSyntax.EXPLICIT_VR_BIG_ENDIAN' DoWriteIndefiniteSequences = false }; " is 144.
Long Statement,EvilDICOM.Core.Tests,DICOMWriteTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DICOMWriteTests.cs,WriteBigEndian,The length of the statement  "                    var settings = new DICOMIOSettings() { TransferSyntax = Enums.TransferSyntax.EXPLICIT_VR_BIG_ENDIAN' DoWriteIndefiniteSequences = false }; " is 138.
Long Statement,EvilDICOM.Core.Tests,PrivateTagTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\PrivateTagTests.cs,ReadUnknownFP,The length of the statement  "            dcm.Write("test.dcm"' new EvilDICOM.Core.IO.Writing.DICOMIOSettings() { TransferSyntax = EvilDICOM.Core.Enums.TransferSyntax.IMPLICIT_VR_LITTLE_ENDIAN }); " is 154.
Long Statement,EvilDICOM.Core.Tests,PrivateTagTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\PrivateTagTests.cs,ReadUnknownFP2,The length of the statement  "            dcm.Write("test.dcm"' new EvilDICOM.Core.IO.Writing.DICOMIOSettings() { TransferSyntax = EvilDICOM.Core.Enums.TransferSyntax.IMPLICIT_VR_LITTLE_ENDIAN }); " is 154.
Magic Number,EvilDICOMTests,CodeStringMultiplicityTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\CodeStringMultiplicityTests.cs,CanAddMultipleStringsTest,The following statement contains a magic number: var expected = 3;
Magic Number,EvilDICOMTests,CodeStringMultiplicityTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\CodeStringMultiplicityTests.cs,CanAddMultipleStringsTest,The following statement contains a magic number: Assert.AreEqual("Type3"' data[2]);
Magic Number,EvilDICOMTests,CodeStringMultiplicityTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\CodeStringMultiplicityTests.cs,CanAddMultipleStringsTest,The following statement contains a magic number: expected = 3;
Magic Number,EvilDICOMTests,CodeStringMultiplicityTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\CodeStringMultiplicityTests.cs,CanAddMultipleStringsTest,The following statement contains a magic number: Assert.AreEqual("Type3"' data[2]);
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength1,The following statement contains a magic number: var len = 52000;
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength1,The following statement contains a magic number: LengthWriter.WriteBigEndian(dw' len' 4);
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength2,The following statement contains a magic number: var len = 2500;
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength2,The following statement contains a magic number: LengthWriter.WriteBigEndian(dw' len' 2);
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength3,The following statement contains a magic number: var len = 10;
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteBigEndianLength3,The following statement contains a magic number: var data = new byte[10];
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteLittleEndian1,The following statement contains a magic number: var len = 52000;
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteLittleEndian1,The following statement contains a magic number: LengthWriter.WriteLittleEndian(dw' len' 4);
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteLittleEndian2,The following statement contains a magic number: var len = 2500;
Magic Number,EvilDICOMTests,LengthTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\LengthTests.cs,WriteLittleEndian2,The following statement contains a magic number: LengthWriter.WriteLittleEndian(dw' len' 2);
Magic Number,EvilDICOMTests,ReadTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\ReadTests.cs,ReadBigEndian,The following statement contains a magic number: Assert.AreEqual(dcm.Elements.Count' 44);
Magic Number,EvilDICOMTests,ReadTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\ReadTests.cs,ReadXLittleEndian,The following statement contains a magic number: Assert.AreEqual(dcm.Elements.Count' 72);
Magic Number,EvilDICOMTests,ReadTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\ReadTests.cs,ReadXLittleEndian,The following statement contains a magic number: Assert.AreEqual(dcm.GetSelector().Slice​Thickness.Data' 10);
Magic Number,EvilDICOMTests,ReadTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\ReadTests.cs,ReadMetaXLittleEndian,The following statement contains a magic number: Assert.AreEqual(dcm.Elements.Count' 7);
Magic Number,EvilDICOMTests,ElementWriterTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\ElementWriterTests.cs,WriteDecimalString,The following statement contains a magic number: ds.DData_ = Enumerable.Range(1' 15000).Select(i => ((double)i) + 0.005).ToList();
Magic Number,EvilDICOMTests,ElementWriterTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\ElementWriterTests.cs,WriteDecimalString,The following statement contains a magic number: ds.DData_ = Enumerable.Range(1' 15000).Select(i => ((double)i) + 0.005).ToList();
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,Init,The following statement contains a magic number: _decimalString = new DecimalString(TagHelper.Beam​Dose​Specification​Point' new[] {1.0' -3.5' 2.5});
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,Init,The following statement contains a magic number: _decimalString = new DecimalString(TagHelper.Beam​Dose​Specification​Point' new[] {1.0' -3.5' 2.5});
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData__Getter_ReturnsAllValues,The following statement contains a magic number: var expected = new[] {1.0' -3.5' 2.5};
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData__Getter_ReturnsAllValues,The following statement contains a magic number: var expected = new[] {1.0' -3.5' 2.5};
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData_Setter_MakesObjectSingleValued,The following statement contains a magic number: _decimalString.DData = -4.2;
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData_Setter_MakesObjectSingleValued,The following statement contains a magic number: var expected = new[] { -4.2 };
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData__Setter_ChangesAllValues,The following statement contains a magic number: _decimalString.DData_ = new List<double> {-0.3' 5.1};
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData__Setter_ChangesAllValues,The following statement contains a magic number: _decimalString.DData_ = new List<double> {-0.3' 5.1};
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData__Setter_ChangesAllValues,The following statement contains a magic number: var expected = new[] {-0.3' 5.1};
Magic Number,EvilDICOM.Core.Tests,DecimalStringTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DecimalStringTests.cs,DData__Setter_ChangesAllValues,The following statement contains a magic number: var expected = new[] {-0.3' 5.1};
Magic Number,EvilDICOM.Core.Tests,DICOMWriteTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DICOMWriteTests.cs,WriteMultipleFl,The following statement contains a magic number: vssd.Data_ = new System.Collections.Generic.List<float>() { 2538.4199f' 2541.00f };
Magic Number,EvilDICOM.Core.Tests,DICOMWriteTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DICOMWriteTests.cs,WriteMultipleFl,The following statement contains a magic number: vssd.Data_ = new System.Collections.Generic.List<float>() { 2538.4199f' 2541.00f };
Magic Number,EvilDICOM.Core.Tests,DICOMWriteTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DICOMWriteTests.cs,WriteMultipleFl,The following statement contains a magic number: Assert.AreEqual(readVssd.Data_.Count' 2);
Magic Number,EvilDICOM.Core.Tests,DICOMWriteTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DICOMWriteTests.cs,WriteMultipleFl,The following statement contains a magic number: Assert.AreEqual(readVssd.Data_[0]' 2538.4199f);
Magic Number,EvilDICOM.Core.Tests,DICOMWriteTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\DICOMWriteTests.cs,WriteMultipleFl,The following statement contains a magic number: Assert.AreEqual(readVssd.Data_[1]' 2541.00f);
Magic Number,EvilDICOM.Core.Tests,PrivateTagTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\PrivateTagTests.cs,ReadUnknownFP,The following statement contains a magic number: var fs = new FloatingPointSingle(new Tag("30091047")' 25.0f);
Magic Number,EvilDICOM.Core.Tests,PrivateTagTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\PrivateTagTests.cs,ReadUnknownFP2,The following statement contains a magic number: var fs = new FloatingPointSingle(new Tag("30091047")' 25.0f);
Magic Number,EvilDICOM.Network.Messaging.Tests,PDataMessengerTests,C:\research\architectureSmells\repos\rexcardan_Evil-DICOM\EvilDICOM\EvilDICOMTests\Network\Messaging\PDataMessengerTests.cs,GetChunksTest,The following statement contains a magic number: var bytes = PDataMessenger.GetChunks(dimse.Data' 16534' pContext);
