Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,Cyclomatic complexity of the method is 10
Complex Method,Utilities.DataTypes,BinaryTree,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\BTree.cs,Remove,Cyclomatic complexity of the method is 9
Complex Method,Utilities.DataTypes,BinaryTree,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\BTree.cs,Traversal,Cyclomatic complexity of the method is 8
Complex Method,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,Cyclomatic complexity of the method is 9
Complex Method,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,Cyclomatic complexity of the method is 8
Complex Method,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,Utilities.DataTypes,PermutationExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\PermutationExtensions.cs,Permute,Cyclomatic complexity of the method is 8
Complex Method,Utilities.DataTypes.Conversion.Converters,DbTypeTypeConverter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\DbTypeTypeConverter.cs,DbTypeToType,Cyclomatic complexity of the method is 19
Complex Method,Utilities.DataTypes.Conversion.Converters,SqlDbTypeTypeConverter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\SqlDbTypeTypeConverter.cs,SqlDbTypeToType,Cyclomatic complexity of the method is 19
Complex Method,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,Cyclomatic complexity of the method is 10
Long Parameter List,Utilities.DataTypes.AI,NaiveBayes,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,NaiveBayes,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes.AOP.Interfaces,IClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Interfaces\IClassGenerator.cs,Generate,The method has 5 parameters.
Long Parameter List,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,Setup,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupAbstract,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupInterface,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes,IEnumerableExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,LeftJoin,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes,IEnumerableExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,OuterJoin,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes,IEnumerableExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,RightJoin,The method has 6 parameters.
Long Parameter List,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The method has 5 parameters.
Long Statement,Utilities.DataTypes.Caching.Default,CacheCache,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Caching\Default\CacheCache.cs,Add,The length of the statement  "	HttpContext.Current.Cache.Add (key' value' null' System.Web.Caching.Cache.NoAbsoluteExpiration' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 174.
Long Statement,Utilities.DataTypes.AI,NaiveBayes,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The length of the statement  "		string Difference = ((0.5 - System.Math.Abs (0.5 - TokenProbability))).ToString (".0000000"' CultureInfo.InvariantCulture) + Item + x; " is 134.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,FilterTypesToSetup,The length of the statement  "	return enumerable.Where (x => !Classes.ContainsKey (x) && !x.ContainsGenericParameters && (x.IsPublic || x.IsNestedPublic) && !x.IsSealed && x.IsVisible && !x.IsCOMObject && !string.IsNullOrEmpty (x.Namespace)).ToArray (); " is 222.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  ""' usings.ToString (x => "using " + x + ";"' "\r\n")' @namespace' className' type.FullName.Replace ("+"' ".")' interfaces.Count > 0 ? "'" : ""' interfaces.ToString (x => x.Name)); " is 179.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "		//Builder.AppendLine(new ConstructorGenerator(type.GetConstructors(BindingFlags.Public | BindingFlags.Instance).First(x => x.GetParameters().Length == 0)).Generate(assembliesUsing' Aspects)); " is 191.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "		foreach (PropertyInfo Property in TempType.GetProperties (BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance)) { " is 133.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "			if (!MethodsAlreadyDone.Contains ("get_" + Property.Name) && !MethodsAlreadyDone.Contains ("set_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo != null && SetMethodInfo.IsPublic && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0) { " is 292.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "			} else if (!MethodsAlreadyDone.Contains ("get_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo == null && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0) { " is 216.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "		foreach (MethodInfo Method in TempType.GetMethods (BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance).Where (x => !MethodsAlreadyDone.Contains (x.Name) && x.IsVirtual && !x.IsFinal && !x.IsPrivate && !x.Name.StartsWith ("add_"' StringComparison.InvariantCultureIgnoreCase) && !x.Name.StartsWith ("remove_"' StringComparison.InvariantCultureIgnoreCase) && !x.IsGenericMethod)) { " is 399.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupMethod,The length of the statement  "		BaseCall = string.IsNullOrEmpty (ReturnValue) ? "base." + BaseMethodName + "(" : ReturnValue + "=base." + BaseMethodName + "("; " is 127.
Long Statement,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupMethod,The length of the statement  "                }}"' MethodInfo.ReturnType != typeof(void) ? MethodInfo.ReturnType.GetName () + " " + ReturnValue + ";" : ""' Aspects.ForEach (x => x.SetupStartMethod (MethodInfo' Type)).ToString (x => x' "\r\n")' BaseCall' Aspects.ForEach (x => x.SetupEndMethod (MethodInfo' Type' ReturnValue)).ToString (x => x' "\r\n")' string.IsNullOrEmpty (ReturnValue) ? "" : "return " + ReturnValue + ";"' Aspects.ForEach (x => x.SetupExceptionMethod (MethodInfo' Type)).ToString (x => x' "\r\n")); " is 472.
Long Statement,Utilities.DataTypes.AOP.Module,AOPModule,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Module\AOPModule.cs,Load,The length of the statement  "	Bootstrapper.Register (new Manager (Bootstrapper.Resolve<Compiler> ()' Bootstrapper.ResolveAll<IAspect> ()' Bootstrapper.ResolveAll<IAOPModule> ())); " is 149.
Long Statement,Utilities.DataTypes,DateSpan,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DateSpan.cs,Overlap,The length of the statement  "	return ((Start >= Span.Start && Start < Span.End) || (End <= Span.End && End > Span.Start) || (Start <= Span.Start && End >= Span.End)); " is 136.
Long Statement,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The length of the statement  "	if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture))) " is 129.
Long Statement,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The length of the statement  "	else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture))) " is 148.
Long Statement,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The length of the statement  "	else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture))) " is 148.
Long Statement,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysLeftIn,The length of the statement  "		return Date.DaysIn (TimeFrame.Quarter' Culture) - (Date.DayOfYear - Date.BeginningOf (TimeFrame.Quarter' Culture).DayOfYear); " is 125.
Long Statement,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The length of the statement  "	else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture))) " is 129.
Long Statement,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The length of the statement  "	else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture))) " is 129.
Long Statement,Utilities.DataTypes,GenericObjectExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\GenericObjectExtensions.cs,ThrowIfDefault,The length of the statement  "	return Item.ThrowIf (x => EqualityComparer.Check (() => new GenericEqualityComparer<T> ()).Equals (x' default(T))' Exception); " is 126.
Long Statement,Utilities.DataTypes,GenericObjectExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\GenericObjectExtensions.cs,ThrowIfNotDefault,The length of the statement  "	return Item.ThrowIf (x => !EqualityComparer.Check (() => new GenericEqualityComparer<T> ()).Equals (x' default(T))' Exception); " is 127.
Long Statement,Utilities.DataTypes,IDictionaryExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IDictionaryExtensions.cs,Sort,The length of the statement  "	return Dictionary.OrderBy (OrderBy' Comparer.Check (() => new GenericComparer<T3> ())).ToDictionary (x => x.Key' x => x.Value); " is 127.
Long Statement,Utilities.DataTypes,ProcessExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ProcessExtensions.cs,GetInformation,The length of the statement  "	return Builder.Append (HTMLFormat ? "<strong>" : "").Append (Process.ProcessName).Append (" Information").Append (HTMLFormat ? "</strong><br />" : "\n").Append (Process.ToString (HTMLFormat)).Append (HTMLFormat ? "<br />" : "\n").ToString (); " is 242.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,Attributes,The length of the statement  "	return Provider.IsDefined (typeof(T)' Inherit) ? Provider.GetCustomAttributes (typeof(T)' Inherit).ToArray (x => (T)x) : new T[0]; " is 130.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,GetName,The length of the statement  "		Output.Append (ObjectType.DeclaringType == null ? ObjectType.Namespace : ObjectType.DeclaringType.GetName ()).Append ("."); " is 123.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,GetName,The length of the statement  "			Output.Append (ObjectType.Name.Remove (ObjectType.Name.IndexOf ("`"' StringComparison.OrdinalIgnoreCase))).Append ("<"); " is 120.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,LoadAssemblies,The length of the statement  "	foreach (FileInfo File in Directory.GetFiles ("*.dll"' Recursive ? SearchOption.AllDirectories : SearchOption.TopDirectoryOnly)) { " is 130.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertyName,The length of the statement  "	return ((MemberExpression)Expression.Body).Expression.PropertyName () + ((MemberExpression)Expression.Body).Member.Name; " is 120.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "	var DefaultConstant = Expression.Constant (((object)null).To (PropertyInfo.PropertyType' null)' PropertyInfo.PropertyType); " is 123.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "			var ConversionMethod = typeof(TypeConversionExtensions).GetMethods ().FirstOrDefault (x => x.ContainsGenericParameters && x.GetGenericArguments ().Length == 2 && x.Name == "To" && x.GetParameters ().Length == 2); " is 212.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "			SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' Convert) : Expression.Call (PropertyGet' SetMethod' Convert); " is 140.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "		SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' PropertySet) : Expression.Call (PropertyGet' SetMethod' PropertySet); " is 148.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "	Assemblies.OrderBy (x => x.FullName).ForEach<Assembly> (x => Builder.AppendLine (x.GetName ().Name + ": " + x.ToString (InfoType))); " is 132.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "	TempValue.Append (HTMLOutput ? "<table><thead><tr><th>Property Name</th><th>Property Value</th></tr></thead><tbody>" : "Property Name\t\t\t\tProperty Value"); " is 158.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "		TempValue.Append (HTMLOutput ? "<tr><td>" : System.Environment.NewLine).Append (Property.Name).Append (HTMLOutput ? "</td><td>" : "\t\t\t\t"); " is 142.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "	TempValue.Append (HTMLOutput ? "<table><thead><tr><th>Property Name</th><th>Property Value</th></tr></thead><tbody>" : "Property Name\t\t\t\tProperty Value"); " is 158.
Long Statement,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "		TempValue.Append (HTMLOutput ? "<tr><td>" : System.Environment.NewLine).Append (Property.Name).Append (HTMLOutput ? "</td><td>" : "\t\t\t\t"); " is 142.
Long Statement,Utilities.DataTypes,StackTraceExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StackTraceExtensions.cs,GetMethods,The length of the statement  "		Methods.AddIf (x => x.DeclaringType != null && !ExcludedAssemblies.Contains (x.DeclaringType.Assembly) && !x.DeclaringType.Assembly.FullName.StartsWith ("System"' StringComparison.InvariantCulture) && !x.DeclaringType.Assembly.FullName.StartsWith ("mscorlib"' StringComparison.InvariantCulture) && !x.DeclaringType.Assembly.FullName.StartsWith ("WebDev.WebHost40"' StringComparison.InvariantCulture)' Frame.GetMethod ()); " is 421.
Long Statement,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Encode,The length of the statement  "	return Encoding.Convert (OriginalEncodingUsing' EncodingUsing' Input.ToByteArray (OriginalEncodingUsing)).ToString (EncodingUsing); " is 131.
Long Statement,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,StripIllegalXML,The length of the statement  "		if (Char == 0x9 || Char == 0xA || Char == 0xD || (Char >= 0x20 && Char <= 0xD7FF) || (Char >= 0xE000 && Char <= 0xFFFD)) " is 120.
Long Statement,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,StripIllegalXML,The length of the statement  "	return Builder.ToString ().Replace ('\u2013'' '-').Replace ('\u2014'' '-').Replace ('\u2015'' '-').Replace ('\u2017'' '_').Replace ('\u2018'' '\'').Replace ('\u2019'' '\'').Replace ('\u201a'' ''').Replace ('\u201b'' '\'').Replace ('\u201c'' '\"').Replace ('\u201d'' '\"').Replace ('\u201e'' '\"').Replace ("\u2026"' "...").Replace ('\u2032'' '\'').Replace ('\u2033'' '\"').Replace ("`"' "\'").Replace ("&"' "&amp;").Replace ("<"' "&lt;").Replace (">"' "&gt;").Replace ("\""' "&quot;").Replace ("\'"' "&apos;"); " is 510.
Long Statement,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Reduce,The length of the statement  "	Contract.Requires<ArgumentOutOfRangeException> (Denominator != Int32.MinValue' "Denominator can't equal Int32.MinValue"); " is 121.
Long Statement,Utilities.DataTypes,Matrix,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The length of the statement  "	Contract.Requires<InvalidOperationException> (Width == Height' "The determinant can not be calculated for a non square matrix"); " is 128.
Long Statement,Utilities.DataTypes,ObservableList,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,InsertRange,The length of the statement  "	NotifyCollectionChanged (new NotifyCollectionChangedEventArgs (NotifyCollectionChangedAction.Add' collection.ToList ()' index)); " is 128.
Long Statement,Utilities.DataTypes,ObservableList,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,RemoveAll,The length of the statement  "	NotifyCollectionChanged (new NotifyCollectionChangedEventArgs (NotifyCollectionChangedAction.Remove' this.Where (x => match (x)))); " is 131.
Long Statement,Utilities.DataTypes,ObservableList,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,RemoveAt,The length of the statement  "	NotifyCollectionChanged (new NotifyCollectionChangedEventArgs (NotifyCollectionChangedAction.Remove' this [index]' index)); " is 123.
Long Statement,Utilities.DataTypes,ObservableList,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,RemoveRange,The length of the statement  "	NotifyCollectionChanged (new NotifyCollectionChangedEventArgs (NotifyCollectionChangedAction.Remove' this.ElementsBetween (index' index + count)' index)); " is 154.
Long Statement,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Add,The length of the statement  "	}' References.ForEach (x => MetadataReference.CreateFromFile (x.Location))' new CSharpCompilationOptions (OutputKind.DynamicallyLinkedLibrary' usings: Usings' optimizationLevel: Optimize ? OptimizationLevel.Release : OptimizationLevel.Debug)); " is 243.
Long Statement,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Add,The length of the statement  "			throw new Exception (Code + System.Environment.NewLine + System.Environment.NewLine + Result.Diagnostics.ToString (x => x.GetMessage () + " : " + x.Location.GetLineSpan ().StartLinePosition.Line' System.Environment.NewLine)); " is 225.
Long Statement,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Save,The length of the statement  "	if ((AssemblyStream != null && !string.IsNullOrEmpty (AssemblyDirectory) && (!new FileInfo (AssemblyDirectory + "\\" + AssemblyName + ".dll").Exists || RegenerateAssembly)) && AssemblyStream.Length > 0) { " is 204.
Long Statement,Utilities.DataTypes.Comparison,GenericComparer,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Comparison\GenericComparer.cs,Compare,The length of the statement  "	if (!typeof(T).IsValueType || (typeof(T).IsGenericType && typeof(T).GetGenericTypeDefinition ().IsAssignableFrom (typeof(Nullable<>)))) { " is 137.
Long Statement,Utilities.DataTypes.Comparison,GenericEqualityComparer,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Comparison\GenericEqualityComparer.cs,Equals,The length of the statement  "	if (!typeof(T).IsValueType || (typeof(T).IsGenericType && typeof(T).GetGenericTypeDefinition ().IsAssignableFrom (typeof(Nullable<>)))) { " is 137.
Long Statement,Utilities.DataTypes.DataMapper.BaseClasses,TypeMappingBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DataMapper\BaseClasses\TypeMappingBase.cs,AddLeftIDictionaryMapping,The length of the statement  "				var Key = Temp.Keys.FirstOrDefault (z => string.Equals (z.Replace ("_"' "")' Property.Name' StringComparison.InvariantCultureIgnoreCase)); " is 138.
Long Statement,Utilities.DataTypes.DataMapper.BaseClasses,TypeMappingBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DataMapper\BaseClasses\TypeMappingBase.cs,AddRightIDictionaryMapping,The length of the statement  "				var Key = Temp.Keys.FirstOrDefault (z => string.Equals (z.Replace ("_"' "")' Property.Name' StringComparison.InvariantCultureIgnoreCase)); " is 138.
Long Statement,Utilities.DataTypes.DataMapper.Module,DataMapperModule,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DataMapper\Module\DataMapperModule.cs,Load,The length of the statement  "	Bootstrapper.Register (new Manager (Bootstrapper.ResolveAll<IDataMapper> ()' Bootstrapper.ResolveAll<IMapperModule> ())); " is 121.
Long Statement,Utilities.DataTypes.Formatters,GenericStringFormatter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Formatters\GenericStringFormatter.cs,IsValid,The length of the statement  "		if (EscapeCharFound && FormatPattern [x] != DigitChar && FormatPattern [x] != AlphaChar && FormatPattern [x] != EscapeChar) " is 123.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  ""' usings.ToString (x => "using " + x + ";"' "\r\n")' @namespace' className' DeclaringType.FullName.Replace ("+"' ".")' interfaces.Count > 0 ? "'" : ""' interfaces.ToString (x => x.Name)); " is 188.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "		Builder.AppendLine (new ConstructorGenerator (DeclaringType.GetConstructors (BindingFlags.Public | BindingFlags.Instance).FirstOrDefault (x => x.GetParameters ().Length == 0)' DeclaringType).Generate (assembliesUsing' Aspects)); " is 228.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "		foreach (PropertyInfo Property in TempType.GetProperties (BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance)) { " is 133.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "			if (!MethodsAlreadyDone.Contains ("get_" + Property.Name) && !MethodsAlreadyDone.Contains ("set_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo != null && SetMethodInfo.IsPublic && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0) { " is 292.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "			} else if (!MethodsAlreadyDone.Contains ("get_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo == null && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0) { " is 216.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "		foreach (MethodInfo Method in TempType.GetMethods (BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance).Where (x => !MethodsAlreadyDone.Contains (x.Name) && x.IsVirtual && !x.IsFinal && !x.IsPrivate && !x.Name.StartsWith ("add_"' StringComparison.InvariantCultureIgnoreCase) && !x.Name.StartsWith ("remove_"' StringComparison.InvariantCultureIgnoreCase) && !x.IsGenericMethod)) { " is 399.
Long Statement,Utilities.DataTypes.AOP.Generators,ConstructorGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ConstructorGenerator.cs,Generate,The length of the statement  "                }}"' DeclaringType.Name + "Derived"' DeclaringType.IsInterface ? "" : ":base()"' aspects.ToString (x => x.SetupDefaultConstructor (DeclaringType))); " is 148.
Long Statement,Utilities.DataTypes.AOP.Generators,MethodGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\MethodGenerator.cs,ToString,The length of the statement  "	return string.Format (@"{4} {5} {0} {1} {2}({3})"' MethodInfo.IsStatic ? "static" : ""' MethodInfo.ReturnType.GetName ()' MethodInfo.Name' MethodInfo.GetParameters ().ToString (x => new ParameterGenerator (x).Generate (null))' "public"' (MethodInfo.IsAbstract | MethodInfo.IsVirtual) & !DeclaringType.IsInterface ? "override" : ""); " is 332.
Long Statement,Utilities.DataTypes.AOP.Generators,MethodGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\MethodGenerator.cs,SetupMethod,The length of the statement  "		BaseCall = string.IsNullOrEmpty (ReturnValue) ? "base." + BaseMethodName + "(" : ReturnValue + "=base." + BaseMethodName + "("; " is 127.
Long Statement,Utilities.DataTypes.AOP.Generators,MethodGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\MethodGenerator.cs,SetupMethod,The length of the statement  "                }}"' MethodInfo.ReturnType != typeof(void) ? MethodInfo.ReturnType.GetName () + " " + ReturnValue + ";" : ""' aspects.ForEach (x => x.SetupStartMethod (MethodInfo' DeclaringType)).ToString (x => x' "\r\n")' BaseCall' aspects.ForEach (x => x.SetupEndMethod (MethodInfo' DeclaringType' ReturnValue)).ToString (x => x' "\r\n")' string.IsNullOrEmpty (ReturnValue) ? "" : "return " + ReturnValue + ";"' aspects.ForEach (x => x.SetupExceptionMethod (MethodInfo' DeclaringType)).ToString (x => x' "\r\n")); " is 499.
Long Statement,Utilities.DataTypes.AOP.Generators,PropertyGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\PropertyGenerator.cs,Generate,The length of the statement  "        {3}"' ToString ()' SetupMethod (DeclaringType' GetMethodInfo' aspects)' SetupMethod (DeclaringType' SetMethodInfo' aspects)' CreateBackingField (GetMethodInfo.IsAbstract | DeclaringType.IsInterface)); " is 200.
Long Statement,Utilities.DataTypes.AOP.Generators,PropertyGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\PropertyGenerator.cs,ToString,The length of the statement  "	return string.Format (@"{0} {1} {2} {3}"' "public"' (Method.IsAbstract | Method.IsVirtual) & !DeclaringType.IsInterface ? "override" : ""' Method.ReturnType.GetName ()' PropertyInfo.Name); " is 188.
Long Statement,Utilities.DataTypes.AOP.Generators,PropertyGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\PropertyGenerator.cs,SetupMethod,The length of the statement  "                }}"' methodInfo.ReturnType != typeof(void) ? methodInfo.ReturnType.GetName () + " " + ReturnValue + ";" : ""' aspects.ForEach (x => x.SetupStartMethod (methodInfo' type)).ToString (x => x' "\r\n")' BaseCall' aspects.ForEach (x => x.SetupEndMethod (methodInfo' type' ReturnValue)).ToString (x => x' "\r\n")' string.IsNullOrEmpty (ReturnValue) ? "" : "return " + ReturnValue + ";"' aspects.ForEach (x => x.SetupExceptionMethod (methodInfo' type)).ToString (x => x' "\r\n")); " is 472.
Complex Conditional,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The conditional expression  "!MethodsAlreadyDone.Contains ("get_" + Property.Name) && !MethodsAlreadyDone.Contains ("set_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo != null && SetMethodInfo.IsPublic && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0"  is complex.
Complex Conditional,Utilities.DataTypes.AOP,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The conditional expression  "!MethodsAlreadyDone.Contains ("get_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo == null && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0"  is complex.
Complex Conditional,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,The conditional expression  "Property.CanRead && Property.CanWrite && SimpleTypesOnly && Property.PropertyType.IsValueType"  is complex.
Complex Conditional,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The conditional expression  "x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1]"  is complex.
Complex Conditional,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,StripIllegalXML,The conditional expression  "Char == 0x9 || Char == 0xA || Char == 0xD || (Char >= 0x20 && Char <= 0xD7FF) || (Char >= 0xE000 && Char <= 0xFFFD)"  is complex.
Complex Conditional,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Save,The conditional expression  "(AssemblyStream != null && !string.IsNullOrEmpty (AssemblyDirectory) && (!new FileInfo (AssemblyDirectory + "\\" + AssemblyName + ".dll").Exists || RegenerateAssembly)) && AssemblyStream.Length > 0"  is complex.
Complex Conditional,Utilities.DataTypes.Formatters,GenericStringFormatter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Formatters\GenericStringFormatter.cs,GetMatchingInput,The conditional expression  "(Digit && char.IsDigit (Input [x])) || (Alpha && char.IsLetter (Input [x]))"  is complex.
Complex Conditional,Utilities.DataTypes.Formatters,GenericStringFormatter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Formatters\GenericStringFormatter.cs,IsValid,The conditional expression  "EscapeCharFound && FormatPattern [x] != DigitChar && FormatPattern [x] != AlphaChar && FormatPattern [x] != EscapeChar"  is complex.
Complex Conditional,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The conditional expression  "!MethodsAlreadyDone.Contains ("get_" + Property.Name) && !MethodsAlreadyDone.Contains ("set_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo != null && SetMethodInfo.IsPublic && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0"  is complex.
Complex Conditional,Utilities.DataTypes.AOP.Generators,ClassGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The conditional expression  "!MethodsAlreadyDone.Contains ("get_" + Property.Name) && GetMethodInfo != null && GetMethodInfo.IsVirtual && SetMethodInfo == null && !GetMethodInfo.IsFinal && Property.GetIndexParameters ().Length == 0"  is complex.
Empty Catch Block,Utilities.DataTypes,ExceptionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ExceptionExtensions.cs,ToString,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,LoadAssemblies,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,Types,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,TagDictionary,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\TagDictionary.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes.Conversion,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Manager.cs,To,The method has an empty catch block.
Magic Number,Utilities.DataTypes.AI,NaiveBayes,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The following statement contains a magic number: foreach (T Item in Items) {  	double TokenProbability = 0.5;  	if (Probabilities.ContainsKey (Item))  		TokenProbability = Probabilities [Item];  	string Difference = ((0.5 - System.Math.Abs (0.5 - TokenProbability))).ToString (".0000000"' CultureInfo.InvariantCulture) + Item + x;  	SortedProbabilities.Add (Difference' TokenProbability);  	++x;  }  
Magic Number,Utilities.DataTypes.AI,NaiveBayes,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The following statement contains a magic number: foreach (T Item in Items) {  	double TokenProbability = 0.5;  	if (Probabilities.ContainsKey (Item))  		TokenProbability = Probabilities [Item];  	string Difference = ((0.5 - System.Math.Abs (0.5 - TokenProbability))).ToString (".0000000"' CultureInfo.InvariantCulture) + Item + x;  	SortedProbabilities.Add (Difference' TokenProbability);  	++x;  }  
Magic Number,Utilities.DataTypes.AI,NaiveBayes,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The following statement contains a magic number: foreach (T Item in Items) {  	double TokenProbability = 0.5;  	if (Probabilities.ContainsKey (Item))  		TokenProbability = Probabilities [Item];  	string Difference = ((0.5 - System.Math.Abs (0.5 - TokenProbability))).ToString (".0000000"' CultureInfo.InvariantCulture) + Item + x;  	SortedProbabilities.Add (Difference' TokenProbability);  	++x;  }  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,AddWeeks,The following statement contains a magic number: return Date.AddDays (NumberOfWeeks * 7);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (3).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths (3).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' CultureInfo.CurrentCulture)))  	return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths (6).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths (9).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysIn,The following statement contains a magic number: if (TimeFrame == TimeFrame.Week)  	return 7;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysIn,The following statement contains a magic number: return 7;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysLeftIn,The following statement contains a magic number: if (TimeFrame == TimeFrame.Week)  	return 7 - ((int)Date.DayOfWeek + 1);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysLeftIn,The following statement contains a magic number: return 7 - ((int)Date.DayOfWeek + 1);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (TimeFrame == TimeFrame.Day)  	return new DateTime (Date.Year' Date.Month' Date.Day' 23' 59' 59);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (TimeFrame == TimeFrame.Day)  	return new DateTime (Date.Year' Date.Month' Date.Day' 23' 59' 59);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (TimeFrame == TimeFrame.Day)  	return new DateTime (Date.Year' Date.Month' Date.Day' 23' 59' 59);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime (Date.Year' Date.Month' Date.Day' 23' 59' 59);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime (Date.Year' Date.Month' Date.Day' 23' 59' 59);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime (Date.Year' Date.Month' Date.Day' 23' 59' 59);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (TimeFrame == TimeFrame.Week)  	return Date.BeginningOf (TimeFrame.Week' Culture).AddDays (6);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return Date.BeginningOf (TimeFrame.Week' Culture).AddDays (6);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime (Date.Year' 12' 31);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime (Date.Year' 12' 31);  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1' StartOfQuarter1.AddMonths (3).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths (3).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (3)' StartOfQuarter1.AddMonths (6).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  else if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths (6).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: if (Date.Between (StartOfQuarter1.AddMonths (6)' StartOfQuarter1.AddMonths (9).AddDays (-1).EndOf (TimeFrame.Day' Culture)))  	return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths (9).AddDays (-1).Date;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,Is,The following statement contains a magic number: if (Comparison.HasFlag (DateCompare.WeekDay) && ((int)Date.DayOfWeek == 6 || (int)Date.DayOfWeek == 0))  	return false;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,Is,The following statement contains a magic number: if (Comparison.HasFlag (DateCompare.WeekEnd) && (int)Date.DayOfWeek != 6 && (int)Date.DayOfWeek != 0)  	return false;  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,To,The following statement contains a magic number: Epoch = Epoch.Check (x => x != default(DateTime)' () => new DateTime (1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,To,The following statement contains a magic number: Epoch = Epoch.Check (x => x != default(DateTime)' () => new DateTime (1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));  
Magic Number,Utilities.DataTypes,DateTimeExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,To,The following statement contains a magic number: Epoch = Epoch.Check (x => x != default(DateTime)' () => new DateTime (1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));  
Magic Number,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The following statement contains a magic number: if (SetMethod != null) {  	if (PropertyInfo.PropertyType != typeof(DataType)) {  		var ConversionMethod = typeof(TypeConversionExtensions).GetMethods ().FirstOrDefault (x => x.ContainsGenericParameters && x.GetGenericArguments ().Length == 2 && x.Name == "To" && x.GetParameters ().Length == 2);  		ConversionMethod = ConversionMethod.MakeGenericMethod (typeof(DataType)' PropertyInfo.PropertyType);  		var Convert = Expression.Call (ConversionMethod' PropertySet' DefaultConstant);  		SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' Convert) : Expression.Call (PropertyGet' SetMethod' Convert);  		return Expression.Lambda<Action<ClassType' DataType>> (SetterCall' ObjectInstance' PropertySet);  	}  	SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' PropertySet) : Expression.Call (PropertyGet' SetMethod' PropertySet);  } else  	return Expression.Lambda<Action<ClassType' DataType>> (Expression.Empty ()' ObjectInstance' PropertySet);  
Magic Number,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The following statement contains a magic number: if (SetMethod != null) {  	if (PropertyInfo.PropertyType != typeof(DataType)) {  		var ConversionMethod = typeof(TypeConversionExtensions).GetMethods ().FirstOrDefault (x => x.ContainsGenericParameters && x.GetGenericArguments ().Length == 2 && x.Name == "To" && x.GetParameters ().Length == 2);  		ConversionMethod = ConversionMethod.MakeGenericMethod (typeof(DataType)' PropertyInfo.PropertyType);  		var Convert = Expression.Call (ConversionMethod' PropertySet' DefaultConstant);  		SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' Convert) : Expression.Call (PropertyGet' SetMethod' Convert);  		return Expression.Lambda<Action<ClassType' DataType>> (SetterCall' ObjectInstance' PropertySet);  	}  	SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' PropertySet) : Expression.Call (PropertyGet' SetMethod' PropertySet);  } else  	return Expression.Lambda<Action<ClassType' DataType>> (Expression.Empty ()' ObjectInstance' PropertySet);  
Magic Number,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The following statement contains a magic number: if (PropertyInfo.PropertyType != typeof(DataType)) {  	var ConversionMethod = typeof(TypeConversionExtensions).GetMethods ().FirstOrDefault (x => x.ContainsGenericParameters && x.GetGenericArguments ().Length == 2 && x.Name == "To" && x.GetParameters ().Length == 2);  	ConversionMethod = ConversionMethod.MakeGenericMethod (typeof(DataType)' PropertyInfo.PropertyType);  	var Convert = Expression.Call (ConversionMethod' PropertySet' DefaultConstant);  	SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' Convert) : Expression.Call (PropertyGet' SetMethod' Convert);  	return Expression.Lambda<Action<ClassType' DataType>> (SetterCall' ObjectInstance' PropertySet);  }  
Magic Number,Utilities.DataTypes,ReflectionExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The following statement contains a magic number: if (PropertyInfo.PropertyType != typeof(DataType)) {  	var ConversionMethod = typeof(TypeConversionExtensions).GetMethods ().FirstOrDefault (x => x.ContainsGenericParameters && x.GetGenericArguments ().Length == 2 && x.Name == "To" && x.GetParameters ().Length == 2);  	ConversionMethod = ConversionMethod.MakeGenericMethod (typeof(DataType)' PropertyInfo.PropertyType);  	var Convert = Expression.Call (ConversionMethod' PropertySet' DefaultConstant);  	SetterCall = PropertyGet == null ? Expression.Call (ObjectInstance' SetMethod' Convert) : Expression.Call (PropertyGet' SetMethod' Convert);  	return Expression.Lambda<Action<ClassType' DataType>> (SetterCall' ObjectInstance' PropertySet);  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Center,The following statement contains a magic number: for (int x = 0; x < (Length - Input.Length) / 2; ++x) {  	Output += Padding [x % Padding.Length];  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Center,The following statement contains a magic number: for (int x = 0; x < (Length - Input.Length) / 2; ++x) {  	Output += Padding [x % Padding.Length];  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: if (ComparisonType == StringCompare.CreditCard) {  	long CheckSum = 0;  	Value = Value.Replace ("-"' "").Reverse ();  	for (int x = 0; x < Value.Length; ++x) {  		if (!Value [x].Is (CharIs.Digit))  			return false;  		int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  		while (TempValue > 0) {  			CheckSum += TempValue % 10;  			TempValue /= 10;  		}  	}  	return (CheckSum % 10) == 0;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: if (ComparisonType == StringCompare.CreditCard) {  	long CheckSum = 0;  	Value = Value.Replace ("-"' "").Reverse ();  	for (int x = 0; x < Value.Length; ++x) {  		if (!Value [x].Is (CharIs.Digit))  			return false;  		int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  		while (TempValue > 0) {  			CheckSum += TempValue % 10;  			TempValue /= 10;  		}  	}  	return (CheckSum % 10) == 0;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: if (ComparisonType == StringCompare.CreditCard) {  	long CheckSum = 0;  	Value = Value.Replace ("-"' "").Reverse ();  	for (int x = 0; x < Value.Length; ++x) {  		if (!Value [x].Is (CharIs.Digit))  			return false;  		int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  		while (TempValue > 0) {  			CheckSum += TempValue % 10;  			TempValue /= 10;  		}  	}  	return (CheckSum % 10) == 0;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: if (ComparisonType == StringCompare.CreditCard) {  	long CheckSum = 0;  	Value = Value.Replace ("-"' "").Reverse ();  	for (int x = 0; x < Value.Length; ++x) {  		if (!Value [x].Is (CharIs.Digit))  			return false;  		int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  		while (TempValue > 0) {  			CheckSum += TempValue % 10;  			TempValue /= 10;  		}  	}  	return (CheckSum % 10) == 0;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: if (ComparisonType == StringCompare.CreditCard) {  	long CheckSum = 0;  	Value = Value.Replace ("-"' "").Reverse ();  	for (int x = 0; x < Value.Length; ++x) {  		if (!Value [x].Is (CharIs.Digit))  			return false;  		int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  		while (TempValue > 0) {  			CheckSum += TempValue % 10;  			TempValue /= 10;  		}  	}  	return (CheckSum % 10) == 0;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: for (int x = 0; x < Value.Length; ++x) {  	if (!Value [x].Is (CharIs.Digit))  		return false;  	int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  	while (TempValue > 0) {  		CheckSum += TempValue % 10;  		TempValue /= 10;  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: for (int x = 0; x < Value.Length; ++x) {  	if (!Value [x].Is (CharIs.Digit))  		return false;  	int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  	while (TempValue > 0) {  		CheckSum += TempValue % 10;  		TempValue /= 10;  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: for (int x = 0; x < Value.Length; ++x) {  	if (!Value [x].Is (CharIs.Digit))  		return false;  	int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  	while (TempValue > 0) {  		CheckSum += TempValue % 10;  		TempValue /= 10;  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: for (int x = 0; x < Value.Length; ++x) {  	if (!Value [x].Is (CharIs.Digit))  		return false;  	int TempValue = (Value [x] - '0') * (x % 2 == 1 ? 2 : 1);  	while (TempValue > 0) {  		CheckSum += TempValue % 10;  		TempValue /= 10;  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: while (TempValue > 0) {  	CheckSum += TempValue % 10;  	TempValue /= 10;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: while (TempValue > 0) {  	CheckSum += TempValue % 10;  	TempValue /= 10;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: CheckSum += TempValue % 10;  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: TempValue /= 10;  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: return (CheckSum % 10) == 0;  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int x = 1; x <= Value1.Length; ++x) {  	for (int y = 1; y <= Value2.Length; ++y) {  		int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  		Matrix [x' y] = new int[] {  			Matrix [x - 1' y] + 1'  			Matrix [x' y - 1] + 1'  			Matrix [x - 1' y - 1] + Cost  		}.Min ();  		if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  			Matrix [x' y] = new int[] {  				Matrix [x' y]'  				Matrix [x - 2' y - 2] + Cost  			}.Min ();  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int x = 1; x <= Value1.Length; ++x) {  	for (int y = 1; y <= Value2.Length; ++y) {  		int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  		Matrix [x' y] = new int[] {  			Matrix [x - 1' y] + 1'  			Matrix [x' y - 1] + 1'  			Matrix [x - 1' y - 1] + Cost  		}.Min ();  		if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  			Matrix [x' y] = new int[] {  				Matrix [x' y]'  				Matrix [x - 2' y - 2] + Cost  			}.Min ();  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int x = 1; x <= Value1.Length; ++x) {  	for (int y = 1; y <= Value2.Length; ++y) {  		int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  		Matrix [x' y] = new int[] {  			Matrix [x - 1' y] + 1'  			Matrix [x' y - 1] + 1'  			Matrix [x - 1' y - 1] + Cost  		}.Min ();  		if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  			Matrix [x' y] = new int[] {  				Matrix [x' y]'  				Matrix [x - 2' y - 2] + Cost  			}.Min ();  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int x = 1; x <= Value1.Length; ++x) {  	for (int y = 1; y <= Value2.Length; ++y) {  		int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  		Matrix [x' y] = new int[] {  			Matrix [x - 1' y] + 1'  			Matrix [x' y - 1] + 1'  			Matrix [x - 1' y - 1] + Cost  		}.Min ();  		if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  			Matrix [x' y] = new int[] {  				Matrix [x' y]'  				Matrix [x - 2' y - 2] + Cost  			}.Min ();  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int y = 1; y <= Value2.Length; ++y) {  	int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  	Matrix [x' y] = new int[] {  		Matrix [x - 1' y] + 1'  		Matrix [x' y - 1] + 1'  		Matrix [x - 1' y - 1] + Cost  	}.Min ();  	if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  		Matrix [x' y] = new int[] {  			Matrix [x' y]'  			Matrix [x - 2' y - 2] + Cost  		}.Min ();  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int y = 1; y <= Value2.Length; ++y) {  	int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  	Matrix [x' y] = new int[] {  		Matrix [x - 1' y] + 1'  		Matrix [x' y - 1] + 1'  		Matrix [x - 1' y - 1] + Cost  	}.Min ();  	if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  		Matrix [x' y] = new int[] {  			Matrix [x' y]'  			Matrix [x - 2' y - 2] + Cost  		}.Min ();  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int y = 1; y <= Value2.Length; ++y) {  	int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  	Matrix [x' y] = new int[] {  		Matrix [x - 1' y] + 1'  		Matrix [x' y - 1] + 1'  		Matrix [x - 1' y - 1] + Cost  	}.Min ();  	if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  		Matrix [x' y] = new int[] {  			Matrix [x' y]'  			Matrix [x - 2' y - 2] + Cost  		}.Min ();  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: for (int y = 1; y <= Value2.Length; ++y) {  	int Cost = Value1 [x - 1] == Value2 [y - 1] ? 0 : 1;  	Matrix [x' y] = new int[] {  		Matrix [x - 1' y] + 1'  		Matrix [x' y - 1] + 1'  		Matrix [x - 1' y - 1] + Cost  	}.Min ();  	if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  		Matrix [x' y] = new int[] {  			Matrix [x' y]'  			Matrix [x - 2' y - 2] + Cost  		}.Min ();  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  	Matrix [x' y] = new int[] {  		Matrix [x' y]'  		Matrix [x - 2' y - 2] + Cost  	}.Min ();  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  	Matrix [x' y] = new int[] {  		Matrix [x' y]'  		Matrix [x - 2' y - 2] + Cost  	}.Min ();  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  	Matrix [x' y] = new int[] {  		Matrix [x' y]'  		Matrix [x - 2' y - 2] + Cost  	}.Min ();  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: if (x > 1 && y > 1 && Value1 [x - 1] == Value2 [y - 2] && Value1 [x - 2] == Value2 [y - 1])  	Matrix [x' y] = new int[] {  		Matrix [x' y]'  		Matrix [x - 2' y - 2] + Cost  	}.Min ();  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: Matrix [x' y] = new int[] {  	Matrix [x' y]'  	Matrix [x - 2' y - 2] + Cost  }.Min ();  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: Matrix [x' y] = new int[] {  	Matrix [x' y]'  	Matrix [x - 2' y - 2] + Cost  }.Min ();  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,The following statement contains a magic number: if (Case == StringCase.FirstCharacterUpperCase) {  	var InputChars = Input.ToCharArray ();  	for (int x = 0; x < InputChars.Length; ++x) {  		if (InputChars [x] != ' ' && InputChars [x] != '\t') {  			InputChars [x] = char.ToUpper (InputChars [x]' CultureInfo.InvariantCulture);  			break;  		}  	}  	return new string (InputChars);  } else if (Case == StringCase.SentenceCapitalize) {  	string[] Seperator =  {  		"."'  		"?"'  		"!"  	};  	var InputStrings = Input.Split (Seperator' StringSplitOptions.None);  	for (int x = 0; x < InputStrings.Length; ++x) {  		if (!string.IsNullOrEmpty (InputStrings [x])) {  			var TempRegex = new Regex (InputStrings [x]);  			InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  			Input = TempRegex.Replace (Input' InputStrings [x]);  		}  	}  	return Input;  } else if (Case == StringCase.TitleCase) {  	string[] Seperator =  {  		" "'  		"."'  		"\t"'  		System.Environment.NewLine'  		"!"'  		"?"  	};  	var InputStrings = Input.Split (Seperator' StringSplitOptions.None);  	for (int x = 0; x < InputStrings.Length; ++x) {  		if (!string.IsNullOrEmpty (InputStrings [x]) && InputStrings [x].Length > 3) {  			var TempRegex = new Regex (InputStrings [x].Replace (")"' @"\)").Replace ("("' @"\(").Replace ("*"' @"\*"));  			InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  			Input = TempRegex.Replace (Input' InputStrings [x]);  		}  	}  	return Input;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,The following statement contains a magic number: if (Case == StringCase.SentenceCapitalize) {  	string[] Seperator =  {  		"."'  		"?"'  		"!"  	};  	var InputStrings = Input.Split (Seperator' StringSplitOptions.None);  	for (int x = 0; x < InputStrings.Length; ++x) {  		if (!string.IsNullOrEmpty (InputStrings [x])) {  			var TempRegex = new Regex (InputStrings [x]);  			InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  			Input = TempRegex.Replace (Input' InputStrings [x]);  		}  	}  	return Input;  } else if (Case == StringCase.TitleCase) {  	string[] Seperator =  {  		" "'  		"."'  		"\t"'  		System.Environment.NewLine'  		"!"'  		"?"  	};  	var InputStrings = Input.Split (Seperator' StringSplitOptions.None);  	for (int x = 0; x < InputStrings.Length; ++x) {  		if (!string.IsNullOrEmpty (InputStrings [x]) && InputStrings [x].Length > 3) {  			var TempRegex = new Regex (InputStrings [x].Replace (")"' @"\)").Replace ("("' @"\(").Replace ("*"' @"\*"));  			InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  			Input = TempRegex.Replace (Input' InputStrings [x]);  		}  	}  	return Input;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,The following statement contains a magic number: if (Case == StringCase.TitleCase) {  	string[] Seperator =  {  		" "'  		"."'  		"\t"'  		System.Environment.NewLine'  		"!"'  		"?"  	};  	var InputStrings = Input.Split (Seperator' StringSplitOptions.None);  	for (int x = 0; x < InputStrings.Length; ++x) {  		if (!string.IsNullOrEmpty (InputStrings [x]) && InputStrings [x].Length > 3) {  			var TempRegex = new Regex (InputStrings [x].Replace (")"' @"\)").Replace ("("' @"\(").Replace ("*"' @"\*"));  			InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  			Input = TempRegex.Replace (Input' InputStrings [x]);  		}  	}  	return Input;  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,The following statement contains a magic number: for (int x = 0; x < InputStrings.Length; ++x) {  	if (!string.IsNullOrEmpty (InputStrings [x]) && InputStrings [x].Length > 3) {  		var TempRegex = new Regex (InputStrings [x].Replace (")"' @"\)").Replace ("("' @"\(").Replace ("*"' @"\*"));  		InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  		Input = TempRegex.Replace (Input' InputStrings [x]);  	}  }  
Magic Number,Utilities.DataTypes,StringExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,The following statement contains a magic number: if (!string.IsNullOrEmpty (InputStrings [x]) && InputStrings [x].Length > 3) {  	var TempRegex = new Regex (InputStrings [x].Replace (")"' @"\)").Replace ("("' @"\(").Replace ("*"' @"\*"));  	InputStrings [x] = InputStrings [x].ToString (StringCase.FirstCharacterUpperCase);  	Input = TempRegex.Replace (Input' InputStrings [x]);  }  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Absolute,The following statement contains a magic number: Contract.Requires<ArgumentException> (Value != -9223372036854775808);  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Absolute,The following statement contains a magic number: Contract.Requires<ArgumentException> (Value != -32768);  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Factorial,The following statement contains a magic number: for (int x = 2; x <= Input; ++x)  	Value1 = Value1 * x;  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,GreatestCommonDenominator,The following statement contains a magic number: Contract.Requires<ArgumentException> (Value2 != 2147483648);  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,GreatestCommonDenominator,The following statement contains a magic number: Contract.Requires<ArgumentException> (Value1 != 2147483648);  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,GreatestCommonDenominator,The following statement contains a magic number: Contract.Requires<ArgumentException> (Value2 != 2147483648);  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Median,The following statement contains a magic number: return Values.ElementAt ((Values.Count () / 2));  
Magic Number,Utilities.DataTypes,MathExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Round,The following statement contains a magic number: Contract.Requires<ArgumentException> (Digits <= 15);  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: while (Numerator != System.Math.Round (Numerator' MidpointRounding.AwayFromZero) || Denominator != System.Math.Round (Denominator' MidpointRounding.AwayFromZero)) {  	Numerator *= 10;  	Denominator *= 10;  }  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: while (Numerator != System.Math.Round (Numerator' MidpointRounding.AwayFromZero) || Denominator != System.Math.Round (Denominator' MidpointRounding.AwayFromZero)) {  	Numerator *= 10;  	Denominator *= 10;  }  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Numerator *= 10;  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Denominator *= 10;  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: while (Numerator != System.Math.Round (Numerator' MidpointRounding.AwayFromZero) || Denominator != System.Math.Round (Denominator' MidpointRounding.AwayFromZero)) {  	Numerator *= 10;  	Denominator *= 10;  }  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: while (Numerator != System.Math.Round (Numerator' MidpointRounding.AwayFromZero) || Denominator != System.Math.Round (Denominator' MidpointRounding.AwayFromZero)) {  	Numerator *= 10;  	Denominator *= 10;  }  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Numerator *= 10;  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Denominator *= 10;  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: while (Numerator != System.Math.Round (Numerator' MidpointRounding.AwayFromZero) || Denominator != System.Math.Round (Denominator' MidpointRounding.AwayFromZero)) {  	Numerator *= 10;  	Denominator *= 10;  }  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: while (Numerator != System.Math.Round (Numerator' MidpointRounding.AwayFromZero) || Denominator != System.Math.Round (Denominator' MidpointRounding.AwayFromZero)) {  	Numerator *= 10;  	Denominator *= 10;  }  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Numerator *= 10;  
Magic Number,Utilities.DataTypes,Fraction,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Denominator *= 10;  
Magic Number,Utilities.DataTypes,Matrix,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The following statement contains a magic number: if (Width == 2)  	return (this [0' 0] * this [1' 1]) - (this [0' 1] * this [1' 0]);  
Magic Number,Utilities.DataTypes,Matrix,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The following statement contains a magic number: for (int x = 0; x < Width; ++x) {  	var TempMatrix = new Matrix (Width - 1' Height - 1);  	int WidthCounter = 0;  	for (int y = 0; y < Width; ++y) {  		if (y != x) {  			for (int z = 1; z < Height; ++z)  				TempMatrix [WidthCounter' z - 1] = this [y' z];  			++WidthCounter;  		}  	}  	if (x % 2 == 0) {  		Answer += TempMatrix.Determinant ();  	} else {  		Answer -= TempMatrix.Determinant ();  	}  }  
Magic Number,Utilities.DataTypes,Matrix,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The following statement contains a magic number: if (x % 2 == 0) {  	Answer += TempMatrix.Determinant ();  } else {  	Answer -= TempMatrix.Determinant ();  }  
Missing Default,Utilities.DataTypes.Conversion.Converters,DbTypeTypeConverter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\DbTypeTypeConverter.cs,DbTypeToType,The following switch statement is missing a default case: switch (TempValue) {  case DbType.Byte:  	return typeof(byte);  case DbType.SByte:  	return typeof(sbyte);  case DbType.Int16:  	return typeof(short);  case DbType.UInt16:  	return typeof(ushort);  case DbType.Int32:  	return typeof(int);  case DbType.UInt32:  	return typeof(uint);  case DbType.Int64:  	return typeof(long);  case DbType.UInt64:  	return typeof(ulong);  case DbType.Single:  	return typeof(float);  case DbType.Double:  	return typeof(double);  case DbType.Decimal:  	return typeof(decimal);  case DbType.Boolean:  	return typeof(bool);  case DbType.String:  	return typeof(string);  case DbType.StringFixedLength:  	return typeof(char);  case DbType.Guid:  	return typeof(Guid);  case DbType.DateTime2:  	return typeof(DateTime);  case DbType.DateTime:  	return typeof(DateTime);  case DbType.DateTimeOffset:  	return typeof(DateTimeOffset);  case DbType.Binary:  	return typeof(byte[]);  }  
Missing Default,Utilities.DataTypes.Conversion.Converters,SqlDbTypeTypeConverter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\SqlDbTypeTypeConverter.cs,SqlDbTypeToType,The following switch statement is missing a default case: switch (Parameter.DbType) {  case DbType.Byte:  	return typeof(byte);  case DbType.SByte:  	return typeof(sbyte);  case DbType.Int16:  	return typeof(short);  case DbType.UInt16:  	return typeof(ushort);  case DbType.Int32:  	return typeof(int);  case DbType.UInt32:  	return typeof(uint);  case DbType.Int64:  	return typeof(long);  case DbType.UInt64:  	return typeof(ulong);  case DbType.Single:  	return typeof(float);  case DbType.Double:  	return typeof(double);  case DbType.Decimal:  	return typeof(decimal);  case DbType.Boolean:  	return typeof(bool);  case DbType.String:  	return typeof(string);  case DbType.StringFixedLength:  	return typeof(char);  case DbType.Guid:  	return typeof(Guid);  case DbType.DateTime2:  	return typeof(DateTime);  case DbType.DateTime:  	return typeof(DateTime);  case DbType.DateTimeOffset:  	return typeof(DateTimeOffset);  case DbType.Binary:  	return typeof(byte[]);  }  
