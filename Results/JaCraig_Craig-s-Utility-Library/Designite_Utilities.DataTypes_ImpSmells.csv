Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,Cyclomatic complexity of the method is 10
Complex Method,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,Cyclomatic complexity of the method is 8
Complex Method,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,Utilities.DataTypes,ValueTypeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ValueTypeExtensions.cs,Is,Cyclomatic complexity of the method is 14
Complex Method,Utilities.DataTypes.Comparison,GenericEqualityComparer<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Comparison\GenericEqualityComparer.cs,Equals,Cyclomatic complexity of the method is 12
Complex Method,Utilities.DataTypes.Conversion.Converters,DbTypeTypeConverter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\DbTypeTypeConverter.cs,DbTypeToType,Cyclomatic complexity of the method is 20
Complex Method,Utilities.DataTypes.Conversion.Converters,DbTypeTypeConverter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\DbTypeTypeConverter.cs,TypeToDbType,Cyclomatic complexity of the method is 37
Complex Method,Utilities.DataTypes.Conversion.Converters,SqlDbTypeTypeConverter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\SqlDbTypeTypeConverter.cs,SqlDbTypeToType,Cyclomatic complexity of the method is 20
Complex Method,Utilities.DataTypes.Conversion,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Manager.cs,To,Cyclomatic complexity of the method is 12
Complex Method,Utilities.DataTypes.AOP.Generators,ClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,Cyclomatic complexity of the method is 10
Long Parameter List,Utilities.DataTypes.AI,NaiveBayes<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,NaiveBayes,The method has 6 parameters. Parameters: ATokenWeight' BTokenWeight' MinTokenProbability' MaxTokenProbability' MaxInterestingTokenCount' MinCountForInclusion
Long Parameter List,Utilities.DataTypes.AOP.Interfaces,IClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Interfaces\IClassGenerator.cs,Generate,The method has 5 parameters. Parameters: namespace' className' usings' interfaces' assembliesUsing
Long Parameter List,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,Setup,The method has 6 parameters. Parameters: Type' Namespace' ClassName' Usings' Interfaces' AssembliesUsing
Long Parameter List,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupAbstract,The method has 6 parameters. Parameters: type' namespace' className' usings' interfaces' assembliesUsing
Long Parameter List,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The method has 6 parameters. Parameters: type' namespace' className' usings' interfaces' assembliesUsing
Long Parameter List,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupInterface,The method has 6 parameters. Parameters: type' namespace' className' usings' interfaces' assembliesUsing
Long Parameter List,Utilities.DataTypes,IEnumerableExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,LeftJoin,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' comparer
Long Parameter List,Utilities.DataTypes,IEnumerableExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,OuterJoin,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' comparer
Long Parameter List,Utilities.DataTypes,IEnumerableExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,RightJoin,The method has 6 parameters. Parameters: outer' inner' outerKeySelector' innerKeySelector' resultSelector' comparer
Long Parameter List,Utilities.DataTypes.AOP.Generators,ClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The method has 5 parameters. Parameters: namespace' className' usings' interfaces' assembliesUsing
Long Statement,Utilities.DataTypes.AI,NaiveBayes<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The length of the statement  "                string Difference = ((0.5 - System.Math.Abs(0.5 - TokenProbability))).ToString(".0000000"' CultureInfo.InvariantCulture) + Item + x;" is 132.
Long Statement,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "                //Builder.AppendLine(new ConstructorGenerator(type.GetConstructors(BindingFlags.Public | BindingFlags.Instance).First(x => x.GetParameters().Length == 0)).Generate(assembliesUsing' Aspects)); " is 191.
Long Statement,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "                foreach (PropertyInfo Property in TempType.GetProperties(BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance)) " is 130.
Long Statement,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The length of the statement  "                foreach (MethodInfo Method in TempType.GetMethods(BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance) " is 122.
Long Statement,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupMethod,The length of the statement  "                BaseCall = string.IsNullOrEmpty(ReturnValue) ? "base." + BaseMethodName + "(" : ReturnValue + "=base." + BaseMethodName + "("; " is 126.
Long Statement,Utilities.DataTypes.AOP.Module,AOPModule,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Module\AOPModule.cs,Load,The length of the statement  "            Bootstrapper.Register(new Manager(Bootstrapper.Resolve<Compiler>()' Bootstrapper.ResolveAll<IAspect>()' Bootstrapper.ResolveAll<IAOPModule>())); " is 144.
Long Statement,Utilities.DataTypes,DateSpan,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DateSpan.cs,Overlap,The length of the statement  "            return ((Start >= Span.Start && Start < Span.End) || (End <= Span.End && End > Span.Start) || (Start <= Span.Start && End >= Span.End));" is 136.
Long Statement,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The length of the statement  "            if (Date.Between(StartOfQuarter1' StartOfQuarter1.AddMonths(3).AddDays(-1).EndOf(TimeFrame.Day' CultureInfo.CurrentCulture))) " is 125.
Long Statement,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The length of the statement  "            else if (Date.Between(StartOfQuarter1.AddMonths(3)' StartOfQuarter1.AddMonths(6).AddDays(-1).EndOf(TimeFrame.Day' CultureInfo.CurrentCulture))) " is 143.
Long Statement,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The length of the statement  "            else if (Date.Between(StartOfQuarter1.AddMonths(6)' StartOfQuarter1.AddMonths(9).AddDays(-1).EndOf(TimeFrame.Day' CultureInfo.CurrentCulture))) " is 143.
Long Statement,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysLeftIn,The length of the statement  "                return Date.DaysIn(TimeFrame.Quarter' Culture) - (Date.DayOfYear - Date.BeginningOf(TimeFrame.Quarter' Culture).DayOfYear); " is 123.
Long Statement,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The length of the statement  "            else if (Date.Between(StartOfQuarter1.AddMonths(3)' StartOfQuarter1.AddMonths(6).AddDays(-1).EndOf(TimeFrame.Day' Culture))) " is 124.
Long Statement,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The length of the statement  "            else if (Date.Between(StartOfQuarter1.AddMonths(6)' StartOfQuarter1.AddMonths(9).AddDays(-1).EndOf(TimeFrame.Day' Culture))) " is 124.
Long Statement,Utilities.DataTypes,GenericObjectExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\GenericObjectExtensions.cs,ThrowIfDefault,The length of the statement  "            return Item.ThrowIf(x => EqualityComparer.Check(() => new GenericEqualityComparer<T>()).Equals(x' default(T))' Exception); " is 122.
Long Statement,Utilities.DataTypes,GenericObjectExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\GenericObjectExtensions.cs,ThrowIfNotDefault,The length of the statement  "            return Item.ThrowIf(x => !EqualityComparer.Check(() => new GenericEqualityComparer<T>()).Equals(x' default(T))' Exception); " is 123.
Long Statement,Utilities.DataTypes,IDictionaryExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IDictionaryExtensions.cs,Sort,The length of the statement  "            return Dictionary.OrderBy(OrderBy' Comparer.Check(() => new GenericComparer<T3>())).ToDictionary(x => x.Key' x => x.Value); " is 123.
Long Statement,Utilities.DataTypes,IEnumerableExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,LeftJoin,The length of the statement  "            return outer.ForEach(x => new { left = x' right = inner.FirstOrDefault(y => comparer.Equals(innerKeySelector(y)' outerKeySelector(x))) }) " is 137.
Long Statement,Utilities.DataTypes,IEnumerableExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\IEnumerableExtensions.cs,RightJoin,The length of the statement  "            return inner.ForEach(x => new { left = outer.FirstOrDefault(y => comparer.Equals(innerKeySelector(x)' outerKeySelector(y)))' right = x }) " is 137.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,Attributes,The length of the statement  "            return Provider.IsDefined(typeof(T)' Inherit) ? Provider.GetCustomAttributes(typeof(T)' Inherit).ToArray(x => (T)x) : new T[0]; " is 127.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,LoadAssemblies,The length of the statement  "            foreach (FileInfo File in Directory.GetFiles("*.dll"' Recursive ? SearchOption.AllDirectories : SearchOption.TopDirectoryOnly)) " is 127.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "            var DefaultConstant = Expression.Constant(((object)null).To(PropertyInfo.PropertyType' null)' PropertyInfo.PropertyType); " is 121.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "                    SetterCall = PropertyGet == null ? Expression.Call(ObjectInstance' SetMethod' Convert) : Expression.Call(PropertyGet' SetMethod' Convert); " is 138.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The length of the statement  "                SetterCall = PropertyGet == null ? Expression.Call(ObjectInstance' SetMethod' PropertySet) : Expression.Call(PropertyGet' SetMethod' PropertySet); " is 146.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "            Assemblies.OrderBy(x => x.FullName).ForEach<Assembly>(x => Builder.AppendLine(x.GetName().Name + ": " + x.ToString(InfoType))); " is 127.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "            TempValue.Append(HTMLOutput ? "<table><thead><tr><th>Property Name</th><th>Property Value</th></tr></thead><tbody>" : "Property Name\t\t\t\tProperty Value"); " is 157.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "                TempValue.Append(HTMLOutput ? "<tr><td>" : System.Environment.NewLine).Append(Property.Name).Append(HTMLOutput ? "</td><td>" : "\t\t\t\t"); " is 139.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "            TempValue.Append(HTMLOutput ? "<table><thead><tr><th>Property Name</th><th>Property Value</th></tr></thead><tbody>" : "Property Name\t\t\t\tProperty Value"); " is 157.
Long Statement,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The length of the statement  "                TempValue.Append(HTMLOutput ? "<tr><td>" : System.Environment.NewLine).Append(Property.Name).Append(HTMLOutput ? "</td><td>" : "\t\t\t\t"); " is 139.
Long Statement,Utilities.DataTypes,TimeSpanExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\TimeSpanExtensions.cs,ToStringFull,The length of the statement  "            if (Input.Months() > 0) { Result += Splitter + Input.Months() + " month" + (Input.Months() > 1 ? "s" : ""); Splitter = "' "; } " is 126.
Long Statement,Utilities.DataTypes,TimeSpanExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\TimeSpanExtensions.cs,ToStringFull,The length of the statement  "            if (Input.DaysRemainder() > 0) { Result += Splitter + Input.DaysRemainder() + " day" + (Input.DaysRemainder() > 1 ? "s" : ""); Splitter = "' "; } " is 145.
Long Statement,Utilities.DataTypes,TimeSpanExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\TimeSpanExtensions.cs,ToStringFull,The length of the statement  "            if (Input.Minutes > 0) { Result += Splitter + Input.Minutes + " minute" + (Input.Minutes > 1 ? "s" : ""); Splitter = "' "; } " is 124.
Long Statement,Utilities.DataTypes,TimeSpanExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\TimeSpanExtensions.cs,ToStringFull,The length of the statement  "            if (Input.Seconds > 0) { Result += Splitter + Input.Seconds + " second" + (Input.Seconds > 1 ? "s" : ""); Splitter = "' "; } " is 124.
Long Statement,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Reduce,The length of the statement  "            Contract.Requires<ArgumentOutOfRangeException>(Denominator != Int32.MinValue' "Denominator can't equal Int32.MinValue"); " is 120.
Long Statement,Utilities.DataTypes,Matrix,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The length of the statement  "            Contract.Requires<InvalidOperationException>(Width == Height' "The determinant can not be calculated for a non square matrix");" is 127.
Long Statement,Utilities.DataTypes,ObservableList<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,InsertRange,The length of the statement  "            NotifyCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add' collection.ToList()' index)); " is 125.
Long Statement,Utilities.DataTypes,ObservableList<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,RemoveAll,The length of the statement  "            NotifyCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' this.Where(x => match(x)))); " is 127.
Long Statement,Utilities.DataTypes,ObservableList<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ObservableList.cs,RemoveAt,The length of the statement  "            NotifyCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove' this[index]' index)); " is 120.
Long Statement,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Add,The length of the statement  "                                                    new CSharpCompilationOptions(OutputKind.DynamicallyLinkedLibrary' usings: Usings' optimizationLevel: Optimize ? OptimizationLevel.Release : OptimizationLevel.Debug)); " is 166.
Long Statement,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Add,The length of the statement  "                    throw new Exception(Code + System.Environment.NewLine + System.Environment.NewLine + Result.Diagnostics.ToString(x => x.GetMessage() + " : " + x.Location.GetLineSpan().StartLinePosition.Line' System.Environment.NewLine)); " is 221.
Long Statement,Utilities.DataTypes.DataMapper.BaseClasses,TypeMappingBase<Left;Right>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DataMapper\BaseClasses\TypeMappingBase.cs,AddLeftIDictionaryMapping,The length of the statement  "                        var Key = Temp.Keys.FirstOrDefault(z => string.Equals(z.Replace("_"' "")' Property.Name' StringComparison.InvariantCultureIgnoreCase)); " is 135.
Long Statement,Utilities.DataTypes.DataMapper.BaseClasses,TypeMappingBase<Left;Right>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\DataMapper\BaseClasses\TypeMappingBase.cs,AddRightIDictionaryMapping,The length of the statement  "                        var Key = Temp.Keys.FirstOrDefault(z => string.Equals(z.Replace("_"' "")' Property.Name' StringComparison.InvariantCultureIgnoreCase)); " is 135.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "                foreach (PropertyInfo Property in TempType.GetProperties(BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance)) " is 130.
Long Statement,Utilities.DataTypes.AOP.Generators,ClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The length of the statement  "                foreach (MethodInfo Method in TempType.GetMethods(BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance) " is 122.
Long Statement,Utilities.DataTypes.AOP.Generators,MethodGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\MethodGenerator.cs,SetupMethod,The length of the statement  "                BaseCall = string.IsNullOrEmpty(ReturnValue) ? "base." + BaseMethodName + "(" : ReturnValue + "=base." + BaseMethodName + "("; " is 126.
Complex Conditional,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The conditional expression  "!MethodsAlreadyDone.Contains("get_" + Property.Name)                          && !MethodsAlreadyDone.Contains("set_" + Property.Name)                          && GetMethodInfo != null                          && GetMethodInfo.IsVirtual                          && SetMethodInfo != null                          && SetMethodInfo.IsPublic                          && !GetMethodInfo.IsFinal                          && Property.GetIndexParameters().Length == 0"  is complex.
Complex Conditional,Utilities.DataTypes.AOP,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Manager.cs,SetupClass,The conditional expression  "!MethodsAlreadyDone.Contains("get_" + Property.Name)                          && GetMethodInfo != null                          && GetMethodInfo.IsVirtual                          && SetMethodInfo == null                          && !GetMethodInfo.IsFinal                          && Property.GetIndexParameters().Length == 0"  is complex.
Complex Conditional,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,The conditional expression  "Property.CanRead                              && Property.CanWrite                              && SimpleTypesOnly                              && Property.PropertyType.IsValueType"  is complex.
Complex Conditional,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The conditional expression  "x > 1 && y > 1 && Value1[x - 1] == Value2[y - 2] && Value1[x - 2] == Value2[y - 1]"  is complex.
Complex Conditional,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,StripIllegalXML,The conditional expression  "Char == 0x9                      || Char == 0xA                      || Char == 0xD                      || (Char >= 0x20 && Char <= 0xD7FF)                      || (Char >= 0xE000 && Char <= 0xFFFD)"  is complex.
Complex Conditional,Utilities.DataTypes.CodeGen.BaseClasses,CompilerBase,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\CodeGen\BaseClasses\CompilerBase.cs,Save,The conditional expression  "(AssemblyStream != null                  && !string.IsNullOrEmpty(AssemblyDirectory)                  && (!new FileInfo(AssemblyDirectory + "\\" + AssemblyName + ".dll").Exists                  || RegenerateAssembly))                  && AssemblyStream.Length > 0"  is complex.
Complex Conditional,Utilities.DataTypes.Formatters,GenericStringFormatter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Formatters\GenericStringFormatter.cs,GetMatchingInput,The conditional expression  "(Digit && char.IsDigit(Input[x])) || (Alpha && char.IsLetter(Input[x]))"  is complex.
Complex Conditional,Utilities.DataTypes.Formatters,GenericStringFormatter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Formatters\GenericStringFormatter.cs,IsValid,The conditional expression  "EscapeCharFound && FormatPattern[x] != DigitChar                          && FormatPattern[x] != AlphaChar                          && FormatPattern[x] != EscapeChar"  is complex.
Complex Conditional,Utilities.DataTypes.AOP.Generators,ClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The conditional expression  "!MethodsAlreadyDone.Contains("get_" + Property.Name)                          && !MethodsAlreadyDone.Contains("set_" + Property.Name)                          && GetMethodInfo != null                          && GetMethodInfo.IsVirtual                          && SetMethodInfo != null                          && SetMethodInfo.IsPublic                          && !GetMethodInfo.IsFinal                          && Property.GetIndexParameters().Length == 0"  is complex.
Complex Conditional,Utilities.DataTypes.AOP.Generators,ClassGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AOP\Generators\ClassGenerator.cs,Generate,The conditional expression  "!MethodsAlreadyDone.Contains("get_" + Property.Name)                          && GetMethodInfo != null                          && GetMethodInfo.IsVirtual                          && SetMethodInfo == null                          && !GetMethodInfo.IsFinal                          && Property.GetIndexParameters().Length == 0"  is complex.
Virtual Method Call from Constructor,Utilities.DataTypes,Dynamo,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Dynamo.cs,Dynamo,The constructor "Dynamo" calls a virtual method "SetValue".
Virtual Method Call from Constructor,Utilities.DataTypes,Dynamo,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Dynamo.cs,Dynamo,The constructor "Dynamo" calls a virtual method "SetValue".
Virtual Method Call from Constructor,Utilities.DataTypes,Dynamo,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Dynamo.cs,Dynamo,The constructor "Dynamo" calls a virtual method "SetValue".
Empty Catch Block,Utilities.DataTypes,ExceptionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ExceptionExtensions.cs,ToString,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,LoadAssemblies,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,MakeShallowCopy,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,ToString,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,Types,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes,TagDictionary<Key;Value>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\TagDictionary.cs,TryGetValue,The method has an empty catch block.
Empty Catch Block,Utilities.DataTypes.Conversion,Manager,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Manager.cs,To,The method has an empty catch block.
Magic Number,Utilities.DataTypes.AI,NaiveBayes<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The following statement contains a magic number: double TokenProbability = 0.5;
Magic Number,Utilities.DataTypes.AI,NaiveBayes<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The following statement contains a magic number: string Difference = ((0.5 - System.Math.Abs(0.5 - TokenProbability))).ToString(".0000000"' CultureInfo.InvariantCulture) + Item + x;
Magic Number,Utilities.DataTypes.AI,NaiveBayes<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\AI\NaiveBayes.cs,CalculateProbabilityOfTokens,The following statement contains a magic number: string Difference = ((0.5 - System.Math.Abs(0.5 - TokenProbability))).ToString(".0000000"' CultureInfo.InvariantCulture) + Item + x;
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,AddWeeks,The following statement contains a magic number: return Date.AddDays(NumberOfWeeks * 7);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: Date.Between(StartOfQuarter1' StartOfQuarter1.AddMonths(3).AddDays(-1).EndOf(TimeFrame.Day' CultureInfo.CurrentCulture))
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,BeginningOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths(9).Date;
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysIn,The following statement contains a magic number: return 7;
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,DaysLeftIn,The following statement contains a magic number: return 7 - ((int)Date.DayOfWeek + 1);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime(Date.Year' Date.Month' Date.Day' 23' 59' 59);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime(Date.Year' Date.Month' Date.Day' 23' 59' 59);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime(Date.Year' Date.Month' Date.Day' 23' 59' 59);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return Date.BeginningOf(TimeFrame.Week' Culture).AddDays(6);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime(Date.Year' 12' 31);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return new DateTime(Date.Year' 12' 31);
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: return StartOfQuarter1.AddMonths(3).AddDays(-1).Date;
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,EndOf,The following statement contains a magic number: Date.Between(StartOfQuarter1' StartOfQuarter1.AddMonths(3).AddDays(-1).EndOf(TimeFrame.Day' Culture))
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,Is,The following statement contains a magic number: Comparison.HasFlag(DateCompare.WeekDay) && ((int)Date.DayOfWeek == 6 || (int)Date.DayOfWeek == 0)
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,Is,The following statement contains a magic number: Comparison.HasFlag(DateCompare.WeekEnd) && (int)Date.DayOfWeek != 6 && (int)Date.DayOfWeek != 0
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,To,The following statement contains a magic number: Epoch = Epoch.Check(x => x != default(DateTime)' () => new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,To,The following statement contains a magic number: Epoch = Epoch.Check(x => x != default(DateTime)' () => new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Utilities.DataTypes,DateTimeExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\DateTimeExtensions.cs,To,The following statement contains a magic number: Epoch = Epoch.Check(x => x != default(DateTime)' () => new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The following statement contains a magic number: var ConversionMethod = typeof(TypeConversionExtensions).GetMethods().FirstOrDefault(x => x.ContainsGenericParameters                          && x.GetGenericArguments().Length == 2                          && x.Name == "To"                          && x.GetParameters().Length == 2);
Magic Number,Utilities.DataTypes,ReflectionExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\ReflectionExtensions.cs,PropertySetter,The following statement contains a magic number: var ConversionMethod = typeof(TypeConversionExtensions).GetMethods().FirstOrDefault(x => x.ContainsGenericParameters                          && x.GetGenericArguments().Length == 2                          && x.Name == "To"                          && x.GetParameters().Length == 2);
Magic Number,Utilities.DataTypes,StreamExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StreamExtensions.cs,ReadAllBinary,The following statement contains a magic number: byte[] Buffer = new byte[1024];
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Center,The following statement contains a magic number: x < (Length - Input.Length) / 2
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Center,The following statement contains a magic number: x < (Length - Input.Length) / 2
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: int TempValue = (Value[x] - '0') * (x % 2 == 1 ? 2 : 1);
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: int TempValue = (Value[x] - '0') * (x % 2 == 1 ? 2 : 1);
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: CheckSum += TempValue % 10;
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: TempValue /= 10;
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,Is,The following statement contains a magic number: return (CheckSum % 10) == 0;
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: Matrix[x' y] = new int[] { Matrix[x' y]' Matrix[x - 2' y - 2] + Cost }.Min();
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: Matrix[x' y] = new int[] { Matrix[x' y]' Matrix[x - 2' y - 2] + Cost }.Min();
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: x > 1 && y > 1 && Value1[x - 1] == Value2[y - 2] && Value1[x - 2] == Value2[y - 1]
Magic Number,Utilities.DataTypes,StringExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\StringExtensions.cs,LevenshteinDistance,The following statement contains a magic number: x > 1 && y > 1 && Value1[x - 1] == Value2[y - 2] && Value1[x - 2] == Value2[y - 1]
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Absolute,The following statement contains a magic number: Contract.Requires<ArgumentException>(Value != -9223372036854775808);
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Absolute,The following statement contains a magic number: Contract.Requires<ArgumentException>(Value != -32768);
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,GreatestCommonDenominator,The following statement contains a magic number: Contract.Requires<ArgumentException>(Value2 != 2147483648);
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,GreatestCommonDenominator,The following statement contains a magic number: Contract.Requires<ArgumentException>(Value1 != 2147483648);
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,GreatestCommonDenominator,The following statement contains a magic number: Contract.Requires<ArgumentException>(Value2 != 2147483648);
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Median,The following statement contains a magic number: return Values.ElementAt((Values.Count() / 2));
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Round,The following statement contains a magic number: Contract.Requires<ArgumentException>(Digits <= 15);
Magic Number,Utilities.DataTypes,MathExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\ExtensionMethods\MathExtensions.cs,Variance,The following statement contains a magic number: var Sum = Values.Sum(x => (Selector(x) - MeanValue).Pow(2));
Magic Number,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Numerator *= 10;
Magic Number,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Denominator *= 10;
Magic Number,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Numerator *= 10;
Magic Number,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Denominator *= 10;
Magic Number,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Numerator *= 10;
Magic Number,Utilities.DataTypes,Fraction,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Fraction.cs,Fraction,The following statement contains a magic number: Denominator *= 10;
Magic Number,Utilities.DataTypes,Matrix,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The following statement contains a magic number: Width == 2
Magic Number,Utilities.DataTypes,Matrix,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Matrix.cs,Determinant,The following statement contains a magic number: x % 2 == 0
Missing Default,Utilities.DataTypes.Conversion.Converters,DbTypeTypeConverter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\DbTypeTypeConverter.cs,DbTypeToType,The following switch statement is missing a default case: switch (TempValue)              {                  case DbType.Byte:                      return typeof(byte);                  case DbType.SByte:                      return typeof(sbyte);                  case DbType.Int16:                      return typeof(short);                  case DbType.UInt16:                      return typeof(ushort);                  case DbType.Int32:                      return typeof(int);                  case DbType.UInt32:                      return typeof(uint);                  case DbType.Int64:                      return typeof(long);                  case DbType.UInt64:                      return typeof(ulong);                  case DbType.Single:                      return typeof(float);                  case DbType.Double:                      return typeof(double);                  case DbType.Decimal:                      return typeof(decimal);                  case DbType.Boolean:                      return typeof(bool);                  case DbType.String:                      return typeof(string);                  case DbType.StringFixedLength:                      return typeof(char);                  case DbType.Guid:                      return typeof(Guid);                  case DbType.DateTime2:                      return typeof(DateTime);                  case DbType.DateTime:                      return typeof(DateTime);                  case DbType.DateTimeOffset:                      return typeof(DateTimeOffset);                  case DbType.Binary:                      return typeof(byte[]);              }
Missing Default,Utilities.DataTypes.Conversion.Converters,SqlDbTypeTypeConverter,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.DataTypes\DataTypes\Conversion\Converters\SqlDbTypeTypeConverter.cs,SqlDbTypeToType,The following switch statement is missing a default case: switch (Parameter.DbType)              {                  case DbType.Byte:                      return typeof(byte);                  case DbType.SByte:                      return typeof(sbyte);                  case DbType.Int16:                      return typeof(short);                  case DbType.UInt16:                      return typeof(ushort);                  case DbType.Int32:                      return typeof(int);                  case DbType.UInt32:                      return typeof(uint);                  case DbType.Int64:                      return typeof(long);                  case DbType.UInt64:                      return typeof(ulong);                  case DbType.Single:                      return typeof(float);                  case DbType.Double:                      return typeof(double);                  case DbType.Decimal:                      return typeof(decimal);                  case DbType.Boolean:                      return typeof(bool);                  case DbType.String:                      return typeof(string);                  case DbType.StringFixedLength:                      return typeof(char);                  case DbType.Guid:                      return typeof(Guid);                  case DbType.DateTime2:                      return typeof(DateTime);                  case DbType.DateTime:                      return typeof(DateTime);                  case DbType.DateTimeOffset:                      return typeof(DateTimeOffset);                  case DbType.Binary:                      return typeof(byte[]);              }
