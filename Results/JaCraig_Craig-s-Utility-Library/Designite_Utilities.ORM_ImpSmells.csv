Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,LoadProperties,Cyclomatic complexity of the method is 12
Complex Method,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,Cyclomatic complexity of the method is 21
Complex Method,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,Cyclomatic complexity of the method is 8
Complex Method,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,Cyclomatic complexity of the method is 9
Complex Method,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,Cyclomatic complexity of the method is 12
Complex Method,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,Execute,Cyclomatic complexity of the method is 12
Long Parameter List,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,AddParameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,AddParameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager,ORMManager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\ORMManager.cs,ORMManager,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,CascadeDelete,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,CascadeSave,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,JoinsDelete,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,JoinsSave,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.SourceProvider,SourceInfo,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\SourceProvider\SourceInfo.cs,SourceInfo,The method has 7 parameters.
Long Parameter List,Utilities.ORM.Parameters,LikeParameter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Parameters\LikeParameter.cs,LikeParameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Parameters,StringEqualParameter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Parameters\StringEqualParameter.cs,StringEqualParameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Parameters,StringNotEqualParameter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Parameters\StringNotEqualParameter.cs,StringNotEqualParameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,ParameterBase,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,ParameterBase,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,Command,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,Command,The method has 6 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,AddCommand,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,AddCommand,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default,Parameter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Parameter.cs,Parameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default,Parameter,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Parameter.cs,Parameter,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Interfaces,IBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Interfaces\IBatch.cs,AddCommand,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Interfaces,IBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Interfaces\IBatch.cs,AddCommand,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.BaseClasses,TableBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\BaseClasses\TableBase.cs,AddColumn,The method has 14 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.Default.Database,Column,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\Column.cs,Column,The method has 15 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.Default.Database,StoredProcedure,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\StoredProcedure.cs,AddColumn,The method has 14 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.Default.Database,Table,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\Table.cs,AddColumn,The method has 14 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.Default.Database,View,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\View.cs,AddColumn,The method has 14 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupJoiningTablesEnumerable,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema.Interfaces,ITable,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Interfaces\ITable.cs,AddColumn,The method has 14 parameters.
Long Parameter List,Utilities.ORM.Manager.Schema,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Manager.cs,Setup,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,AddCommand,The method has 5 parameters.
Long Parameter List,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,AddCommand,The method has 5 parameters.
Long Statement,Utilities.ORM.BaseClasses,MappingBaseClass,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\BaseClasses\MappingBaseClass.cs,Equals,The length of the statement  "	return string.Equals (TableName' Object2.TableName' StringComparison.Ordinal) && DatabaseConfigType == Object2.DatabaseConfigType; " is 130.
Long Statement,Utilities.ORM.BaseClasses,MappingBaseClass,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\BaseClasses\MappingBaseClass.cs,Setup,The length of the statement  "	QueryProvider.Generate<ClassType> (Source' this' MappingProvider.GetStructure (DatabaseConfigType)).SetupCommands (this); " is 121.
Long Statement,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,AddParameter,The length of the statement  "	if (Direction == ParameterDirection.Output || Direction == ParameterDirection.InputOutput || Length > 4000 || Length < -1) " is 122.
Long Statement,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,AddParameter,The length of the statement  "	return Command.AddParameter (ID' new GenericEqualityComparer<DataType> ().Equals (Value' default(DataType)) ? typeof(DataType).To (DbType.Int32) : Value.GetType ().To (DbType.Int32)' Value' Direction); " is 201.
Long Statement,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,GetOutputParameter,The length of the statement  "	return Command != null && Command.Parameters [ID] != null ? Command.Parameters [ID].Value.To<object' DataType> (Default) : Default; " is 131.
Long Statement,Utilities.ORM.Aspect,ORMAspect,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Aspect\ORMAspect.cs,SetupEndMethod,The length of the statement  "				else if (Property is IIEnumerableManyToOne || Property is IManyToMany || Property is IIListManyToMany || Property is IIListManyToOne || Property is ICollectionManyToMany || Property is ICollectionManyToOne) " is 206.
Long Statement,Utilities.ORM.Aspect,ORMAspect,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Aspect\ORMAspect.cs,SetupIEnumerableProperty,The length of the statement  "	Builder.AppendLineFormat ("if(!{0}&&Session0!=null)"' Property.DerivedFieldName + "Loaded").AppendLine ("{").AppendLineFormat ("{0}=Session0.LoadProperties<{1}'{2}>(this'\"{3}\");"' Property.DerivedFieldName' Property.Mapping.ObjectType.GetName ()' Property.Type.GetName ()' Property.Name).AppendLineFormat ("{0}=true;"' Property.DerivedFieldName + "Loaded").AppendLineFormat ("((ObservableList<{1}>){0}).CollectionChanged += (x' y) => NotifyPropertyChanged0(\"{2}\");"' Property.DerivedFieldName' Property.Type.GetName ()' Property.Name).AppendLineFormat ("((ObservableList<{1}>){0}).ForEach(TempObject => {{ ((IORMObject)TempObject).PropertyChanged += (x' y) => ((ObservableList<{1}>){0}).NotifyObjectChanged(x); }});"' Property.DerivedFieldName' Property.Type.GetName ()).AppendLine ("}").AppendLineFormat ("{0}={1};"' ReturnValueName' Property.DerivedFieldName); " is 866.
Long Statement,Utilities.ORM.Aspect,ORMAspect,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Aspect\ORMAspect.cs,SetupListProperty,The length of the statement  "	Builder.AppendLineFormat ("if(!{0}&&Session0!=null)"' Property.DerivedFieldName + "Loaded").AppendLine ("{").AppendLineFormat ("{0}=Session0.LoadProperties<{1}'{2}>(this'\"{3}\").ToList();"' Property.DerivedFieldName' Property.Mapping.ObjectType.GetName ()' Property.Type.GetName ()' Property.Name).AppendLineFormat ("{0}=true;"' Property.DerivedFieldName + "Loaded").AppendLineFormat ("NotifyPropertyChanged0(\"{0}\");"' Property.Name).AppendLine ("}").AppendLineFormat ("{0}={1};"' ReturnValueName' Property.DerivedFieldName); " is 528.
Long Statement,Utilities.ORM.Aspect,ORMAspect,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Aspect\ORMAspect.cs,SetupSingleProperty,The length of the statement  "	Builder.AppendLineFormat ("if(!{0}&&Session0!=null)"' Property.DerivedFieldName + "Loaded").AppendLine ("{").AppendLineFormat ("{0}=Session0.LoadProperty<{1}'{2}>(this'\"{3}\");"' Property.DerivedFieldName' Property.Mapping.ObjectType.GetName ()' Property.Type.GetName ()' Property.Name).AppendLineFormat ("{0}=true;"' Property.DerivedFieldName + "Loaded").AppendLineFormat ("if({0}!=null)"' Property.DerivedFieldName).AppendLine ("{").AppendLineFormat ("({0} as INotifyPropertyChanged).PropertyChanged+=(x'y)=>NotifyPropertyChanged0(\"{1}\");"' Property.DerivedFieldName' Property.Name).AppendLine ("}").AppendLine ("}").AppendLineFormat ("{0}={1};"' ReturnValueName' Property.DerivedFieldName); " is 696.
Long Statement,Utilities.ORM.Manager.Module,ORMModule,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Module\ORMModule.cs,Load,The length of the statement  "	Bootstrapper.Register (new QueryProvider.Manager (Bootstrapper.ResolveAll<QueryProvider.Interfaces.IQueryProvider> ())); " is 120.
Long Statement,Utilities.ORM.Manager.Module,ORMModule,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Module\ORMModule.cs,Load,The length of the statement  "	Bootstrapper.Register (new ORMManager (Bootstrapper.Resolve<Mapper.Manager> ()' Bootstrapper.Resolve<QueryProvider.Manager> ()' Bootstrapper.Resolve<Schema.Manager> ()' Bootstrapper.Resolve<SourceProvider.Manager> ()' Bootstrapper.ResolveAll<IDatabase> ())); " is 258.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,All,The length of the statement  "			foreach (Dynamo Item in QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).All (Parameters).Execute () [0]) { " is 169.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,Any,The length of the statement  "			Dynamo Value = QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).Any (Parameters).Execute () [0].FirstOrDefault (); " is 176.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,Any,The length of the statement  "				Dynamo Value = typeof(IDType) == typeof(string) ? QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).Any (new StringEqualParameter (StringID' IDProperty.FieldName' StringID.Length' IDProperty.FieldName' Source.ParameterPrefix)).Execute () [0].FirstOrDefault () : QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).Any (new EqualParameter<IDType> (ID' IDProperty.FieldName' IDProperty.FieldName' Source.ParameterPrefix)).Execute () [0].FirstOrDefault (); " is 573.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,Delete,The length of the statement  "			var Generator = QueryProvider.Generate<ObjectType> (Source' MapperProvider [typeof(ObjectType)' Source]' MapperProvider.GetStructure (Mapping.DatabaseConfigType)); " is 163.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,LoadProperties,The length of the statement  "				foreach (Dynamo Item in QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).LoadProperty<DataType> (Object' Property).Execute () [0]) { " is 194.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,LoadProperties,The length of the statement  "			IProperty ObjectProperty = ObjectMapping == null ? null : ObjectMapping.Properties.FirstOrDefault (x => x.Name == PropertyName); " is 128.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,LoadProperties,The length of the statement  "						Parameter = Parameter == null ? (IParameter)new EqualParameter<object> (IDProperty.GetParameter (Item)' Counter.ToString (CultureInfo.InvariantCulture)' IDProperty.FieldName' Source.ParameterPrefix) : (IParameter)new OrParameter (Parameter' new EqualParameter<object> (IDProperty.GetParameter (Item)' Counter.ToString (CultureInfo.InvariantCulture)' IDProperty.FieldName' Source.ParameterPrefix)); " is 397.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,LoadProperties,The length of the statement  "					foreach (Dynamo Item in QueryProvider.Generate<DataType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).All (Parameter).Execute () [0]) { " is 166.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,PageCount,The length of the statement  "	string KeyName = typeof(ObjectType).GetName () + "_PageCount_" + PageSize.ToString (CultureInfo.InvariantCulture) + "_" + Parameters.ToString (x => x.ToString ()' "_"); " is 168.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,PageCount,The length of the statement  "			int Count = QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).PageCount (PageSize' Parameters).Execute () [0].FirstOrDefault ().Total; " is 195.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,Paged,The length of the statement  "	string KeyName = typeof(ObjectType).GetName () + "_Paged_" + PageSize.ToString (CultureInfo.InvariantCulture) + "_" + CurrentPage.ToString (CultureInfo.InvariantCulture) + "_" + Parameters.ToString (x => x.ToString ()' "_"); " is 224.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,Paged,The length of the statement  "				foreach (Dynamo Item in QueryProvider.Generate<ObjectType> (Source' Mapping' MapperProvider.GetStructure (Mapping.DatabaseConfigType)).Paged (PageSize' CurrentPage' OrderBy' Parameters).Execute () [0]) { " is 203.
Long Statement,Utilities.ORM.Manager,Session,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Session.cs,Save,The length of the statement  "			var Generator = QueryProvider.Generate<ObjectType> (Source' MapperProvider [typeof(ObjectType)' Source]' MapperProvider.GetStructure (Mapping.DatabaseConfigType)); " is 163.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<IEnumerable<DataType>' DataType> (this' Object)); " is 135.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IEnumerableManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IEnumerableManyToOne.cs,JoinsSave,The length of the statement  "	return Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<IEnumerable<DataType>' DataType> (this' Object); " is 123.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<List<DataType>' DataType> (this' Object)); " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToMany.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<List<DataType>' DataType> (this' Object)); " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ListManyToOne.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<IEnumerable<DataType>' DataType> (this' Object)); " is 135.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToMany.cs,JoinsSave,The length of the statement  "	return Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<IEnumerable<DataType>' DataType> (this' Object); " is 123.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject as IORMObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 142.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<DataType' DataType> (this' Object)); " is 122.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeSave,The length of the statement  "	Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ManyToOne.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeSave,The length of the statement  "	Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,Map,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\Map.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<ICollection<DataType>' DataType> (this' Object)); " is 135.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToMany.cs,JoinsSave,The length of the statement  "	return Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<ICollection<DataType>' DataType> (this' Object); " is 123.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<ICollection<DataType>' DataType> (this' Object)); " is 135.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,ICollectionManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\ICollectionManyToOne.cs,JoinsSave,The length of the statement  "	return Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<ICollection<DataType>' DataType> (this' Object); " is 123.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<IList<DataType>' DataType> (this' Object)); " is 129.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToMany,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToMany.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeDelete,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeJoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeJoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeJoinsSave,The length of the statement  "	Batch.AddCommand (Provider.Generate<ClassType> (Source' Mapping' Structure).JoinsSave<IList<DataType>' DataType> (this' Object)); " is 129.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeSave,The length of the statement  "		Batch.AddCommand (((IProperty<DataType>)PropertyMapping.IDProperties.FirstOrDefault ()).CascadeSave (Item' Source' ObjectsSeen.ToList ())); " is 139.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,CascadeSave,The length of the statement  "	Utilities.IoC.Manager.Bootstrapper.Resolve<DataTypes.Caching.Manager> ().Cache ().RemoveByTag (typeof(DataType).GetName ()); " is 124.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,JoinsDelete,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper.Default,IListManyToOne,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Default\IListManyToOne.cs,JoinsSave,The length of the statement  "	if (Object == null || (AspectObject != null && ObjectsSeen.Contains (Mapping.IDProperties.FirstOrDefault ().GetValue (Object)))) " is 128.
Long Statement,Utilities.ORM.Manager.Mapper,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\Manager.cs,ToString,The length of the statement  "	return "Mappers: " + Mappings.ToString (x => x.Value.OrderBy (y => y.ToString ()).ToString (y => y.ToString ())) + "\r\n"; " is 122.
Long Statement,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,AddParameter,The length of the statement  "	return Command.Replace (ParameterStarter + ID' typeof(DataType) == typeof(string) ? "'" + StringValue + "'" : StringValue); " is 123.
Long Statement,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,Equals,The length of the statement  "	return (OtherParameter != null && OtherParameter.DatabaseType == DatabaseType && OtherParameter.Direction == Direction && OtherParameter.ID == ID && new GenericEqualityComparer<DataType> ().Equals (OtherParameter.Value' Value)); " is 228.
Long Statement,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,GetHashCode,The length of the statement  "		return (ID.GetHashCode () * 23 + (new GenericEqualityComparer<DataType> ().Equals (Value' default(DataType)) ? 0 : Value.GetHashCode ())) * 23 + DatabaseType.GetHashCode (); " is 173.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,Equals,The length of the statement  "	if (OtherCommand.SQLCommand != SQLCommand || OtherCommand.CommandType != CommandType || Parameters.Count != OtherCommand.Parameters.Count) " is 138.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The length of the statement  "			if (Commands.Count > 1 && !Commands.Any (x => x.SQLCommand.Contains ("ALTER DATABASE")) && !Commands.Any (x => x.SQLCommand.Contains ("CREATE DATABASE"))) " is 154.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,All,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' string.Format (CultureInfo.InvariantCulture' "{0}{1}"' Mapping.SelectAllCommand' Parameters != null && Parameters.Length > 0 ? " WHERE " + Parameters.ToString (x => x.ToString ()' " AND ") : "")' Parameters != null && Parameters.Length > 0 ? CommandType.Text : Mapping.SelectAllCommandType' Parameters); " is 363.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,All,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' string.Format (CultureInfo.InvariantCulture' "SELECT TOP {0} {1} FROM {2}{3}"' Limit' GetColumns (Mapping)' Mapping.TableName' Parameters != null && Parameters.Length > 0 ? " WHERE " + Parameters.ToString (x => x.ToString ()' " AND ") : "")' CommandType.Text' Parameters); " is 332.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,Any,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' string.Format (CultureInfo.InvariantCulture' "{0}{1}"' Mapping.SelectAnyCommand' Parameters != null && Parameters.Length > 0 ? " WHERE " + Parameters.ToString (x => x.ToString ()' " AND ") : "")' Parameters != null && Parameters.Length > 0 ? CommandType.Text : Mapping.SelectAnyCommandType' Parameters); " is 363.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,Delete,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' Mapping.DeleteCommand' Mapping.DeleteCommandType' Mapping.IDProperties.ToArray (x => x.GetParameter (Object))); " is 171.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,Insert,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand ((x' y) => y [0].CopyTo (x.Object)' Object' Mapping.InsertCommand' Mapping.InsertCommandType' Mapping.Properties.Where (x => x is IMap || x is IReference).Concat (Mapping.IDProperties).Where (x => !x.AutoIncrement).ToArray (x => x.GetParameter (Object))); " is 302.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsDelete,The length of the statement  "	if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.Ordinal) == 0 && Property as IManyToOne != null) { " is 132.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsDelete,The length of the statement  "		ReturnValue.AddCommand (null' Object' "DELETE FROM " + Property.TableName + " WHERE " + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "2=@0"' CommandType.Text' CurrentID); " is 196.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsDelete,The length of the statement  "		ReturnValue.AddCommand (null' Object' "DELETE FROM " + Property.TableName + " WHERE " + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "=@0"' CommandType.Text' CurrentID); " is 195.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "			Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "2"; " is 179.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "			Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName; " is 173.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "			Parameters = ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "'" + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName; " is 173.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "		ReturnValue.AddCommand (null' Object' "INSERT INTO " + Property.TableName + "(" + Parameters + ") VALUES (@0'@1)"' CommandType.Text' Values); " is 141.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "				Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName; " is 173.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "				Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "2"; " is 179.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "				Parameters = ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "'" + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName; " is 173.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The length of the statement  "			ReturnValue.AddCommand (null' Object' "INSERT INTO " + Property.TableName + "(" + Parameters + ") VALUES (@0'@1)"' CommandType.Text' Values); " is 141.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,LoadProperty,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' Property.LoadCommand' Property.LoadCommandType' Mapping.IDProperties.FirstOrDefault ().GetValue (Object)); " is 166.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,PageCount,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' string.Format (CultureInfo.InvariantCulture' "SELECT COUNT(*) as Total FROM (SELECT {0} FROM {1} {2}) as Query"' Mapping.IDProperties.ToString (x => x.FieldName)' Mapping.TableName' WhereCommand)' CommandType.Text' Parameters); " is 287.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,Paged,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' string.Format (CultureInfo.InvariantCulture' "SELECT Paged.* FROM (SELECT ROW_NUMBER() OVER (ORDER BY {0}) AS Row' Query.* FROM (SELECT {1} FROM {2} {3}) as Query) AS Paged WHERE Row>{4} AND Row<={5}"' FinalOrderBy' GetColumns (Mapping)' Mapping.TableName' WhereCommand' PageStart' PageStart + PageSize)' CommandType.Text' Parameters); " is 395.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,Save,The length of the statement  "	Param1 = typeof(PrimaryKeyType).Is (typeof(string)) ? (IParameter)new StringEqualParameter (IDValue.ToString ()' IDProperty.FieldName' IDValue.ToString ().Length' IDProperty.FieldName' Source.ParameterPrefix) : (IParameter)new EqualParameter<PrimaryKeyType> (IDValue' IDProperty.FieldName' IDProperty.FieldName' Source.ParameterPrefix); " is 336.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} AS {1}2 INNER JOIN {2} ON {2}2.{3}={1}.{4} WHERE {2}2.{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{3}={1}.{4} WHERE {2}.{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Mapping.TableName' Property.FieldName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 500.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}2=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupLoadCommands,The length of the statement  "		Property.SetLoadUsingCommand (string.Format (CultureInfo.CurrentCulture' ForeignMapping.TableName == Mapping.TableName ? "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}2={1}.{3} WHERE {2}.{4}{5}=@0" : "SELECT {0} FROM {1} INNER JOIN {2} ON {2}.{1}{3}={1}.{3} WHERE {2}.{4}{5}=@0"' GetColumns (ForeignMapping)' ForeignMapping.TableName' Property.TableName' ForeignMapping.IDProperties.FirstOrDefault ().FieldName' Mapping.TableName' Mapping.IDProperties.FirstOrDefault ().FieldName)' CommandType.Text); " is 503.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,Update,The length of the statement  "	return QueryProvider.Batch (Source).AddCommand (null' null' Mapping.UpdateCommand' Mapping.UpdateCommandType' Mapping.Properties.Where (x => x is IMap || x is IReference).Where (x => !x.AutoIncrement).Concat (Mapping.IDProperties).ToArray (x => x.GetParameter (Object))); " is 271.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,GetColumns,The length of the statement  "	return Mapping.Properties.Where (x => (x as IReference) != null).Concat (Mapping.IDProperties).ToString (x => x.TableName + "." + x.FieldName + " AS [" + x.Name + "]"); " is 168.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupAllSelect,The length of the statement  "	Mapping.SetSelectAllCommand (string.Format (CultureInfo.InvariantCulture' "SELECT {0} FROM {1}"' GetColumns (Mapping)' Mapping.TableName)' CommandType.Text); " is 157.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupAnySelect,The length of the statement  "	Mapping.SetSelectAnyCommand (string.Format (CultureInfo.InvariantCulture' "SELECT TOP 1 {0} FROM {1}"' GetColumns (Mapping)' Mapping.TableName)' CommandType.Text); " is 163.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupDelete,The length of the statement  "	Mapping.SetDeleteCommand (string.Format (CultureInfo.InvariantCulture' "DELETE FROM {0} WHERE {1}"' Mapping.TableName' IDProperties)' CommandType.Text); " is 152.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupInsert,The length of the statement  "	Mapping.SetInsertCommand (string.Format (CultureInfo.InvariantCulture' "INSERT INTO {0}({1}) VALUES({2}) SELECT scope_identity() as [{3}]"' Mapping.TableName' ParameterList' ValueList' Mapping.IDProperties.Count > 0 ? Mapping.IDProperties.FirstOrDefault ().Name : "ID")' CommandType.Text); " is 289.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,SetupUpdate,The length of the statement  "	Mapping.SetUpdateCommand (string.Format (CultureInfo.InvariantCulture' "UPDATE {0} SET {1} WHERE {2}"' Mapping.TableName' ParameterList' IDProperties)' CommandType.Text); " is 170.
Long Statement,Utilities.ORM.Manager.QueryProvider,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Manager.cs,Generate,The length of the statement  "	return Providers.ContainsKey (Source.SourceType) ? Providers [Source.SourceType].Generate<T> (Source' Mapping' Structure) : null; " is 129.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database,StoredProcedure,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\StoredProcedure.cs,AddColumn,The length of the statement  "	return Columns.AddAndReturn (new Column<T> (ColumnName' ColumnType' Length' Nullable' Identity' Index' PrimaryKey' Unique' ForeignKeyTable' ForeignKeyColumn' DefaultValue' OnDeleteCascade' OnUpdateCascade' OnDeleteSetNull' this)); " is 230.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database,Table,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\Table.cs,AddColumn,The length of the statement  "	return Columns.AddAndReturn (new Column<T> (ColumnName' ColumnType' Length' Nullable' Identity' Index' PrimaryKey' Unique' ForeignKeyTable' ForeignKeyColumn' DefaultValue' OnDeleteCascade' OnUpdateCascade' OnDeleteSetNull' this)); " is 230.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database,View,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\View.cs,AddColumn,The length of the statement  "	return Columns.AddAndReturn (new Column<T> (ColumnName' ColumnType' Length' Nullable' Identity' Index' PrimaryKey' Unique' ForeignKeyTable' ForeignKeyColumn' DefaultValue' OnDeleteCascade' OnUpdateCascade' OnDeleteSetNull' this)); " is 230.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetSourceStructure,The length of the statement  "	var DatabaseName = Regex.Match (Source.Connection' "Initial Catalog=(.*?;)").Value.Replace ("Initial Catalog="' "").Replace (";"' ""); " is 134.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,Setup,The length of the statement  "	var TempDatabase = new Schema.Default.Database.Database (Regex.Match (TempSource.Connection' "Initial Catalog=(.*?;)").Value.Replace ("Initial Catalog="' "").Replace (";"' "")); " is 177.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,Setup,The length of the statement  "			QueryProvider.Batch (SourceProvider.GetSource (Regex.Replace (SourceProvider.GetSource (Database.Name).Connection' "Initial Catalog=(.*?;)"' ""))).AddCommand (null' null' CommandType.Text' Commands [x]).Execute (); " is 214.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,BuildCommands,The length of the statement  "		Commands.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'CREATE DATABASE {0}'"' DesiredStructure.Name)); " is 143.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,BuildCommands,The length of the statement  "		Commands.Add (CurrentFunction != null ? GetAlterFunctionCommand (Function' CurrentFunction) : GetFunctionCommand (Function)); " is 125.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,BuildCommands,The length of the statement  "		var CurrentStoredProcedure = (StoredProcedure)CurrentStructure.StoredProcedures.FirstOrDefault (x => x.Name == StoredProcedure.Name); " is 133.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,BuildCommands,The length of the statement  "		Commands.Add (CurrentStoredProcedure != null ? GetAlterStoredProcedure (StoredProcedure' CurrentStoredProcedure) : GetStoredProcedure (StoredProcedure)); " is 153.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterFunctionCommand,The length of the statement  "	Contract.Requires<ArgumentException> (Function.Definition == CurrentFunction.Definition || !string.IsNullOrEmpty (Function.Definition)); " is 136.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterFunctionCommand,The length of the statement  "		ReturnValue.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'DROP FUNCTION {0}'"' Function.Name)); " is 136.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterStoredProcedure,The length of the statement  "	Contract.Requires<ArgumentException> (StoredProcedure.Definition == CurrentStoredProcedure.Definition || !string.IsNullOrEmpty (StoredProcedure.Definition)); " is 157.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterStoredProcedure,The length of the statement  "		ReturnValue.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'DROP PROCEDURE {0}'"' StoredProcedure.Name)); " is 144.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ()); " is 195.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "			if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) { " is 177.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "				Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")"; " is 134.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "				Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")"; " is 149.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "				Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : ""); " is 390.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "		} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) { " is 286.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ()); " is 204.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "			if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) { " is 177.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "				Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")"; " is 134.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The length of the statement  "				Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")"; " is 149.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTriggerCommand,The length of the statement  "			if (Trigger.Name == Trigger2.Name && string.Equals (Definition1' Definition2' StringComparison.InvariantCultureIgnoreCase)) { " is 125.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTriggerCommand,The length of the statement  "				ReturnValue.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'DROP TRIGGER {0}'"' Trigger.Name)); " is 134.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterViewCommand,The length of the statement  "	Contract.Requires<ArgumentException> (View.Definition == CurrentView.Definition || !string.IsNullOrEmpty (View.Definition)); " is 124.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterViewCommand,The length of the statement  "		ReturnValue.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'DROP VIEW {0}'"' View.Name)); " is 128.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetForeignKeyCommand,The length of the statement  "		if (Column.ForeignKey.Count > 0 && (CurrentColumn == null || CurrentColumn.ForeignKey.Count != Column.ForeignKey.Count)) { " is 122.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetForeignKeyCommand,The length of the statement  "				var Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3})"' Column.ParentTable.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name); " is 240.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetForeignKeyCommand,The length of the statement  "				var Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3})"' Column.ParentTable.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name); " is 240.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetStoredProcedure,The length of the statement  "	Contract.Requires<ArgumentNullException> (!string.IsNullOrEmpty (StoredProcedure.Definition)' "StoredProcedure.Definition"); " is 124.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The length of the statement  "		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) { " is 177.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The length of the statement  "			Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")"); " is 140.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The length of the statement  "			ReturnValue.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'CREATE UNIQUE INDEX Index_{0}{1} ON {2}({3})'"' Column.Name' Counter.ToString (CultureInfo.InvariantCulture)' Column.ParentTable.Name' Column.Name)); " is 248.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The length of the statement  "			ReturnValue.Add (string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'CREATE INDEX Index_{0}{1} ON {2}({3})'"' Column.Name' Counter.ToString (CultureInfo.InvariantCulture)' Column.ParentTable.Name' Column.Name)); " is 241.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupAuditTables,The length of the statement  "	string IDName = Table.Columns.Any (x => string.Equals (x.Name' "ID"' StringComparison.InvariantCultureIgnoreCase)) ? "AuditID" : "ID"; " is 134.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupAuditTables,The length of the statement  "	AuditTable.AddColumn ("AuditType"' SqlDbType.NVarChar.To (DbType.Int32)' 1' false' false' false' false' false' ""' ""' ""); " is 123.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupAuditTables,The length of the statement  "		AuditTable.AddColumn (Column.Name' Column.DataType' Column.Length' Column.Nullable' false' false' false' false' ""' ""' ""); " is 124.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupDeleteTrigger,The length of the statement  "	Builder.Append ("CREATE TRIGGER dbo.").Append (Table.Name).Append ("_Audit_D ON dbo.").Append (Table.Name).Append (" FOR DELETE AS IF @@rowcount=0 RETURN").Append (" INSERT INTO dbo.").Append (Table.Name).Append ("Audit").Append ("("); " is 235.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupInsertUpdateTrigger,The length of the statement  "	Builder.Append ("CREATE TRIGGER dbo.").Append (Table.Name).Append ("_Audit_IU ON dbo.").Append (Table.Name).Append (" FOR INSERT'UPDATE AS IF @@rowcount=0 RETURN declare @AuditType").Append (" char(1) declare @DeletedCount int SELECT @DeletedCount=count(*) FROM DELETED IF @DeletedCount=0").Append (" BEGIN SET @AuditType='I' END ELSE BEGIN SET @AuditType='U' END").Append (" INSERT INTO dbo.").Append (Table.Name).Append ("Audit").Append ("("); " is 445.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupJoiningTables,The length of the statement  "					TempDatabase [Mapping.TableName].AddColumn (Property.FieldName' IDProperty.Type.To (DbType.Int32)' IDProperty.MaxLength' !Property.NotNull' false' Property.Index' false' false' MapMapping.TableName' IDProperty.FieldName' ""' false' false' Mapping.Properties.Count (x => x.Type == Property.Type) == 1 && Mapping.ObjectType != Property.Type); " is 340.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupJoiningTablesEnumerable,The length of the statement  "		TempDatabase [Property.TableName].AddColumn (Mapping.TableName + Mapping.IDProperties.First ().FieldName' Mapping.IDProperties.First ().Type.To (DbType.Int32)' Mapping.IDProperties.First ().MaxLength' false' false' false' false' false' Mapping.TableName' Mapping.IDProperties.First ().FieldName' ""' false' false' false); " is 321.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupJoiningTablesEnumerable,The length of the statement  "		TempDatabase [Property.TableName].AddColumn (MapMapping.TableName + MapMapping.IDProperties.First ().FieldName + "2"' MapMapping.IDProperties.First ().Type.To (DbType.Int32)' MapMapping.IDProperties.First ().MaxLength' false' false' false' false' false' MapMapping.TableName' MapMapping.IDProperties.First ().FieldName' ""' false' false' false); " is 345.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupJoiningTablesEnumerable,The length of the statement  "		TempDatabase [Property.TableName].AddColumn (Mapping.TableName + Mapping.IDProperties.First ().FieldName' Mapping.IDProperties.First ().Type.To (DbType.Int32)' Mapping.IDProperties.First ().MaxLength' false' false' false' false' false' Mapping.TableName' Mapping.IDProperties.First ().FieldName' ""' true' false' false); " is 320.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupJoiningTablesEnumerable,The length of the statement  "		TempDatabase [Property.TableName].AddColumn (MapMapping.TableName + MapMapping.IDProperties.First ().FieldName' MapMapping.IDProperties.First ().Type.To (DbType.Int32)' MapMapping.IDProperties.First ().MaxLength' false' false' false' false' false' MapMapping.TableName' MapMapping.IDProperties.First ().FieldName' ""' true' false' false); " is 338.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupProperties,The length of the statement  "		Table.AddColumn (x.FieldName' x.Type.To (DbType.Int32)' x.MaxLength' x.NotNull' x.AutoIncrement' x.Index' true' x.Unique' ""' ""' ""); " is 134.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupProperties,The length of the statement  "		Table.AddColumn (x.FieldName' x.Type.To (DbType.Int32)' x.MaxLength' !x.NotNull' x.AutoIncrement' x.Index' false' x.Unique' ""' ""' ""); " is 136.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,SetupTables,The length of the statement  "					TempDatabase [Mapping.TableName].AddForeignKey (Property.FieldName' ForeignMapping.TableName' ForeignProperty.FieldName); " is 121.
Long Statement,Utilities.ORM.Manager.Schema,Manager,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Manager.cs,GenerateSchema,The length of the statement  "	return SchemaGenerators.ContainsKey (Source.SourceType) ? SchemaGenerators [Source.SourceType].GenerateSchema (DesiredStructure' Source) : new List<string> (); " is 159.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,Execute,The length of the statement  "	using (DirectoryEntry Entry = new DirectoryEntry (Source.Server' Source.UserName' Source.Password' AuthenticationTypes.Secure)) { " is 129.
Long Statement,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPGenerator.cs,All,The length of the statement  "		Command = string.Format (CultureInfo.InvariantCulture' "(&({0}={1})({2}))"' x.ID' x.InternalValue.ToString ()' Command); " is 120.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,Functions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\Functions.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' @"SELECT SPECIFIC_NAME as NAME'ROUTINE_DEFINITION as DEFINITION FROM INFORMATION_SCHEMA.ROUTINES WHERE INFORMATION_SCHEMA.ROUTINES.ROUTINE_TYPE='FUNCTION'"); " is 205.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,StoredProcedureColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\StoredProcedureColumns.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' @"SELECT sys.procedures.name as [Procedure]'sys.systypes.name as TYPE'sys.parameters.name as NAME' " is 146.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,StoredProcedureColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\StoredProcedureColumns.cs,SetupStoredProcedures,The length of the statement  "	storedProcedure.AddColumn<string> (Name' Type.To<string' SqlDbType> ().To (DbType.Int32)' Length' DefaultValue: Default); " is 121.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,StoredProcedures,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\StoredProcedures.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' @"SELECT sys.procedures.name as NAME'OBJECT_DEFINITION(sys.procedures.object_id) as DEFINITION FROM sys.procedures"); " is 165.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' @"SELECT sys.tables.name as [Table]'sys.columns.name AS [Column]' sys.systypes.name AS [COLUMN_TYPE]' " is 149.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,GetCommand,The length of the statement  "                                                                LEFT OUTER JOIN sys.index_columns on sys.index_columns.object_id=sys.tables.object_id and sys.index_columns.column_id=sys.columns.column_id " is 139.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,GetCommand,The length of the statement  "                                                                LEFT OUTER JOIN sys.key_constraints on sys.key_constraints.parent_object_id=sys.tables.object_id and sys.key_constraints.parent_object_id=sys.index_columns.object_id and sys.index_columns.index_id=sys.key_constraints.unique_index_id and sys.key_constraints.type='PK' " is 266.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,GetCommand,The length of the statement  "                                                                LEFT OUTER JOIN sys.foreign_key_columns on sys.foreign_key_columns.parent_object_id=sys.tables.object_id and sys.foreign_key_columns.parent_column_id=sys.columns.column_id " is 171.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,GetCommand,The length of the statement  "                                                                LEFT OUTER JOIN sys.columns as columns_1 on columns_1.column_id=sys.foreign_key_columns.referenced_column_id and columns_1.object_id=tables_1.object_id " is 151.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,GetCommand,The length of the statement  "                                                                LEFT OUTER JOIN sys.key_constraints as key_constraints_1 on key_constraints_1.parent_object_id=sys.tables.object_id and key_constraints_1.parent_object_id=sys.index_columns.object_id and sys.index_columns.index_id=key_constraints_1.unique_index_id and key_constraints_1.type='UQ' " is 279.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,SetupColumns,The length of the statement  "		table.AddColumn<string> (item.Column' Utilities.DataTypes.TypeConversionExtensions.To (Utilities.DataTypes.TypeConversionExtensions.To<string' SqlDbType> (item.COLUMN_TYPE)' DbType.Int32)' (item.COLUMN_TYPE == "nvarchar") ? item.MAX_LENGTH / 2 : item.MAX_LENGTH' item.IS_NULLABLE' item.IS_IDENTITY' item.IS_INDEX != 0' !string.IsNullOrEmpty (item.PRIMARY_KEY)' !string.IsNullOrEmpty (item.UNIQUE)' item.FOREIGN_KEY_TABLE' item.FOREIGN_KEY_COLUMN' item.DEFAULT_VALUE); " is 467.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,Tables,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\Tables.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' "SELECT TABLE_CATALOG' TABLE_SCHEMA' TABLE_NAME' TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES"); " is 141.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableTriggers,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableTriggers.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' @"SELECT sys.tables.name as [Table]'sys.triggers.name as Name'sys.trigger_events.type as Type' " is 142.
Long Statement,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,Views,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\Views.cs,GetCommand,The length of the statement  "	batch.AddCommand (null' null' CommandType.Text' @"SELECT sys.views.name as [View]'OBJECT_DEFINITION(sys.views.object_id) as Definition' " is 135.
Complex Conditional,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,AddParameter,The conditional expression  "Direction == ParameterDirection.Output || Direction == ParameterDirection.InputOutput || Length > 4000 || Length < -1"  is complex.
Complex Conditional,Utilities.ORM.Aspect,ORMAspect,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Aspect\ORMAspect.cs,SetupEndMethod,The conditional expression  "Property is IIEnumerableManyToOne || Property is IManyToMany || Property is IIListManyToMany || Property is IIListManyToOne || Property is ICollectionManyToMany || Property is ICollectionManyToOne"  is complex.
Complex Conditional,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The conditional expression  "CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))"  is complex.
Magic Number,Utilities.ORM,DbCommandExtensions,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\ExtensionMethods\DbCommandExtensions.cs,AddParameter,The following statement contains a magic number: if (Direction == ParameterDirection.Output || Direction == ParameterDirection.InputOutput || Length > 4000 || Length < -1)  	Length = -1;  
Magic Number,Utilities.ORM.Manager.Mapper.BaseClasses,PropertyBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Mapper\BaseClasses\PropertyBase.cs,PropertyBase,The following statement contains a magic number: MaxLength = typeof(DataType) == typeof(string) ? 100 : 0;  
Magic Number,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (ID.GetHashCode () * 23 + (new GenericEqualityComparer<DataType> ().Equals (Value' default(DataType)) ? 0 : Value.GetHashCode ())) * 23 + DatabaseType.GetHashCode ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (ID.GetHashCode () * 23 + (new GenericEqualityComparer<DataType> ().Equals (Value' default(DataType)) ? 0 : Value.GetHashCode ())) * 23 + DatabaseType.GetHashCode ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,GetHashCode,The following statement contains a magic number: return (ID.GetHashCode () * 23 + (new GenericEqualityComparer<DataType> ().Equals (Value' default(DataType)) ? 0 : Value.GetHashCode ())) * 23 + DatabaseType.GetHashCode ();  
Magic Number,Utilities.ORM.Manager.QueryProvider.BaseClasses,ParameterBase,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\BaseClasses\ParameterBase.cs,GetHashCode,The following statement contains a magic number: return (ID.GetHashCode () * 23 + (new GenericEqualityComparer<DataType> ().Equals (Value' default(DataType)) ? 0 : Value.GetHashCode ())) * 23 + DatabaseType.GetHashCode ();  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int ParameterTotal = 0;  	foreach (IParameter Parameter in Parameters) {  		ParameterTotal += Parameter.GetHashCode ();  	}  	if (ParameterTotal > 0)  		return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  	return SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int ParameterTotal = 0;  	foreach (IParameter Parameter in Parameters) {  		ParameterTotal += Parameter.GetHashCode ();  	}  	if (ParameterTotal > 0)  		return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  	return SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: unchecked {  	int ParameterTotal = 0;  	foreach (IParameter Parameter in Parameters) {  		ParameterTotal += Parameter.GetHashCode ();  	}  	if (ParameterTotal > 0)  		return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  	return SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: if (ParameterTotal > 0)  	return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: if (ParameterTotal > 0)  	return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: return (SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ()) * 23 + ParameterTotal;  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,Command,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\Command.cs,GetHashCode,The following statement contains a magic number: return SQLCommand.GetHashCode () * 23 + CommandType.GetHashCode ();  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The following statement contains a magic number: using (DbConnection Connection = Factory.CreateConnection ()) {  	Connection.ConnectionString = Source.Connection;  	using (DbCommand ExecutableCommand = Factory.CreateCommand ()) {  		ExecutableCommand.Connection = Connection;  		ExecutableCommand.CommandType = CommandType.Text;  		if (Commands.Count > 1 && !Commands.Any (x => x.SQLCommand.Contains ("ALTER DATABASE")) && !Commands.Any (x => x.SQLCommand.Contains ("CREATE DATABASE")))  			ExecutableCommand.BeginTransaction ();  		ExecutableCommand.Open ();  		try {  			int Count = 0;  			while (true) {  				var FinalParameters = new List<IParameter> ();  				bool Finalizable = false;  				string FinalSQLCommand = "";  				int ParameterTotal = 0;  				ExecutableCommand.Parameters.Clear ();  				for (int y = Count; y < Commands.Count; ++y) {  					ICommand Command = Commands [y];  					if (ParameterTotal + Command.Parameters.Count > 2100)  						break;  					ParameterTotal += Command.Parameters.Count;  					Finalizable |= Commands [y].Finalizable;  					if (Command.CommandType == CommandType.Text) {  						FinalSQLCommand += string.IsNullOrEmpty (Command.SQLCommand) ? "" : ParameterRegex.Replace (Command.SQLCommand' x => {  							if (!x.Value.StartsWith ("@@"' StringComparison.Ordinal))  								return x.Value + "Command" + Count.ToString (CultureInfo.InvariantCulture);  							return x.Value;  						}) + Environment.NewLine;  						foreach (IParameter Parameter in Command.Parameters) {  							FinalParameters.Add (Parameter.CreateCopy ("Command" + Count.ToString (CultureInfo.InvariantCulture)));  						}  					} else {  						FinalSQLCommand += Command.SQLCommand + Environment.NewLine;  						foreach (IParameter Parameter in Command.Parameters) {  							FinalParameters.Add (Parameter.CreateCopy (""));  						}  					}  					++Count;  				}  				ExecutableCommand.CommandText = FinalSQLCommand;  				FinalParameters.ForEach (x => x.AddParameter (ExecutableCommand));  				using (DbDataReader TempReader = ExecutableCommand.ExecuteReader ()) {  					if (Finalizable) {  						ReturnValue.Add (GetValues (TempReader));  						while (TempReader.NextResult ()) {  							ReturnValue.Add (GetValues (TempReader));  						}  					}  				}  				if (Count >= CommandCount)  					break;  			}  			ExecutableCommand.Commit ();  		} catch {  			ExecutableCommand.Rollback ();  			throw;  		} finally {  			ExecutableCommand.Close ();  		}  	}  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The following statement contains a magic number: using (DbCommand ExecutableCommand = Factory.CreateCommand ()) {  	ExecutableCommand.Connection = Connection;  	ExecutableCommand.CommandType = CommandType.Text;  	if (Commands.Count > 1 && !Commands.Any (x => x.SQLCommand.Contains ("ALTER DATABASE")) && !Commands.Any (x => x.SQLCommand.Contains ("CREATE DATABASE")))  		ExecutableCommand.BeginTransaction ();  	ExecutableCommand.Open ();  	try {  		int Count = 0;  		while (true) {  			var FinalParameters = new List<IParameter> ();  			bool Finalizable = false;  			string FinalSQLCommand = "";  			int ParameterTotal = 0;  			ExecutableCommand.Parameters.Clear ();  			for (int y = Count; y < Commands.Count; ++y) {  				ICommand Command = Commands [y];  				if (ParameterTotal + Command.Parameters.Count > 2100)  					break;  				ParameterTotal += Command.Parameters.Count;  				Finalizable |= Commands [y].Finalizable;  				if (Command.CommandType == CommandType.Text) {  					FinalSQLCommand += string.IsNullOrEmpty (Command.SQLCommand) ? "" : ParameterRegex.Replace (Command.SQLCommand' x => {  						if (!x.Value.StartsWith ("@@"' StringComparison.Ordinal))  							return x.Value + "Command" + Count.ToString (CultureInfo.InvariantCulture);  						return x.Value;  					}) + Environment.NewLine;  					foreach (IParameter Parameter in Command.Parameters) {  						FinalParameters.Add (Parameter.CreateCopy ("Command" + Count.ToString (CultureInfo.InvariantCulture)));  					}  				} else {  					FinalSQLCommand += Command.SQLCommand + Environment.NewLine;  					foreach (IParameter Parameter in Command.Parameters) {  						FinalParameters.Add (Parameter.CreateCopy (""));  					}  				}  				++Count;  			}  			ExecutableCommand.CommandText = FinalSQLCommand;  			FinalParameters.ForEach (x => x.AddParameter (ExecutableCommand));  			using (DbDataReader TempReader = ExecutableCommand.ExecuteReader ()) {  				if (Finalizable) {  					ReturnValue.Add (GetValues (TempReader));  					while (TempReader.NextResult ()) {  						ReturnValue.Add (GetValues (TempReader));  					}  				}  			}  			if (Count >= CommandCount)  				break;  		}  		ExecutableCommand.Commit ();  	} catch {  		ExecutableCommand.Rollback ();  		throw;  	} finally {  		ExecutableCommand.Close ();  	}  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The following statement contains a magic number: try {  	int Count = 0;  	while (true) {  		var FinalParameters = new List<IParameter> ();  		bool Finalizable = false;  		string FinalSQLCommand = "";  		int ParameterTotal = 0;  		ExecutableCommand.Parameters.Clear ();  		for (int y = Count; y < Commands.Count; ++y) {  			ICommand Command = Commands [y];  			if (ParameterTotal + Command.Parameters.Count > 2100)  				break;  			ParameterTotal += Command.Parameters.Count;  			Finalizable |= Commands [y].Finalizable;  			if (Command.CommandType == CommandType.Text) {  				FinalSQLCommand += string.IsNullOrEmpty (Command.SQLCommand) ? "" : ParameterRegex.Replace (Command.SQLCommand' x => {  					if (!x.Value.StartsWith ("@@"' StringComparison.Ordinal))  						return x.Value + "Command" + Count.ToString (CultureInfo.InvariantCulture);  					return x.Value;  				}) + Environment.NewLine;  				foreach (IParameter Parameter in Command.Parameters) {  					FinalParameters.Add (Parameter.CreateCopy ("Command" + Count.ToString (CultureInfo.InvariantCulture)));  				}  			} else {  				FinalSQLCommand += Command.SQLCommand + Environment.NewLine;  				foreach (IParameter Parameter in Command.Parameters) {  					FinalParameters.Add (Parameter.CreateCopy (""));  				}  			}  			++Count;  		}  		ExecutableCommand.CommandText = FinalSQLCommand;  		FinalParameters.ForEach (x => x.AddParameter (ExecutableCommand));  		using (DbDataReader TempReader = ExecutableCommand.ExecuteReader ()) {  			if (Finalizable) {  				ReturnValue.Add (GetValues (TempReader));  				while (TempReader.NextResult ()) {  					ReturnValue.Add (GetValues (TempReader));  				}  			}  		}  		if (Count >= CommandCount)  			break;  	}  	ExecutableCommand.Commit ();  } catch {  	ExecutableCommand.Rollback ();  	throw;  } finally {  	ExecutableCommand.Close ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The following statement contains a magic number: while (true) {  	var FinalParameters = new List<IParameter> ();  	bool Finalizable = false;  	string FinalSQLCommand = "";  	int ParameterTotal = 0;  	ExecutableCommand.Parameters.Clear ();  	for (int y = Count; y < Commands.Count; ++y) {  		ICommand Command = Commands [y];  		if (ParameterTotal + Command.Parameters.Count > 2100)  			break;  		ParameterTotal += Command.Parameters.Count;  		Finalizable |= Commands [y].Finalizable;  		if (Command.CommandType == CommandType.Text) {  			FinalSQLCommand += string.IsNullOrEmpty (Command.SQLCommand) ? "" : ParameterRegex.Replace (Command.SQLCommand' x => {  				if (!x.Value.StartsWith ("@@"' StringComparison.Ordinal))  					return x.Value + "Command" + Count.ToString (CultureInfo.InvariantCulture);  				return x.Value;  			}) + Environment.NewLine;  			foreach (IParameter Parameter in Command.Parameters) {  				FinalParameters.Add (Parameter.CreateCopy ("Command" + Count.ToString (CultureInfo.InvariantCulture)));  			}  		} else {  			FinalSQLCommand += Command.SQLCommand + Environment.NewLine;  			foreach (IParameter Parameter in Command.Parameters) {  				FinalParameters.Add (Parameter.CreateCopy (""));  			}  		}  		++Count;  	}  	ExecutableCommand.CommandText = FinalSQLCommand;  	FinalParameters.ForEach (x => x.AddParameter (ExecutableCommand));  	using (DbDataReader TempReader = ExecutableCommand.ExecuteReader ()) {  		if (Finalizable) {  			ReturnValue.Add (GetValues (TempReader));  			while (TempReader.NextResult ()) {  				ReturnValue.Add (GetValues (TempReader));  			}  		}  	}  	if (Count >= CommandCount)  		break;  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The following statement contains a magic number: for (int y = Count; y < Commands.Count; ++y) {  	ICommand Command = Commands [y];  	if (ParameterTotal + Command.Parameters.Count > 2100)  		break;  	ParameterTotal += Command.Parameters.Count;  	Finalizable |= Commands [y].Finalizable;  	if (Command.CommandType == CommandType.Text) {  		FinalSQLCommand += string.IsNullOrEmpty (Command.SQLCommand) ? "" : ParameterRegex.Replace (Command.SQLCommand' x => {  			if (!x.Value.StartsWith ("@@"' StringComparison.Ordinal))  				return x.Value + "Command" + Count.ToString (CultureInfo.InvariantCulture);  			return x.Value;  		}) + Environment.NewLine;  		foreach (IParameter Parameter in Command.Parameters) {  			FinalParameters.Add (Parameter.CreateCopy ("Command" + Count.ToString (CultureInfo.InvariantCulture)));  		}  	} else {  		FinalSQLCommand += Command.SQLCommand + Environment.NewLine;  		foreach (IParameter Parameter in Command.Parameters) {  			FinalParameters.Add (Parameter.CreateCopy (""));  		}  	}  	++Count;  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default,DatabaseBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\DatabaseBatch.cs,ExecuteCommands,The following statement contains a magic number: if (ParameterTotal + Command.Parameters.Count > 2100)  	break;  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The following statement contains a magic number: if (Property as IManyToOne != null) {  	var Item = (P)Property.GetValue (Object);  	if (Item == null)  		return ReturnValue;  	var CurrentID = ((IProperty<T>)Mapping.IDProperties.FirstOrDefault ()).GetValue (Object);  	IMapping ForeignMapping = Property.ForeignMapping;  	var ForeignID = ForeignMapping.IDProperties.FirstOrDefault ().GetValue (Item);  	string Parameters = "";  	object[] Values = new object[2];  	if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.InvariantCulture) == 0) {  		Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "2";  		Values [1] = CurrentID;  		Values [0] = ForeignID;  	} else if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.InvariantCulture) <= 0) {  		Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName;  		Values [0] = CurrentID;  		Values [1] = ForeignID;  	} else {  		Parameters = ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "'" + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName;  		Values [1] = CurrentID;  		Values [0] = ForeignID;  	}  	ReturnValue.AddCommand (null' Object' "INSERT INTO " + Property.TableName + "(" + Parameters + ") VALUES (@0'@1)"' CommandType.Text' Values);  	return ReturnValue;  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The following statement contains a magic number: foreach (ItemType Item in List) {  	if (Item != null) {  		var CurrentID = Mapping.IDProperties.FirstOrDefault ().GetValue (Object);  		IMapping ForeignMapping = Property.ForeignMapping;  		var ForeignID = ForeignMapping.IDProperties.FirstOrDefault ().GetValue (Item);  		string Parameters = "";  		object[] Values = new object[2];  		if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.InvariantCulture) < 0) {  			Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName;  			Values [0] = CurrentID;  			Values [1] = ForeignID;  		} else if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.InvariantCulture) == 0) {  			Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "2";  			Values [0] = CurrentID;  			Values [1] = ForeignID;  		} else {  			Parameters = ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "'" + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName;  			Values [1] = CurrentID;  			Values [0] = ForeignID;  		}  		ReturnValue.AddCommand (null' Object' "INSERT INTO " + Property.TableName + "(" + Parameters + ") VALUES (@0'@1)"' CommandType.Text' Values);  	}  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default.SQLServer,SQLServerGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\SQLServer\SQLServerGenerator.cs,JoinsSave,The following statement contains a magic number: if (Item != null) {  	var CurrentID = Mapping.IDProperties.FirstOrDefault ().GetValue (Object);  	IMapping ForeignMapping = Property.ForeignMapping;  	var ForeignID = ForeignMapping.IDProperties.FirstOrDefault ().GetValue (Item);  	string Parameters = "";  	object[] Values = new object[2];  	if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.InvariantCulture) < 0) {  		Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName;  		Values [0] = CurrentID;  		Values [1] = ForeignID;  	} else if (string.Compare (Mapping.TableName' ForeignMapping.TableName' StringComparison.InvariantCulture) == 0) {  		Parameters = Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName + "'" + ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "2";  		Values [0] = CurrentID;  		Values [1] = ForeignID;  	} else {  		Parameters = ForeignMapping.TableName + ForeignMapping.IDProperties.FirstOrDefault ().FieldName + "'" + Mapping.TableName + Mapping.IDProperties.FirstOrDefault ().FieldName;  		Values [1] = CurrentID;  		Values [0] = ForeignID;  	}  	ReturnValue.AddCommand (null' Object' "INSERT INTO " + Property.TableName + "(" + Parameters + ") VALUES (@0'@1)"' CommandType.Text' Values);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	IColumn CurrentColumn = CurrentTable [Column.Name];  	string Command = "";  	if (CurrentColumn == null) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  		foreach (IColumn ForeignKey in Column.ForeignKey) {  			Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  			ReturnValue.Add (Command);  		}  	} else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  		if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  			Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  		} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  			var Precision = (Column.Length * 2).Clamp (38' 18);  			Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  		}  		Command += "'";  		ReturnValue.Add (Command);  	}  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn == null) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  	foreach (IColumn ForeignKey in Column.ForeignKey) {  		Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ADD FOREIGN KEY ({1}) REFERENCES {2}({3}){4}{5}{6}'"' Table.Name' Column.Name' ForeignKey.ParentTable.Name' ForeignKey.Name' Column.OnDeleteCascade ? " ON DELETE CASCADE" : ""' Column.OnUpdateCascade ? " ON UPDATE CASCADE" : ""' Column.OnDeleteSetNull ? " ON DELETE SET NULL" : "");  		ReturnValue.Add (Command);  	}  } else if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (CurrentColumn.DataType != Column.DataType || (CurrentColumn.DataType == Column.DataType && CurrentColumn.DataType == SqlDbType.NVarChar.To (DbType.Int32) && CurrentColumn.Length != Column.Length && CurrentColumn.Length.Between (0' 4000) && Column.Length.Between (0' 4000))) {  	Command = string.Format (CultureInfo.CurrentCulture' "EXEC dbo.sp_executesql @statement = N'ALTER TABLE {0} ALTER COLUMN {1} {2}"' Table.Name' Column.Name' Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  	}  	Command += "'";  	ReturnValue.Add (Command);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: Command += (Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")";  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetAlterTableCommand,The following statement contains a magic number: Command += "(" + Precision.ToString (CultureInfo.InvariantCulture) + "'" + Column.Length.Clamp (38' 0).ToString (CultureInfo.InvariantCulture) + ")";  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	Builder.Append (Splitter).Append (Column.Name).Append (" ").Append (Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  	}  	if (!Column.Nullable) {  		Builder.Append (" NOT NULL");  	}  	if (Column.Unique) {  		Builder.Append (" UNIQUE");  	}  	if (Column.PrimaryKey) {  		Builder.Append (" PRIMARY KEY");  	}  	if (!string.IsNullOrEmpty (Column.Default)) {  		Builder.Append (" DEFAULT ").Append (Column.Default.Replace ("("' "").Replace (")"' "").Replace ("'"' "''"));  	}  	if (Column.AutoIncrement) {  		Builder.Append (" IDENTITY");  	}  	Splitter = "'";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	Builder.Append (Splitter).Append (Column.Name).Append (" ").Append (Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  	}  	if (!Column.Nullable) {  		Builder.Append (" NOT NULL");  	}  	if (Column.Unique) {  		Builder.Append (" UNIQUE");  	}  	if (Column.PrimaryKey) {  		Builder.Append (" PRIMARY KEY");  	}  	if (!string.IsNullOrEmpty (Column.Default)) {  		Builder.Append (" DEFAULT ").Append (Column.Default.Replace ("("' "").Replace (")"' "").Replace ("'"' "''"));  	}  	if (Column.AutoIncrement) {  		Builder.Append (" IDENTITY");  	}  	Splitter = "'";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	Builder.Append (Splitter).Append (Column.Name).Append (" ").Append (Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  	}  	if (!Column.Nullable) {  		Builder.Append (" NOT NULL");  	}  	if (Column.Unique) {  		Builder.Append (" UNIQUE");  	}  	if (Column.PrimaryKey) {  		Builder.Append (" PRIMARY KEY");  	}  	if (!string.IsNullOrEmpty (Column.Default)) {  		Builder.Append (" DEFAULT ").Append (Column.Default.Replace ("("' "").Replace (")"' "").Replace ("'"' "''"));  	}  	if (Column.AutoIncrement) {  		Builder.Append (" IDENTITY");  	}  	Splitter = "'";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	Builder.Append (Splitter).Append (Column.Name).Append (" ").Append (Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  	}  	if (!Column.Nullable) {  		Builder.Append (" NOT NULL");  	}  	if (Column.Unique) {  		Builder.Append (" UNIQUE");  	}  	if (Column.PrimaryKey) {  		Builder.Append (" PRIMARY KEY");  	}  	if (!string.IsNullOrEmpty (Column.Default)) {  		Builder.Append (" DEFAULT ").Append (Column.Default.Replace ("("' "").Replace (")"' "").Replace ("'"' "''"));  	}  	if (Column.AutoIncrement) {  		Builder.Append (" IDENTITY");  	}  	Splitter = "'";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: foreach (IColumn Column in Table.Columns) {  	Builder.Append (Splitter).Append (Column.Name).Append (" ").Append (Column.DataType.To (SqlDbType.Int).ToString ());  	if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  		Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  	} else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  		var Precision = (Column.Length * 2).Clamp (38' 18);  		Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  	}  	if (!Column.Nullable) {  		Builder.Append (" NOT NULL");  	}  	if (Column.Unique) {  		Builder.Append (" UNIQUE");  	}  	if (Column.PrimaryKey) {  		Builder.Append (" PRIMARY KEY");  	}  	if (!string.IsNullOrEmpty (Column.Default)) {  		Builder.Append (" DEFAULT ").Append (Column.Default.Replace ("("' "").Replace (")"' "").Replace ("'"' "''"));  	}  	if (Column.AutoIncrement) {  		Builder.Append (" IDENTITY");  	}  	Splitter = "'";  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.VarChar.To (DbType.Int32) || Column.DataType == SqlDbType.NVarChar.To (DbType.Int32) || Column.DataType == SqlDbType.Binary.To (DbType.Int32)) {  	Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  } else if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: Builder.Append ((Column.Length < 0 || Column.Length >= 4000) ? "(MAX)" : "(" + Column.Length.ToString (CultureInfo.InvariantCulture) + ")");  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: if (Column.DataType == SqlDbType.Decimal.To (DbType.Int32)) {  	var Precision = (Column.Length * 2).Clamp (38' 18);  	Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer,SQLServerSchemaGenerator,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\SQLServerSchemaGenerator.cs,GetTableCommand,The following statement contains a magic number: Builder.Append ("(").Append (Precision).Append ("'").Append (Column.Length.Clamp (38' 0)).Append (")");  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,Execute,The following statement contains a magic number: using (DirectoryEntry Entry = new DirectoryEntry (Source.Server' Source.UserName' Source.Password' AuthenticationTypes.Secure)) {  	using (DirectorySearcher Searcher = new DirectorySearcher (Entry)) {  		Searcher.PageSize = 1000;  		foreach (Command Command in Commands) {  			Searcher.Filter = Command.SQLCommand;  			using (SearchResultCollection Results = Searcher.FindAll ()) {  				var ReturnValues = new List<dynamic> ();  				foreach (SearchResult Result in Results) {  					var TempValue = new Dynamo ();  					foreach (PropertyValueCollection Property in Result.GetDirectoryEntry ().Properties) {  						TempValue [Property.PropertyName] = Property.Value;  						ReturnValues.Add (TempValue);  					}  				}  				ReturnValue.Add (ReturnValues);  			}  		}  	}  	Entry.Close ();  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,Execute,The following statement contains a magic number: using (DirectorySearcher Searcher = new DirectorySearcher (Entry)) {  	Searcher.PageSize = 1000;  	foreach (Command Command in Commands) {  		Searcher.Filter = Command.SQLCommand;  		using (SearchResultCollection Results = Searcher.FindAll ()) {  			var ReturnValues = new List<dynamic> ();  			foreach (SearchResult Result in Results) {  				var TempValue = new Dynamo ();  				foreach (PropertyValueCollection Property in Result.GetDirectoryEntry ().Properties) {  					TempValue [Property.PropertyName] = Property.Value;  					ReturnValues.Add (TempValue);  				}  			}  			ReturnValue.Add (ReturnValues);  		}  	}  }  
Magic Number,Utilities.ORM.Manager.QueryProvider.Default.LDAP,LDAPBatch,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\QueryProvider\Default\LDAP\LDAPBatch.cs,Execute,The following statement contains a magic number: Searcher.PageSize = 1000;  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,StoredProcedureColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\StoredProcedureColumns.cs,SetupStoredProcedures,The following statement contains a magic number: if (Type == "nvarchar")  	Length /= 2;  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,StoredProcedureColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\StoredProcedureColumns.cs,SetupStoredProcedures,The following statement contains a magic number: Length /= 2;  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,SetupColumns,The following statement contains a magic number: if (table.ContainsColumn (item.Column)) {  	table.AddForeignKey (item.Column' item.FOREIGN_KEY_TABLE' item.FOREIGN_KEY_COLUMN);  } else {  	table.AddColumn<string> (item.Column' Utilities.DataTypes.TypeConversionExtensions.To (Utilities.DataTypes.TypeConversionExtensions.To<string' SqlDbType> (item.COLUMN_TYPE)' DbType.Int32)' (item.COLUMN_TYPE == "nvarchar") ? item.MAX_LENGTH / 2 : item.MAX_LENGTH' item.IS_NULLABLE' item.IS_IDENTITY' item.IS_INDEX != 0' !string.IsNullOrEmpty (item.PRIMARY_KEY)' !string.IsNullOrEmpty (item.UNIQUE)' item.FOREIGN_KEY_TABLE' item.FOREIGN_KEY_COLUMN' item.DEFAULT_VALUE);  }  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,TableColumns,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\TableColumns.cs,SetupColumns,The following statement contains a magic number: table.AddColumn<string> (item.Column' Utilities.DataTypes.TypeConversionExtensions.To (Utilities.DataTypes.TypeConversionExtensions.To<string' SqlDbType> (item.COLUMN_TYPE)' DbType.Int32)' (item.COLUMN_TYPE == "nvarchar") ? item.MAX_LENGTH / 2 : item.MAX_LENGTH' item.IS_NULLABLE' item.IS_IDENTITY' item.IS_INDEX != 0' !string.IsNullOrEmpty (item.PRIMARY_KEY)' !string.IsNullOrEmpty (item.UNIQUE)' item.FOREIGN_KEY_TABLE' item.FOREIGN_KEY_COLUMN' item.DEFAULT_VALUE);  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,Views,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\Views.cs,SetupViews,The following statement contains a magic number: if (ColumnType == "nvarchar")  	MaxLength /= 2;  
Magic Number,Utilities.ORM.Manager.Schema.Default.Database.SQLServer.Builders,Views,F:\newReposMay17\JaCraig_Craig-s-Utility-Library\Utilities.ORM\ORM\Manager\Schema\Default\Database\SQLServer\Builders\Views.cs,SetupViews,The following statement contains a magic number: MaxLength /= 2;  
