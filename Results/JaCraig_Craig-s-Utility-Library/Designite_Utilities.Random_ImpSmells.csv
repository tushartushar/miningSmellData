Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Utilities.Random.StringGenerators,LoremIpsumGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\StringGenerators\LoremIpsumGenerator.cs,Next,Cyclomatic complexity of the method is 8
Long Parameter List,Utilities.Random,RandomExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ExtensionMethods\RandomExtensions.cs,Next,The method has 5 parameters. Parameters: Random' Amount' Min' Max' Generator
Long Parameter List,Utilities.Random.StringGenerators,LoremIpsumGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\StringGenerators\LoremIpsumGenerator.cs,LoremIpsumGenerator,The method has 5 parameters. Parameters: NumberOfParagraphs' NumberOfSentences' MinSentenceLength' MaxSentenceLength' HTMLFormatting
Long Identifier,Utilities.Random.DefaultClasses,StringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\StringGenerator.cs,NextString,The length of the parameter NumberOfNonAlphaNumericsAllowed is 31.
Long Identifier,Utilities.Random.StringGenerators,RegexStringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\StringGenerators\RegexStringGenerator.cs,RegexStringGenerator,The length of the parameter NumberOfNonAlphaNumericsAllowed is 31.
Long Statement,Utilities.Random.ContactInfoGenerators,DomainNameGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\DomainNameGenerator.cs,CleanName,The length of the statement  "            return Name.ToLower(CultureInfo.InvariantCulture).Replace(" "' "").Replace("'"' "").Replace("'"' "").Replace("&"' "").Replace("."' ""); " is 135.
Long Statement,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The length of the statement  "            string DomainName = (Rand.Next<bool>()) ? Rand.Next(FreeAccounts) + (CommonEndings ? Rand.Next(MostCommonEndings) : Rand.Next(Endings)) : new DomainNameGenerator(CommonEndings).Next(Rand);" is 188.
Long Statement,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The length of the statement  "            return Rand.Next<char>('a'' 'z') + "." + Rand.Next<char>('a'' 'z') + "." + new LastNameGenerator().Next(Rand) + "@" + DomainName;" is 129.
Long Statement,Utilities.Random.DefaultClasses,DecimalGenerator<T>,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\DecimalGenerator.cs,Next,The length of the statement  "            return (Min.To(default(double)) + ((Max.To(default(double)) - Min.To(default(double))) * Rand.NextDouble())).To(default(T)); " is 124.
Long Statement,Utilities.Random,RandomExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ExtensionMethods\RandomExtensions.cs,Next,The length of the statement  "                    throw new ArgumentOutOfRangeException("The type specified' " + typeof(T).Name + "' does not have a default generator."); " is 120.
Long Statement,Utilities.Random,RandomExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ExtensionMethods\RandomExtensions.cs,Next,The length of the statement  "                    throw new ArgumentOutOfRangeException("The type specified' " + typeof(T).Name + "' does not have a default generator."); " is 120.
Long Statement,Utilities.Random,RandomExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ExtensionMethods\RandomExtensions.cs,Next,The length of the statement  "                    throw new ArgumentOutOfRangeException("The type specified' " + typeof(T).Name + "' does not have a default generator."); " is 120.
Long Statement,Utilities.Random,RandomExtensions,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ExtensionMethods\RandomExtensions.cs,Next,The length of the statement  "                    throw new ArgumentOutOfRangeException("The type specified' " + typeof(T).Name + "' does not have a default generator."); " is 120.
Long Statement,Utilities.Random.NameGenerators,NameGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\NameGenerators\NameGenerator.cs,Next,The length of the statement  "            return Rand.Next<bool>() ? new MaleNameGenerator(Prefix' MiddleName' LastName' Suffix).Next(Rand) : new FemaleNameGenerator(Prefix' MiddleName' LastName' Suffix).Next(Rand); " is 173.
Magic Number,Utilities.Random.ContactInfoGenerators,DomainNameGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\DomainNameGenerator.cs,Next,The following statement contains a magic number: return ((CompanyName.Length > 10) ? CleanName(CompanyName.Split(' ')[0]) : CleanName(CompanyName))                  + (CommonEndings ? Rand.Next(MostCommonEndings) : Rand.Next(Endings));
Magic Number,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The following statement contains a magic number: var AddressStyle = Rand.Next(1' 6);
Magic Number,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The following statement contains a magic number: switch (AddressStyle)              {                  case 1:                      return new NameGenerator().Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 2:                      return new NameGenerator(false' true' true' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 3:                      return Rand.Next<char>('a'' 'z') + "." + new LastNameGenerator().Next(Rand) + "@" + DomainName;                  case 4:                      return new NameGenerator(false' false' false' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;              }
Magic Number,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The following statement contains a magic number: switch (AddressStyle)              {                  case 1:                      return new NameGenerator().Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 2:                      return new NameGenerator(false' true' true' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 3:                      return Rand.Next<char>('a'' 'z') + "." + new LastNameGenerator().Next(Rand) + "@" + DomainName;                  case 4:                      return new NameGenerator(false' false' false' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;              }
Magic Number,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The following statement contains a magic number: switch (AddressStyle)              {                  case 1:                      return new NameGenerator().Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 2:                      return new NameGenerator(false' true' true' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 3:                      return Rand.Next<char>('a'' 'z') + "." + new LastNameGenerator().Next(Rand) + "@" + DomainName;                  case 4:                      return new NameGenerator(false' false' false' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;              }
Magic Number,Utilities.Random.DefaultClasses,BoolGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\BoolGenerator.cs,Next,The following statement contains a magic number: return Rand.Next(0' 2) == 1;
Magic Number,Utilities.Random.DefaultClasses,StringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\StringGenerator.cs,Next,The following statement contains a magic number: return NextString(Rand' 10);
Magic Number,Utilities.Random.DefaultClasses,StringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\StringGenerator.cs,Next,The following statement contains a magic number: return NextString(Rand' 10);
Magic Number,Utilities.Random.DefaultClasses,StringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\StringGenerator.cs,NextString,The following statement contains a magic number: var TempValue = new string(Convert.ToChar(Convert.ToInt32(System.Math.Floor(94 * Rand.NextDouble() + 32)))' 1);
Magic Number,Utilities.Random.DefaultClasses,StringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\DefaultClasses\StringGenerator.cs,NextString,The following statement contains a magic number: var TempValue = new string(Convert.ToChar(Convert.ToInt32(System.Math.Floor(94 * Rand.NextDouble() + 32)))' 1);
Magic Number,Utilities.Random.StringGenerators,PatternGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\StringGenerators\PatternGenerator.cs,Next,The following statement contains a magic number: TempBuilder.Append(Rand.Next(0' 9));
Magic Number,Utilities.Random.StringGenerators,RegexStringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\StringGenerators\RegexStringGenerator.cs,Next,The following statement contains a magic number: var TempValue = new string(Convert.ToChar(Convert.ToInt32(System.Math.Floor(94 * Rand.NextDouble() + 32)))' 1);
Magic Number,Utilities.Random.StringGenerators,RegexStringGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\StringGenerators\RegexStringGenerator.cs,Next,The following statement contains a magic number: var TempValue = new string(Convert.ToChar(Convert.ToInt32(System.Math.Floor(94 * Rand.NextDouble() + 32)))' 1);
Missing Default,Utilities.Random.ContactInfoGenerators,EmailAddressGenerator,D:\research\architectureSmells\repos\JaCraig_Craig-s-Utility-Library\Utilities.Random\Random\ContactInfoGenerators\EmailAddressGenerator.cs,Next,The following switch statement is missing a default case: switch (AddressStyle)              {                  case 1:                      return new NameGenerator().Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 2:                      return new NameGenerator(false' true' true' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;                  case 3:                      return Rand.Next<char>('a'' 'z') + "." + new LastNameGenerator().Next(Rand) + "@" + DomainName;                  case 4:                      return new NameGenerator(false' false' false' false).Next(Rand).Replace(" "' ".") + "@" + DomainName;              }
