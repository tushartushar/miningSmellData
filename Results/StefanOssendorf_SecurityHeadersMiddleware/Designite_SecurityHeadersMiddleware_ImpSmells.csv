Implementation smell,Namespace,Class,File,Method,Description
Long Method,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The method has 131 lines of code.
Long Method,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The method has 131 lines of code.
Complex Method,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,Cyclomatic complexity of the method is 9
Complex Method,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,Cyclomatic complexity of the method is 9
Long Identifier,SecurityHeadersMiddleware.LibOwin.Infrastructure,Resources,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,,The length of the parameter Exception_MissingOnSendingHeaders is 33.
Long Identifier,SecurityHeadersMiddleware.LibOwin.Infrastructure,Resources,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,,The length of the parameter Exception_PathMustStartWithSlash is 32.
Long Identifier,SecurityHeadersMiddleware.LibOwin.Infrastructure,Resources,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,,The length of the parameter Exception_QueryStringMustStartWithDelimiter is 43.
Long Identifier,SecurityHeadersMiddleware.LibOwin,Resources,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,,The length of the parameter Exception_MissingOnSendingHeaders is 33.
Long Identifier,SecurityHeadersMiddleware.LibOwin,Resources,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,,The length of the parameter Exception_PathMustStartWithSlash is 32.
Long Identifier,SecurityHeadersMiddleware.LibOwin,Resources,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,,The length of the parameter Exception_QueryStringMustStartWithDelimiter is 43.
Long Identifier,SecurityHeadersMiddleware.Infrastructure,HeaderConstants,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\HeaderConstants.cs,,The length of the parameter ContentSecurityPolicyReportOnly is 31.
Long Statement,SecurityHeadersMiddleware,CspAncestorSourceList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspAncestorSourceList.cs,ThrowIfNoneIsSet,The length of the statement  "                throw new InvalidOperationException("This list ist set to 'none'. No additional values are allowed. Don't set this liste to 'none' when you need to add values."); " is 162.
Long Statement,SecurityHeadersMiddleware,CspSourceList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspSourceList.HashSource.cs,ThrowIfNoneIsSet,The length of the statement  "                throw new InvalidOperationException("This list ist set to 'none'. No additional values are allowed. Don't set this liste to 'none' when you need to add values."); " is 162.
Long Statement,SecurityHeadersMiddleware,ContentSecurityPolicyMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\ContentSecurityPolicyMiddleware.cs,ApplyHeader,The length of the statement  "                // A server MUST NOT send more than one HTTP header field named Content-Security-Policy with a given resource representation. " is 125.
Long Statement,SecurityHeadersMiddleware,ContentSecurityPolicyReportOnlyMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\ContentSecurityPolicyReportOnlyMiddleware.cs,ApplyHeader,The length of the statement  "                // "A server MUST NOT send more than one HTTP header field named Content-Security-Policy-Report-Only with a given resource representation." " is 139.
Long Statement,SecurityHeadersMiddleware,CspMediaTypeList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspMediaTypeList.cs,VerifyMediaType,The length of the statement  "                throw new FormatException(msg.FormatWith(mediaType' Environment.NewLine' "http://www.w3.org/TR/CSP2/#media-type-list1")); " is 121.
Long Statement,SecurityHeadersMiddleware,CspMediaTypeList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspMediaTypeList.cs,VerifyType,The length of the statement  "            throw new FormatException(msg.FormatWith(type' mediaType' Environment.NewLine' "http://www.w3.org/TR/CSP2/#media-type-list1")); " is 127.
Long Statement,SecurityHeadersMiddleware,CspMediaTypeList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspMediaTypeList.cs,VeritySubType,The length of the statement  "            throw new FormatException(msg.FormatWith(subType' mediaType' Environment.NewLine' "http://www.w3.org/TR/CSP2/#media-type-list1")); " is 130.
Long Statement,SecurityHeadersMiddleware,StrictTransportSecurityHeaderMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\StrictTransportSecurityHeaderMiddleware.cs,StrictTransportSecurityHeader,The length of the statement  "                    // Quotation: "An HSTS Host MUST NOT include the STS header field in HTTP responses conveyed over non-secure transport." " is 120.
Long Statement,SecurityHeadersMiddleware.Infrastructure,ParamGuard,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\ParamGuard.cs,MustNotBeWhiteSpaceOrEmpty,The length of the statement  "                throw new ArgumentException("{0} have to be not null' not empty or only contains white-space characters.".FormatWith(paramName)); " is 129.
Long Statement,SecurityHeadersMiddleware.Infrastructure,ParamGuard,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\ParamGuard.cs,MustBeDefined,The length of the statement  "                throw new ArgumentOutOfRangeException("{0} is not a defined value on {1} (Parameter: {2})".FormatWith(source' enumType.ToString()' paramName)); " is 143.
Long Statement,SecurityHeadersMiddleware.Infrastructure,Rfc6454Utility,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\Rfc6454Utility.cs,HasSameOrigin,The length of the statement  "            return Uri.Compare(uri1' uri2' UriComponents.SchemeAndServer' UriFormat.SafeUnescaped' StringComparison.OrdinalIgnoreCase) == 0; " is 128.
Magic Number,SecurityHeadersMiddleware,AntiClickjackingMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\AntiClickjackingMiddleware.cs,AntiClickjackingHeader,The following statement contains a magic number: return AntiClickjackingHeader(3' origins);
Magic Number,SecurityHeadersMiddleware,AntiClickjackingMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\AntiClickjackingMiddleware.cs,ApplyHeader,The following statement contains a magic number: switch (obj.FrameOption) {                  case 1:                      value = "DENY";                      break;                  case 2:                      value = "SAMEORIGIN";                      break;                  default:                      value = DetermineValue(obj.Origins' obj.RequestUri);                      break;              }
Magic Number,SecurityHeadersMiddleware,CspSourceList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspSourceList.HashSource.cs,BuildKeywordValues,The following statement contains a magic number: foreach (var keyword in mKeywords) {                  var value = keyword.ToString().ToLower();                  if (value.StartsWith("unsafe")) {                      value = value.Insert(6' "-");                  }                  sb.AppendFormat("'{0}' "' value);              }
Magic Number,SecurityHeadersMiddleware,ContentSecurityPolicyConfiguration,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\ContentSecurityPolicyConfiguration.cs,ToHeaderValue,The following statement contains a magic number: var values = new List<string>(16) {                  BuildDirectiveValue("base-uri"' BaseUri)'                  BuildDirectiveValue("child-src"' ChildSrc)'                  BuildDirectiveValue("connect-src"' ConnectSrc)'                  BuildDirectiveValue("default-src"' DefaultSrc)'                  BuildDirectiveValue("font-src"' FontSrc)'                  BuildDirectiveValue("form-action"' FormAction)'                  BuildDirectiveValue("frame-ancestors"' FrameAncestors)'                  BuildDirectiveValue("frame-src"' FrameSrc)'                  BuildDirectiveValue("img-src"' ImgSrc)'                  BuildDirectiveValue("media-src"' MediaSrc)'                  BuildDirectiveValue("object-src"' ObjectSrc)'                  BuildDirectiveValue("plugin-types"' PluginTypes)'                  BuildDirectiveValue("report-uri"' ReportUri)'                  BuildSandboxDirectiveValue()'                  BuildDirectiveValue("script-src"' ScriptSrc)'                  BuildDirectiveValue("style-src"' StyleSrc)              };
Magic Number,SecurityHeadersMiddleware,HostSource,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\HostSource.cs,ExtractScheme,The following statement contains a magic number: mScheme = hostsource.Substring(0' index + 3);
Magic Number,SecurityHeadersMiddleware,CspMediaTypeList,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\CspMediaTypeList.cs,VerifyMediaType,The following statement contains a magic number: if (split.Length != 2 || split[0].Length == 0 || split[1].Length == 0) {                  const string msg = "Mediatype value '{0}' does not satisfy the required format.{1}" +                                     "Valid mediatypes: text/plain or text/html{1}" +                                     "For more information see: {2} (media-type).";                  throw new FormatException(msg.FormatWith(mediaType' Environment.NewLine' "http://www.w3.org/TR/CSP2/#media-type-list1"));              }
Magic Number,SecurityHeadersMiddleware,StrictTransportSecurityHeaderMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\StrictTransportSecurityHeaderMiddleware.cs,SetResponseForRedirect,The following statement contains a magic number: response.StatusCode = 301;
Magic Number,SecurityHeadersMiddleware,StrictTransportSecurityHeaderMiddleware,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\StrictTransportSecurityHeaderMiddleware.cs,SetResponseForRedirect,The following statement contains a magic number: response.ReasonPhrase = options.RedirectReasonPhrase(301);
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,HeaderSegment,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,GetHashCode,The following statement contains a magic number: unchecked {                  return (_formatting.GetHashCode()*397) ^ _data.GetHashCode();              }
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,StringSegment,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,GetHashCode,The following statement contains a magic number: unchecked {                  var hashCode = (_buffer != null ? _buffer.GetHashCode() : 0);                  hashCode = (hashCode*397) ^ _offset;                  hashCode = (hashCode*397) ^ _count;                  return hashCode;              }
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,StringSegment,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,GetHashCode,The following statement contains a magic number: unchecked {                  var hashCode = (_buffer != null ? _buffer.GetHashCode() : 0);                  hashCode = (hashCode*397) ^ _offset;                  hashCode = (hashCode*397) ^ _count;                  return hashCode;              }
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,OwinHelpers,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,DeQuote,The following statement contains a magic number: if (string.IsNullOrWhiteSpace(value)) {                  // Ignore              } else if (value.Length > 1 && value[0] == '"' && value[value.Length - 1] == '"') {                  value = value.Substring(1' value.Length - 2);              }
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,OwinRequest,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,ReadFormAsync,The following statement contains a magic number: if (form == null) {                  string text;                  // Don't close' it prevents re-winding.                  using (var reader = new StreamReader(Body' Encoding.UTF8' true' 4*1024' true)) {                      text = await reader.ReadToEndAsync();                  }                  form = OwinHelpers.GetForm(text);                  Set("Microsoft.Owin.Form#collection"' form);              }
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,OwinRequest,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,ReadFormAsync,The following statement contains a magic number: if (form == null) {                  string text;                  // Don't close' it prevents re-winding.                  using (var reader = new StreamReader(Body' Encoding.UTF8' true' 4*1024' true)) {                      text = await reader.ReadToEndAsync();                  }                  form = OwinHelpers.GetForm(text);                  Set("Microsoft.Owin.Form#collection"' form);              }
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,OwinResponse,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,Redirect,The following statement contains a magic number: StatusCode = 302;
Magic Number,SecurityHeadersMiddleware.LibOwin.Infrastructure,ResponseCookieCollection,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,Delete,The following statement contains a magic number: Append(key' string.Empty' new CookieOptions {                  Path = options.Path'                  Domain = options.Domain'                  Expires = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc)              });
Magic Number,SecurityHeadersMiddleware.LibOwin,HeaderSegment,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,GetHashCode,The following statement contains a magic number: unchecked {                  return (_formatting.GetHashCode()*397) ^ _data.GetHashCode();              }
Magic Number,SecurityHeadersMiddleware.LibOwin,StringSegment,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,GetHashCode,The following statement contains a magic number: unchecked {                  var hashCode = (_buffer != null ? _buffer.GetHashCode() : 0);                  hashCode = (hashCode*397) ^ _offset;                  hashCode = (hashCode*397) ^ _count;                  return hashCode;              }
Magic Number,SecurityHeadersMiddleware.LibOwin,StringSegment,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,GetHashCode,The following statement contains a magic number: unchecked {                  var hashCode = (_buffer != null ? _buffer.GetHashCode() : 0);                  hashCode = (hashCode*397) ^ _offset;                  hashCode = (hashCode*397) ^ _count;                  return hashCode;              }
Magic Number,SecurityHeadersMiddleware.LibOwin,OwinHelpers,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,DeQuote,The following statement contains a magic number: if (string.IsNullOrWhiteSpace(value)) {                  // Ignore              } else if (value.Length > 1 && value[0] == '"' && value[value.Length - 1] == '"') {                  value = value.Substring(1' value.Length - 2);              }
Magic Number,SecurityHeadersMiddleware.LibOwin,OwinRequest,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,ReadFormAsync,The following statement contains a magic number: if (form == null) {                  string text;                  // Don't close' it prevents re-winding.                  using (var reader = new StreamReader(Body' Encoding.UTF8' true' 4*1024' true)) {                      text = await reader.ReadToEndAsync();                  }                  form = OwinHelpers.GetForm(text);                  Set("Microsoft.Owin.Form#collection"' form);              }
Magic Number,SecurityHeadersMiddleware.LibOwin,OwinRequest,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,ReadFormAsync,The following statement contains a magic number: if (form == null) {                  string text;                  // Don't close' it prevents re-winding.                  using (var reader = new StreamReader(Body' Encoding.UTF8' true' 4*1024' true)) {                      text = await reader.ReadToEndAsync();                  }                  form = OwinHelpers.GetForm(text);                  Set("Microsoft.Owin.Form#collection"' form);              }
Magic Number,SecurityHeadersMiddleware.LibOwin,OwinResponse,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,Redirect,The following statement contains a magic number: StatusCode = 302;
Magic Number,SecurityHeadersMiddleware.LibOwin,ResponseCookieCollection,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,Delete,The following statement contains a magic number: Append(key' string.Empty' new CookieOptions {                  Path = options.Path'                  Domain = options.Domain'                  Expires = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc)              });
Magic Number,SecurityHeadersMiddleware.Infrastructure,CharExtension,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\CharExtension.cs,IsAscii,The following statement contains a magic number: return source >= 0 && source <= 127;
Magic Number,SecurityHeadersMiddleware.Infrastructure,CharExtension,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\CharExtension.cs,IsCTL,The following statement contains a magic number: return source <= 31 || source == 127;
Magic Number,SecurityHeadersMiddleware.Infrastructure,CharExtension,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\Infrastructure\CharExtension.cs,IsCTL,The following statement contains a magic number: return source <= 31 || source == 127;
Missing Default,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (_mode) {                              case Mode.Leading:                                  switch (attr) {                                      case Attr.Delimiter:                                          _leadingEnd = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }                                  break;                              case Mode.Value:                                  switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Delimiter:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Value:                                          // more                                          break;                                      case Attr.Whitespace:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Trailing;                                          break;                                  }                                  break;                              case Mode.ValueQuoted:                                  switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.Value;                                          break;                                      case Attr.Delimiter:                                          if (ch == (char) 0) {                                              _valueEnd = _offset;                                              _trailingStart = _offset;                                              _mode = Mode.Produce;                                          }                                          break;                                      case Attr.Value:                                      case Attr.Whitespace:                                          // more                                          break;                                  }                                  break;                              case Mode.Trailing:                                  switch (attr) {                                      case Attr.Delimiter:                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }                                  break;                          }
Missing Default,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Delimiter:                                          _leadingEnd = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Delimiter:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Value:                                          // more                                          break;                                      case Attr.Whitespace:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Trailing;                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.Value;                                          break;                                      case Attr.Delimiter:                                          if (ch == (char) 0) {                                              _valueEnd = _offset;                                              _trailingStart = _offset;                                              _mode = Mode.Produce;                                          }                                          break;                                      case Attr.Value:                                      case Attr.Whitespace:                                          // more                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin.Infrastructure,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Delimiter:                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (_mode) {                              case Mode.Leading:                                  switch (attr) {                                      case Attr.Delimiter:                                          _leadingEnd = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }                                  break;                              case Mode.Value:                                  switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Delimiter:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Value:                                          // more                                          break;                                      case Attr.Whitespace:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Trailing;                                          break;                                  }                                  break;                              case Mode.ValueQuoted:                                  switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.Value;                                          break;                                      case Attr.Delimiter:                                          if (ch == (char) 0) {                                              _valueEnd = _offset;                                              _trailingStart = _offset;                                              _mode = Mode.Produce;                                          }                                          break;                                      case Attr.Value:                                      case Attr.Whitespace:                                          // more                                          break;                                  }                                  break;                              case Mode.Trailing:                                  switch (attr) {                                      case Attr.Delimiter:                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }                                  break;                          }
Missing Default,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Delimiter:                                          _leadingEnd = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          _leadingEnd = _offset;                                          _valueStart = _offset;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Delimiter:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Produce;                                          break;                                      case Attr.Value:                                          // more                                          break;                                      case Attr.Whitespace:                                          _valueEnd = _offset;                                          _trailingStart = _offset;                                          _mode = Mode.Trailing;                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Quote:                                          _mode = Mode.Value;                                          break;                                      case Attr.Delimiter:                                          if (ch == (char) 0) {                                              _valueEnd = _offset;                                              _trailingStart = _offset;                                              _mode = Mode.Produce;                                          }                                          break;                                      case Attr.Value:                                      case Attr.Whitespace:                                          // more                                          break;                                  }
Missing Default,SecurityHeadersMiddleware.LibOwin,Enumerator,C:\repos\StefanOssendorf_SecurityHeadersMiddleware\src\OwinContrib.SecurityHeaders\App_Packages\LibOwin.1.0\LibOwin.cs,MoveNext,The following switch statement is missing a default case: switch (attr) {                                      case Attr.Delimiter:                                          _mode = Mode.Produce;                                          break;                                      case Attr.Quote:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.ValueQuoted;                                          break;                                      case Attr.Value:                                          // back into value                                          _trailingStart = -1;                                          _valueEnd = -1;                                          _mode = Mode.Value;                                          break;                                      case Attr.Whitespace:                                          // more                                          break;                                  }
