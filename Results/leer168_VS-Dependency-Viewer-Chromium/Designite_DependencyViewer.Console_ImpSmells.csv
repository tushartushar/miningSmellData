Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,AddSeparators,Cyclomatic complexity of the method is 17
Complex Method,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParseBundledValue,Cyclomatic complexity of the method is 10
Complex Method,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,GetDescription,Cyclomatic complexity of the method is 20
Long Parameter List,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,GetOptionParts,The method has 5 parameters.
Long Parameter List,DependencyViewer.Console,Program,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Program.cs,ParseArgs,The method has 5 parameters.
Long Statement,Mono.Options,OptionValueCollection,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,AssertValid,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Missing required value for option '{0}'.")' c.OptionName)' c.OptionName); " is 146.
Long Statement,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,Parse,The length of the statement  "	bool nullable = tt.IsValueType && tt.IsGenericType && !tt.IsGenericTypeDefinition && tt.GetGenericTypeDefinition () == typeof(Nullable<>); " is 138.
Long Statement,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,Parse,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Could not convert string `{0}' to type {1} for option `{2}'.")' value' targetType.Name' c.OptionName)' c.OptionName' e); " is 193.
Long Statement,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParsePrototype,The length of the statement  "			throw new ArgumentException (string.Format ("Conflicting option types: '{0}' vs. '{1}'."' type' name [end])' "prototype"); " is 122.
Long Statement,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParsePrototype,The length of the statement  "		throw new ArgumentException (string.Format ("Cannot provide key/value separators for Options taking {0} value(s)."' count)' "prototype"); " is 137.
Long Statement,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParseValue,The length of the statement  "		foreach (string o in c.Option.ValueSeparators != null ? option.Split (c.Option.ValueSeparators' StringSplitOptions.None) : new string[] { " is 137.
Long Statement,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParseValue,The length of the statement  "		throw new OptionException (localizer (string.Format ("Error: Found {0} option values when expecting {1}."' c.OptionValues.Count' c.Option.MaxValueCount))' c.OptionName); " is 169.
Long Statement,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParseBool,The length of the statement  "	if (n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))) { " is 127.
Complex Conditional,Mono.Options,Option,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 && ((names.Length == 1 && this.type != OptionValueType.None) || (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))"  is complex.
Magic Number,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	bool indent = false;  	string prefix = new string (' '' OptionWidth + 2);  	foreach (string line in GetLines (localizer (GetDescription (p.Description)))) {  		if (indent)  			o.Write (prefix);  		o.WriteLine (line);  		indent = true;  	}  }  
Magic Number,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,GetLines,The following statement contains a magic number: do {  	end = GetLineEnd (start' length' description);  	char c = description [end - 1];  	if (char.IsWhiteSpace (c))  		--end;  	bool writeContinuation = end != description.Length && !IsEolChar (c);  	string line = description.Substring (start' end - start) + (writeContinuation ? "-" : "");  	yield return line;  	start = end;  	if (char.IsWhiteSpace (c))  		++start;  	length = 80 - OptionWidth - 2 - 1;  }  while (end < description.Length);  
Magic Number,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,GetLines,The following statement contains a magic number: do {  	end = GetLineEnd (start' length' description);  	char c = description [end - 1];  	if (char.IsWhiteSpace (c))  		--end;  	bool writeContinuation = end != description.Length && !IsEolChar (c);  	string line = description.Substring (start' end - start) + (writeContinuation ? "-" : "");  	yield return line;  	start = end;  	if (char.IsWhiteSpace (c))  		++start;  	length = 80 - OptionWidth - 2 - 1;  }  while (end < description.Length);  
Magic Number,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,GetLines,The following statement contains a magic number: length = 80 - OptionWidth - 2 - 1;  
Magic Number,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,GetLines,The following statement contains a magic number: length = 80 - OptionWidth - 2 - 1;  
Missing Default,Mono.Options,OptionSet,C:\repos\leer168_VS-Dependency-Viewer-Chromium\DependencyViewer.Console\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  case OptionValueType.None:  	c.OptionValues.Add (n);  	c.Option.Invoke (c);  	break;  case OptionValueType.Optional:  case OptionValueType.Required:  	ParseValue (v' c);  	break;  }  
