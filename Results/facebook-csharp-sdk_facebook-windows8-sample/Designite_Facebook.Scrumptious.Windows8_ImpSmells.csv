Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Facebook.Scrumptious.Windows8.Common,RichTextColumns,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Long Statement,Facebook.Scrumptious.Windows8.Common,SuspensionManager,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "                StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync(sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 140.
Long Statement,Facebook.Scrumptious.Windows8.Common,SuspensionManager,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "                throw new InvalidOperationException("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 138.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,LoadUserInfo,The length of the statement  "            string profilePictureUrl = string.Format("https://graph.facebook.com/{0}/picture?type={1}&access_token={2}"' App.FacebookId' "large"' fb.AccessToken); " is 150.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectFriendsTextBox_Tapped,The length of the statement  "                FacebookData.Friends.Add(new Friend { Name = (string)friend["name"]' id = (string)friend["id"]' PictureUri = new Uri(string.Format("https://graph.facebook.com/{0}/picture?type={1}&access_token={2}"' (string)friend["id"]' "square"' App.AccessToken)) }); " is 252.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,OnNavigatedTo,The length of the statement  "                    this.selectFriendsTextBox.Text = String.Format("with {0} and {1} others"' FacebookData.SelectedFriends[0].Name' FacebookData.SelectedFriends.Count - 1); " is 152.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The length of the statement  "            dynamic restaurantsTaskResult = await fb.GetTaskAsync("/search"' new { q = "restaurant"' type = "place"' center = latitude.ToString() + "'" + longitude.ToString()' distance = "1000" }); " is 185.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The length of the statement  "                    PictureUri = new Uri(string.Format("https://graph.facebook.com/{0}/picture?type={1}&access_token={2}"' (string)restaurant["id"]' "square"' App.AccessToken)) " is 156.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,PostButtonAppbar_Tapped,The length of the statement  "                MessageDialog errorMessageDialog = new MessageDialog("Please select friends' a place to eat and something you ate before attempting to share!"); " is 144.
Long Statement,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,PostButtonAppbar_Tapped,The length of the statement  "                dynamic fbPostTaskResult = await fb.PostTaskAsync(String.Format("/me/{0}:eat"' Constants.FacebookAppGraphAction)' new { meal = FacebookData.SelectedMeal.MealUri' tags = FacebookData.SelectedFriends[0].id' place = FacebookData.SelectedRestaurant.Id }); " is 251.
Complex Conditional,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The method has an empty catch block.
Magic Number,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Facebook.Scrumptious.Windows8.Common,LayoutAwarePage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown ||                  args.EventType == CoreAcceleratorKeyEventType.KeyDown) &&                  (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right ||                  (int)virtualKey == 166 || (int)virtualKey == 167))              {                  var coreWindow = Window.Current.CoreWindow;                  var downState = CoreVirtualKeyStates.Down;                  bool menuKey = (coreWindow.GetKeyState(VirtualKey.Menu) & downState) == downState;                  bool controlKey = (coreWindow.GetKeyState(VirtualKey.Control) & downState) == downState;                  bool shiftKey = (coreWindow.GetKeyState(VirtualKey.Shift) & downState) == downState;                  bool noModifiers = !menuKey && !controlKey && !shiftKey;                  bool onlyAlt = menuKey && !controlKey && !shiftKey;                    if (((int)virtualKey == 166 && noModifiers) ||                      (virtualKey == VirtualKey.Left && onlyAlt))                  {                      // When the previous key or Alt+Left are pressed navigate back                      args.Handled = true;                      this.GoBack(this' new RoutedEventArgs());                  }                  else if (((int)virtualKey == 167 && noModifiers) ||                      (virtualKey == VirtualKey.Right && onlyAlt))                  {                      // When the next key or Alt+Right are pressed navigate forward                      args.Handled = true;                      this.GoForward(this' new RoutedEventArgs());                  }              }
Magic Number,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The following statement contains a magic number: double latitude = 47.627903;
Magic Number,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The following statement contains a magic number: double longitude = -122.143185;
Magic Number,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The following statement contains a magic number: try              {                  // We will wait 100 milliseconds and accept locations up to 48 hours old before we give up                  pos = await _geolocator.GetGeopositionAsync(new TimeSpan(48' 0' 0)' new TimeSpan(0' 0' 0' 0' 100)).AsTask(token);              }              catch (Exception)              {                  // this API can timeout' so no point breaking the code flow. Use                  // default latitutde and longitude and continue on.              }
Magic Number,Facebook.Scrumptious.Windows8.Views,LandingPage,C:\repos\facebook-csharp-sdk_facebook-windows8-sample\src\Facebook.Scrumptious.Windows8\Views\LandingPage.xaml.cs,selectRestaurantTextBox_Tapped,The following statement contains a magic number: try              {                  // We will wait 100 milliseconds and accept locations up to 48 hours old before we give up                  pos = await _geolocator.GetGeopositionAsync(new TimeSpan(48' 0' 0)' new TimeSpan(0' 0' 0' 0' 100)).AsTask(token);              }              catch (Exception)              {                  // this API can timeout' so no point breaking the code flow. Use                  // default latitutde and longitude and continue on.              }
