Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromInMultipleSqlQueries,The length of the statement  "            Assert.Equal("DELETE FROM Table WHERE (Column1 IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 158.
Long Statement,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromNotInMultipleSqlQueries,The length of the statement  "            Assert.Equal("DELETE FROM Table WHERE (Column1 NOT IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 162.
Long Statement,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInMultipleSqlQueries,The length of the statement  "            Assert.Equal("DELETE FROM Table WHERE (Column1 IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 158.
Long Statement,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInMultipleSqlQueries,The length of the statement  "            Assert.Equal("DELETE FROM Table WHERE (Column1 NOT IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 162.
Long Statement,MicroLite.Tests.Builder,RawWhereBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\RawWhereBuilderTests.cs,ApplyToEnsuresParametersAreRenumberedAndAllArgumentsAreAppended,The length of the statement  "                x => x.Where("ForeName = @p0 AND Surname = @p1 AND Created > @p2 AND LastLogin IS NOT NULL"' "Fred"' "Flintstone"' DateTime.Today)' " is 131.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectAverage,The length of the statement  "            Assert.Equal("SELECT AVG(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 127.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectAverageWithAlias,The length of the statement  "            Assert.Equal("SELECT AVG(CreditLimit) AS AverageCreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 134.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectAverageWithOtherColumn,The length of the statement  "            Assert.Equal("SELECT Id'AVG(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?) GROUP BY CustomerStatusId"' sqlQuery.CommandText); " is 156.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectAverageWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT AVG([CreditLimit]) AS CreditLimit FROM [Sales].[Customers] WHERE ([CustomerStatusId] = @p0)"' sqlQuery.CommandText); " is 137.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectCountWithOtherColumn,The length of the statement  "            Assert.Equal("SELECT CustomerStatusId'COUNT(Id) AS Id FROM Sales.Customers GROUP BY CustomerStatusId"' sqlQuery.CommandText); " is 125.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectCountWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT COUNT([Id]) AS Id FROM [Sales].[Customers] WHERE ([CustomerStatusId] = @p0)"' sqlQuery.CommandText); " is 121.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromType,The length of the statement  "            Assert.Equal("SELECT Created'CreditLimit'DateOfBirth'Id'Name'CustomerStatusId'Updated'Website FROM Sales.Customers"' sqlQuery.CommandText); " is 139.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromTypeWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Created]'[CreditLimit]'[DateOfBirth]'[Id]'[Name]'[CustomerStatusId]'[Updated]'[Website] FROM [Sales].[Customers]"' sqlQuery.CommandText); " is 159.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The length of the statement  "            Assert.Equal("SELECT Column1'Column2'Column3 FROM Table WHERE (Column1 = @p0 OR @p0 IS NULL) AND (Column2 BETWEEN @p1 AND @p2) OR (Column3 IN (@p3' @p4' @p5' @p6))"' sqlQuery.CommandText); " is 188.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMax,The length of the statement  "            Assert.Equal("SELECT MAX(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 127.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMaxWithAlias,The length of the statement  "            Assert.Equal("SELECT MAX(CreditLimit) AS MaxCreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMaxWithOtherColumn,The length of the statement  "            Assert.Equal("SELECT Id'MAX(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMaxWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT MAX([CreditLimit]) AS CreditLimit FROM [Sales].[Customers] WHERE ([CustomerStatusId] = @p0)"' sqlQuery.CommandText); " is 137.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMin,The length of the statement  "            Assert.Equal("SELECT MIN(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 127.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMinWithAlias,The length of the statement  "            Assert.Equal("SELECT MIN(CreditLimit) AS MinCreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMinWithOtherColumn,The length of the statement  "            Assert.Equal("SELECT Id'MIN(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectMinWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT MIN([CreditLimit]) AS CreditLimit FROM [Sales].[Customers] WHERE ([CustomerStatusId] = @p0)"' sqlQuery.CommandText); " is 137.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectSum,The length of the statement  "            Assert.Equal("SELECT SUM(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 127.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectSumWithAlias,The length of the statement  "            Assert.Equal("SELECT SUM(CreditLimit) AS SumCreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectSumWithOtherColumn,The length of the statement  "            Assert.Equal("SELECT Id'SUM(CreditLimit) AS CreditLimit FROM Sales.Customers WHERE (CustomerStatusId = ?)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectSumWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT SUM([CreditLimit]) AS CreditLimit FROM [Sales].[Customers] WHERE ([CustomerStatusId] = @p0)"' sqlQuery.CommandText); " is 137.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE ([Column2] = @p0) AND ([Column1] IN (@p1'@p2'@p3))"' sqlQuery.CommandText); " is 125.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column2 = ?) AND (Column1 IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 184.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column2 = ?) AND (Column1 IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 141.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQueryWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE (Column2 = @p0) AND ([Column1] IN (SELECT Id FROM Table WHERE Column = @p1))"' sqlQuery.CommandText); " is 151.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE ([Column2] = @p0) AND ([Column1] NOT IN (@p1'@p2'@p3))"' sqlQuery.CommandText); " is 129.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column2 = ?) AND (Column1 NOT IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 188.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column2 = ?) AND (Column1 NOT IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 145.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereColumnIsEqualToSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column1 = (SELECT Column2 FROM Table2 WHERE Column3 = ?))"' sqlQuery.CommandText); " is 129.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereColumnIsEqualToWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE ([Column1] = (SELECT Column2 FROM Table2 WHERE Column3 = @p0))"' sqlQuery.CommandText); " is 137.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereColumnIsNotEqualToSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column1 <> (SELECT Column2 FROM Table2 WHERE Column3 = ?))"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereColumnIsNotEqualToWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE ([Column1] <> (SELECT Column2 FROM Table2 WHERE Column3 = @p0))"' sqlQuery.CommandText); " is 138.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByHavingOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId'SUM(Total) AS Total FROM Invoices WHERE (OrderDate > ?) GROUP BY Total HAVING SUM(Total) > ? ORDER BY OrderDate DESC"' sqlQuery.CommandText); " is 173.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId'SUM(Total) AS Total FROM Invoices WHERE (OrderDate > ?) GROUP BY Total ORDER BY OrderDate DESC"' sqlQuery.CommandText); " is 151.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByOrderByWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [CustomerId]'SUM([Total]) AS Total FROM [Invoices] WHERE ([OrderDate] > @p0) GROUP BY [Total] ORDER BY [OrderDate] DESC"' sqlQuery.CommandText); " is 165.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInMultipleSqlQueries,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column1 IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 166.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column1 IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 123.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotExistsSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE NOT EXISTS (SELECT Id FROM Table WHERE Column = ?)"' sqlQuery.CommandText); " is 121.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInMultipleSqlQueries,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column1 NOT IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 170.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column1 NOT IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 127.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE ([Column2] = @p0) OR ([Column1] IN (@p1'@p2'@p3))"' sqlQuery.CommandText); " is 124.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQuery,The length of the statement  "            Assert.Equal("SELECT Column1 FROM Table WHERE (Column2 = ?) OR (Column1 IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 140.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQueryWithSqlCharacters,The length of the statement  "            Assert.Equal("SELECT [Column1] FROM [Table] WHERE (Column2 = @p0) OR ([Column1] IN (SELECT Id FROM Table WHERE Column = @p1))"' sqlQuery.CommandText); " is 150.
Long Statement,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SingleColumnPredicatesShouldAppendOperand,The length of the statement  "            Assert.Equal(@"SELECT Column1 FROM Table WHERE (Column2 IN (?'?)) AND (Column3 = ?) AND (Column4 > ?) AND (Column5 >= ?) AND (Column6 < ?) AND (Column7 <= ?) AND (Column8 LIKE ?) AND (Column9 <> ?) AND (Column10 IS NOT NULL) AND (Column11 IS NULL)"' sqlQuery.CommandText); " is 272.
Long Statement,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The length of the statement  "            Assert.Equal("UPDATE Table SET Column1 = ?'Column2 = ? WHERE (Column3 IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 181.
Long Statement,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The length of the statement  "            Assert.Equal("UPDATE Table SET Column1 = ?'Column2 = ? WHERE (Column3 IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 138.
Long Statement,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The length of the statement  "            Assert.Equal("UPDATE [Table] SET [Column1] = @p0'[Column2] = @p1 WHERE ([Id] = @p2) AND ([Column1] = @p3)"' sqlQuery.CommandText); " is 130.
Long Statement,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The length of the statement  "            Assert.Equal("UPDATE [Table] SET [Column1] = @p0'[Column2] = @p1 WHERE ([Id] = @p2) OR ([Column1] = @p3)"' sqlQuery.CommandText); " is 129.
Long Statement,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The length of the statement  "            Assert.Equal("UPDATE Table SET Column1 = ?'Column2 = ? WHERE (Column3 NOT IN ((SELECT Id FROM Table WHERE Column = ?)' (SELECT Id FROM Table WHERE Column = ?)))"' sqlQuery.CommandText); " is 185.
Long Statement,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The length of the statement  "            Assert.Equal("UPDATE Table SET Column1 = ?'Column2 = ? WHERE (Column3 NOT IN (SELECT Id FROM Table WHERE Column = ?))"' sqlQuery.CommandText); " is 142.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForFirebirdConnection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "FirebirdSql.Data.FirebirdClient"' It.IsNotNull<FirebirdSqlDialect>()' It.IsNotNull<FirebirdDbDriver>())' " is 161.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForFirebirdConnection_WithConnectionDetails_AndTheConfigureConnectionIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,AnArgumentNullExceptionIsThrown,The length of the statement  "                    () => ConfigurationExtensions.ForFirebirdConnection(null' "TestConnection"' "Data Source=."' "FirebirdSql.Data.FirebirdClient")); " is 129.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForMsSql2005Connection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "System.Data.SqlClient"' It.IsNotNull<MsSql2005Dialect>()' It.IsNotNull<MsSqlDbDriver>())' " is 146.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForMsSql2005Connection_WithConnectionDetails_AndTheConfigureConnectionIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,AnArgumentNullExceptionIsThrown,The length of the statement  "                    () => ConfigurationExtensions.ForMsSql2005Connection(null' "TestConnection"' "Data Source=."' "System.Data.SqlClient")); " is 120.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForMsSql2012Connection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "System.Data.SqlClient"' It.IsNotNull<MsSql2012Dialect>()' It.IsNotNull<MsSqlDbDriver>())' " is 146.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForMsSql2012Connection_WithConnectionDetails_AndTheConfigureConnectionIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,AnArgumentNullExceptionIsThrown,The length of the statement  "                    () => ConfigurationExtensions.ForMsSql2012Connection(null' "TestConnection"' "Data Source=."' "System.Data.SqlClient")); " is 120.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForMySqlConnection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "MySql.Data.MySqlClient"' It.IsNotNull<MySqlDialect>()' It.IsNotNull<MySqlDbDriver>())' " is 143.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForPostgreSqlConnection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "Npgsql"' It.IsNotNull<PostgreSqlDialect>()' It.IsNotNull<PostgreSqlDbDriver>())' " is 137.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForSQLiteConnection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "System.Data.SQLite"' It.IsNotNull<SQLiteDialect>()' It.IsNotNull<SQLiteDbDriver>())' " is 141.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForSqlServerCeConnection_WithConnectionDetails,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,ForConnectionIsCalledWithTheConnectionNameConnectionStringProviderNameAndAnInstanceOfTheSqlDialectAndDbDriver,The length of the statement  "                    x => x.ForConnection("TestConnection"' "Data Source=."' "System.Data.SqlServerCe.4.0"' It.IsNotNull<SqlServerCeDialect>()' It.IsNotNull<SqlServerCeDbDriver>())' " is 160.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForSqlServerCeConnection_WithConnectionDetails_AndTheConfigureConnectionIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,AnArgumentNullExceptionIsThrown,The length of the statement  "                    () => ConfigurationExtensions.ForSqlServerCeConnection(null' "TestConnection"' "Data Source=."' "System.Data.SqlServerCe.4.0")); " is 128.
Long Statement,MicroLite.Tests.Configuration,WhenCallingWithAttributeBasedMapping_WithNamedConnection,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,SetMappingConventionIsCalledWithAnInstanceOfAttributeMappingConvention,The length of the statement  "                this.mockConfigureExtensions.Verify(x => x.SetMappingConvention(It.IsNotNull<AttributeMappingConvention>())' Times.Once()); " is 123.
Long Statement,MicroLite.Tests.Configuration,WhenCallingWithConventionBasedMapping,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,SetMappingConventionIsCalledWithAnInstanceOfConventionMappingConvention,The length of the statement  "                this.mockConfigureExtensions.Verify(x => x.SetMappingConvention(It.IsNotNull<ConventionMappingConvention>())' Times.Once()); " is 124.
Long Statement,MicroLite.Tests.Configuration,WhenCallingWithConventionBasedMapping_AndTheConfigureExtensionsIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,AnArgumentNullExceptionIsThrown,The length of the statement  "                var exception = Assert.Throws<ArgumentNullException>(() => ConfigurationExtensions.WithConventionBasedMapping(null' new ConventionMappingSettings())); " is 150.
Long Statement,MicroLite.Tests.Configuration,WhenCallingWithConventionBasedMapping_AndTheSettingsAreNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\ConfigurationExtensionsTests.cs,AnArgumentNullExceptionIsThrown,The length of the statement  "                var exception = Assert.Throws<ArgumentNullException>(() => ConfigurationExtensions.WithConventionBasedMapping(new Mock<IConfigureExtensions>().Object' null)); " is 158.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForConnection_WithConnectionDetails_AndTheConnectionNameIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\FluentConfigurationTests.cs,AnArgumentNullExceptionShouldBeThrown,The length of the statement  "                    () => fluentConfiguration.ForConnection(null' @"Data Source=.\;Initial Catalog=Northwind;"' "System.Data.SqlClient"' new Mock<ISqlDialect>().Object' new Mock<IDbDriver>().Object)); " is 180.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForConnection_WithConnectionDetails_AndTheConnectionStringIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\FluentConfigurationTests.cs,AnArgumentNullExceptionShouldBeThrown,The length of the statement  "                    () => fluentConfiguration.ForConnection("SqlConnection"' null' "System.Data.SqlClient"' new Mock<ISqlDialect>().Object' new Mock<IDbDriver>().Object)); " is 151.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForConnection_WithConnectionDetails_AndTheDbDriverIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\FluentConfigurationTests.cs,AnArgumentNullExceptionShouldBeThrown,The length of the statement  "                    () => fluentConfiguration.ForConnection("SqlConnection"' @"Data Source=.\;Initial Catalog=Northwind;"' "System.Data.SqlClient"' new Mock<ISqlDialect>().Object' null)); " is 167.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForConnection_WithConnectionDetails_AndTheProviderNameIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\FluentConfigurationTests.cs,AnArgumentNullExceptionShouldBeThrown,The length of the statement  "                    () => fluentConfiguration.ForConnection("SqlConnection"' @"Data Source=.\;Initial Catalog=Northwind;"' null' new Mock<ISqlDialect>().Object' new Mock<IDbDriver>().Object)); " is 172.
Long Statement,MicroLite.Tests.Configuration,WhenCallingForConnection_WithConnectionDetails_AndTheSqlDialectIsNull,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Configuration\FluentConfigurationTests.cs,AnArgumentNullExceptionShouldBeThrown,The length of the statement  "                    () => fluentConfiguration.ForConnection("SqlConnection"' @"Data Source=.\;Initial Catalog=Northwind;"' "System.Data.SqlClient"' null' new Mock<IDbDriver>().Object)); " is 165.
Long Statement,MicroLite.Tests.Core,WhenTheTypeIsAnXDocument,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\IncludeManyTests.cs,ValuesShouldContainTheResultOfTheTypeConversion,The length of the statement  "                Assert.Equal(XDocument.Parse("<xml><element>text</element></xml>").ToString(SaveOptions.DisableFormatting)' this.include.Values[0].ToString(SaveOptions.DisableFormatting)); " is 172.
Long Statement,MicroLite.Tests.Core,WhenTheTypeIsAnXDocument,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\IncludeManyTests.cs,ValuesShouldContainTheResultOfTheTypeConversion,The length of the statement  "                Assert.Equal(XDocument.Parse("<xml><element>text</element></xml>").ToString(SaveOptions.DisableFormatting)' this.include.Value.ToString(SaveOptions.DisableFormatting)); " is 168.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,MicroLiteExceptionsCaughtByExecutePendingQueriesShouldNotBeWrappedInAnotherMicroLiteException,The length of the statement  "            mockDbDriver.Setup(x => x.BuildCommand(It.IsNotNull<IDbCommand>()' It.IsNotNull<SqlQuery>())).Throws<MicroLiteException>(); " is 123.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithOnePerPage,The length of the statement  "            var pagedQuery = new SqlQuery("SELECT * FROM (SELECT *' ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS Customers"); " is 151.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithOnePerPage,The length of the statement  "            var combinedQuery = new SqlQuery("SELECT COUNT(*) FROM TABLE;SELECT Id FROM (SELECT *' ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS Customers"); " is 182.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithTwentyFivePerPage,The length of the statement  "            var pagedQuery = new SqlQuery("SELECT * FROM (SELECT *' ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS Customers"); " is 151.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithTwentyFivePerPage,The length of the statement  "            var combinedQuery = new SqlQuery("SELECT COUNT(*) FROM TABLE;SELECT * FROM (SELECT *' ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS Customers"); " is 181.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The length of the statement  "            var pagedQuery = new SqlQuery("SELECT * FROM (SELECT *' ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS Customers"); " is 151.
Long Statement,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The length of the statement  "            var combinedQuery = new SqlQuery("SELECT COUNT(*) FROM TABLE;SELECT * FROM (SELECT *' ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS Customers"); " is 181.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Id\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 206.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5) RETURNING Id"' sqlQuery.CommandText); " is 208.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Id\"'\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (GEN_ID(Customer_Id_Sequence' 1)'@p0'@p1'@p2'@p3'@p4'@p5) RETURNING Id"' sqlQuery.CommandText); " is 247.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ROWS @p0 TO @p1"' paged.CommandText); " is 121.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE (CustomerStatusId = @p0 AND DoB > @p1) ORDER BY Name ASC' DoB ASC ROWS @p2 TO @p3"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC"); " is 125.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC ROWS @p0 TO @p1"' paged.CommandText); " is 145.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ROWS @p0 TO @p1"' paged.CommandText); " is 121.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ROWS @p0 TO @p1"' paged.CommandText); " is 121.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC ROWS @p1 TO @p2"' paged.CommandText); " is 168.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC ROWS @p1 TO @p2"' paged.CommandText); " is 168.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0"' CustomerStatus.Active); " is 153.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ROWS @p1 TO @p2"' paged.CommandText); " is 150.
Long Statement,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE \"Sales\".\"Customers\" SET \"CreditLimit\" = @p0'\"DateOfBirth\" = @p1'\"Name\" = @p2'\"CustomerStatusId\" = @p3'\"Updated\" = @p4'\"Website\" = @p5 WHERE (\"Id\" = @p6)"' sqlQuery.CommandText); " is 216.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO [Sales].[Customers] ([Created]'[CreditLimit]'[DateOfBirth]'[Id]'[Name]'[CustomerStatusId]'[Website]) VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 188.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO [Sales].[Customers] ([Created]'[CreditLimit]'[DateOfBirth]'[Name]'[CustomerStatusId]'[Website]) VALUES (@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 179.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT CustomerId' Name' DoB' StatusId'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 260.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageNonQualifiedWildcardQuery,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT *'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM Customers) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 230.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Created]'[CreditLimit]'[DateOfBirth]'[Id]'[Name]'[CustomerStatusId]'[Updated]'[Website]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Customers] WHERE (Name LIKE @p0)) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p1 AND MicroLiteRowNumber <= @p2)"' paged.CommandText); " is 341.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Created]'[CreditLimit]'[DateOfBirth]'[Id]'[Name]'[CustomerStatusId]'[Updated]'[Website]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Customers] WHERE (Name LIKE @p0) AND ([SourceId] IN (SELECT SourceId FROM Source WHERE Status = @p1))) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p2 AND MicroLiteRowNumber <= @p3)"' paged.CommandText); " is 410.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoin,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Invoices].[InvoiceId] FROM [Customers] INNER JOIN [Invoices] ON [Invoices].[CustomerId] = [Customers].[CustomerId]"); " is 180.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoin,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Invoices].[InvoiceId]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Customers] INNER JOIN [Invoices] ON [Invoices].[CustomerId] = [Customers].[CustomerId]) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 355.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoinWithAlias,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId] AS CustId' [Invoices].[InvoiceId] FROM [Customers] INNER JOIN [Invoices] ON [Invoices].[CustomerId] = [Customers].[CustomerId]"); " is 190.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoinWithAlias,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId] AS CustId' [Invoices].[InvoiceId]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Customers] INNER JOIN [Invoices] ON [Invoices].[CustomerId] = [Customers].[CustomerId]) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 365.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId]'ROW_NUMBER() OVER(ORDER BY [Customers].[Name] ASC' [Customers].[DoB] ASC) AS MicroLiteRowNumber FROM [Sales].[Customers] WHERE ([Customers].[StatusId] = @p0 AND [Customers].[DoB] > @p1)) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p2 AND MicroLiteRowNumber <= @p3)"' paged.CommandText); " is 423.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [CustomerId]' [Name]' [DoB]' [StatusId] FROM [dbo].[Customers] ORDER BY [CustomerId] ASC"); " is 127.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [CustomerId]' [Name]' [DoB]' [StatusId]'ROW_NUMBER() OVER(ORDER BY [CustomerId] ASC) AS MicroLiteRowNumber FROM [dbo].[Customers]) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 279.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId] FROM [Sales].[Customers]"); " is 151.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Sales].[Customers]) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 326.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId] FROM [Sales].[Customers]"); " is 151.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Sales].[Customers]) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p0 AND MicroLiteRowNumber <= @p1)"' paged.CommandText); " is 326.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId] FROM [Sales].[Customers] WHERE [Customers].[StatusId] = @p0 ORDER BY [Customers].[Name] ASC"' CustomerStatus.Active); " is 241.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId]'ROW_NUMBER() OVER(ORDER BY [Customers].[Name] ASC) AS MicroLiteRowNumber FROM [Sales].[Customers] WHERE [Customers].[StatusId] = @p0) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p1 AND MicroLiteRowNumber <= @p2)"' paged.CommandText); " is 370.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId]'ROW_NUMBER() OVER(ORDER BY [Customers].[Name] ASC) AS MicroLiteRowNumber FROM [Sales].[Customers] WHERE [Customers].[StatusId] = @p0) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p1 AND MicroLiteRowNumber <= @p2)"' paged.CommandText); " is 370.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId] FROM [Sales].[Customers] WHERE [Customers].[StatusId] = @p0"' CustomerStatus.Active); " is 209.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            Assert.Equal("SELECT * FROM (SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId]'ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS MicroLiteRowNumber FROM [Sales].[Customers] WHERE [Customers].[StatusId] = @p0) AS [MicroLitePagedResults] WHERE (MicroLiteRowNumber >= @p1 AND MicroLiteRowNumber <= @p2)"' paged.CommandText); " is 361.
Long Statement,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE [Sales].[Customers] SET [CreditLimit] = @p0'[DateOfBirth] = @p1'[Name] = @p2'[CustomerStatusId] = @p3'[Updated] = @p4'[Website] = @p5 WHERE ([Id] = @p6)"' sqlQuery.CommandText); " is 198.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO [Sales].[Customers] ([Created]'[CreditLimit]'[DateOfBirth]'[Id]'[Name]'[CustomerStatusId]'[Website]) VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 188.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO [Sales].[Customers] ([Created]'[CreditLimit]'[DateOfBirth]'[Name]'[CustomerStatusId]'[Website]) VALUES (@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 179.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The length of the statement  "            Assert.Equal("DECLARE @@id tinyint;SELECT @@id = NEXT VALUE FOR CustomerWithByteId_Id_Sequence;INSERT INTO [Sales].[CustomerWithByteIds] ([Id]'[Created]'[CreditLimit]'[DateOfBirth]'[Name]'[CustomerStatusId]'[Website]) VALUES (@@id'@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 280.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The length of the statement  "            Assert.Equal("DECLARE @@id smallint;SELECT @@id = NEXT VALUE FOR CustomerWithShortId_Id_Sequence;INSERT INTO [Sales].[CustomerWithShortIds] ([Id]'[Created]'[CreditLimit]'[DateOfBirth]'[Name]'[CustomerStatusId]'[Website]) VALUES (@@id'@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 283.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The length of the statement  "            Assert.Equal("DECLARE @@id int;SELECT @@id = NEXT VALUE FOR Customer_Id_Sequence;INSERT INTO [Sales].[Customers] ([Id]'[Created]'[CreditLimit]'[DateOfBirth]'[Name]'[CustomerStatusId]'[Website]) VALUES (@@id'@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 256.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The length of the statement  "            Assert.Equal("DECLARE @@id bigint;SELECT @@id = NEXT VALUE FOR CustomerWithLongId_Id_Sequence;INSERT INTO [Sales].[CustomerWithLongIds] ([Id]'[Created]'[CreditLimit]'[DateOfBirth]'[Name]'[CustomerStatusId]'[Website]) VALUES (@@id'@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 279.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageAppendsOrderByGetDateIfNoOrderByClause,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CURRENT_TIMESTAMP OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 173.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId"); " is 121.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedWildcardQuery,The length of the statement  "            Assert.Equal("SELECT * FROM Customers ORDER BY CustomerId OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 120.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE (CustomerStatusId = @p0 AND DoB > @p1) ORDER BY Name ASC' DoB ASC OFFSET @p2 ROWS FETCH NEXT @p3 ROWS ONLY"' paged.CommandText); " is 218.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC"); " is 125.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 170.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC OFFSET @p1 ROWS FETCH NEXT @p2 ROWS ONLY"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC OFFSET @p1 ROWS FETCH NEXT @p2 ROWS ONLY"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC OFFSET @p1 ROWS FETCH NEXT @p2 ROWS ONLY"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO `Sales`.`Customers` (`Created`'`CreditLimit`'`DateOfBirth`'`Id`'`Name`'`CustomerStatusId`'`Website`) VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 188.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO `Sales`.`Customers` (`Created`'`CreditLimit`'`DateOfBirth`'`Name`'`CustomerStatusId`'`Website`) VALUES (@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 179.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE (CustomerStatusId = @p0 AND DoB > @p1) ORDER BY Name ASC' DoB ASC LIMIT @p2'@p3"' paged.CommandText); " is 191.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC"); " is 125.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC LIMIT @p0'@p1"' paged.CommandText); " is 143.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC LIMIT @p1'@p2"' paged.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC LIMIT @p1'@p2"' paged.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0"' CustomerStatus.Active); " is 153.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 LIMIT @p1'@p2"' paged.CommandText); " is 148.
Long Statement,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE `Sales`.`Customers` SET `CreditLimit` = @p0'`DateOfBirth` = @p1'`Name` = @p2'`CustomerStatusId` = @p3'`Updated` = @p4'`Website` = @p5 WHERE (`Id` = @p6)"' sqlQuery.CommandText); " is 198.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Id\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 206.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 195.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers LIMIT @p0 OFFSET @p1"' paged.CommandText); " is 126.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE (CustomerStatusId = @p0 AND DoB > @p1) ORDER BY Name ASC' DoB ASC LIMIT @p2 OFFSET @p3"' paged.CommandText); " is 198.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC"); " is 125.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC LIMIT @p0 OFFSET @p1"' paged.CommandText); " is 150.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers LIMIT @p0 OFFSET @p1"' paged.CommandText); " is 126.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers LIMIT @p0 OFFSET @p1"' paged.CommandText); " is 126.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC LIMIT @p1 OFFSET @p2"' paged.CommandText); " is 173.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC LIMIT @p1 OFFSET @p2"' paged.CommandText); " is 173.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0"' CustomerStatus.Active); " is 153.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 LIMIT @p1 OFFSET @p2"' paged.CommandText); " is 155.
Long Statement,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE \"Sales\".\"Customers\" SET \"CreditLimit\" = @p0'\"DateOfBirth\" = @p1'\"Name\" = @p2'\"CustomerStatusId\" = @p3'\"Updated\" = @p4'\"Website\" = @p5 WHERE (\"Id\" = @p6)"' sqlQuery.CommandText); " is 216.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,CountQueryWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [CustomerId]' [Name]' [DoB]' [StatusId] FROM [dbo].[Customers] ORDER BY [CustomerId] ASC"); " is 127.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,CountQueryWithWhereAndOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId] FROM [Sales].[Customers] WHERE [Customers].[StatusId] = ? ORDER BY [Customers].[Name] ASC"' CustomerStatus.Active); " is 239.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,CountQueryWithWhereButNoOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT [Customers].[CustomerId]' [Customers].[Name]' [Customers].[DoB]' [Customers].[StatusId] FROM [Sales].[Customers] WHERE [Customers].[StatusId] = ?"' CustomerStatus.Active); " is 207.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO Sales.Customers (Created'CreditLimit'DateOfBirth'Id'Name'CustomerStatusId'Website) VALUES (?'?'?'?'?'?'?)"' sqlQuery.CommandText); " is 156.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO Sales.Customers (Created'CreditLimit'DateOfBirth'Id'Name'CustomerStatusId'Website) VALUES (?'?'?'?'?'?'?)"' sqlQuery2.CommandText); " is 157.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO Sales.Customers (Created'CreditLimit'DateOfBirth'Name'CustomerStatusId'Website) VALUES (?'?'?'?'?'?)"' sqlQuery.CommandText); " is 151.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO Sales.Customers (Created'CreditLimit'DateOfBirth'Name'CustomerStatusId'Website) VALUES (?'?'?'?'?'?)"' sqlQuery2.CommandText); " is 152.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The length of the statement  "            Assert.Equal("INSERT INTO Sales.Customers (Created'CreditLimit'DateOfBirth'Name'CustomerStatusId'Website) VALUES (?'?'?'?'?'?)"' sqlQuery.CommandText); " is 151.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The length of the statement  "            Assert.Equal("INSERT INTO Sales.Customers (Created'CreditLimit'DateOfBirth'Name'CustomerStatusId'Website) VALUES (?'?'?'?'?'?)"' sqlQuery2.CommandText); " is 152.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,SelectByIdentifierQuery,The length of the statement  "            Assert.Equal("SELECT Created'CreditLimit'DateOfBirth'Id'Name'CustomerStatusId'Updated'Website FROM Sales.Customers WHERE (Id = ?)"' sqlQuery.CommandText); " is 154.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,SelectByIdentifierQuery,The length of the statement  "            Assert.Equal("SELECT Created'CreditLimit'DateOfBirth'Id'Name'CustomerStatusId'Updated'Website FROM Sales.Customers WHERE (Id = ?)"' sqlQuery2.CommandText); " is 155.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE Sales.Customers SET CreditLimit = ?'DateOfBirth = ?'Name = ?'CustomerStatusId = ?'Updated = ?'Website = ? WHERE (Id = ?)"' sqlQuery.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE Sales.Customers SET CreditLimit = ?'DateOfBirth = ?'Name = ?'CustomerStatusId = ?'Updated = ?'Website = ? WHERE (Id = ?)"' sqlQuery2.CommandText); " is 167.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Id\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 206.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 195.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE (CustomerStatusId = @p0 AND DoB > @p1) ORDER BY Name ASC' DoB ASC LIMIT @p2'@p3"' paged.CommandText); " is 191.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC"); " is 125.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC LIMIT @p0'@p1"' paged.CommandText); " is 143.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC LIMIT @p1'@p2"' paged.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC LIMIT @p1'@p2"' paged.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0"' CustomerStatus.Active); " is 153.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereButNoOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 LIMIT @p1'@p2"' paged.CommandText); " is 148.
Long Statement,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE \"Sales\".\"Customers\" SET \"CreditLimit\" = @p0'\"DateOfBirth\" = @p1'\"Name\" = @p2'\"CustomerStatusId\" = @p3'\"Updated\" = @p4'\"Website\" = @p5 WHERE (\"Id\" = @p6)"' sqlQuery.CommandText); " is 216.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Id\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5'@p6)"' sqlQuery.CommandText); " is 206.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The length of the statement  "            Assert.Equal("INSERT INTO \"Sales\".\"Customers\" (\"Created\"'\"CreditLimit\"'\"DateOfBirth\"'\"Name\"'\"CustomerStatusId\"'\"Website\") VALUES (@p0'@p1'@p2'@p3'@p4'@p5)"' sqlQuery.CommandText); " is 195.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageAppendsOrderByGetDateIfNoOrderByClause,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY GETDATE() OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 165.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId"); " is 121.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedQuery,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 166.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedWildcardQuery,The length of the statement  "            Assert.Equal("SELECT * FROM Customers ORDER BY CustomerId OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 120.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE (CustomerStatusId = @p0 AND DoB > @p1) ORDER BY Name ASC' DoB ASC OFFSET @p2 ROWS FETCH NEXT @p3 ROWS ONLY"' paged.CommandText); " is 218.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC"); " is 125.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereButOrderBy,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ORDER BY CustomerId ASC OFFSET @p0 ROWS FETCH NEXT @p1 ROWS ONLY"' paged.CommandText); " is 170.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ROWS @p0 TO @p1"' paged.CommandText); " is 121.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers ROWS @p0 TO @p1"' paged.CommandText); " is 121.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC OFFSET @p1 ROWS FETCH NEXT @p2 ROWS ONLY"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByMultiLine,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC OFFSET @p1 ROWS FETCH NEXT @p2 ROWS ONLY"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The length of the statement  "            var sqlQuery = new SqlQuery("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC"' CustomerStatus.Active); " is 171.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The length of the statement  "            Assert.Equal("SELECT CustomerId' Name' DateOfBirth' CustomerStatusId FROM Customers WHERE CustomerStatusId = @p0 ORDER BY Name ASC OFFSET @p1 ROWS FETCH NEXT @p2 ROWS ONLY"' paged.CommandText); " is 193.
Long Statement,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The length of the statement  "            Assert.Equal("UPDATE \"Sales\".\"Customers\" SET \"CreditLimit\" = @p0'\"DateOfBirth\" = @p1'\"Name\" = @p2'\"CustomerStatusId\" = @p3'\"Updated\" = @p4'\"Website\" = @p5 WHERE (\"Id\" = @p6)"' sqlQuery.CommandText); " is 216.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT \"Column1\"' \"Column2\"' \"Column3\" FROM \"Table1\" WHERE \"Column1\" = ? AND \"Column2\" > ?;\r\nSELECT \"Column1\"' \"Column2\" FROM \"Table2\" WHERE (\"Column1\" = ? OR ? IS NULL) AND \"Column2\" < ?"' " is 214.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT \"Column1\"' \"Column2\"' \"Column3\" FROM \"Table1\" WHERE \"Column1\" = ? AND \"Column2\" > ?;\r\nSELECT \"Column1\"' \"Column2\" FROM \"Table2\" WHERE (\"Column1\" = ? OR ? IS NULL) AND \"Column2\" < ?"' " is 214.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT \"Column1\"' \"Column2\"' \"Column3\" FROM \"Table1\" WHERE \"Column1\" = @p0 AND \"Column2\" > @p1;\r\nSELECT \"Column1\"' \"Column2\" FROM \"Table2\" WHERE (\"Column1\" = @p2 OR @p2 IS NULL) AND \"Column2\" < @p3"' " is 224.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1;\r\nSELECT [Column_1]' [Column_2] FROM [dbo].[Table_2] WHERE ([Column_1] = @p2 OR @p2 IS NULL) AND [Column_2] < @p3"' " is 219.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1;\r\nSELECT `Column_1`' `Column_2` FROM `dbo`.`Table_2` WHERE (`Column_1` = @p2 OR @p2 IS NULL) AND `Column_2` < @p3"' " is 219.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheParameterNamesForTheStoredProcedureShouldNotBeRenamed,The length of the statement  "                    "SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1;\r\nEXEC CustomersByStatus @StatusId"' " is 140.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheParameterNamesForTheStoredProcedureShouldNotBeRenamed,The length of the statement  "                    "SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1;\r\nCALL CustomersByStatus @StatusId"' " is 140.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheParameterNamesForTheStoredProcedureShouldNotBeRenamed,The length of the statement  "                    "SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1;\r\nEXEC CustomersByStatus @StatusId"' " is 140.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheParameterNamesForTheStoredProcedureShouldNotBeRenamed,The length of the statement  "                    "SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1;\r\nCALL CustomersByStatus @StatusId"' " is 140.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1;\r\nSELECT [Column_1]' [Column_2] FROM [dbo].[Table_2] WHERE ([Column_1] = @p2 OR @p2 IS NULL) AND [Column_2] < @p3"' " is 219.
Long Statement,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedCommandTextShouldBeSeparatedUsingTheSelectSeparator,The length of the statement  "                    "SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1;\r\nSELECT `Column_1`' `Column_2` FROM `dbo`.`Table_2` WHERE (`Column_1` = @p2 OR @p2 IS NULL) AND `Column_2` < @p3"' " is 219.
Long Statement,MicroLite.Tests.Mapping.Attributes,WhenCallingCreateObjectInfoAndTheTypeHasNoTableAttribute,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,AMicroLiteExceptionIsThrown,The length of the statement  "                Assert.Equal(ExceptionMessages.AttributeMappingConvention_NoTableAttribute.FormatWith(typeof(CustomerWithNoTableAttribute).FullName)' exception.Message); " is 153.
Long Statement,MicroLite.Tests.Mapping,ColumnInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ColumnInfoTests.cs,ConstructorSetsPropertyValues,The length of the statement  "            var columnInfo = new ColumnInfo(columnName' dbType' propertyInfo' isIdentifier' allowInsert' allowUpdate' sequenceName); " is 120.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheCreatedColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Created")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Created").PropertyInfo); " is 141.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheCreditLimitColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("CreditLimit")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "CreditLimit").PropertyInfo); " is 149.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheDateOfBirthColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("DateOfBirth")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "DateOfBirth").PropertyInfo); " is 149.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheIdColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Id")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Id").PropertyInfo); " is 131.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheNameColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Name")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Name").PropertyInfo); " is 135.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheStatusColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Status")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "CustomerStatusId").PropertyInfo); " is 149.
Long Statement,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheUpdatedColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Updated")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Updated").PropertyInfo); " is 141.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheCreatedColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Created")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Created").PropertyInfo); " is 141.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheCreditLimitColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("CreditLimit")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "CreditLimit").PropertyInfo); " is 149.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheDateOfBirthColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("DateOfBirth")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "DateOfBirth").PropertyInfo); " is 149.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheIdColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Id")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Id").PropertyInfo); " is 131.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheNameColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Name")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Name").PropertyInfo); " is 135.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheStatusColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Status")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "CustomerStatusId").PropertyInfo); " is 149.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheUpdatedColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Updated")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Updated").PropertyInfo); " is 141.
Long Statement,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,TheWebsiteColumnShouldBeSet,The length of the statement  "                Assert.Equal(typeof(Customer).GetProperty("Website")' this.objectInfo.TableInfo.Columns.Single(x => x.ColumnName == "Website").PropertyInfo); " is 141.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetIdentifierValue_ThrowsMappingException_IfInstanceIsIncorrectType,The length of the statement  "                string.Format(ExceptionMessages.PocoObjectInfo_TypeMismatch' typeof(CustomerWithGuidIdentifier).Name' objectInfo.ForType.Name)' " is 127.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetIdentifierValueThrowsMicroLiteException_WhenNoIdentifierMapped,The length of the statement  "            Assert.Equal(ExceptionMessages.PocoObjectInfo_NoIdentifierColumn.FormatWith("Sales"' "CustomerWithNoIdentifiers")' exception.Message); " is 134.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ThrowsMappingException_IfInstanceIsIncorrectType,The length of the statement  "                string.Format(ExceptionMessages.PocoObjectInfo_TypeMismatch' typeof(CustomerWithGuidIdentifier).Name' objectInfo.ForType.Name)' " is 127.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValuesThrowsMicroLiteException_WhenNoIdentifierMapped,The length of the statement  "            Assert.Equal(ExceptionMessages.PocoObjectInfo_NoIdentifierColumn.FormatWith("Sales"' "CustomerWithNoIdentifiers")' exception.Message); " is 134.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ThrowsMappingException_IfInstanceIsIncorrectType,The length of the statement  "                string.Format(ExceptionMessages.PocoObjectInfo_TypeMismatch' typeof(CustomerWithGuidIdentifier).Name' objectInfo.ForType.Name)' " is 127.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValuesThrowsMicroLiteException_WhenNoIdentifierMapped,The length of the statement  "            Assert.Equal(ExceptionMessages.PocoObjectInfo_NoIdentifierColumn.FormatWith("Sales"' "CustomerWithNoIdentifiers")' exception.Message); " is 134.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,HasDefaultIdentifierValue_ThrowsMappingException_IfInstanceIsIncorrectType,The length of the statement  "                string.Format(ExceptionMessages.PocoObjectInfo_TypeMismatch' typeof(CustomerWithGuidIdentifier).Name' objectInfo.ForType.Name)' " is 127.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,HasDefaultIdentifierValueThrowsMicroLiteException_WhenNoIdentifierMapped,The length of the statement  "            Assert.Equal(ExceptionMessages.PocoObjectInfo_NoIdentifierColumn.FormatWith("Sales"' "CustomerWithNoIdentifiers")' exception.Message); " is 134.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValue_ThrowsMappingException_IfInstanceIsIncorrectType,The length of the statement  "                string.Format(ExceptionMessages.PocoObjectInfo_TypeMismatch' typeof(CustomerWithGuidIdentifier).Name' objectInfo.ForType.Name)' " is 127.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValueThrowsMicroLiteException_WhenNoIdentifierMapped,The length of the statement  "            Assert.Equal(ExceptionMessages.PocoObjectInfo_NoIdentifierColumn.FormatWith("Sales"' "CustomerWithNoIdentifiers")' exception.Message); " is 134.
Long Statement,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,VerifyInstanceForInsertThrowsMicroLiteException_WhenNoIdentifierMapped,The length of the statement  "            Assert.Equal(ExceptionMessages.PocoObjectInfo_NoIdentifierColumn.FormatWith("Sales"' "CustomerWithNoIdentifiers")' exception.Message); " is 134.
Long Statement,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorThrowsArgumentNullExceptionForNullColumns,The length of the statement  "                () => new TableInfo(columns: null' identifierStrategy: IdentifierStrategy.DbGenerated' name: "Customers"' schema: "Sales")); " is 124.
Long Statement,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorThrowsArgumentNullExceptionForNullName,The length of the statement  "                () => new TableInfo(columns: new ColumnInfo[0]' identifierStrategy: IdentifierStrategy.DbGenerated' name: null' schema: "Sales")); " is 130.
Long Statement,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorThrowsMappingExceptionIfIdentifierStrategySequenceButSequenceNameIsNull,The length of the statement  "                () => new TableInfo(columns: columns' identifierStrategy: IdentifierStrategy.Sequence' name: "Customers"' schema: "Sales")); " is 124.
Long Statement,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorThrowsMappingExceptionIfMultipleColumnsWithSameName,The length of the statement  "                () => new TableInfo(columns: columns' identifierStrategy: IdentifierStrategy.DbGenerated' name: "Customers"' schema: "Sales")); " is 127.
Long Statement,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorThrowsMappingExceptionMultipleColumnsAreIdentifierColumn,The length of the statement  "                () => new TableInfo(columns: columns' identifierStrategy: IdentifierStrategy.DbGenerated' name: "Customers"' schema: "Sales")); " is 127.
Long Statement,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorThrowsMappingExceptionMultipleColumnsAreIdentifierColumn,The length of the statement  "            Assert.Equal(ExceptionMessages.TableInfo_MultipleIdentifierColumns.FormatWith("Sales"' "Customers")' exception.Message); " is 120.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetFirstParameterPositionWithAQuotedStringAndParameters,The length of the statement  "            var position = SqlUtility.GetFirstParameterPosition("SELECT 1 FROM table WHERE column1 <> '' AND id = @p0 AND column2 <> ''"); " is 126.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithAQuotedStringAndParameters,The length of the statement  "            var parameterNames = SqlUtility.GetParameterNames("SELECT 1 FROM table WHERE column1 <> '' AND id = @p0 AND column2 <> ''"); " is 124.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithAtPrefix,The length of the statement  "            var parameterNames = SqlUtility.GetParameterNames("SELECT * FROM TABLE WHERE Col1 = @p0 AND (Col2 = @p1 OR @p1 IS NULL)"); " is 122.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var parameterNames = SqlUtility.GetParameterNames("SELECT * FROM TABLE WHERE Col1 = @param0 AND (Col2 = @param1 OR @param1 IS NULL)"); " is 134.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithColonPrefix,The length of the statement  "            var parameterNames = SqlUtility.GetParameterNames("SELECT * FROM TABLE WHERE Col1 = :p0 AND (Col2 = :p1 OR :p1 IS NULL)"); " is 122.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var parameterNames = SqlUtility.GetParameterNames("SELECT * FROM TABLE WHERE Col1 = :param0 AND (Col2 = :param1 OR :param1 IS NULL)"); " is 134.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithTwentyTwoNamedParameters,The length of the statement  "            var parameterNames = SqlUtility.GetParameterNames("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN (@p2'@p3'@p4'@p5'@p6'@p7'@p8'@p9'@p10'@p11'@p12'@p13'@p14'@p15'@p16'@p17'@p18'@p19'@p20'@p21)"); " is 231.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = @p0 OR @p0 IS NULL) AND Column2 = @p1"' totalArgumentCount: 2); " is 123.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithAtPrefix_AdditionalParameters,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = @p0 OR @p0 IS NULL) AND Column2 = @p1"' totalArgumentCount: 12); " is 124.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = @param0 OR @param0 IS NULL) AND Column2 = @param1"' totalArgumentCount: 2); " is 135.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = :p0 OR :p0 IS NULL) AND Column2 = :p1"' totalArgumentCount: 2); " is 123.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = :param0 OR :param0 IS NULL) AND Column2 = :param1"' totalArgumentCount: 2); " is 135.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21)"' totalArgumentCount: 22); " is 271.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoAtPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21)"' commandText); " is 225.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] <= @param1 AND [Column3] IN(@param2' @param3' @param4' @param5' @param6' @param7' @param8' @param9' @param10' @param11' @param12' @param13' @param14' @param15' @param16' @param17' @param18' @param19' @param20' @param21)"' totalArgumentCount: 22); " is 359.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] <= @param1 AND [Column3] IN(@param2' @param3' @param4' @param5' @param6' @param7' @param8' @param9' @param10' @param11' @param12' @param13' @param14' @param15' @param16' @param17' @param18' @param19' @param20' @param21)"' commandText); " is 313.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21)"' totalArgumentCount: 22); " is 271.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoColonPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21)"' commandText); " is 225.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :param0 AND [Column2] <= :param1 AND [Column3] IN(:param2' :param3' :param4' :param5' :param6' :param7' :param8' :param9' :param10' :param11' :param12' :param13' :param14' :param15' :param16' :param17' :param18' :param19' :param20' :param21)"' totalArgumentCount: 22); " is 359.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :param0 AND [Column2] <= :param1 AND [Column3] IN(:param2' :param3' :param4' :param5' :param6' :param7' :param8' :param9' :param10' :param11' :param12' :param13' :param14' :param15' :param16' :param17' :param18' :param19' :param20' :param21)"' commandText); " is 313.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWith10ExistingAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] = @p2"' totalArgumentCount: 13); " is 162.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWith10ExistingColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] = :p2"' totalArgumentCount: 13); " is 162.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = @p0 OR @p0 IS NULL) AND Column2 = @p1"' totalArgumentCount: 4); " is 123.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = @param0 OR @param0 IS NULL) AND Column2 = @param1"' totalArgumentCount: 4); " is 135.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = :p0 OR :p0 IS NULL) AND Column2 = :p1"' totalArgumentCount: 4); " is 123.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("(Column1 = :param0 OR :param0 IS NULL) AND Column2 = :param1"' totalArgumentCount: 4); " is 135.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsEndOfLineAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20) AND [Column4] = @p21"' totalArgumentCount: 25); " is 286.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsEndOfLineAtPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @p3 AND [Column2] <= @p4 AND [Column3] IN(@p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21' @p22' @p23) AND [Column4] = @p24"' commandText); " is 243.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsEndOfLineColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20) AND [Column4] = :p21"' totalArgumentCount: 25); " is 286.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsEndOfLineColonPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :p3 AND [Column2] <= :p4 AND [Column3] IN(:p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21' :p22' :p23) AND [Column4] = :p24"' commandText); " is 243.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsFollowedByStatementSeparatorAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20) AND [Column4] = @p21;"' totalArgumentCount: 25); " is 287.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsFollowedByStatementSeparatorAtPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @p3 AND [Column2] <= @p4 AND [Column3] IN(@p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21' @p22' @p23) AND [Column4] = @p24;"' commandText); " is 244.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsFollowedByStatementSeparatorColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20) AND [Column4] = :p21;"' totalArgumentCount: 25); " is 287.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsFollowedByStatementSeparatorColonPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :p3 AND [Column2] <= :p4 AND [Column3] IN(:p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21' :p22' :p23) AND [Column4] = :p24;"' commandText); " is 244.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAtPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21)"' totalArgumentCount: 25); " is 271.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAtPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @p3 AND [Column2] <= @p4 AND [Column3] IN(@p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21' @p22' @p23' @p24)"' commandText); " is 228.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] <= @param1 AND [Column3] IN(@param2' @param3' @param4' @param5' @param6' @param7' @param8' @param9' @param10' @param11' @param12' @param13' @param14' @param15' @param16' @param17' @param18' @param19' @param20' @param21)"' totalArgumentCount: 25); " is 359.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAtPrefixAndMoreThanPrefixCharacter,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @param3 AND [Column2] <= @param4 AND [Column3] IN(@param5' @param6' @param7' @param8' @param9' @param10' @param11' @param12' @param13' @param14' @param15' @param16' @param17' @param18' @param19' @param20' @param21' @param22' @param23' @param24)"' commandText); " is 316.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21)"' totalArgumentCount: 25); " is 271.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoColonPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :p3 AND [Column2] <= :p4 AND [Column3] IN(:p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21' :p22' :p23' :p24)"' commandText); " is 228.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :param0 AND [Column2] <= :param1 AND [Column3] IN(:param2' :param3' :param4' :param5' :param6' :param7' :param8' :param9' :param10' :param11' :param12' :param13' :param14' :param15' :param16' :param17' :param18' :param19' :param20' :param21)"' totalArgumentCount: 25); " is 359.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoColonPrefixAndMoreThanPrefixCharacter,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :param3 AND [Column2] <= :param4 AND [Column3] IN(:param5' :param6' :param7' :param8' :param9' :param10' :param11' :param12' :param13' :param14' :param15' :param16' :param17' :param18' :param19' :param20' :param21' :param22' :param23' :param24)"' commandText); " is 316.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeAndARepeatedValueAndLastIsFollowedByStatementSeparatorColonPrefix,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] IN (:p1' :p3) AND [Column3] IN (:p2' :p3);"' totalArgumentCount: 12); " is 178.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeAndARepeatedValueAndLastIsFollowedByStatementSeparatorColonPrefix,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :p8 AND [Column2] IN (:p9' :p11) AND [Column3] IN (:p10' :p11);"' commandText); " is 135.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithFourAtPrefixAndARepeatedValue,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] IN (@p1' @p2) AND [Column3] IN (@p3' @p2)"' totalArgumentCount: 12); " is 177.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithFourAtPrefixAndARepeatedValue,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @p8 AND [Column2] IN (@p9' @p10) AND [Column3] IN (@p11' @p10)"' commandText); " is 134.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeAtPrefixAndARepeatedValueAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] IN (@param1' @param3) AND [Column3] IN(@param2' @param3)"' totalArgumentCount: 12); " is 196.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeAtPrefixAndARepeatedValueAndMoreThanPrefixCharacter,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= @param8 AND [Column2] IN (@param9' @param11) AND [Column3] IN(@param10' @param11)"' commandText); " is 153.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeColonPrefixAndARepeatedValue,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] IN (:p1' :p3) AND [Column3] IN (:p2' :p3)"' totalArgumentCount: 12); " is 177.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeColonPrefixAndARepeatedValue,The length of the statement  "            Assert.Equal("SELECT * FROM [Table1] WHERE [Column1] >= :p8 AND [Column2] IN (:p9' :p11) AND [Column3] IN (:p10' :p11)"' commandText); " is 134.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeColonPrefixAndARepeatedValueAndMoreThanPrefixCharacter,The length of the statement  "            var commandText = SqlUtility.RenumberParameters("SELECT * FROM[Table1] WHERE[Column1] >= :param8 AND[Column2] IN(:param9' :param11) AND[Column3] IN(:param10' :param11)"' totalArgumentCount: 12); " is 194.
Long Statement,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeColonPrefixAndARepeatedValueAndMoreThanPrefixCharacter,The length of the statement  "            Assert.Equal("SELECT * FROM[Table1] WHERE[Column1] >= :param8 AND[Column2] IN(:param9' :param11) AND[Column3] IN(:param10' :param11)"' commandText); " is 148.
Long Statement,MicroLite.Tests,UnitTest,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\UnitTest.cs,ResetMicroLiteInternalState,The length of the statement  "            var mappingConventionField = objectInfoType.GetField("mappingConvention"' BindingFlags.Static | BindingFlags.NonPublic); " is 120.
Empty Catch Block,MicroLite.Tests.Core,TransactionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\TransactionTests.cs,DisposeShouldNotThrowAnExceptionIfRollingBackAnUncommittedTransactionAndRollbackThrowsAnException,The method has an empty catch block.
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").Between(1' 199)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereBetween,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereBetween,The following statement contains a magic number: Assert.Equal(199' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsGreaterThan,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").IsGreaterThan(10)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsGreaterThan,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").IsGreaterThanOrEqualTo(10)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsLessThan,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").IsLessThan(10)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsLessThan,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsLessThanOrEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").IsLessThanOrEqualTo(10)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereIsLessThanOrEqualTo,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotBetween(1' 199)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotBetween,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotBetween,The following statement contains a magic number: Assert.Equal(199' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,DeleteSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\DeleteSqlBuilderTests.cs,DeleteFromWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,InsertSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\InsertSqlBuilderTests.cs,InsertIntoColumnsValues,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Into("Table")                  .Columns("Column1"' "Column2")                  .Values("Foo"' 12)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,InsertSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\InsertSqlBuilderTests.cs,InsertIntoColumnsValues,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,InsertSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\InsertSqlBuilderTests.cs,InsertIntoColumnsValues,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,InsertSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\InsertSqlBuilderTests.cs,InsertIntoColumnsValuesWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Into("Table")                  .Columns("Column1"' "Column2")                  .Values("Foo"' 12)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,InsertSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\InsertSqlBuilderTests.cs,InsertIntoColumnsValuesWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,InsertSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\InsertSqlBuilderTests.cs,InsertIntoColumnsValuesWithSqlCharacters,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").In("Opt1"' "Opt2")                  .AndWhere("Column3").Between(1' 10)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: Assert.Equal(1' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenShouldAppendOperandIfItIsAnAdditionalPredicate,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,BetweenThrowsArgumentExceptionForNullLower,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => sqlBuilder.Between(null' 10));
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,NotBetweenThrowsArgumentExceptionForNullLower,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => sqlBuilder.NotBetween(null' 10));
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereAnd,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1 = @p0 OR @p0 IS NULL"' "Foo")                  .AndWhere("Column2 BETWEEN @p0 AND @p1"' DateTime.Today.AddDays(-1)' DateTime.Today)                  .OrWhere("Column3 IN (@p0' @p1' @p2' @p3)"' 1' 2' 3' 4)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1 = @p0 OR @p0 IS NULL"' "Foo")                  .AndWhere("Column2 BETWEEN @p0 AND @p1"' DateTime.Today.AddDays(-1)' DateTime.Today)                  .OrWhere("Column3 IN (@p0' @p1' @p2' @p3)"' 1' 2' 3' 4)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1 = @p0 OR @p0 IS NULL"' "Foo")                  .AndWhere("Column2 BETWEEN @p0 AND @p1"' DateTime.Today.AddDays(-1)' DateTime.Today)                  .OrWhere("Column3 IN (@p0' @p1' @p2' @p3)"' 1' 2' 3' 4)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(DateTime.Today' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(1' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereComplex,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectFromWhereOr,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhere,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .AndWhere("Column1")                  .In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .AndWhere("Column1")                  .In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .AndWhere("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .AndWhere("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQueryWithSqlCharacters,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = @p0"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQueryWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereInSqlQueryWithSqlCharacters,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .AndWhere("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .AndWhere("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereAndWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                     .From("Table")                     .Where("Column1").Between(1' 10)                     .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereBetween,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereBetween,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereBetweenWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                     .From("Table")                     .Where("Column1").Between(1' 10)                     .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereBetweenWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereBetweenWithSqlCharacters,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereExistsSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereExistsSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByHavingOrderBy,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Sum("Total")                  .From("Invoices")                  .Where("OrderDate").IsGreaterThan(new DateTime(2000' 1' 1))                  .GroupBy("Total")                  .Having("SUM(Total) > ?"' 10000M)                  .OrderByDescending("OrderDate")                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByHavingOrderBy,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Sum("Total")                  .From("Invoices")                  .Where("OrderDate").IsGreaterThan(new DateTime(2000' 1' 1))                  .GroupBy("Total")                  .Having("SUM(Total) > ?"' 10000M)                  .OrderByDescending("OrderDate")                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByHavingOrderBy,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByHavingOrderBy,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1)' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByHavingOrderBy,The following statement contains a magic number: Assert.Equal(10000M' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByOrderBy,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Sum("Total")                  .From("Invoices")                  .Where("OrderDate").IsGreaterThan(new DateTime(2000' 1' 1))                  .GroupBy("Total")                  .OrderByDescending("OrderDate")                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByOrderBy,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1)' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByOrderByWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Sum("Total")                  .From("Invoices")                  .Where("OrderDate").IsGreaterThan(new DateTime(2000' 1' 1))                  .GroupBy("Total")                  .OrderByDescending("OrderDate")                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereGroupByOrderByWithSqlCharacters,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1)' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                     .From("Table")                     .Where("Column1").NotBetween(1' 10)                     .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotBetween,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotBetween,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotBetweenWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                     .From("Table")                     .Where("Column1").NotBetween(1' 10)                     .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotBetweenWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotBetweenWithSqlCharacters,The following statement contains a magic number: Assert.Equal(10' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotExistsSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotExistsSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column1").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .OrWhere("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .OrWhere("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .OrWhere("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").IsEqualTo("FOO")                  .OrWhere("Column1").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInArgsWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQueryWithSqlCharacters,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = @p0"' 1024);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQueryWithSqlCharacters,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SelectWhereOrWhereInSqlQueryWithSqlCharacters,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SingleColumnPredicatesShouldAppendOperand,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").In("Opt1"' "Opt2")                  .AndWhere("Column3").IsEqualTo(1)                  .AndWhere("Column4").IsGreaterThan(2)                  .AndWhere("Column5").IsGreaterThanOrEqualTo(3)                  .AndWhere("Column6").IsLessThan(4)                  .AndWhere("Column7").IsLessThanOrEqualTo(5)                  .AndWhere("Column8").IsLike("%J")                  .AndWhere("Column9").IsNotEqualTo(6)                  .AndWhere("Column10").IsNotNull()                  .AndWhere("Column11").IsNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SingleColumnPredicatesShouldAppendOperand,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").In("Opt1"' "Opt2")                  .AndWhere("Column3").IsEqualTo(1)                  .AndWhere("Column4").IsGreaterThan(2)                  .AndWhere("Column5").IsGreaterThanOrEqualTo(3)                  .AndWhere("Column6").IsLessThan(4)                  .AndWhere("Column7").IsLessThanOrEqualTo(5)                  .AndWhere("Column8").IsLike("%J")                  .AndWhere("Column9").IsNotEqualTo(6)                  .AndWhere("Column10").IsNotNull()                  .AndWhere("Column11").IsNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SingleColumnPredicatesShouldAppendOperand,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").In("Opt1"' "Opt2")                  .AndWhere("Column3").IsEqualTo(1)                  .AndWhere("Column4").IsGreaterThan(2)                  .AndWhere("Column5").IsGreaterThanOrEqualTo(3)                  .AndWhere("Column6").IsLessThan(4)                  .AndWhere("Column7").IsLessThanOrEqualTo(5)                  .AndWhere("Column8").IsLike("%J")                  .AndWhere("Column9").IsNotEqualTo(6)                  .AndWhere("Column10").IsNotNull()                  .AndWhere("Column11").IsNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SingleColumnPredicatesShouldAppendOperand,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").In("Opt1"' "Opt2")                  .AndWhere("Column3").IsEqualTo(1)                  .AndWhere("Column4").IsGreaterThan(2)                  .AndWhere("Column5").IsGreaterThanOrEqualTo(3)                  .AndWhere("Column6").IsLessThan(4)                  .AndWhere("Column7").IsLessThanOrEqualTo(5)                  .AndWhere("Column8").IsLike("%J")                  .AndWhere("Column9").IsNotEqualTo(6)                  .AndWhere("Column10").IsNotNull()                  .AndWhere("Column11").IsNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,SelectSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\SelectSqlBuilderTests.cs,SingleColumnPredicatesShouldAppendOperand,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .From("Table")                  .Where("Column2").In("Opt1"' "Opt2")                  .AndWhere("Column3").IsEqualTo(1)                  .AndWhere("Column4").IsGreaterThan(2)                  .AndWhere("Column5").IsGreaterThanOrEqualTo(3)                  .AndWhere("Column6").IsLessThan(4)                  .AndWhere("Column7").IsLessThanOrEqualTo(5)                  .AndWhere("Column8").IsLike("%J")                  .AndWhere("Column9").IsNotEqualTo(6)                  .AndWhere("Column10").IsNotNull()                  .AndWhere("Column11").IsNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .WithParameter("@CustomerId"' 7633245)                  .WithParameter("@StartDate"' DateTime.Today.AddMonths(-3))                  .WithParameter("@EndDate"' DateTime.Today)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .WithParameter("@CustomerId"' 7633245)                  .WithParameter("@StartDate"' DateTime.Today.AddMonths(-3))                  .WithParameter("@EndDate"' DateTime.Today)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: Assert.Equal(7633245' sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: Assert.Equal(DateTime.Today.AddMonths(-3)' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,StoredProcedureSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\StoredProcedureSqlBuilderTests.cs,Execute,The following statement contains a magic number: Assert.Equal(DateTime.Today' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").Between(1' 199)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").Between(1' 199)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(1' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(199' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereBetween,The following statement contains a magic number: Assert.Equal(199' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").In(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(5' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(1' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").In(subQuery1' subQuery2)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").In(subQuery)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .AndWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .AndWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .AndWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .AndWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .AndWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .AndWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToAndWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .OrWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .OrWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .OrWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualTo,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .OrWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .OrWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .OrWhere("Column1").IsEqualTo(11)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToOrWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(11' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsEqualToWithSqlCharacters,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsGreaterThan(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsGreaterThan(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThan,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsGreaterThanOrEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsGreaterThanOrEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsGreaterThanOrEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsLessThan(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsLessThan(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThan,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsLessThanOrEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsLessThanOrEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLessThanOrEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLike,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").IsLike("Foo%")                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLike,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLike,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLike,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsLike,The following statement contains a magic number: Assert.Equal("Foo%"' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsNotEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsNotEqualTo(100122)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotEqualTo,The following statement contains a magic number: Assert.Equal(100122' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotLike,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").IsNotLike("Foo%")                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotLike,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotLike,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotLike,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotLike,The following statement contains a magic number: Assert.Equal("Foo%"' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotNull,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsNotNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotNull,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNotNull,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNull,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").IsNull()                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNull,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereIsNull,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").NotBetween(1' 199)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Id").NotBetween(1' 199)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(1' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(199' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotBetween,The following statement contains a magic number: Assert.Equal(199' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").NotIn(1' 2' 3)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(5' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(1' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInArgs,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery1 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: var subQuery2 = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 2048);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").NotIn(subQuery1' subQuery2)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(4' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInMultipleSqlQueries,The following statement contains a magic number: Assert.Equal(2048' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: var subQuery = new SqlQuery("SELECT Id FROM Table WHERE Column = ?"' 1024);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: var sqlQuery = sqlBuilder                  .Table("Table")                  .SetColumnValue("Column1"' "Foo")                  .SetColumnValue("Column2"' 12)                  .Where("Column3").NotIn(subQuery)                  .ToSqlQuery();
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(3' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(12' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Builder,UpdateSqlBuilderTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Builder\UpdateSqlBuilderTests.cs,UpdateTableSetColumnValueWhereNotInSqlQuery,The following statement contains a magic number: Assert.Equal(1024' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Collections,WhenAddingItems,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Collections\StackCollectionTests.cs,ItemsAreAddedToTheTopOfTheCollection,The following statement contains a magic number: Assert.Equal(2' collection.Count);
Magic Number,MicroLite.Tests.Core,ForAValueTypeWhenBuildValueHasBeenCalledAndThereIsOneResult,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\IncludeScalarTests.cs,ForAValueTypeWhenBuildValueHasBeenCalledAndThereIsOneResult,The following statement contains a magic number: this.mockReader.Setup(x => x[0]).Returns(10);
Magic Number,MicroLite.Tests.Core,ForAValueTypeWhenBuildValueHasBeenCalledAndThereIsOneResult,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\IncludeScalarTests.cs,ValueShouldBeSetToTheResult,The following statement contains a magic number: Assert.Equal(10' this.include.Value);
Magic Number,MicroLite.Tests.Core,WhenCallingBuildValueAndTheDataReaderContainsMultipleColumns,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\IncludeScalarTests.cs,WhenCallingBuildValueAndTheDataReaderContainsMultipleColumns,The following statement contains a magic number: this.mockReader.Setup(x => x.FieldCount).Returns(2);
Magic Number,MicroLite.Tests.Core,WhenCallingBuildValueAndTheDataReaderContainsMultipleResults,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\IncludeScalarTests.cs,WhenCallingBuildValueAndTheDataReaderContainsMultipleResults,The following statement contains a magic number: this.mockReader.Setup(x => x[0]).Returns(10);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,IncludeScalarSqlQueryExecutesAndReturnsResult,The following statement contains a magic number: mockReader.Setup(x => x[0]).Returns(10);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,IncludeScalarSqlQueryExecutesAndReturnsResult,The following statement contains a magic number: Assert.Equal(10' includeScalar.Value);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithOnePerPage,The following statement contains a magic number: mockReader.Setup(x => x[0]).Returns(1000);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithTwentyFivePerPage,The following statement contains a magic number: mockSqlDialect.Setup(x => x.PageQuery(sqlQuery' PagingOptions.ForPage(1' 25))).Returns(pagedQuery);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithTwentyFivePerPage,The following statement contains a magic number: mockReader.Setup(x => x[0]).Returns(1000);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForFirstPageWithTwentyFivePerPage,The following statement contains a magic number: var page = session.Paged<Customer>(sqlQuery' PagingOptions.ForPage(1' 25));
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The following statement contains a magic number: mockSqlDialect.Setup(x => x.PageQuery(sqlQuery' PagingOptions.ForPage(10' 25))).Returns(pagedQuery);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The following statement contains a magic number: mockSqlDialect.Setup(x => x.PageQuery(sqlQuery' PagingOptions.ForPage(10' 25))).Returns(pagedQuery);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The following statement contains a magic number: mockReader.Setup(x => x[0]).Returns(1000);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The following statement contains a magic number: var page = session.Paged<Customer>(sqlQuery' PagingOptions.ForPage(10' 25));
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The following statement contains a magic number: var page = session.Paged<Customer>(sqlQuery' PagingOptions.ForPage(10' 25));
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedExecutesAndReturnsResultsForTenthPageWithTwentyFivePerPage,The following statement contains a magic number: Assert.Equal(10' page.Page);
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedThrowsArgumentNullExceptionForNullSqlQuery,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => session.Paged<Customer>(null' PagingOptions.ForPage(1' 25)));
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,PagedThrowsObjectDisposedExceptionIfDisposed,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(                  () => session.Paged<Customer>(null' PagingOptions.ForPage(1' 25)));
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,SingleIdentifierExecutesAndReturnsNull,The following statement contains a magic number: object identifier = 100;
Magic Number,MicroLite.Tests.Core,ReadOnlySessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,SingleIdentifierExecutesAndReturnsResult,The following statement contains a magic number: object identifier = 100;
Magic Number,MicroLite.Tests.Core,WhenExecutingMultipleQueriesAndTheSqlDialectUsedDoesNotSupportBatching,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,WhenExecutingMultipleQueriesAndTheSqlDialectUsedDoesNotSupportBatching,The following statement contains a magic number: var includeCustomer = session.Include.Single<Customer>(2);
Magic Number,MicroLite.Tests.Core,WhenExecutingMultipleQueriesAndTheSqlDialectUsedDoesNotSupportBatching,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,TheDbDriverShouldBuildTwoIDbCommands,The following statement contains a magic number: this.mockDbDriver.Verify(x => x.BuildCommand(It.IsNotNull<IDbCommand>()' It.IsNotNull<SqlQuery>())' Times.Exactly(2));
Magic Number,MicroLite.Tests.Core,WhenExecutingMultipleQueriesAndTheSqlDialectUsedSupportsBatching,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,WhenExecutingMultipleQueriesAndTheSqlDialectUsedSupportsBatching,The following statement contains a magic number: var includeCustomerA = session.Include.Single<Customer>(3);
Magic Number,MicroLite.Tests.Core,WhenExecutingMultipleQueriesAndTheSqlDialectUsedSupportsBatching,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,WhenExecutingMultipleQueriesAndTheSqlDialectUsedSupportsBatching,The following statement contains a magic number: var includeCustomerB = session.Include.Single<Customer>(2);
Magic Number,MicroLite.Tests.Core,WhenExecutingTwoQueriesAndTheSqlDialectUsedSupportsBatching,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\ReadOnlySessionTests.cs,WhenExecutingTwoQueriesAndTheSqlDialectUsedSupportsBatching,The following statement contains a magic number: var includeCustomer = session.Include.Single<Customer>(2);
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceInvokesListeners,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceInvokesListeners,The following statement contains a magic number: mockListener1.Setup(x => x.AfterDelete(customer' 1)).Callback(() => Assert.Equal(4' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceInvokesListeners,The following statement contains a magic number: mockListener2.Setup(x => x.AfterDelete(customer' 1)).Callback(() => Assert.Equal(3' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceInvokesListeners,The following statement contains a magic number: mockListener2.Setup(x => x.BeforeDelete(customer)).Callback(() => Assert.Equal(2' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceReturnsFalseIfNoRecordsDeleted,The following statement contains a magic number: var customer = new Customer              {                  Id = 14556              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceReturnsTrueIfRecordDeleted,The following statement contains a magic number: var customer = new Customer              {                  Id = 14556              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteInstanceThrowsMicroLiteExceptionIfExecuteNonQueryThrowsException,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteTypeByIdentifierReturnsFalseIfNoRecordsDeleted,The following statement contains a magic number: var identifier = 1234;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteTypeByIdentifierReturnsTrueIfRecordDeleted,The following statement contains a magic number: var identifier = 1234;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteTypeByIdentifierThrowsArgumentNullExceptionForNullType,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(() => session.Delete(null' 1234));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteTypeByIdentifierThrowsMicroLiteExceptionIfExecuteNonQueryThrowsException,The following statement contains a magic number: var identifier = 1234;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,DeleteTypeByIdentifierThrowsObjectDisposedExceptionIfDisposed,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(() => session.Delete(typeof(Customer)' 1234));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertBuildsAndExecutesAnInsertCommandOnlyIfIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Id = 12345              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertBuildsAndExecutesAnInsertCommandOnlyIfIdentifierStrategyNotAssignedAndSqlDialectDoesNotSupportSelectInsertedIdentifier,The following statement contains a magic number: object identifier = 23543;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertBuildsAndExecutesCombinedCommandIfIdentifierStrategyNotAssignedAndSqlDialectSupportsSelectInsertedIdentifierAndDbDriverSupportsBatchedQueries,The following statement contains a magic number: object identifier = 23543;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertBuildsAndExecutesIndividualCommandsIfIdentifierStrategyNotAssignedAndSqlDialectSupportsSelectInsertedIdentifierAndDbDriverDoesNotSupportBatchedQueries,The following statement contains a magic number: object identifier = 23543;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertInvokesListeners,The following statement contains a magic number: object identifier = 23543;
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertInvokesListeners,The following statement contains a magic number: mockListener1.Setup(x => x.AfterInsert(customer' identifier)).Callback(() => Assert.Equal(4' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertInvokesListeners,The following statement contains a magic number: mockListener2.Setup(x => x.AfterInsert(customer' identifier)).Callback(() => Assert.Equal(3' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,InsertInvokesListeners,The following statement contains a magic number: mockListener2.Setup(x => x.BeforeInsert(customer)).Callback(() => Assert.Equal(2' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceBuildsAndExecutesQuery,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceInvokesListeners,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceInvokesListeners,The following statement contains a magic number: mockListener1.Setup(x => x.AfterUpdate(customer' 1)).Callback(() => Assert.Equal(4' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceInvokesListeners,The following statement contains a magic number: mockListener2.Setup(x => x.AfterUpdate(customer' 1)).Callback(() => Assert.Equal(3' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceInvokesListeners,The following statement contains a magic number: mockListener2.Setup(x => x.BeforeUpdate(customer)).Callback(() => Assert.Equal(2' ++counter));
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceReturnsFalseIfNoRecordsUpdated,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceReturnsTrueIfRecordUpdated,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateInstanceThrowsMicroLiteExceptionIfExecuteNonQueryThrowsException,The following statement contains a magic number: var customer = new Customer              {                  Id = 187224              };
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateObjectDeltaReturnsFalseIfNoRecordUpdated,The following statement contains a magic number: var objectDelta = new ObjectDelta(typeof(Customer)' 1234);
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateObjectDeltaReturnsTrueIfRecordUpdated,The following statement contains a magic number: var objectDelta = new ObjectDelta(typeof(Customer)' 1234);
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateObjectDeltaThrowsMicroLiteExceptionIfItContainsNoChanges,The following statement contains a magic number: var objectDelta = new ObjectDelta(typeof(Customer)' 1234);
Magic Number,MicroLite.Tests.Core,SessionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Core\SessionTests.cs,UpdateObjectDeltaThrowsObjectDisposedExceptionIfDisposed,The following statement contains a magic number: Assert.Throws<ObjectDisposedException>(() => session.Update(new ObjectDelta(typeof(Customer)' 1234)));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT   CustomerId'   Name'   DateOfBirth'   CustomerStatusId   FROM   Customers   WHERE   (CustomerStatusId = @p0 AND DoB > @p1)   ORDER BY   Name ASC'   DoB ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(1' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(26' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(50' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,FirebirdSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\FirebirdSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryThrowsArgumentNullExceptionIfSqlQueryIsNull,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => sqlDialect.PageQuery(null' PagingOptions.ForPage(1' 10)));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 10));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 10));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The following statement contains a magic number: Assert.Equal(11' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The following statement contains a magic number: Assert.Equal(20' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithoutSubQuery,The following statement contains a magic number: Assert.Equal(20' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 10));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 10));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: Assert.Equal(11' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: Assert.Equal(11' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: Assert.Equal(20' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageQueryWithSubQuery,The following statement contains a magic number: Assert.Equal(20' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoin,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoin,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoinWithAlias,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithJoinWithAlias,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT  [Customers].[CustomerId]'  [Customers].[Name]'  [Customers].[DoB]'  [Customers].[StatusId]  FROM  [Sales].[Customers]  WHERE  ([Customers].[StatusId] = @p0 AND [Customers].[DoB] > @p1)  ORDER BY  [Customers].[Name] ASC'  [Customers].[DoB] ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(1' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(26' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(50' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2005DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2005DialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: var customer = new CustomerWithByteId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithByteId,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: var customer = new CustomerWithShortId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt16Id,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt32Id,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: var customer = new CustomerWithLongId              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,InsertInstanceQueryForIdentifierStrategySequenceWithInt64Id,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageAppendsOrderByGetDateIfNoOrderByClause,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageAppendsOrderByGetDateIfNoOrderByClause,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT   CustomerId'   Name'   DateOfBirth'   CustomerStatusId   FROM   Customers   WHERE   (CustomerStatusId = @p0 AND DoB > @p1)   ORDER BY   Name ASC'   DoB ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MsSql2012DialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MsSql2012DialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT   CustomerId'   Name'   DateOfBirth'   CustomerStatusId   FROM   Customers   WHERE   (CustomerStatusId = @p0 AND DoB > @p1)   ORDER BY   Name ASC'   DoB ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,MySqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\MySqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT   CustomerId'   Name'   DateOfBirth'   CustomerStatusId   FROM   Customers   WHERE   (CustomerStatusId = @p0 AND DoB > @p1)   ORDER BY   Name ASC'   DoB ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,PostgreSqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\PostgreSqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,BuildDeleteSqlQueryThrowsArgumentNullExceptionForNullObjectInfo,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => mockSqlDialect.Object.BuildDeleteSqlQuery(null' 12345));
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,BuildSelectSqlQueryThrowsArgumentNullExceptionForNullObjectInfo,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => mockSqlDialect.Object.BuildSelectSqlQuery(null' 12345));
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,BuildUpdateSqlQueryForObjectDelta,The following statement contains a magic number: var objectDelta = new ObjectDelta(typeof(Customer)' 1234);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,BuildUpdateSqlQueryForObjectDelta,The following statement contains a magic number: Assert.Equal(2' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,BuildUpdateSqlQueryForObjectDelta,The following statement contains a magic number: Assert.Equal(1234' sqlQuery.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,DeleteByIdentifierQuery,The following statement contains a magic number: var identifier = 134875;
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,DeleteByIdentifierQuery,The following statement contains a magic number: identifier = 998866;
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery2.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery2.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery2.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery2.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery2.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery2.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery2.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery2.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/about"' sqlQuery2.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery2.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery2.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery2.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery2.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery2.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery2.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/about"' sqlQuery2.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(6' sqlQuery2.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery2.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery2.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery2.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery2.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery2.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,InsertInstanceQueryForIdentifierStrategySequence,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/about"' sqlQuery2.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,SelectByIdentifierQuery,The following statement contains a magic number: var identifier = 134875;
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,SelectByIdentifierQuery,The following statement contains a magic number: identifier = 998866;
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: customer = new Customer              {                  Created = new DateTime(2012' 08' 13)'                  CreditLimit = 6250.00M'                  DateOfBirth = new DateTime(1984' 3' 11)'                  Id = 998866'                  Name = "John Smith"'                  Status = CustomerStatus.Inactive'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com/about")              };
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery2.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery2.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery2.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery2.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery2.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery2.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery2.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/about"' sqlQuery2.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery2.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery2.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT   CustomerId'   Name'   DateOfBirth'   CustomerStatusId   FROM   Customers   WHERE   (CustomerStatusId = @p0 AND DoB > @p1)   ORDER BY   Name ASC'   DoB ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,PageWithWhereButNoOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SQLiteDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SQLiteDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyAssigned,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(6' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,InsertInstanceQueryForIdentifierStrategyDbGenerated,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageAppendsOrderByGetDateIfNoOrderByClause,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageAppendsOrderByGetDateIfNoOrderByClause,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageNonQualifiedWildcardQuery,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var sqlQuery = new SqlQuery(@"SELECT   CustomerId'   Name'   DateOfBirth'   CustomerStatusId   FROM   Customers   WHERE   (CustomerStatusId = @p0 AND DoB > @p1)   ORDER BY   Name ASC'   DoB ASC"' CustomerStatus.Active' new DateTime(1980' 01' 01));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(0' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithMultiWhereAndMultiOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereButOrderBy,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(26' paged.Arguments[0].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithNoWhereOrOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(50' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByFirstResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 1' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderByMultiLine,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: var paged = sqlDialect.PageQuery(sqlQuery' PagingOptions.ForPage(page: 2' resultsPerPage: 25));
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[1].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(DbType.Int32' paged.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,PageWithWhereAndOrderBySecondResultsPage,The following statement contains a magic number: Assert.Equal(25' paged.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(7' sqlQuery.Arguments.Count);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[2].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Name' sqlQuery.Arguments[2].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[3].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal((int)customer.Status' sqlQuery.Arguments[3].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' sqlQuery.Arguments[4].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Updated' sqlQuery.Arguments[4].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.String' sqlQuery.Arguments[5].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal("http://microliteorm.wordpress.com/"' sqlQuery.Arguments[5].Value);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(DbType.Int32' sqlQuery.Arguments[6].DbType);
Magic Number,MicroLite.Tests.Dialect,SqlServerCeDialectTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Dialect\SqlServerCeDialectTests.cs,UpdateInstanceQuery,The following statement contains a magic number: Assert.Equal(customer.Id' sqlQuery.Arguments[6].Value);
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandForSqlQueryWithSqlText,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM Table WHERE Table.Id = ? AND Table.Value1 = ? AND Table.Value2 = ?"'                  100' "hello"' null);
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandForSqlQueryWithSqlText,The following statement contains a magic number: Assert.Equal(3' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandForSqlQueryWithSqlText,The following statement contains a magic number: var parameter3 = (IDataParameter)command.Parameters[2];
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM [Table] WHERE [Table].[Id] = @p0 AND [Table].[Value1] = @p1 OR @p1 IS NULL"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandSetsDbCommandTimeoutToSqlQueryTime,The following statement contains a magic number: sqlQuery.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,DbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,BuildCommandThrowsMicroLiteExceptionForParameterCountMismatch,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM [Table] WHERE [Table].[Id] = @p0 AND [Table].[Value] = @p1"'                  100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT \"Column1\"' \"Column2\"' \"Column3\" FROM \"Table1\" WHERE \"Column1\" = ? AND \"Column2\" > ?"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT \"Column1\"' \"Column2\"' \"Column3\" FROM \"Table1\" WHERE \"Column1\" = ? AND \"Column2\" > ?"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryNotUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT \"Column1\"' \"Column2\"' \"Column3\" FROM \"Table1\" WHERE \"Column1\" = @p0 AND \"Column2\" > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQueryUsingNamedParameters,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\DbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM [Table] WHERE [Table].[Id] = @p0 AND [Table].[Value1] = @p1 OR @p1 IS NULL"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,BuildCommandForSqlQueryWithStoredProcedureWithParameters,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "EXEC GetTableContents @identifier' @Cust_Name"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,BuildCommandForSqlQueryWithStoredProcedureWithParameters,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,BuildCommandThrowsMicroLiteExceptionForParameterCountMismatch,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM [Table] WHERE [Table].[Id] = @p0 AND [Table].[Value] = @p1"'                  100);
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,DbTypeTimeIsIncorrectlyHandledAsDateTime,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM [Table] WHERE [TimeStamp] > @p0"'                  new SqlArgument(new TimeSpan(5' 30' 1)' DbType.Time));
Magic Number,MicroLite.Tests.Driver,MsSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,DbTypeTimeIsIncorrectlyHandledAsDateTime,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM [Table] WHERE [TimeStamp] > @p0"'                  new SqlArgument(new TimeSpan(5' 30' 1)' DbType.Time));
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery2 = new SqlQuery("EXEC CustomersByStatus @StatusId"' 2);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnIEnumerableSqlQuery_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery2 = new SqlQuery("CALL CustomersByStatus @StatusId"' 2);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery2 = new SqlQuery("EXEC CustomersByStatus @StatusId"' 2);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithAnTwoSqlQueries_AndAnSqlQueryIsForAStoredProcedure,The following statement contains a magic number: this.sqlQuery2 = new SqlQuery("CALL CustomersByStatus @StatusId"' 2);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithTwoSqlQueries,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT [Column1]' [Column2]' [Column3] FROM [dbo].[Table1] WHERE [Column1] = @p0 AND [Column2] > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithTwoSqlQueries,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithTwoSqlQueries,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithTwoSqlQueries,The following statement contains a magic number: this.sqlQuery1 = new SqlQuery("SELECT `Column1`' `Column2`' `Column3` FROM `dbo`.`Table1` WHERE `Column1` = @p0 AND `Column2` > @p1"' "Foo"' 100);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithTwoSqlQueries,The following statement contains a magic number: this.sqlQuery1.Timeout = 38;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,WhenCallingCombine_WithTwoSqlQueries,The following statement contains a magic number: this.sqlQuery2.Timeout = 42;
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheFirstArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[0]' this.combinedQuery.Arguments[2]);
Magic Number,MicroLite.Tests.Driver,WhenCallingCombine_WithTwoSqlQueries,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MsSqlDbDriverTests.cs,TheCombinedArgumentsShouldContainTheSecondArgumentOfTheSecondQuery,The following statement contains a magic number: Assert.Equal(this.sqlQuery2.Arguments[1]' this.combinedQuery.Arguments[3]);
Magic Number,MicroLite.Tests.Driver,MySqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MySqlDbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM `Table` WHERE `Table`.`Id` = @p0 AND `Table`.`Value1` = @p1 OR @p1 IS NULL"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,MySqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MySqlDbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,MySqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MySqlDbDriverTests.cs,BuildCommandForSqlQueryWithStoredProcedureWithParameters,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "CALL GetTableContents @identifier' @Cust_Name"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,MySqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\MySqlDbDriverTests.cs,BuildCommandForSqlQueryWithStoredProcedureWithParameters,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,PostgreSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\PostgreSqlDbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT * FROM \"Table\" WHERE \"Table\".\"Id\" = @p0 AND \"Table].\"Value1\" = @p1 OR @p1 IS NULL"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,PostgreSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\PostgreSqlDbDriverTests.cs,BuildCommandForSqlQueryWithSqlTextWhichUsesSameParameterTwice,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,PostgreSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\PostgreSqlDbDriverTests.cs,BuildCommandForSqlQueryWithStoredProcedureWithParameters,The following statement contains a magic number: var sqlQuery = new SqlQuery(                  "SELECT GetTableContents (@identifier' @Cust_Name)"'                  100' "hello");
Magic Number,MicroLite.Tests.Driver,PostgreSqlDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\PostgreSqlDbDriverTests.cs,BuildCommandForSqlQueryWithStoredProcedureWithParameters,The following statement contains a magic number: Assert.Equal(2' command.Parameters.Count);
Magic Number,MicroLite.Tests.Driver,SqlServerCeDbDriverTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Driver\SqlServerCeDbDriverTests.cs,BuildCommandDoesNotSetsDbCommandTimeoutToSqlQueryTime,The following statement contains a magic number: sqlQuery.Timeout = 42;
Magic Number,MicroLite.Tests.Listeners,IdentifierStrategyListenerTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Listeners\IdentifierStrategyListenerTests.cs,AfterInsertSetsIdentifierValueConvertingItToThePropertyType,The following statement contains a magic number: decimal scalarResult = 4354;
Magic Number,MicroLite.Tests.Listeners,IdentifierStrategyListenerTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Listeners\IdentifierStrategyListenerTests.cs,AfterInsertSetsIdentifierValueForIdentifierStrategyDbGenerated,The following statement contains a magic number: int scalarResult = 4354;
Magic Number,MicroLite.Tests.Listeners,IdentifierStrategyListenerTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Listeners\IdentifierStrategyListenerTests.cs,AfterInsertSetsIdentifierValueForIdentifierStrategySequence,The following statement contains a magic number: int scalarResult = 4354;
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(6' columns.Length);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal("CustomerId"' columns[2].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[2].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.False(columns[2].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.Int32' columns[2].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[2].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(AssignedCustomer).GetProperty("Id")' columns[2].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Null(columns[2].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal("Name"' columns[3].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[3].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[3].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.String' columns[3].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.False(columns[3].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(AssignedCustomer).GetProperty("Name")' columns[3].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Null(columns[3].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal("StatusId"' columns[4].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[4].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[4].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.Int32' columns[4].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.False(columns[4].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(AssignedCustomer).GetProperty("Status")' columns[4].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Null(columns[4].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal("Updated"' columns[5].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.False(columns[5].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.True(columns[5].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' columns[5].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.False(columns[5].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(AssignedCustomer).GetProperty("Updated")' columns[5].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForAssignedIdentifier,The following statement contains a magic number: Assert.Null(columns[5].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(6' columns.Length);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal("CustomerId"' columns[2].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.False(columns[2].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.False(columns[2].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.Int32' columns[2].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.True(columns[2].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(DbGeneratedCustomer).GetProperty("Id")' columns[2].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Null(columns[2].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal("Name"' columns[3].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.True(columns[3].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.True(columns[3].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.String' columns[3].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.False(columns[3].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(DbGeneratedCustomer).GetProperty("Name")' columns[3].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Null(columns[3].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal("StatusId"' columns[4].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.True(columns[4].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.True(columns[4].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.Int32' columns[4].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.False(columns[4].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(DbGeneratedCustomer).GetProperty("Status")' columns[4].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Null(columns[4].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal("Updated"' columns[5].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.False(columns[5].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.True(columns[5].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' columns[5].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.False(columns[5].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Equal(typeof(DbGeneratedCustomer).GetProperty("Updated")' columns[5].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedIdentifier,The following statement contains a magic number: Assert.Null(columns[5].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(6' columns.Length);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal("CustomerId"' columns[2].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.False(columns[2].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.False(columns[2].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(DbType.Int32' columns[2].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.True(columns[2].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(typeof(SequenceCustomer).GetProperty("Id")' columns[2].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal("CustomerIdSequence"' columns[2].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal("Name"' columns[3].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.True(columns[3].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.True(columns[3].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(DbType.String' columns[3].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.False(columns[3].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(typeof(SequenceCustomer).GetProperty("Name")' columns[3].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Null(columns[3].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal("StatusId"' columns[4].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.True(columns[4].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.True(columns[4].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(DbType.Int32' columns[4].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.False(columns[4].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(typeof(SequenceCustomer).GetProperty("Status")' columns[4].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Null(columns[4].SequenceName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal("Updated"' columns[5].ColumnName);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.False(columns[5].AllowInsert);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.True(columns[5].AllowUpdate);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' columns[5].DbType);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.False(columns[5].IsIdentifier);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Equal(typeof(SequenceCustomer).GetProperty("Updated")' columns[5].PropertyInfo);
Magic Number,MicroLite.Tests.Mapping.Attributes,AttributeMappingConventionTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\Attributes\AttributeMappingConventionTests.cs,TableInfoColumnsAreMappedCorrectlyForDbGeneratedSequence,The following statement contains a magic number: Assert.Null(columns[5].SequenceName);
Magic Number,MicroLite.Tests.Mapping,WhenNotUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,ThereShouldBe7Columns,The following statement contains a magic number: Assert.Equal(7' this.objectInfo.TableInfo.Columns.Count());
Magic Number,MicroLite.Tests.Mapping,WhenUsingDefaultSettings,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\ConventionMappingConventionTests.cs,ThereShouldBe8Columns,The following statement contains a magic number: Assert.Equal(8' this.objectInfo.TableInfo.Columns.Count());
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceSettingNullablePropertyToNonNullValueFromTypeConverter,The following statement contains a magic number: var creditLimit = 12000M;
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.FieldCount).Returns(8);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.IsDBNull(It.IsAny<int>())).Returns((int i) =>              {                  // CreditLimit' Updated and Website are null                  return i == 2 || i == 6 || i == 7;              });
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.IsDBNull(It.IsAny<int>())).Returns((int i) =>              {                  // CreditLimit' Updated and Website are null                  return i == 2 || i == 6 || i == 7;              });
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.IsDBNull(It.IsAny<int>())).Returns((int i) =>              {                  // CreditLimit' Updated and Website are null                  return i == 2 || i == 6 || i == 7;              });
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetInt32(0)).Returns(12345);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(1)).Returns(new DateTime(2009' 4' 20));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(1)).Returns(new DateTime(2009' 4' 20));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(1)).Returns(new DateTime(2009' 4' 20));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(2)).Returns("CreditLimit");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(3)).Returns("DateOfBirth");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(4)).Returns("Name");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetString(4)).Returns("John Smith");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(5)).Returns("CustomerStatusId");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetInt32(5)).Returns(1);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(6)).Returns("Updated");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(7)).Returns("Website");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(12345' instance.Id);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2009' 4' 20)' instance.Created);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2009' 4' 20)' instance.Created);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2009' 4' 20)' instance.Created);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(1972' 8' 14)' instance.DateOfBirth);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(1972' 8' 14)' instance.DateOfBirth);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(1972' 8' 14)' instance.DateOfBirth);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.FieldCount).Returns(8);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetInt32(0)).Returns(12345);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(1)).Returns(new DateTime(2009' 4' 20));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(1)).Returns(new DateTime(2009' 4' 20));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(1)).Returns(new DateTime(2009' 4' 20));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(2)).Returns("CreditLimit");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDecimal(2)).Returns(10250.00M);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDecimal(2)).Returns(10250.00M);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(3)).Returns("DateOfBirth");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(3)).Returns(new DateTime(1972' 8' 14));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(4)).Returns("Name");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetString(4)).Returns("John Smith");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(5)).Returns("CustomerStatusId");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetInt32(5)).Returns(1);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(6)).Returns("Updated");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(6)).Returns(new DateTime(2014' 3' 27));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(6)).Returns(new DateTime(2014' 3' 27));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(6)).Returns(new DateTime(2014' 3' 27));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetDateTime(6)).Returns(new DateTime(2014' 3' 27));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetName(7)).Returns("Website");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: mockReader.Setup(x => x.GetString(7)).Returns("http://microliteorm.wordpress.com");
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2009' 4' 20)' instance.Created);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2009' 4' 20)' instance.Created);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2009' 4' 20)' instance.Created);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(10250.00M' instance.CreditLimit);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(1972' 8' 14)' instance.DateOfBirth);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(1972' 8' 14)' instance.DateOfBirth);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(1972' 8' 14)' instance.DateOfBirth);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(12345' instance.Id);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2014' 3' 27)' instance.Updated);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2014' 3' 27)' instance.Updated);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,CreateInstanceWithoutNullValues,The following statement contains a magic number: Assert.Equal(new DateTime(2014' 3' 27)' instance.Updated);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetIdentifierValue_ReturnsPropertyValueOfIdentifierProperty,The following statement contains a magic number: var customer = new Customer              {                  Id = 122323              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(7' values.Length);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' values[2].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' values[2].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[3].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' values[3].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' values[4].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' values[4].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[5].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' values[5].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' values[6].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Website.ToString()' values[6].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(6' values.Length);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' values[2].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.DateOfBirth' values[2].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' values[3].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' values[3].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[4].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' values[4].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' values[5].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetInsertValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Website.ToString()' values[5].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(7' values.Length);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' values[2].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Name' values[2].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[3].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal((int)customer.Status' values[3].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' values[4].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Updated' values[4].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.String' values[5].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Website.ToString()' values[5].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[6].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingAssigned,The following statement contains a magic number: Assert.Equal(customer.Id' values[6].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: var customer = new Customer              {                  Created = new DateTime(2011' 12' 24)'                  CreditLimit = 10500.00M'                  DateOfBirth = new System.DateTime(1975' 9' 18)'                  Id = 134875'                  Name = "Joe Bloggs"'                  Status = CustomerStatus.Active'                  Updated = DateTime.Now'                  Website = new Uri("http://microliteorm.wordpress.com")              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(7' values.Length);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' values[2].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Name' values[2].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[3].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal((int)customer.Status' values[3].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.DateTime2' values[4].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Updated' values[4].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.String' values[5].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Website.ToString()' values[5].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(DbType.Int32' values[6].DbType);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,GetUpdateValues_ReturnsPropertyValues_WhenUsingDbGenerated,The following statement contains a magic number: Assert.Equal(customer.Id' values[6].Value);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,HasDefaultIdentifierValue_WhenIdentifierIsInteger,The following statement contains a magic number: customer.Id = 123;
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,IsDefaultIdentifier_WhenIdentifierIsInteger,The following statement contains a magic number: Assert.False(objectInfo.IsDefaultIdentifier(18734));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValue_SetsPropertyValue,The following statement contains a magic number: objectInfo.SetIdentifierValue(customer' 122323);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValue_SetsPropertyValue,The following statement contains a magic number: Assert.Equal(122323' customer.Id);
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValue_ThrowsArgumentNullException_IfInstanceIsNull,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(                  () => objectInfo.SetIdentifierValue(null' 122323));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValue_ThrowsMappingException_IfInstanceIsIncorrectType,The following statement contains a magic number: var exception = Assert.Throws<MappingException>(                  () => objectInfo.SetIdentifierValue(new CustomerWithGuidIdentifier()' 122323));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,SetIdentifierValueThrowsMicroLiteException_WhenNoIdentifierMapped,The following statement contains a magic number: var exception = Assert.Throws<MicroLiteException>(() => objectInfo.SetIdentifierValue(customer' 122323));
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,VerifyInstanceForInsertDoesNotThrowMicroLiteException_WhenIdentifierStrategyAssigned_AndIdentifierSet,The following statement contains a magic number: var customer = new Customer              {                  Id = 147843              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,VerifyInstanceForInsertThrowsMicroLiteException_WhenIdentifierStrategyDbGenerated_AndIdentifierSet,The following statement contains a magic number: var customer = new Customer              {                  Id = 147843              };
Magic Number,MicroLite.Tests.Mapping,PocoObjectInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\PocoObjectInfoTests.cs,VerifyInstanceForInsertThrowsMicroLiteException_WhenIdentifierStrategySequence_AndIdentifierSet,The following statement contains a magic number: var customer = new Customer              {                  Id = 147843              };
Magic Number,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorSetsPropertyValuesWithIdentifierMapped,The following statement contains a magic number: Assert.Equal(3' tableInfo.InsertColumnCount);
Magic Number,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorSetsPropertyValuesWithIdentifierMapped,The following statement contains a magic number: Assert.Equal(2' tableInfo.UpdateColumnCount);
Magic Number,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorSetsPropertyValuesWithoutIdentifierMapped,The following statement contains a magic number: Assert.Equal(2' tableInfo.InsertColumnCount);
Magic Number,MicroLite.Tests.Mapping,TableInfoTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\Mapping\TableInfoTests.cs,ConstructorSetsPropertyValuesWithoutIdentifierMapped,The following statement contains a magic number: Assert.Equal(2' tableInfo.UpdateColumnCount);
Magic Number,MicroLite.Tests,WhenConstructed,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\ObjectDeltaTests.cs,WhenConstructed,The following statement contains a magic number: this.objectDelta = new ObjectDelta(typeof(Customer)' 1332);
Magic Number,MicroLite.Tests,WhenConstructed,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\ObjectDeltaTests.cs,IdentifierIsSet,The following statement contains a magic number: Assert.Equal(1332' this.objectDelta.Identifier);
Magic Number,MicroLite.Tests,WhenConstructedWithNullType,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\ObjectDeltaTests.cs,AnArgumentNullExceptionIsThrown,The following statement contains a magic number: var exception = Assert.Throws<ArgumentNullException>(() => new ObjectDelta(null' 1332));
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,ConstructorSetsProperties,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,ConstructorSetsProperties,The following statement contains a magic number: var totalResults = 100;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,HasResultsReturnsFalseIfNoResults,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,HasResultsReturnsFalseIfNoResults,The following statement contains a magic number: var totalResults = 100;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,HasResultsReturnsTrueIfContainsResults,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,HasResultsReturnsTrueIfContainsResults,The following statement contains a magic number: var totalResults = 100;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,MoreResultsAvailableReturnsFalseIfNoMoreResults,The following statement contains a magic number: var page = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,MoreResultsAvailableReturnsFalseIfNoMoreResults,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,MoreResultsAvailableReturnsFalseIfNoMoreResults,The following statement contains a magic number: var totalResults = 100;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,MoreResultsAvailableReturnsTrueIfMoreResults,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,MoreResultsAvailableReturnsTrueIfMoreResults,The following statement contains a magic number: var totalResults = 100;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPages,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPages,The following statement contains a magic number: var totalResults = 100;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPages,The following statement contains a magic number: Assert.Equal(10' pagedResults.TotalPages);
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturns1IfTotalResultsLessThanResultsPerPage,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturns1IfTotalResultsLessThanResultsPerPage,The following statement contains a magic number: var totalResults = 5;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsOneIfNoResults,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsOneIfTotalResultsEqualsThanResultsPerPage,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsOneIfTotalResultsEqualsThanResultsPerPage,The following statement contains a magic number: var totalResults = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsOneIfTotalResultsLessThanResultsPerPage,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsOneIfTotalResultsLessThanResultsPerPage,The following statement contains a magic number: var totalResults = 7;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsTwoIfTotalResultsLessThanDoubleResultsPerPage,The following statement contains a magic number: var resultsPerPage = 10;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsTwoIfTotalResultsLessThanDoubleResultsPerPage,The following statement contains a magic number: var totalResults = 14;
Magic Number,MicroLite.Tests,PagedResultTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagedResultTests.cs,TotalPagesReturnsTwoIfTotalResultsLessThanDoubleResultsPerPage,The following statement contains a magic number: Assert.Equal(2' pagedResults.TotalPages);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.SkipTake(20' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.SkipTake(20' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.SkipTake(10' 50);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.SkipTake(10' 50);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsABoxedInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsABoxedInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsABoxedInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = (object)PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsABoxedInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = (object)PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsABoxedInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsABoxedInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = (object)new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsNotAnInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsNotAnInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.SkipTake(10' 25);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheOtherObjectIsNotAnInstanceOfPagingOptions,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingForPageAndPageIsBelowOne,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,AnArgumentOutOfRangeExceptionShouldBeThrown,The following statement contains a magic number: var exception = Assert.Throws<ArgumentOutOfRangeException>(() => PagingOptions.ForPage(0' 10));
Magic Number,MicroLite.Tests,WhenCallingForPageAndResultsPerPageIsBelowOne,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,AnArgumentOutOfRangeExceptionShouldBeThrown,The following statement contains a magic number: var exception = Assert.Throws<ArgumentOutOfRangeException>(() => PagingOptions.ForPage(5' 0));
Magic Number,MicroLite.Tests,WhenCallingForPageForTheSecondPage,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TheOffsetShouldEqualThePageNumberLessOneMultipliedByTheResultsPerPage,The following statement contains a magic number: Assert.Equal(50' this.pagingOptions.Offset);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountAndOffsetMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.ForPage(page: 10' resultsPerPage: 50);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheCountDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.ForPage(page: 10' resultsPerPage: 50);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions1 = PagingOptions.ForPage(page: 10' resultsPerPage: 25);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.ForPage(page: 10' resultsPerPage: 50);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheOffsetDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var pagingOptions2 = PagingOptions.ForPage(page: 10' resultsPerPage: 50);
Magic Number,MicroLite.Tests,WhenCallingSkipTakeAndSkipIsBelowZero,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,AnArgumentOutOfRangeExceptionShouldBeThrown,The following statement contains a magic number: var exception = Assert.Throws<ArgumentOutOfRangeException>(() => PagingOptions.SkipTake(-1' 10));
Magic Number,MicroLite.Tests,WhenCallingSkipTakeAndTakeIsBelowOne,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\PagingOptionsTests.cs,AnArgumentOutOfRangeExceptionShouldBeThrown,The following statement contains a magic number: var exception = Assert.Throws<ArgumentOutOfRangeException>(() => PagingOptions.SkipTake(10' 0));
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheDbTypeDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheDbTypeDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = new SqlArgument(10' DbType.Int64);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheValueAndDbTypeMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheValueAndDbTypeMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheValueDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingEqualsAndTheValueDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = new SqlArgument(20' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheDbTypeDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheDbTypeDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = new SqlArgument(10' DbType.Int64);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheValueAndDbTypeMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheValueAndDbTypeMatch,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,FalseShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheValueDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument1 = new SqlArgument(10' DbType.Int32);
Magic Number,MicroLite.Tests,WhenCallingNotEqualsAndTheValueDiffers,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TrueShouldBeReturned,The following statement contains a magic number: var sqlArgument2 = new SqlArgument(20' DbType.Int32);
Magic Number,MicroLite.Tests,WhenConstructedWithAValueAndDbType,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlArgumentTests.cs,TheValueShouldBeSet,The following statement contains a magic number: Assert.Equal(10' this.sqlArgument.Value);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsFalseIfCommandTextDiffers,The following statement contains a magic number: var sqlQuery1 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 10);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsFalseIfCommandTextDiffers,The following statement contains a magic number: var sqlQuery2 = new SqlQuery("SELECT * FROM Table WHERE Id <> @p0"' 10);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsFalseIfCommandTextMatchesButArgumentsDiffer,The following statement contains a magic number: var sqlQuery1 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 10);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsFalseIfCommandTextMatchesButArgumentsDiffer,The following statement contains a magic number: var sqlQuery2 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 35);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsFalseIfCommandTextMatchesButSqlArgumentsDiffer,The following statement contains a magic number: var sqlQuery1 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' new SqlArgument(10' DbType.Int32));
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsFalseIfCommandTextMatchesButSqlArgumentsDiffer,The following statement contains a magic number: var sqlQuery2 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' new SqlArgument(35' DbType.Int32));
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsTrueIfCommandTextMatchesAndArgumentsMatch,The following statement contains a magic number: var sqlQuery1 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 10);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsTrueIfCommandTextMatchesAndArgumentsMatch,The following statement contains a magic number: var sqlQuery2 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 10);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsTrueIfCommandTextMatchesAndSqlArgumentsMatch,The following statement contains a magic number: var sqlQuery1 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' new SqlArgument(10' DbType.Int32));
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,EqualsReturnsTrueIfCommandTextMatchesAndSqlArgumentsMatch,The following statement contains a magic number: var sqlQuery2 = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' new SqlArgument(10' DbType.Int32));
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,GetHashCodeValue,The following statement contains a magic number: var sqlQuery = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 10);
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,TimeoutCanBeChanged,The following statement contains a magic number: var timeout = 180;
Magic Number,MicroLite.Tests,SqlQueryTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,ToStringReturnsCommandText,The following statement contains a magic number: var sqlQuery = new SqlQuery("SELECT * FROM Table WHERE Id = @p0"' 10);
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextAndArguments,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,WhenConstructedWithCommandTextAndArguments,The following statement contains a magic number: this.arguments = new object[] { 10 };
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextAndArguments,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,TheArgumentsDbTypeAndValueShouldBeSet,The following statement contains a magic number: Assert.Equal(10' this.sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextAndArguments,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,TheTimeoutDefaultsTo30,The following statement contains a magic number: Assert.Equal(30' this.sqlQuery.Timeout);
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextAndSqlArguments,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,WhenConstructedWithCommandTextAndSqlArguments,The following statement contains a magic number: this.sqlArguments = new[] { new SqlArgument(10' DbType.Int32) };
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextAndSqlArguments,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,TheArgumentsDbTypeAndValueShouldBeSet,The following statement contains a magic number: Assert.Equal(10' this.sqlQuery.Arguments[0].Value);
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextAndSqlArguments,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,TheTimeoutDefaultsTo30,The following statement contains a magic number: Assert.Equal(30' this.sqlQuery.Timeout);
Magic Number,MicroLite.Tests,WhenConstructedWithCommandTextOnly,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlQueryTests.cs,TheTimeoutDefaultsTo30,The following statement contains a magic number: Assert.Equal(30' this.sqlQuery.Timeout);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetFirstParameterPositionWithALabelShouldNotMatchTheLabelStatement,The following statement contains a magic number: Assert.Equal(68' position);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetFirstParameterPositionWithAQuotedStringAndParameters,The following statement contains a magic number: Assert.Equal(49' position);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetFirstParameterPositionWithAtParameters,The following statement contains a magic number: Assert.Equal(36' position);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetFirstParameterPositionWithColonParameters,The following statement contains a magic number: Assert.Equal(36' position);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetFirstParameterPositionWithQuestionMarkParameters,The following statement contains a magic number: Assert.Equal(36' position);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithAtPrefix,The following statement contains a magic number: Assert.Equal(2' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithAtPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: Assert.Equal(2' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithAtPrefixAndNoAdditionalPrefixCharacter,The following statement contains a magic number: Assert.Equal(2' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithColonPrefix,The following statement contains a magic number: Assert.Equal(2' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithColonPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: Assert.Equal(2' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithColonPrefixAndNoAdditionalPrefixCharacter,The following statement contains a magic number: Assert.Equal(2' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,GetParameterNamesWithTwentyTwoNamedParameters,The following statement contains a magic number: Assert.Equal(22' parameterNames.Count);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = @p0 OR @p0 IS NULL) AND Column2 = @p1"' totalArgumentCount: 2);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithAtPrefix_AdditionalParameters,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = @p0 OR @p0 IS NULL) AND Column2 = @p1"' totalArgumentCount: 12);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithAtPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = @param0 OR @param0 IS NULL) AND Column2 = @param1"' totalArgumentCount: 2);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = :p0 OR :p0 IS NULL) AND Column2 = :p1"' totalArgumentCount: 2);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithColonPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = :param0 OR :param0 IS NULL) AND Column2 = :param1"' totalArgumentCount: 2);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21)"' totalArgumentCount: 22);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoAtPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] <= @param1 AND [Column3] IN(@param2' @param3' @param4' @param5' @param6' @param7' @param8' @param9' @param10' @param11' @param12' @param13' @param14' @param15' @param16' @param17' @param18' @param19' @param20' @param21)"' totalArgumentCount: 22);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21)"' totalArgumentCount: 22);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoExistingArgumentsWithTwentyTwoColonPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :param0 AND [Column2] <= :param1 AND [Column3] IN(:param2' :param3' :param4' :param5' :param6' :param7' :param8' :param9' :param10' :param11' :param12' :param13' :param14' :param15' :param16' :param17' :param18' :param19' :param20' :param21)"' totalArgumentCount: 22);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersNoParameters,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 IS NULL)"' totalArgumentCount: 5);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWith10ExistingAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] = @p2"' totalArgumentCount: 13);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWith10ExistingColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] = :p2"' totalArgumentCount: 13);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = @p0 OR @p0 IS NULL) AND Column2 = @p1"' totalArgumentCount: 4);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithAtPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = @param0 OR @param0 IS NULL) AND Column2 = @param1"' totalArgumentCount: 4);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = :p0 OR :p0 IS NULL) AND Column2 = :p1"' totalArgumentCount: 4);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithColonPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("(Column1 = :param0 OR :param0 IS NULL) AND Column2 = :param1"' totalArgumentCount: 4);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsEndOfLineAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20) AND [Column4] = @p21"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsEndOfLineColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20) AND [Column4] = :p21"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsFollowedByStatementSeparatorAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20) AND [Column4] = @p21;"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAndLastIsFollowedByStatementSeparatorColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20) AND [Column4] = :p21;"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAtPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] <= @p1 AND [Column3] IN(@p2' @p3' @p4' @p5' @p6' @p7' @p8' @p9' @p10' @p11' @p12' @p13' @p14' @p15' @p16' @p17' @p18' @p19' @p20' @p21)"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoAtPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] <= @param1 AND [Column3] IN(@param2' @param3' @param4' @param5' @param6' @param7' @param8' @param9' @param10' @param11' @param12' @param13' @param14' @param15' @param16' @param17' @param18' @param19' @param20' @param21)"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] <= :p1 AND [Column3] IN(:p2' :p3' :p4' :p5' :p6' :p7' :p8' :p9' :p10' :p11' :p12' :p13' :p14' :p15' :p16' :p17' :p18' :p19' :p20' :p21)"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithTwentyTwoColonPrefixAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :param0 AND [Column2] <= :param1 AND [Column3] IN(:param2' :param3' :param4' :param5' :param6' :param7' :param8' :param9' :param10' :param11' :param12' :param13' :param14' :param15' :param16' :param17' :param18' :param19' :param20' :param21)"' totalArgumentCount: 25);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeAndARepeatedValueAndLastIsFollowedByStatementSeparatorColonPrefix,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] IN (:p1' :p3) AND [Column3] IN (:p2' :p3);"' totalArgumentCount: 12);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithFourAtPrefixAndARepeatedValue,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @p0 AND [Column2] IN (@p1' @p2) AND [Column3] IN (@p3' @p2)"' totalArgumentCount: 12);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeAtPrefixAndARepeatedValueAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= @param0 AND [Column2] IN (@param1' @param3) AND [Column3] IN(@param2' @param3)"' totalArgumentCount: 12);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeColonPrefixAndARepeatedValue,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM [Table1] WHERE [Column1] >= :p0 AND [Column2] IN (:p1' :p3) AND [Column3] IN (:p2' :p3)"' totalArgumentCount: 12);
Magic Number,MicroLite.Tests,SqlUtilityTests,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\SqlUtilityTests.cs,ReNumberParametersWithExistingArgumentsWithThreeColonPrefixAndARepeatedValueAndMoreThanPrefixCharacter,The following statement contains a magic number: var commandText = SqlUtility.RenumberParameters("SELECT * FROM[Table1] WHERE[Column1] >= :param8 AND[Column2] IN(:param9' :param11) AND[Column3] IN(:param10' :param11)"' totalArgumentCount: 12);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValue_ForANullableEnumWithANonNullValue,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValue_ForANullableEnumWithANonNullValue,The following statement contains a magic number: this.result = typeConverter.ConvertFromDbValue(3' typeof(Int32EnumStatus?));
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValue_WithALong,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValue_WithALong,The following statement contains a magic number: this.result = typeConverter.ConvertFromDbValue((long)4' typeof(Int64EnumStatus));
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValue_WithAnInt,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValue_WithAnInt,The following statement contains a magic number: this.result = typeConverter.ConvertFromDbValue((int)3' typeof(Int32EnumStatus));
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValue_WithAShort,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValue_WithAShort,The following statement contains a magic number: this.result = typeConverter.ConvertFromDbValue((short)2' typeof(Int16EnumStatus));
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsInt,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsInt,The following statement contains a magic number: this.mockReader.Setup(x => x.GetInt32(0)).Returns(3);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsLong,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsLong,The following statement contains a magic number: this.mockReader.Setup(x => x.GetInt64(0)).Returns((long)4);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsShort,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsShort,The following statement contains a magic number: this.mockReader.Setup(x => x.GetInt16(0)).Returns((short)2);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsUInt,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,WhenCallingConvertFromDbValueWithReader_AndTheEnumStorageIsUInt,The following statement contains a magic number: this.mockReader.Setup(x => x[0]).Returns(3);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertToDbValue_ForAnEnumWithIntStorage,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,TheResultValueShouldBeCorrect,The following statement contains a magic number: Assert.Equal((int)3' result);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertToDbValue_ForAnEnumWithLongStorage,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,TheResultValueShouldBeCorrect,The following statement contains a magic number: Assert.Equal((long)4' result);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingConvertToDbValue_ForAnEnumWithShortStorage,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\EnumTypeConverterTests.cs,TheResultValueShouldBeCorrect,The following statement contains a magic number: Assert.Equal((short)2' result);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingTheConstructor,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\TypeConverterCollectionTests.cs,ThereShouldBe4RegisteredTypeConverters,The following statement contains a magic number: Assert.Equal(4' this.collection.Count);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingTheConstructor,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\TypeConverterCollectionTests.cs,TheTimeSpanTypeConverterShouldBePositionThree,The following statement contains a magic number: Assert.IsType<TimeSpanTypeConverter>(this.collection[2]);
Magic Number,MicroLite.Tests.TypeConverters,WhenCallingTheConstructor,D:\research\architectureSmells\repos1\TrevorPilley_MicroLite\MicroLite.Tests\TypeConverters\TypeConverterCollectionTests.cs,TheXDocumentTypeConverterShouldBePositionThree,The following statement contains a magic number: Assert.IsType<XDocumentTypeConverter>(this.collection[3]);
