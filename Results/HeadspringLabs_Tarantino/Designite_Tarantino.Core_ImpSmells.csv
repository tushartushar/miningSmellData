Implementation smell,Namespace,Class,File,Method,Description
Long Method,Tarantino.Core.Commons.Services.DataFileManagement.Impl,ExcelWorkbookReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\DataFileManagement\Impl\ExcelWorkbookReader.cs,readWorksheet,The method has 123 lines of code.
Complex Method,Tarantino.Core.Commons.Services.DataFileManagement.Impl,ExcelWorkbookReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\DataFileManagement\Impl\ExcelWorkbookReader.cs,readWorkbookGlobals,Cyclomatic complexity of the method is 57
Complex Method,Tarantino.Core.Commons.Services.DataFileManagement.Impl,ExcelWorkbookReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\DataFileManagement\Impl\ExcelWorkbookReader.cs,readWorksheet,Cyclomatic complexity of the method is 60
Long Parameter List,Tarantino.Core.WebManagement.Services.Views.Impl,ApplicationListingBodyView,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Views\Impl\ApplicationListingBodyView.cs,ApplicationListingBodyView,The method has 5 parameters.
Long Statement,Tarantino.Core.Commons.Model.Enumerations,BoundedEnumeration,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Model\Enumerations\BoundedEnumeration.cs,FromBoundedValue,The length of the statement  "		return (Convert.ToDouble (boundedValue) >= Convert.ToDouble (val.Lower) && Convert.ToDouble (boundedValue) <= Convert.ToDouble (val.Upper)); " is 140.
Long Statement,Tarantino.Core.Commons.Model.Specifications,AndSpecification,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Model\Specifications\AndSpecification.cs,IsSatisfiedBy,The length of the statement  "	return _leftSideSpec.IsSatisfiedBy (objectToTestSatisfaction) && _rightSideSpec.IsSatisfiedBy (objectToTestSatisfaction); " is 121.
Long Statement,Tarantino.Core.Commons.Model.Specifications,OrSpecification,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Model\Specifications\OrSpecification.cs,IsSatisfiedBy,The length of the statement  "	return _leftSideSpec.IsSatisfiedBy (objectToTestSatisfaction) || _rightSideSpec.IsSatisfiedBy (objectToTestSatisfaction); " is 121.
Long Statement,Tarantino.Core.Commons.Services.Environment.Impl,FileSystem,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\Environment\Impl\FileSystem.cs,ReadIntoFileStream,The length of the statement  "			throw new ApplicationException ("The file you chose cannot be read because it is open in another application.  Please close the file in the other application and try again."); " is 175.
Long Statement,Tarantino.Core.Commons.Services.Logging,Logger,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\Logging\Logger.cs,serializeException,The length of the statement  "	exceptionMessage = string.Format ("{0}{1}{2}\n{3}"' exceptionMessage' (exceptionMessage == string.Empty) ? string.Empty : "\n\n"' e.Message' e.StackTrace); " is 155.
Long Statement,Tarantino.Core.Commons.Services.Configuration.Impl,ConfigurationReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\Configuration\Impl\ConfigurationReader.cs,GetRequiredSetting,The length of the statement  "		string message = string.Format ("The application setting '{0}' does not exist in the application configuration file."' key); " is 124.
Long Statement,Tarantino.Core.Commons.Services.Security.Impl,AesEncryptionEngine,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\Security\Impl\AesEncryptionEngine.cs,Decrypt,The length of the statement  "	Rfc2898DeriveBytes password = new Rfc2898DeriveBytes (encryptionPassword' saltValueBytes' encryptionPasswordIterations); " is 120.
Long Statement,Tarantino.Core.Commons.Services.Security.Impl,AesEncryptionEngine,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\Security\Impl\AesEncryptionEngine.cs,Encrypt,The length of the statement  "	Rfc2898DeriveBytes password = new Rfc2898DeriveBytes (encryptionPassword' saltValueBytes' encryptionPasswordIterations); " is 120.
Long Statement,Tarantino.Core.Commons.Services.Web.Impl,SmtpMailSender,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\Web\Impl\SmtpMailSender.cs,SendMail,The length of the statement  "		NetworkCredential SMTPUserInfo = new NetworkCredential (_applicationSettings.GetSmtpUsername ()' _applicationSettings.GetSmtpPassword ()); " is 138.
Long Statement,Tarantino.Core.WebManagement.Services.Impl,CurrentApplicationInstanceRetriever,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Impl\CurrentApplicationInstanceRetriever.cs,GetApplicationInstance,The length of the statement  "	ApplicationInstance instance = _repository.GetByMaintenanceHostHeaderAndMachineName (applicationDomainName' machineName); " is 121.
Long Statement,Tarantino.Core.WebManagement.Services.Views.Impl,LoadBalancerBodyView,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Views\Impl\LoadBalancerBodyView.cs,BuildHtml,The length of the statement  "		changeStateLink = string.Format (_changeStateLinkTemplate' LoadBalanceStatusManager.ENABLED_PARAM' newState' newStateLabel); " is 124.
Empty Catch Block,Tarantino.Core.WebManagement.Services.Impl,MaintenancePageRedirector,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Impl\MaintenancePageRedirector.cs,RedirectToMaintenancePageIfAppropriate,The method has an empty catch block.
Magic Number,Tarantino.Core.Commons.Services.DataFileManagement.Impl,ExcelWorkbookReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\DataFileManagement\Impl\ExcelWorkbookReader.cs,readWorksheet,The following statement contains a magic number: if (idx != null) {  	idx.IsV8 = isV8;  	DataTable dt = new DataTable (sheet.Name);  	XlsBiffRecord trec;  	XlsBiffDimensions dims = null;  	do {  		trec = m_stream.Read ();  		if (trec.ID == BIFFRECORDTYPE.DIMENSIONS) {  			dims = (XlsBiffDimensions)trec;  			break;  		}  	}  	while (trec.ID != BIFFRECORDTYPE.ROW);  	int maxCol = 256;  	if (dims != null) {  		dims.IsV8 = isV8;  		maxCol = dims.LastColumn;  		sheet.Dimensions = dims;  	}  	for (int i = 0; i < maxCol; i++)  		dt.Columns.Add ("Column" + (i + 1).ToString ()' typeof(string));  	sheet.Data = dt;  	uint maxRow = idx.LastExistingRow;  	if (idx.LastExistingRow <= idx.FirstExistingRow)  		return true;  	dt.BeginLoadData ();  	for (int i = 0; i <= maxRow; i++)  		dt.Rows.Add (dt.NewRow ());  	uint[] dbCellAddrs = idx.DbCellAddresses;  	for (int i = 0; i < dbCellAddrs.Length; i++) {  		XlsBiffDbCell dbCell = (XlsBiffDbCell)m_stream.ReadAt ((int)dbCellAddrs [i]);  		XlsBiffRow row = null;  		int offs = (int)dbCell.RowAddress;  		do {  			row = m_stream.ReadAt (offs) as XlsBiffRow;  			if (row == null)  				break;  			offs += row.Size;  		}  		while (row != null);  		while (true) {  			XlsBiffRecord rec = m_stream.ReadAt (offs);  			offs += rec.Size;  			if (rec is XlsBiffDbCell)  				break;  			if (rec is XlsBiffEOF)  				break;  			XlsBiffBlankCell cell = rec as XlsBiffBlankCell;  			if (cell == null) {  				continue;  			}  			if (cell.ColumnIndex >= maxCol)  				continue;  			if (cell.RowIndex > maxRow)  				continue;  			switch (cell.ID) {  			case BIFFRECORDTYPE.INTEGER:  			case BIFFRECORDTYPE.INTEGER_OLD:  				dt.Rows [cell.RowIndex] [cell.ColumnIndex] = ((XlsBiffIntegerCell)cell).Value.ToString ();  				break;  			case BIFFRECORDTYPE.NUMBER:  			case BIFFRECORDTYPE.NUMBER_OLD:  				dt.Rows [cell.RowIndex] [cell.ColumnIndex] = formatNumber (((XlsBiffNumberCell)cell).Value);  				break;  			case BIFFRECORDTYPE.LABEL:  			case BIFFRECORDTYPE.LABEL_OLD:  			case BIFFRECORDTYPE.RSTRING:  				dt.Rows [cell.RowIndex] [cell.ColumnIndex] = ((XlsBiffLabelCell)cell).Value;  				break;  			case BIFFRECORDTYPE.LABELSST:  				{  					string tmp = m_globals.SST.GetString (((XlsBiffLabelSSTCell)cell).SSTIndex);  					dt.Rows [cell.RowIndex] [cell.ColumnIndex] = tmp;  				}  				break;  			case BIFFRECORDTYPE.RK:  				dt.Rows [cell.RowIndex] [cell.ColumnIndex] = formatNumber (((XlsBiffRKCell)cell).Value);  				break;  			case BIFFRECORDTYPE.MULRK:  				for (ushort j = cell.ColumnIndex; j <= ((XlsBiffMulRKCell)cell).LastColumnIndex; j++)  					dt.Rows [cell.RowIndex] [j] = formatNumber (((XlsBiffMulRKCell)cell).GetValue (j));  				break;  			case BIFFRECORDTYPE.BLANK:  			case BIFFRECORDTYPE.BLANK_OLD:  			case BIFFRECORDTYPE.MULBLANK:  				// Skip blank cells  				break;  			case BIFFRECORDTYPE.FORMULA:  			case BIFFRECORDTYPE.FORMULA_OLD:  				//Turned of unicode encoding  				//((XlsBiffFormulaCell)cell).UseEncoding = m_encoding;  				((XlsBiffFormulaCell)cell).UseEncoding = Encoding.Default;  				object val = ((XlsBiffFormulaCell)cell).Value;  				if (val == null)  					val = string.Empty;  				else if (val is FORMULAERROR)  					val = "#" + ((FORMULAERROR)val).ToString ();  				else if (val is double)  					val = formatNumber ((double)val);  				dt.Rows [cell.RowIndex] [cell.ColumnIndex] = val.ToString ();  				break;  			case BIFFRECORDTYPE.BOOLERR:  				dt.Rows [cell.RowIndex] [cell.ColumnIndex] = ((XlsBiffBoolErrCell)cell).Value;  				break;  			default:  				break;  			}  		}  	}  	dt.EndLoadData ();  }  else {  	return false;  }  
Magic Number,Tarantino.Core.Commons.Services.DataFileManagement.Impl,ExcelWorkbookReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\DataFileManagement\Impl\ExcelWorkbookReader.cs,formatNumber,The following statement contains a magic number: if (Math.Floor (x) == x)  	return Math.Floor (x).ToString ();  else  	return Math.Round (x' 2).ToString (CultureInfo.InvariantCulture);  
Magic Number,Tarantino.Core.Commons.Services.DataFileManagement.Impl,ExcelWorkbookReader,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\Commons\Services\DataFileManagement\Impl\ExcelWorkbookReader.cs,formatNumber,The following statement contains a magic number: return Math.Round (x' 2).ToString (CultureInfo.InvariantCulture);  
Magic Number,Tarantino.Core.WebManagement.Services.Impl,LoadBalanceStatusManager,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Impl\LoadBalanceStatusManager.cs,HandleLoadBalanceRequest,The following statement contains a magic number: if (enabledParameter != null) {  	bool enabled = bool.Parse (enabledParameter);  	errorMessage = _statusUpdater.SetStatus (enabled);  }  else if (!currentInstance.AvailableForLoadBalancing) {  	_context.SetHttpResponseStatus (400' "This application has been turned off");  }  
Magic Number,Tarantino.Core.WebManagement.Services.Impl,LoadBalanceStatusManager,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Impl\LoadBalanceStatusManager.cs,HandleLoadBalanceRequest,The following statement contains a magic number: if (!currentInstance.AvailableForLoadBalancing) {  	_context.SetHttpResponseStatus (400' "This application has been turned off");  }  
Magic Number,Tarantino.Core.WebManagement.Services.Impl,LoadBalanceStatusManager,C:\repos\HeadspringLabs_Tarantino\src\Tarantino.Core\WebManagement\Services\Impl\LoadBalanceStatusManager.cs,HandleLoadBalanceRequest,The following statement contains a magic number: _context.SetHttpResponseStatus (400' "This application has been turned off");  
