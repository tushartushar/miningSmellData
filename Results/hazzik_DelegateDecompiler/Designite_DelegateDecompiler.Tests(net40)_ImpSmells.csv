Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,TwoIifs2,The length of the statement  "            Expression<Func<Employee' string' bool>> expected = (u' term) => (u.FirstName != null && (u.FirstName.Contains(term) || term.Contains(u.FirstName))) && !u.IsBlocked; " is 165.
Long Statement,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,TwoIifs2,The length of the statement  "            Func<Employee' string' bool> compiled = (u'term) => (u.FirstName != null && (u.FirstName.Contains(term) || term.Contains(u.FirstName))) && !u.IsBlocked; " is 152.
Long Statement,DelegateDecompiler.Tests,ConfigurationTestsBase,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConfigurationTestsBase.cs,BuildInstanceSetter,The length of the statement  "            return Expression.Lambda<Action<Configuration>>(Expression.Assign(Expression.Field(null' typeof (Configuration)' "instance")' arg)' arg).Compile(); " is 147.
Long Statement,DelegateDecompiler.Tests,Issue14,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue14.cs,Test,The length of the statement  "            Expression<Func<MyClass' bool>> expected = x => x.Mode == MyClass.ValidityMode.None || (x.Mode == MyClass.ValidityMode.UntilSpecificDateTime ? x.ValidUntil > DateTime.Now.AddMinutes(5) : x.StartTime.AddMinutes(x.ValidForXMinutes) > DateTime.Now.AddMinutes(5)); " is 260.
Long Statement,DelegateDecompiler.Tests,Issue14,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue14.cs,Test,The length of the statement  "            Func<MyClass' bool> compiled = x => x.Mode == MyClass.ValidityMode.None || (x.Mode == MyClass.ValidityMode.UntilSpecificDateTime ? x.ValidUntil > DateTime.Now.AddMinutes(5) : x.StartTime.AddMinutes(x.ValidForXMinutes) > DateTime.Now.AddMinutes(5)); " is 248.
Long Statement,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaAndConstant,The length of the statement  "            Expression<Func<IOrderedEnumerable<int>>> expected = () => Enumerable.Range(1' 10).OrderBy(x => x' Comparer<int>.Default); " is 122.
Long Statement,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue39,The length of the statement  "                            where (employee.NullableDate.HasValue && (employee.NullableInt.HasValue && employee.NullableDate.Value.AddDays(employee.NullableInt.Value) > DateTime.Now)) " is 155.
Long Statement,DelegateDecompiler.Tests,StringConcatTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\StringConcatTests.cs,StringConcat5,The length of the statement  "            Expression<Func<string' string' string' string' string' string>> expected = (u' w' x' y' z) => u + " " + w + " " + x + " " + y + " " + z; " is 137.
Long Statement,DelegateDecompiler.Tests,StringConcatTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\StringConcatTests.cs,StringConcat5,The length of the statement  "            Func<string' string' string' string' string' string> compiled = (u' w' x' y' z) => u + " " + w + " " + x + " " + y + " " + z; " is 125.
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithBounds,The following statement contains a magic number: Expression<Func<int[]>> expected = () => new int[10];
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithBounds,The following statement contains a magic number: Func<int[]> compiled = () => new int[10];
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithInit2,The following statement contains a magic number: Expression<Func<int[]>> expected = () => new[] { 1' 2 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithInit2,The following statement contains a magic number: Func<int[]> compiled = () => new[] { 1' 2 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithInit3,The following statement contains a magic number: Expression<Func<int[]>> expected = () => new[] { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithInit3,The following statement contains a magic number: Expression<Func<int[]>> expected = () => new[] { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithInit3,The following statement contains a magic number: Func<int[]> compiled = () => new[] { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayWithInit3,The following statement contains a magic number: Func<int[]> compiled = () => new[] { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { x' 2 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { x' 2 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { x' 2' 3' 4 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { x' 2' 3' 4 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { x' 2' 3' 4 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { x' 2' 3' 4 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { x' 2' 3' 4 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { x' 2' 3' 4 };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4A,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { 1' 2' 3' 4' x };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4A,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { 1' 2' 3' 4' x };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4A,The following statement contains a magic number: Expression<Func<int' int[]>> expected = x => new[] { 1' 2' 3' 4' x };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4A,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { 1' 2' 3' 4' x };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4A,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { 1' 2' 3' 4' x };
Magic Number,DelegateDecompiler.Tests,ArrayTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ArrayTests.cs,DecompileArrayOfIntWithInitFromParam4A,The following statement contains a magic number: Func<int' int[]> compiled = x => new[] { 1' 2' 3' 4' x };
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,NullableCoalesce,The following statement contains a magic number: Expression<Func<int?' bool>> expected = e => (e ?? 100) == 100;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,NullableCoalesce,The following statement contains a magic number: Expression<Func<int?' bool>> expected = e => (e ?? 100) == 100;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,NullableCoalesce,The following statement contains a magic number: Func<int?' bool> compiled = e => (e ?? 100) == 100;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,NullableCoalesce,The following statement contains a magic number: Func<int?' bool> compiled = e => (e ?? 100) == 100;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Expression<Func<int' bool>> expected = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Expression<Func<int' bool>> expected = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Expression<Func<int' bool>> expected = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Expression<Func<int' bool>> expected = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Func<int' bool> compiled = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Func<int' bool> compiled = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Func<int' bool> compiled = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,Issue58,The following statement contains a magic number: Func<int' bool> compiled = x => (x <= 3 ? (x <= 3 ? 2 : 3) : 1) == 1;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,IfElseStatementWithTwoLocalVariables,The following statement contains a magic number: Expression<Func<int' int' int>> expected = (a' b) => a + b + (a >= b ? 2 : 1) + 10;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,IfElseStatementWithTwoLocalVariables,The following statement contains a magic number: Expression<Func<int' int' int>> expected = (a' b) => a + b + (a >= b ? 2 : 1) + 10;
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,IfElseStatementWithTwoLocalVariables,The following statement contains a magic number: Func<int' int' int> compiled = (a' b) =>              {                  var c = 0;                  var d = 10;                  if (a < b)                  {                      c = 1;                  }                  else                  {                      c = 2;                  }                  return a + b + c + d;              };
Magic Number,DelegateDecompiler.Tests,ConditionalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ConditionalTests.cs,IfElseStatementWithTwoLocalVariables,The following statement contains a magic number: Func<int' int' int> compiled = (a' b) =>              {                  var c = 0;                  var d = 10;                  if (a < b)                  {                      c = 1;                  }                  else                  {                      c = 2;                  }                  return a + b + c + d;              };
Magic Number,DelegateDecompiler.Tests,DateTimeTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DateTimeTests.cs,TestAddYears,The following statement contains a magic number: Func<DateTime' bool> actual = dt => dt < DbFunctions.AddYears(DateTime.Now' -10);
Magic Number,DelegateDecompiler.Tests,DateTimeTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DateTimeTests.cs,TestAddYears,The following statement contains a magic number: Expression< Func<DateTime' bool>> expected = dt => dt < DbFunctions.AddYears(DateTime.Now' -10);
Magic Number,DelegateDecompiler.Tests,DateTimeTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DateTimeTests.cs,TestAddYearsNullable,The following statement contains a magic number: Func<DateTime' bool?> actual = dt => dt < DbFunctions.AddYears(DateTime.Now' -10);
Magic Number,DelegateDecompiler.Tests,DateTimeTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DateTimeTests.cs,TestAddYearsNullable,The following statement contains a magic number: Expression< Func<DateTime' bool?>> expected = dt => dt < DbFunctions.AddYears(DateTime.Now' -10);
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalCast,The following statement contains a magic number: Expression<Func<decimal>> expected1 = () => (decimal) 1.21;
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalCast,The following statement contains a magic number: Expression<Func<decimal>> expected2 = () => new decimal(121' 0' 0' false' 2);
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalCast,The following statement contains a magic number: Expression<Func<decimal>> expected2 = () => new decimal(121' 0' 0' false' 2);
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalCast,The following statement contains a magic number: Func<decimal> compiled = () => (decimal) 1.21;
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalConstructor,The following statement contains a magic number: Expression<Func<decimal>> expected1 = () => 1.21M;
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalConstructor,The following statement contains a magic number: Expression<Func<decimal>> expected2 = () => new decimal(121' 0' 0' false' 2);
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalConstructor,The following statement contains a magic number: Expression<Func<decimal>> expected2 = () => new decimal(121' 0' 0' false' 2);
Magic Number,DelegateDecompiler.Tests,DecimalTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecimalTests.cs,DecimalConstructor,The following statement contains a magic number: Func<decimal> compiled = () => 1.21M;
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithShl,The following statement contains a magic number: Expression<Func<int' int' int>> expected = (x' y) => x << (y & 31);
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithShr,The following statement contains a magic number: Expression<Func<int' int' int>> expected = (x' y) => x >> (y & 31);
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithAddConstant127,The following statement contains a magic number: Expression<Func<int' int>> expected = x => x + 127;
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithAddConstant127,The following statement contains a magic number: Func<int' int> compiled = x => x + 127;
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithAddConstant128,The following statement contains a magic number: Expression<Func<int' int>> expected = x => x + 128;
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithAddConstant128,The following statement contains a magic number: Func<int' int> compiled = x => x + 128;
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithAddConstant65535,The following statement contains a magic number: Expression<Func<int' int>> expected = x => x + 65535;
Magic Number,DelegateDecompiler.Tests,DecompileExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\DecompileExtensionsTests.cs,ShouldBeAbleToDecompileExpressionWithAddConstant65535,The following statement contains a magic number: Func<int' int> compiled = x => x + 65535;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastSubtraction,The following statement contains a magic number: Expression<Func<TestEnum' int>> expected = x => (int)x - 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastSubtraction,The following statement contains a magic number: Func<TestEnum' int> compiled = x => (int)x - 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastMod,The following statement contains a magic number: Expression<Func<TestEnum' int>> expected = x => (int)x % 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastMod,The following statement contains a magic number: Func<TestEnum' int> compiled = x => (int)x % 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastEquals,The following statement contains a magic number: Expression<Func<TestEnum' bool>> expected = x => (int)x == 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastEquals,The following statement contains a magic number: Func<TestEnum' bool> compiled = x => (int)x == 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastGreaterThan,The following statement contains a magic number: Expression<Func<TestEnum' bool>> expected = x => (int)x > 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,TestEnumCastGreaterThan,The following statement contains a magic number: Func<TestEnum' bool> compiled = x => (int)x > 10;
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,Issue61,The following statement contains a magic number: Expression<Func<decimal' decimal>> expected = x => Decimal.Round(x' 3' MidpointRounding.AwayFromZero);
Magic Number,DelegateDecompiler.Tests,EnumTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\EnumTests.cs,Issue61,The following statement contains a magic number: Func<decimal' decimal> compiled = x => Decimal.Round(x' 3' MidpointRounding.AwayFromZero);
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,MethodAcceptingDecimal,The following statement contains a magic number: Expression<Func<string>> expected1 = () => Method((decimal) 1.23);
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,MethodAcceptingDecimal,The following statement contains a magic number: Expression<Func<string>> expected2 = () => Method(new decimal(123' 0' 0' false' 2));
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,MethodAcceptingDecimal,The following statement contains a magic number: Expression<Func<string>> expected2 = () => Method(new decimal(123' 0' 0' false' 2));
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,MethodAcceptingDecimal,The following statement contains a magic number: Func<string> compiled = () => Method((decimal)1.23);
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,ConstantDecimalToString,The following statement contains a magic number: Expression<Func<string>> expected1 = () => ((decimal)1.23).ToString();
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,ConstantDecimalToString,The following statement contains a magic number: Expression<Func<string>> expected2 = () => new decimal(123' 0' 0' false' 2).ToString();
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,ConstantDecimalToString,The following statement contains a magic number: Expression<Func<string>> expected2 = () => new decimal(123' 0' 0' false' 2).ToString();
Magic Number,DelegateDecompiler.Tests,IntegerConstantTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\IntegerConstantTests.cs,ConstantDecimalToString,The following statement contains a magic number: Func<string> compiled = () => ((decimal)1.23).ToString();
Magic Number,DelegateDecompiler.Tests,Issue13,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue13.cs,Test,The following statement contains a magic number: var users = new[]              {                  new User                  {                      Level = UserLevel.All                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 6}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 6}                      }'                      Level = UserLevel.Region                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 5}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 7}                      }'                      Level = UserLevel.Region                  }              };
Magic Number,DelegateDecompiler.Tests,Issue13,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue13.cs,Test,The following statement contains a magic number: var users = new[]              {                  new User                  {                      Level = UserLevel.All                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 6}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 6}                      }'                      Level = UserLevel.Region                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 5}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 7}                      }'                      Level = UserLevel.Region                  }              };
Magic Number,DelegateDecompiler.Tests,Issue13,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue13.cs,Test,The following statement contains a magic number: var users = new[]              {                  new User                  {                      Level = UserLevel.All                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 6}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 6}                      }'                      Level = UserLevel.Region                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 5}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 7}                      }'                      Level = UserLevel.Region                  }              };
Magic Number,DelegateDecompiler.Tests,Issue13,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue13.cs,Test,The following statement contains a magic number: var users = new[]              {                  new User                  {                      Level = UserLevel.All                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 6}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 6}                      }'                      Level = UserLevel.Region                  }'                  new User                  {                      Company = new Company                      {                          Regions =                          {                              new Region {ID = 5}                          }                      }'                      Level = UserLevel.Company                  }'                  new User                  {                      AllowedRegions =                      {                          new Region {ID = 7}                      }'                      Level = UserLevel.Region                  }              };
Magic Number,DelegateDecompiler.Tests,Issue13,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue13.cs,Test,The following statement contains a magic number: var testRegionID = 6;
Magic Number,DelegateDecompiler.Tests,Issue13,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue13.cs,Test,The following statement contains a magic number: Assert.That(result' Has.Count.EqualTo(3));
Magic Number,DelegateDecompiler.Tests,Issue14,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue14.cs,Test,The following statement contains a magic number: Expression<Func<MyClass' bool>> expected = x => x.Mode == MyClass.ValidityMode.None || (x.Mode == MyClass.ValidityMode.UntilSpecificDateTime ? x.ValidUntil > DateTime.Now.AddMinutes(5) : x.StartTime.AddMinutes(x.ValidForXMinutes) > DateTime.Now.AddMinutes(5));
Magic Number,DelegateDecompiler.Tests,Issue14,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue14.cs,Test,The following statement contains a magic number: Expression<Func<MyClass' bool>> expected = x => x.Mode == MyClass.ValidityMode.None || (x.Mode == MyClass.ValidityMode.UntilSpecificDateTime ? x.ValidUntil > DateTime.Now.AddMinutes(5) : x.StartTime.AddMinutes(x.ValidForXMinutes) > DateTime.Now.AddMinutes(5));
Magic Number,DelegateDecompiler.Tests,Issue14,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue14.cs,Test,The following statement contains a magic number: Func<MyClass' bool> compiled = x => x.Mode == MyClass.ValidityMode.None || (x.Mode == MyClass.ValidityMode.UntilSpecificDateTime ? x.ValidUntil > DateTime.Now.AddMinutes(5) : x.StartTime.AddMinutes(x.ValidForXMinutes) > DateTime.Now.AddMinutes(5));
Magic Number,DelegateDecompiler.Tests,Issue14,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue14.cs,Test,The following statement contains a magic number: Func<MyClass' bool> compiled = x => x.Mode == MyClass.ValidityMode.None || (x.Mode == MyClass.ValidityMode.UntilSpecificDateTime ? x.ValidUntil > DateTime.Now.AddMinutes(5) : x.StartTime.AddMinutes(x.ValidForXMinutes) > DateTime.Now.AddMinutes(5));
Magic Number,DelegateDecompiler.Tests,Issue67,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\Issue67.cs,Should_be_able_to_decompile_enum,The following statement contains a magic number: var actual = Enumerable.Range(1' 3)                  .Select(x => new Foo { Value = x })                  .AsQueryable()                  .Select(x => x.EnumName)                  .Decompile();
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambda,The following statement contains a magic number: Expression<Func<bool>> expected = () => Enumerable.Range(1' 10).Any(i => i == 5);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambda,The following statement contains a magic number: Expression<Func<bool>> expected = () => Enumerable.Range(1' 10).Any(i => i == 5);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambda,The following statement contains a magic number: Func<bool> compiled = () => Enumerable.Range(1' 10).Any(i => i == 5);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambda,The following statement contains a magic number: Func<bool> compiled = () => Enumerable.Range(1' 10).Any(i => i == 5);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaWithClosure,The following statement contains a magic number: var j = 5;
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaWithClosure,The following statement contains a magic number: Expression<Func<bool>> expected = () => Enumerable.Range(1' 10).Any(i => i == j);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaWithClosure,The following statement contains a magic number: Func<bool> compiled = () => Enumerable.Range(1' 10).Any(i => i == j);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseTwoLambda,The following statement contains a magic number: Expression<Func<Dictionary<int' int>>> expected = () => Enumerable.Range(1' 10).ToDictionary(_ => _' _ => _);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseTwoLambda,The following statement contains a magic number: Func<Dictionary<int' int>> compiled = () => Enumerable.Range(1' 10).ToDictionary(_ => _' _ => _);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseConstantAndLambda,The following statement contains a magic number: Expression<Func<int>> expected = () => Enumerable.Range(1' 10).Aggregate(0' (acc' x) => acc + x);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseConstantAndLambda,The following statement contains a magic number: Func<int> compiled = () => Enumerable.Range(1' 10).Aggregate(0' (acc' x) => acc + x);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaAndConstant,The following statement contains a magic number: Expression<Func<IOrderedEnumerable<int>>> expected = () => Enumerable.Range(1' 10).OrderBy(x => x' Comparer<int>.Default);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaAndConstant,The following statement contains a magic number: Func<IOrderedEnumerable<int>> compiled = () => Enumerable.Range(1' 10).OrderBy(x => x' Comparer<int>.Default);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaInLambda,The following statement contains a magic number: Expression<Func<IEnumerable<int>>> expected =                  () => Enumerable.Range(1' 10).Select(x => Enumerable.Range(0' x).Aggregate(0' (acc' i) => acc + i));
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaInLambda,The following statement contains a magic number: Func<IEnumerable<int>> compiled =                  () => Enumerable.Range(1' 10).Select(x => Enumerable.Range(0' x).Aggregate(0' (acc' i) => acc + i));
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaAndNullParameter,The following statement contains a magic number: Expression<Func<IOrderedEnumerable<int>>> expected = () => Enumerable.Range(1' 10).OrderBy(x => x' null);
Magic Number,DelegateDecompiler.Tests,LambdaTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\LambdaTests.cs,CanUseLambdaAndNullParameter,The following statement contains a magic number: Func<IOrderedEnumerable<int>> compiled = () => Enumerable.Range(1' 10).OrderBy(x => x' null);
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewListOfIntWithInitialization2Test,The following statement contains a magic number: Expression<Func<List<int>>> expression = () => new List<int> { 1' 2 };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewListOfIntWithInitialization2Test,The following statement contains a magic number: Func<List<int>> compiled = () => new List<int> { 1' 2 };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewListOfIntWithInitialization3Test,The following statement contains a magic number: Expression<Func<List<int>>> expression = () => new List<int> { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewListOfIntWithInitialization3Test,The following statement contains a magic number: Expression<Func<List<int>>> expression = () => new List<int> { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewListOfIntWithInitialization3Test,The following statement contains a magic number: Func<List<int>> compiled = () => new List<int> { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewListOfIntWithInitialization3Test,The following statement contains a magic number: Func<List<int>> compiled = () => new List<int> { 1' 2' 3 };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewDictionaryWithInitializationTest,The following statement contains a magic number: Expression<Func<Dictionary<int' int>>> expression = () => new Dictionary<int' int> { { 1' 2 }' { 3' 4 } };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewDictionaryWithInitializationTest,The following statement contains a magic number: Expression<Func<Dictionary<int' int>>> expression = () => new Dictionary<int' int> { { 1' 2 }' { 3' 4 } };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewDictionaryWithInitializationTest,The following statement contains a magic number: Expression<Func<Dictionary<int' int>>> expression = () => new Dictionary<int' int> { { 1' 2 }' { 3' 4 } };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewDictionaryWithInitializationTest,The following statement contains a magic number: Func<Dictionary<int' int>> compiled = () => new Dictionary<int' int> { { 1' 2 }' { 3' 4 } };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewDictionaryWithInitializationTest,The following statement contains a magic number: Func<Dictionary<int' int>> compiled = () => new Dictionary<int' int> { { 1' 2 }' { 3' 4 } };
Magic Number,DelegateDecompiler.Tests,ListInitTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\ListInitTests.cs,NewDictionaryWithInitializationTest,The following statement contains a magic number: Func<Dictionary<int' int>> compiled = () => new Dictionary<int' int> { { 1' 2 }' { 3' 4 } };
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithGetValueToDefaultToNotDefault,The following statement contains a magic number: Expression<Func<int?' int>> expected1 = x => x ?? 100;
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithGetValueToDefaultToNotDefault,The following statement contains a magic number: Expression<Func<int?' int>> expected2 = x => x.GetValueOrDefault(100);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithGetValueToDefaultToNotDefault,The following statement contains a magic number: Func<int?' int> compiled = x => x.GetValueOrDefault(100);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableRightShift,The following statement contains a magic number: Expression<Func<int?' int?' int?>> expected2 = (x' y) => x >> (y & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableLeftShift,The following statement contains a magic number: Expression<Func<int?' int?' int?>> expected2 = (x' y) => x << (y & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableRightShift2,The following statement contains a magic number: Expression<Func<int?' int' int?>> expected2 = (x' y) => x >> (y & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableLeftShift2,The following statement contains a magic number: Expression<Func<int?' int' int?>> expected = (x' y) => x << (y & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableRightShift3,The following statement contains a magic number: Expression<Func<int' int?' int?>> expected2 = (x' y) => x >> (y & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableLeftShift3,The following statement contains a magic number: Expression<Func<int' int?' int?>> expected2 = (x' y) => x << (y & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableRightShiftSelf,The following statement contains a magic number: Expression<Func<int?'  int?>> expected2 = x => x >> (x & 31);
Magic Number,DelegateDecompiler.Tests,NullTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\NullTests.cs,ExpressionWithNullableLeftShiftSelf,The following statement contains a magic number: Expression<Func<int?'  int?>> expected2 = x => x << (x & 31);
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,ConcatNonStringInlineProperty,The following statement contains a magic number: var employees = new[] { new Employee { FirstName = "Test"' LastName = "User"' From = 0' To = 100 } };
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue58,The following statement contains a magic number: var expected = employees.AsQueryable().Where(_ => (_.Id <= 3 ? (_.Id > 3 ? 3 : 2) : 1) == 1);
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue58,The following statement contains a magic number: var expected = employees.AsQueryable().Where(_ => (_.Id <= 3 ? (_.Id > 3 ? 3 : 2) : 1) == 1);
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue58,The following statement contains a magic number: var expected = employees.AsQueryable().Where(_ => (_.Id <= 3 ? (_.Id > 3 ? 3 : 2) : 1) == 1);
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue58,The following statement contains a magic number: var expected = employees.AsQueryable().Where(_ => (_.Id <= 3 ? (_.Id > 3 ? 3 : 2) : 1) == 1);
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue78,The following statement contains a magic number: var expected = employees.AsQueryable().Select(e => e.TimesheetMode == TimePeriodMode.Duration                  ? e.DurationHours ?? new decimal(100)                  : DbFunctions.DiffMinutes(e.StartTimeOfDay' e.EndTimeOfDay) / new decimal(60) ?? new decimal(100));
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue78,The following statement contains a magic number: var expected = employees.AsQueryable().Select(e => e.TimesheetMode == TimePeriodMode.Duration                  ? e.DurationHours ?? new decimal(100)                  : DbFunctions.DiffMinutes(e.StartTimeOfDay' e.EndTimeOfDay) / new decimal(60) ?? new decimal(100));
Magic Number,DelegateDecompiler.Tests,QueryableExtensionsTests,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\QueryableExtensionsTests.cs,Issue78,The following statement contains a magic number: var expected = employees.AsQueryable().Select(e => e.TimesheetMode == TimePeriodMode.Duration                  ? e.DurationHours ?? new decimal(100)                  : DbFunctions.DiffMinutes(e.StartTimeOfDay' e.EndTimeOfDay) / new decimal(60) ?? new decimal(100));
Magic Number,DelegateDecompiler.Tests,StackOverflowTest,D:\research\architectureSmells\repos\hazzik_DelegateDecompiler\src\DelegateDecompiler.Tests\StackOverflowTest.cs,StackOverflowTestOnThreadWithSmallStack,The following statement contains a magic number: Thread thread = new Thread(() =>              {                  Expression<Func<Employee' string>> expected = e => e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName : e.LastName))))));                  Func<Employee' string> compiled = e => e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName :                      (e.FirstName != null ? e.FirstName : e.LastName))))));                  Test(expected' compiled);              }' 128);
