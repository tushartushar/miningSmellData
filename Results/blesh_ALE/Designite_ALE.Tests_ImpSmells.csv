Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Timeout,The following statement contains a magic number: const int ms = 100;
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Timeout,The following statement contains a magic number: Assert.IsTrue(ellapsed > ms * .9);
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Timeout,The following statement contains a magic number: wait.WaitOne(ms * 3)
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Timeout,The following statement contains a magic number: var killswitch = Do.Timeout(() => { wait.Set(); }' ms * 2);
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Timeout,The following statement contains a magic number: Assert.IsTrue(ellapsed < ms * 2);
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Timeout,The following statement contains a magic number: wait.WaitOne(ms * 4)
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: const int intervalTime = 100;
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: var killswitch = Do.Interval(() =>                              {                                  i++;                                  if (i == 3)                                  {                                      elapsed = sw.ElapsedMilliseconds;                                      wait.Set();                                  }                              }' intervalTime);
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: var testMS = intervalTime * .9m;
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: Assert.AreEqual(3' i' "Too many executions.");
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: wait.WaitOne(intervalTime * 5)
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: Thread.Sleep(intervalTime * 2);
Magic Number,ALE.Tests,Do_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Do_Tests.cs,Do_Interval,The following statement contains a magic number: Assert.AreEqual(3' i' "interval not dead.");
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_Start,The following statement contains a magic number: wait.WaitOne(100)
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_Stop,The following statement contains a magic number: const int loops = 10;
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_Stop,The following statement contains a magic number: EventLoop.Pend(() =>                                     {                                         Thread.Sleep(100);                                         if (x == loops - 1)                                         {                                             wait.Set();                                         }                                     });
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_Stop,The following statement contains a magic number: wait.WaitOne(1200)
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_Pend,The following statement contains a magic number: !wait.WaitOne(100)
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_IdleWorkerCount,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_IdleWorkerCount,The following statement contains a magic number: EventLoop.Pend(() => Thread.Sleep(100));
Magic Number,ALE.Tests,EventLoop_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\EventLoop_Tests.cs,EventLoop_IdleWorkerCount,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Promise_Test1,The following statement contains a magic number: EventLoop.Start(() =>                  {                      Promise.To((deferrer) =>                          {                              Do.Timeout(() =>                                  {                                      list.Add(123);                                      deferrer.Resolve(null);                                  }' 300);                            }).Then((data) =>                              {                                  list.Add(456);                                  handle.Set();                              });                  });
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Promise_Test1,The following statement contains a magic number: EventLoop.Start(() =>                  {                      Promise.To((deferrer) =>                          {                              Do.Timeout(() =>                                  {                                      list.Add(123);                                      deferrer.Resolve(null);                                  }' 300);                            }).Then((data) =>                              {                                  list.Add(456);                                  handle.Set();                              });                  });
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Promise_Test1,The following statement contains a magic number: EventLoop.Start(() =>                  {                      Promise.To((deferrer) =>                          {                              Do.Timeout(() =>                                  {                                      list.Add(123);                                      deferrer.Resolve(null);                                  }' 300);                            }).Then((data) =>                              {                                  list.Add(456);                                  handle.Set();                              });                  });
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Promise_Test1,The following statement contains a magic number: Assert.AreEqual(123' list[0]);
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Promise_Test1,The following statement contains a magic number: Assert.AreEqual(456' list[1]);
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Promise_Test1,The following statement contains a magic number: handle.WaitOne(4000)
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Future_When_Test,The following statement contains a magic number: Func<Promise> createPromise = () =>                  {                      return Promise.To((deferrer) =>                          {                              Do.Timeout(() =>                                  {                                      i++;                                      deferrer.Resolve(null);                                  }' 500);                          });                  };
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Future_When_Test,The following statement contains a magic number: Assert.AreEqual(3' i);
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,Future_When_Test,The following statement contains a magic number: handle.WaitOne(2000)
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,PromiseError_Test,The following statement contains a magic number: Promise.To((deferrer) =>                  {                      Do.Timeout(() => deferrer.Reject("Testing rejection.")' 400);                  }).Error((reason) =>                      {                          handle.Set();                      });
Magic Number,ALE.Tests,Promise_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Promise_Tests.cs,PromiseError_Test,The following statement contains a magic number: !handle.WaitOne(600)
Magic Number,ALE.Tests.Http,Routing_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Http\Routing_Tests.cs,Route_GetParameters,The following statement contains a magic number: Assert.AreEqual(3' parameters.Length);
Magic Number,ALE.Tests.Http,Routing_Tests,D:\research\architectureSmells\repos\blesh_ALE\ALE.Tests\Http\Routing_Tests.cs,Route_GetParameters,The following statement contains a magic number: Assert.AreEqual("id"' parameters[2]);
