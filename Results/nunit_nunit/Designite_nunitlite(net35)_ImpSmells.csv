Implementation smell,Namespace,Class,File,Method,Description
Long Method,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,ConfigureOptions,The method has 145 lines of code.
Complex Method,NUnitLite,ResultSummary,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\ResultSummary.cs,Summarize,Cyclomatic complexity of the method is 12
Complex Method,NUnitLite,TextRunner,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextRunner.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,NUnitLite,TextRunner,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextRunner.cs,MakeRunSettings,Cyclomatic complexity of the method is 13
Complex Method,NUnit.Common,ColorConsole,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\ColorConsole.cs,GetColorForStyle,Cyclomatic complexity of the method is 36
Complex Method,NUnit.Options,Option,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,ParsePrototype,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Options,Option,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,AddSeparators,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,WriteOptionPrototype,Cyclomatic complexity of the method is 8
Complex Method,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,GetDescription,Cyclomatic complexity of the method is 12
Long Parameter List,NUnitLite,TextUI,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextUI.cs,DisplayTestResult,The method has 6 parameters. Parameters: style' prefix' status' fullName' message' stackTrace
Long Parameter List,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,GetOptionParts,The method has 5 parameters. Parameters: argument' flag' name' sep' value
Long Identifier,NUnit.Common,DefaultOptionsProvider,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\DefaultOptionsProvider.cs,,The length of the parameter EnvironmentVariableTeamcityProjectName is 38.
Long Statement,NUnitLite,TeamCityEventListener,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TeamCityEventListener.cs,TC_TestFailed,The length of the statement  "            _outWriter.WriteLine("##teamcity[testFailed name='{0}' message='{1}' details='{2}']"' Escape(name)' Escape(message)' Escape(details)); " is 134.
Long Statement,NUnitLite,TextRunner,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextRunner.cs,InitializeInternalTrace,The length of the statement  "            var traceLevel = (InternalTraceLevel)Enum.Parse(typeof(InternalTraceLevel)' _options.InternalTraceLevel ?? "Off"' true); " is 120.
Long Statement,NUnitLite,TextUI,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextUI.cs,DisplayDiscoveryReport,The length of the statement  "            Writer.WriteLabelLine("    Duration: "' string.Format(NumberFormatInfo.InvariantInfo' "{0:0.000} seconds"' elapsedSeconds)); " is 124.
Long Statement,NUnitLite,TextUI,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextUI.cs,DisplaySummaryReport,The length of the statement  "            Writer.WriteLabelLine("    Duration: "' string.Format(NumberFormatInfo.InvariantInfo' "{0:0.000} seconds"' summary.Duration)); " is 126.
Long Statement,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,ConfigureOptions,The length of the statement  "            this.Add("prefilter="' "Comma-separated list of {NAMES} of test classes or namespaces to be loaded. This option may be repeated."'" is 130.
Long Statement,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,ConfigureOptions,The length of the statement  "            this.Add("workers="' "Specify the {NUMBER} of worker threads to be used in running tests. If not specified' defaults to 2 or the number of processors' whichever is greater."'" is 174.
Long Statement,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,ConfigureOptions,The length of the statement  "            this.Add("work="' "{PATH} of the directory to use for output files. If not specified' defaults to the current directory."'" is 122.
Long Statement,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,ConfigureOptions,The length of the statement  "            this.Add("explore:"' "Display or save test info rather than running tests. Optionally provide an output {SPEC} for saving the test info. This option may be repeated."' v =>" is 172.
Complex Conditional,NUnit.Options,Option,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 &&                      ((names.Length == 1 && this.type != OptionValueType.None) ||                       (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length-1] == '+' || n [n.Length-1] == '-') &&                      Contains ((rn = n.Substring (0' n.Length-1)))"  is complex.
Virtual Method Call from Constructor,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,CommandLineOptions,The constructor "CommandLineOptions" calls a virtual method "ConfigureOptions".
Virtual Method Call from Constructor,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,CommandLineOptions,The constructor "CommandLineOptions" calls a virtual method "ConfigureOptions".
Magic Number,NUnitLite,NUnit2XmlOutputWriter,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\OutputWriters\NUnit2XmlOutputWriter.cs,WriteCData,The following statement contains a magic number: xmlWriter.WriteCData(text.Substring(start' illegal - start + 2));
Magic Number,NUnitLite,NUnit2XmlOutputWriter,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\OutputWriters\NUnit2XmlOutputWriter.cs,WriteCData,The following statement contains a magic number: start = illegal + 2;
Magic Number,NUnitLite,TeamCityEventListener,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TeamCityEventListener.cs,TC_TestFinished,The following statement contains a magic number: int milliseconds = (int)(duration * 1000d);
Magic Number,NUnitLite,TextUI,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextUI.cs,DisplayHeader,The following statement contains a magic number: WriteHeader(String.Format("NUnitLite {0} {1}"' version.ToString(3)' build));
Magic Number,NUnitLite,TextUI,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextUI.cs,DisplayRunSettings,The following statement contains a magic number: Writer.WriteLabelLine(                  "    Number of Test Workers: "'                  _options.NumberOfTestWorkers >= 0                      ? _options.NumberOfTestWorkers                      : Math.Max(Environment.ProcessorCount' 2));
Magic Number,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,PreParse,The following statement contains a magic number: ++_nesting > 3
Magic Number,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,GetArgs,The following statement contains a magic number: yield return Regex.Replace(m.Groups[2].Success ? m.Groups[2].Value : m.Groups[4].Value' @""""""' @"""");
Magic Number,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,GetArgs,The following statement contains a magic number: yield return Regex.Replace(m.Groups[2].Success ? m.Groups[2].Value : m.Groups[4].Value' @""""""' @"""");
Magic Number,NUnit.Common,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\CommandLineOptions.cs,GetArgs,The following statement contains a magic number: yield return Regex.Replace(m.Groups[2].Success ? m.Groups[2].Value : m.Groups[4].Value' @""""""' @"""");
Magic Number,NUnit.Common,OutputSpecification,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\OutputSpecification.cs,OutputSpecification,The following statement contains a magic number: parts.Length > 2
Magic Number,NUnit.Common,OutputSpecification,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\OutputSpecification.cs,OutputSpecification,The following statement contains a magic number: opt.Length != 2 || opt[0].Trim() != "format"
Magic Number,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,Add,The following statement contains a magic number: Option p = new ActionOption (prototype' description' 2'                      delegate (OptionValueCollection v) {action (v [0]' v [1]);});
Magic Number,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,WriteOptionDescriptions,The following statement contains a magic number: string prefix = new string (' '' OptionWidth+2);
Magic Number,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,GetLines,The following statement contains a magic number: int length = 80 - OptionWidth - 1;
Magic Number,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,GetLines,The following statement contains a magic number: length = 80 - OptionWidth - 2 - 1;
Magic Number,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,GetLines,The following statement contains a magic number: length = 80 - OptionWidth - 2 - 1;
Missing Default,NUnitLite,NUnit2XmlOutputWriter,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\OutputWriters\NUnit2XmlOutputWriter.cs,WriteResultElement,The following switch statement is missing a default case: switch (result.ResultState.Status)              {                  case TestStatus.Skipped:                      if (result.Message != null)                          WriteReasonElement(result.Message);                      break;                  case TestStatus.Failed:                      WriteFailureElement(result.Message' result.StackTrace);                      break;              }
Missing Default,NUnitLite,ResultSummary,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\ResultSummary.cs,Summarize,The following switch statement is missing a default case: switch (status)                  {                      case TestStatus.Passed:                          PassCount++;                          break;                      case TestStatus.Skipped:                          if (label == "Ignored")                              IgnoreCount++;                          else if (label == "Explicit")                              ExplicitCount++;                          else                              SkipCount++;                          break;                      case TestStatus.Warning:                          WarningCount++; // This is not actually used by the nunit 2 format                          break;                      case TestStatus.Failed:                          if (label == "Invalid")                              InvalidCount++;                          else if (label == "Error")                              ErrorCount++;                          else                              FailureCount++;                          break;                      case TestStatus.Inconclusive:                          InconclusiveCount++;                          break;                  }
Missing Default,NUnitLite,TeamCityEventListener,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TeamCityEventListener.cs,TestFinished,The following switch statement is missing a default case: switch (result.ResultState.Status)                  {                      case TestStatus.Passed:                          TC_TestFinished(testName' result.Duration);                          break;                      case TestStatus.Inconclusive:                          TC_TestIgnored(testName' "Inconclusive");                          break;                      case TestStatus.Skipped:                          TC_TestIgnored(testName' result.Message);                          break;                      case TestStatus.Warning:                          // TODO: No action at this time. May need to be added.                          break;                      case TestStatus.Failed:                          TC_TestFailed(testName' result.Message' result.StackTrace);                          TC_TestFinished(testName' result.Duration);                          break;                  }
Missing Default,NUnitLite,TextUI,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TextUI.cs,GetColorStyle,The following switch statement is missing a default case: switch (resultState.Status)              {                  case TestStatus.Failed:                      style = ColorStyle.Failure;                      break;                  case TestStatus.Warning:                      style = ColorStyle.Warning;                      break;                  case TestStatus.Skipped:                      style = resultState.Label == "Ignored" ? ColorStyle.Warning : ColorStyle.Output;                      break;                  case TestStatus.Passed:                      style = ColorStyle.Pass;                      break;              }
Missing Default,NUnit.Common,TestNameParser,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\TestNameParser.cs,GetSeparator,The following switch statement is missing a default case: switch (argument[index])                  {                      case ''':                          if (nest == 0)                              return index;                          break;                        case '"':                          while (++index < argument.Length && argument[index] != '"')                              ;                          break;                        case '(':                      case '<':                          nest++;                          break;                        case ')':                      case '>':                          nest--;                          break;                  }
Missing Default,NUnit.Options,OptionSet,C:\research\architectureSmells\repos\nunit_nunit\src\NUnitFramework\nunitlite\Options.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {                      case OptionValueType.None:                          c.OptionValues.Add (n);                          c.Option.Invoke (c);                          break;                      case OptionValueType.Optional:                      case OptionValueType.Required:                          ParseValue (v' c);                          break;                  }
