Implementation smell,Namespace,Class,File,Method,Description
Long Method,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,searchoradd,The method has 188 lines of code.
Long Method,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,remove,The method has 172 lines of code.
Long Method,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The method has 145 lines of code.
Long Method,C5,Interval,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,The method has 131 lines of code.
Long Method,C5,Interval,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,The method has 131 lines of code.
Long Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The method has 201 lines of code.
Long Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The method has 201 lines of code.
Long Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,addIterative,The method has 263 lines of code.
Long Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The method has 380 lines of code.
Long Method,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,MoveNext,The method has 144 lines of code.
Long Method,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,MoveNext,The method has 144 lines of code.
Long Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,addIterative,The method has 263 lines of code.
Long Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The method has 380 lines of code.
Complex Method,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,RemoveAll,Cyclomatic complexity of the method is 9
Complex Method,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,RemoveAll,Cyclomatic complexity of the method is 8
Complex Method,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,RetainAll,Cyclomatic complexity of the method is 8
Complex Method,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,Check,Cyclomatic complexity of the method is 11
Complex Method,C5,CircularQueue<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\CircularQueue.cs,GetEnumerator,Cyclomatic complexity of the method is 12
Complex Method,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,RemoveAll,Cyclomatic complexity of the method is 10
Complex Method,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,RemoveAll,Cyclomatic complexity of the method is 9
Complex Method,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,RetainAll,Cyclomatic complexity of the method is 9
Complex Method,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,RetainAll,Cyclomatic complexity of the method is 8
Complex Method,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,Check,Cyclomatic complexity of the method is 15
Complex Method,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,Cut,Cyclomatic complexity of the method is 13
Complex Method,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,StaticEquals,Cyclomatic complexity of the method is 21
Complex Method,C5,Showing,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Formatting.cs,ShowCollectionValue,Cyclomatic complexity of the method is 15
Complex Method,C5,HashBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashBag.cs,RetainAll,Cyclomatic complexity of the method is 12
Complex Method,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,searchoradd,Cyclomatic complexity of the method is 10
Complex Method,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,RetainAll,Cyclomatic complexity of the method is 9
Complex Method,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,Cyclomatic complexity of the method is 9
Complex Method,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMin,Cyclomatic complexity of the method is 9
Complex Method,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMax,Cyclomatic complexity of the method is 9
Complex Method,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,Cyclomatic complexity of the method is 12
Complex Method,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,Delete,Cyclomatic complexity of the method is 9
Complex Method,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,Replace,Cyclomatic complexity of the method is 8
Complex Method,C5,Interval,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,Cyclomatic complexity of the method is 21
Complex Method,C5,Interval,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,Cyclomatic complexity of the method is 17
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,fixViewsAfterInsert,Cyclomatic complexity of the method is 8
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,fixViewsBeforeSingleRemove,Cyclomatic complexity of the method is 8
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,removefromtaggroup,Cyclomatic complexity of the method is 9
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Reverse,Cyclomatic complexity of the method is 11
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Sort,Cyclomatic complexity of the method is 16
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,mergeRuns,Cyclomatic complexity of the method is 10
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,clear,Cyclomatic complexity of the method is 8
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,checkViews,Cyclomatic complexity of the method is 13
Complex Method,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,Cyclomatic complexity of the method is 38
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,fixViewsAfterInsert,Cyclomatic complexity of the method is 8
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,fixViewsBeforeSingleRemove,Cyclomatic complexity of the method is 8
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,fixViewsBeforeRemove,Cyclomatic complexity of the method is 9
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Reverse,Cyclomatic complexity of the method is 11
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Sort,Cyclomatic complexity of the method is 9
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,mergeRuns,Cyclomatic complexity of the method is 10
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,checkViews,Cyclomatic complexity of the method is 13
Complex Method,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,Cyclomatic complexity of the method is 12
Complex Method,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,partition,Cyclomatic complexity of the method is 10
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,addIterative,Cyclomatic complexity of the method is 18
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,AddAll,Cyclomatic complexity of the method is 9
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,addSorted,Cyclomatic complexity of the method is 12
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,Cyclomatic complexity of the method is 26
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,RetainAll,Cyclomatic complexity of the method is 14
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,FindAll,Cyclomatic complexity of the method is 9
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Map,Cyclomatic complexity of the method is 9
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeAt,Cyclomatic complexity of the method is 9
Complex Method,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Cut,Cyclomatic complexity of the method is 15
Complex Method,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,MoveNext,Cyclomatic complexity of the method is 23
Complex Method,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,MoveNext,Cyclomatic complexity of the method is 22
Complex Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,addIterative,Cyclomatic complexity of the method is 18
Complex Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,AddAll,Cyclomatic complexity of the method is 9
Complex Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,addSorted,Cyclomatic complexity of the method is 12
Complex Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,Cyclomatic complexity of the method is 26
Complex Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,RetainAll,Cyclomatic complexity of the method is 13
Complex Method,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,Cut,Cyclomatic complexity of the method is 15
Complex Method,i4o,ComparisonIndex<TChild;TProperty>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\ComparisonIndex.cs,WhereThroughIndex,Cyclomatic complexity of the method is 14
Long Parameter List,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,Cut,The method has 5 parameters. Parameters: c' low' lowIsValid' high' highIsValid
Long Parameter List,C5,Range,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,Range,The method has 6 parameters. Parameters: basis' haslowend' lowend' hashighend' highend' direction
Long Parameter List,C5,Range,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,Range,The method has 6 parameters. Parameters: basis' haslowend' lowend' hashighend' highend' direction
Long Parameter List,C5,SortedDictionaryBase<K;V>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Dictionaries.cs,Cut,The method has 5 parameters. Parameters: cutter' lowEntry' lowIsValid' highEntry' highIsValid
Long Parameter List,C5,SortedKeysCollection,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Dictionaries.cs,Cut,The method has 5 parameters. Parameters: c' low' lowIsValid' high' highIsValid
Long Parameter List,C5,ISorted,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Interfaces.cs,Cut,The method has 5 parameters. Parameters: cutFunction' low' lowIsValid' high' highIsValid
Long Parameter List,C5,ISortedDictionary,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Interfaces.cs,Cut,The method has 5 parameters. Parameters: cutFunction' lowEntry' lowIsValid' highEntry' highIsValid
Long Parameter List,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,getPair,The method has 6 parameters. Parameters: p1' p2' n1' n2' positions' nodes
Long Parameter List,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,mirrorViewSentinelsForReverse,The method has 6 parameters. Parameters: positions' poslow' poshigh' a' b' i
Long Parameter List,C5,Node,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,update,The method has 5 parameters. Parameters: cursor' leftnode' child' maxsnapid' generation
Long Parameter List,C5,Node,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,update,The method has 5 parameters. Parameters: cursor' leftnode' child' maxsnapid' generation
Long Parameter List,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,getPair,The method has 6 parameters. Parameters: p1' p2' n1' n2' positions' nodes
Long Parameter List,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,mirrorViewSentinelsForReverse,The method has 6 parameters. Parameters: positions' poslow' poshigh' a' b' i
Long Parameter List,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Cut,The method has 5 parameters. Parameters: c' low' lowIsValid' high' highIsValid
Long Parameter List,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,rbminicheck,The method has 6 parameters. Parameters: n' redp' o' min' max' blackheight
Long Parameter List,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,rbminisnapcheck,The method has 5 parameters. Parameters: n' o' size' min' max
Long Parameter List,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,Cut,The method has 5 parameters. Parameters: c' low' lowIsValid' high' highIsValid
Long Parameter List,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,rbminicheck,The method has 6 parameters. Parameters: n' redp' o' min' max' blackheight
Long Parameter List,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,rbminisnapcheck,The method has 5 parameters. Parameters: n' o' size' min' max
Long Parameter List,C5,GuardedSorted<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Wrappers.cs,Cut,The method has 5 parameters. Parameters: c' low' lval' high' hval
Long Parameter List,C5,GuardedSortedDictionary<K;V>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Wrappers.cs,Cut,The method has 5 parameters. Parameters: c' lowEntry' lowIsValid' highEntry' highIsValid
Long Identifier,C5,EqualityComparer<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Hashers.cs,,The length of the parameter orderedcollectionequalityComparer is 33.
Long Identifier,C5,EqualityComparer<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Hashers.cs,,The length of the parameter unorderedcollectionequalityComparer is 35.
Long Statement,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ComputeHashCode,The length of the statement  "                    Console.WriteLine("Code {5}' Pair ({1}'{2}) number {0} matched other pair ({3}'{4})"' set.Count' a[0]' a[1]' b[0]' b[1]' h); " is 124.
Long Statement,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,StaticEquals,The length of the statement  "        if ((stit = collection1 as ISorted<T>) != null && (stat = collection2 as ISorted<T>) != null && stit.Comparer == stat.Comparer) " is 127.
Long Statement,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,StaticEquals,The length of the statement  "      if (!collection1.AllowsDuplicates && (collection2.AllowsDuplicates || collection2.ContainsSpeed >= collection1.ContainsSpeed)) " is 126.
Long Statement,C5,Range,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,inside,The length of the statement  "        return (!haslowend || basis.comparer.Compare(item' lowend) >= 0) && (!hashighend || basis.comparer.Compare(item' highend) < 0); " is 127.
Long Statement,C5,Range,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,Backwards,The length of the statement  "        b.direction = direction == EnumerationDirection.Forwards ? EnumerationDirection.Backwards : EnumerationDirection.Forwards; " is 122.
Long Statement,C5,Range,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,inside,The length of the statement  "        return (!haslowend || basis.comparer.Compare(item' lowend) >= 0) && (!hashighend || basis.comparer.Compare(item' highend) < 0); " is 127.
Long Statement,C5,Range,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,Backwards,The length of the statement  "        b.direction = direction == EnumerationDirection.Forwards ? EnumerationDirection.Backwards : EnumerationDirection.Forwards; " is 122.
Long Statement,C5,SortedDictionaryBase<K;V>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Dictionaries.cs,Cut,The length of the statement  "      return sortedpairs.Cut(new KeyValuePairComparable(cutter)' out lowEntry' out lowIsValid' out highEntry' out highIsValid); " is 121.
Long Statement,C5,EqualityComparer<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Hashers.cs,createAndCache,The length of the statement  "      return cachedDefault = (SCG.IEqualityComparer<T>)(equalityComparertype.GetProperty("Default"' BindingFlags.Static | BindingFlags.Public).GetValue(null' null)); " is 159.
Long Statement,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The length of the statement  "          Console.WriteLine("Bad cell item={0}' hashval={1}' hashindex={2}' cellindex={3}' lasthole={4}"' b.item' b.hashval' hashindex' cellindex' lasthole); " is 147.
Long Statement,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The length of the statement  "            Console.WriteLine("Bad cell item={0}' hashval={1}' hashindex={2}' cellindex={3}' latesthole={4}"' b.item' b.hashval' hashindex' cellindex' latesthole); " is 151.
Long Statement,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The length of the statement  "            Console.WriteLine("Bad cell item={0}' hashval={1}' hashindex={2}' cellindex={3}' latesthole={4}"' b.item' b.hashval' hashindex' cellindex' latesthole); " is 151.
Long Statement,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The length of the statement  "        Console.WriteLine("resizethreshhold != (int)(table.Length * fillfactor) ({0}' {1}' {2})"' resizethreshhold' table.Length' fillfactor); " is 134.
Long Statement,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,The length of the statement  "          Console.WriteLine("Cell {0}: firsthandle.index({1}) != 2*cell({2})  [size={3}]"' i' interval.firsthandle.index' 2 * i' size); " is 125.
Long Statement,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,The length of the statement  "          Console.WriteLine("Cell {0}: firsthandle.index({1}) != 2*cell({2})  [size={3}]"' i' interval.firsthandle.index' 2 * i' size); " is 125.
Long Statement,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,The length of the statement  "          Console.WriteLine("Cell {0}: lasthandle.index({1}) != 2*cell+1({2})  [size={3}]"' i' interval.lasthandle.index' 2 * i + 1' size); " is 129.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,viewPosition,The length of the statement  "      int end = offset + size' otherOffset = otherView.offset' otherSize = otherView.size' otherEnd = otherOffset + otherSize; " is 120.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,checkViews,The length of the statement  "          //Console.WriteLine("Bad view(hash {0}' offset {1}' size {2})' wrong stamp view:{2} underlying: {3}"' view.GetHashCode()'view.offset' view.size' view.stamp' stamp); " is 164.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "            Console.WriteLine("node.prev.tag ({0}' {1}) >= node.tag ({2}' {3}) at index={4} item={5} "' node.prev.taggroup.tag' node.prev.tag' node.taggroup.tag' node.tag' count' node.item); " is 178.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "              Console.WriteLine("Bad first pointer in taggroup: node.taggroup.first.item ({0})' node.item ({1}) at index={2} item={3}"' ntfi' node.item' count' node.item); " is 157.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Bad taggroupsize: oldtg.count ({0}) != taggroupsize ({1}) at index={2} item={3}"' oldtg.count' taggroupsize' count' node.item); " is 146.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Two small taggroups in a row: oldtaggroupsize ({0})' taggroupsize ({1}) at index={2} item={3}"' oldtaggroupsize' taggroupsize' count' node.item); " is 164.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Taggroup tags not strictly increasing: oldtaggrouptag ({0})' taggrouptag ({1}) at index={2} item={3}"' oldtg.tag' node.taggroup.tag' count' node.item); " is 170.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Bad last pointer in taggroup: oldtg.last.item ({0})' node.prev.item ({1}) at index={2} item={3}"' oldtg.last.item' node.prev.item' count' node.item); " is 168.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "            Console.WriteLine("Bad taggroupsize: oldtg.count ({0}) != taggroupsize ({1}) at index={2} item={3}"' oldtg.count' taggroupsize' count' node.item); " is 146.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "            Console.WriteLine("Two small taggroups in a row: oldtaggroupsize ({0})' taggroupsize ({1}) at index={2} item={3}"' oldtaggroupsize' taggroupsize' count' node.item); " is 164.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Taggroup tags not strictly increasing: oldtaggrouptag ({0})' taggrouptag ({1}) at index={2} item={3}"' oldtg.tag' node.taggroup.tag' count' node.item); " is 170.
Long Statement,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Bad last pointer in taggroup: oldtg.last.item ({0})' node.prev.item ({1}) at index={2} item={3}"' zeitem(oldtg.last)' zeitem(node.prev)' count' node.item); " is 174.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,viewPosition,The length of the statement  "      int end = offset + size' otherOffset = otherView.offset' otherSize = otherView.size' otherEnd = otherOffset + otherSize; " is 120.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,checkViews,The length of the statement  "          //Console.WriteLine("Bad view(hash {0}' offset {1}' size {2})' wrong stamp view:{2} underlying: {3}"' view.GetHashCode()'view.offset' view.size' view.stamp' stamp); " is 164.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "            Console.WriteLine("node.prev.tag ({0}' {1}) >= node.tag ({2}' {3}) at index={4} item={5} "' node.prev.taggroup.tag' node.prev.tag' node.taggroup.tag' node.tag' count' node.item); " is 178.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "              Console.WriteLine("Bad first pointer in taggroup: node.taggroup.first.item ({0})' node.item ({1}) at index={2} item={3}"' ntfi' node.item' count' node.item); " is 157.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Bad taggroupsize: oldtg.count ({0}) != taggroupsize ({1}) at index={2} item={3}"' oldtg.count' taggroupsize' count' node.item); " is 146.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Two small taggroups in a row: oldtaggroupsize ({0})' taggroupsize ({1}) at index={2} item={3}"' oldtaggroupsize' taggroupsize' count' node.item); " is 164.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Taggroup tags not strictly increasing: oldtaggrouptag ({0})' taggrouptag ({1}) at index={2} item={3}"' oldtg.tag' node.taggroup.tag' count' node.item); " is 170.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Bad last pointer in taggroup: oldtg.last.item ({0})' node.prev.item ({1}) at index={2} item={3}"' oldtg.last.item' node.prev.item' count' node.item); " is 168.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "            Console.WriteLine("Bad taggroupsize: oldtg.count ({0}) != taggroupsize ({1}) at index={2} item={3}"' oldtg.count' taggroupsize' count' node.item); " is 146.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "            Console.WriteLine("Two small taggroups in a row: oldtaggroupsize ({0})' taggroupsize ({1}) at index={2} item={3}"' oldtaggroupsize' taggroupsize' count' node.item); " is 164.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Taggroup tags not strictly increasing: oldtaggrouptag ({0})' taggrouptag ({1}) at index={2} item={3}"' oldtg.tag' node.taggroup.tag' count' node.item); " is 170.
Long Statement,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The length of the statement  "                Console.WriteLine("Bad last pointer in taggroup: oldtg.last.item ({0})' node.prev.item ({1}) at index={2} item={3}"' zeitem(oldtg.last)' zeitem(node.prev)' count' node.item); " is 174.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The length of the statement  "            parent.size = parent.items + (parent.left == null ? 0 : parent.left.size) + (parent.right == null ? 0 : parent.right.size); " is 123.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The length of the statement  "            nearnephew.size = nearnephew.items + (nearnephew.left == null ? 0 : nearnephew.left.size) + (nearnephew.right == null ? 0 : nearnephew.right.size); " is 147.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The length of the statement  "            nearnephew.size = 1 + (nearnephew.left == null ? 0 : nearnephew.left.size) + (nearnephew.right == null ? 0 : nearnephew.right.size); " is 132.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The length of the statement  "          parent.size = parent.items + (parent.left == null ? 0 : parent.left.size) + (parent.right == null ? 0 : parent.right.size); " is 123.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The length of the statement  "          childsibling.size = childsibling.items + (childsibling.left == null ? 0 : childsibling.left.size) + (childsibling.right == null ? 0 : childsibling.right.size); " is 159.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeIterativePhase2,The length of the statement  "          childsibling.size = 1 + (childsibling.left == null ? 0 : childsibling.left.size) + (childsibling.right == null ? 0 : childsibling.right.size); " is 142.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,minidump,The length of the statement  "				n.extra == null ? "" : String.Format(" [extra: lg={0}' c={1}' i={2}]"' n.extra.lastgeneration' n.extra.leftnode ? "L" : "R"' n.extra.oldref == null ? "()" : "" + n.extra.oldref.item)' " is 183.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,minidump,The length of the statement  " n.lastgeneration == -1 ? "" : String.Format(" [extra: lg={0}' c={1}' i={2}]"' n.lastgeneration' n.leftnode ? "L" : "R"' n.oldref == null ? "()" : "" + n.oldref.item)' " is 166.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,dump,The length of the statement  "      Console.WriteLine(String.Format(">>>>>>>>>>>>>>>>>>> dump {0} (count={1}' blackdepth={2}' depth={3}' gen={4})"' msg' size' blackdepth' " is 134.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,dump,The length of the statement  "      Console.WriteLine(String.Format(">>>>>>>>>>>>>>>>>>> dump {0} (count={1}' blackdepth={2}' depth={3}' gen={4})"' msg' size' blackdepth' " is 134.
Long Statement,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,rbminicheck,The length of the statement  "      res = massert(n.right == null || n.left != null || n.right.red' n' "Right child black' but left child empty"' o) && res; " is 120.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The length of the statement  "            parent.size = parent.items + (parent.left == null ? 0 : parent.left.size) + (parent.right == null ? 0 : parent.right.size); " is 123.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The length of the statement  "            nearnephew.size = nearnephew.items + (nearnephew.left == null ? 0 : nearnephew.left.size) + (nearnephew.right == null ? 0 : nearnephew.right.size); " is 147.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The length of the statement  "            nearnephew.size = 1 + (nearnephew.left == null ? 0 : nearnephew.left.size) + (nearnephew.right == null ? 0 : nearnephew.right.size); " is 132.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The length of the statement  "          parent.size = parent.items + (parent.left == null ? 0 : parent.left.size) + (parent.right == null ? 0 : parent.right.size); " is 123.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The length of the statement  "          childsibling.size = childsibling.items + (childsibling.left == null ? 0 : childsibling.left.size) + (childsibling.right == null ? 0 : childsibling.right.size); " is 159.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeIterativePhase2,The length of the statement  "          childsibling.size = 1 + (childsibling.left == null ? 0 : childsibling.left.size) + (childsibling.right == null ? 0 : childsibling.right.size); " is 142.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,minidump,The length of the statement  "				n.extra == null ? "" : String.Format(" [extra: lg={0}' c={1}' i={2}]"' n.extra.lastgeneration' n.extra.leftnode ? "L" : "R"' n.extra.oldref == null ? "()" : "" + n.extra.oldref.item)' " is 183.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,minidump,The length of the statement  " n.lastgeneration == -1 ? "" : String.Format(" [extra: lg={0}' c={1}' i={2}]"' n.lastgeneration' n.leftnode ? "L" : "R"' n.oldref == null ? "()" : "" + n.oldref.item)' " is 166.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,dump,The length of the statement  "      Console.WriteLine(String.Format(">>>>>>>>>>>>>>>>>>> dump {0} (count={1}' blackdepth={2}' depth={3}' gen={4})"' msg' size' blackdepth' " is 134.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,dump,The length of the statement  "      Console.WriteLine(String.Format(">>>>>>>>>>>>>>>>>>> dump {0} (count={1}' blackdepth={2}' depth={3}' gen={4})"' msg' size' blackdepth' " is 134.
Long Statement,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,rbminicheck,The length of the statement  "      res = massert(n.right == null || n.left != null || n.right.red' n' "Right child black' but left child empty"' o) && res; " is 120.
Complex Conditional,C5,CircularQueue<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\CircularQueue.cs,Check,The conditional expression  "front < 0 || front >= array.Length || back < 0 || back >= array.Length ||            (front <= back && size != back - front) || (front > back && size != array.Length + back - front)"  is complex.
Complex Conditional,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The conditional expression  "tg.count != 0 || tg.first != null || tg.last != null || tg.tag != int.MinValue"  is complex.
Complex Conditional,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The conditional expression  "tg.count != 0 || tg.first != null || tg.last != null || tg.tag != int.MaxValue"  is complex.
Complex Conditional,i4o,IndexSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\IndexSet.cs,WhereUsingIndex,The conditional expression  "BodyIsBinary(predicate) &&                  BodyTypeIsEqual(predicate) &&                  LeftSideIsMemberExpression(predicate) &&                  LeftSideMemberIsIndexed(predicate)"  is complex.
Magic Number,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,expand,The following statement contains a magic number: expand(2 * array.Length' underlyingsize);
Magic Number,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,FindAll,The following statement contains a magic number: res.expand(rescap = 2 * rescap' j);
Magic Number,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,Clear,The following statement contains a magic number: array = new T[8];
Magic Number,C5,CircularQueue<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\CircularQueue.cs,expand,The following statement contains a magic number: int newlength = 2 * array.Length;
Magic Number,C5,CircularQueue<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\CircularQueue.cs,CircularQueue,The following statement contains a magic number: int newlength = 8;
Magic Number,C5,CircularQueue<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\CircularQueue.cs,CircularQueue,The following statement contains a magic number: newlength *= 2;
Magic Number,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,expand,The following statement contains a magic number: expand(2 * array.Length' underlyingsize);
Magic Number,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,FindAll,The following statement contains a magic number: res.expand(rescap = 2 * rescap' j);
Magic Number,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,Clear,The following statement contains a magic number: array = new T[8];
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,binarySearch,The following statement contains a magic number: mid = top / 2;
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,binarySearch,The following statement contains a magic number: mid = (bot + top) / 2;
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,FindAll,The following statement contains a magic number: res.expand(rescap = 2 * rescap' j);
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,Cut,The following statement contains a magic number: mid = top / 2;
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,Cut,The following statement contains a magic number: mid = (bot + top) / 2;
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,Cut,The following statement contains a magic number: mid = (bot + rbest) / 2;
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,Cut,The following statement contains a magic number: mid = (lbest + top + 1) / 2;
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,RemoveAll,The following statement contains a magic number: int[] toremove = new int[(size >> 5) + 1];
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,RemoveAll,The following statement contains a magic number: toremove[ind >> 5] |= 1 << (ind & 31);
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,RemoveAll,The following statement contains a magic number: toremove[ind >> 5] |= 1 << (ind & 31);
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,RetainAll,The following statement contains a magic number: int[] toretain = new int[(size >> 5) + 1];
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,RetainAll,The following statement contains a magic number: toretain[ind >> 5] |= 1 << (ind & 31);
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,RetainAll,The following statement contains a magic number: toretain[ind >> 5] |= 1 << (ind & 31);
Magic Number,C5,SortedArray<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\SortedArray.cs,AddAll,The following statement contains a magic number: newsize *= 2;
Magic Number,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ComputeHashCode,The following statement contains a magic number: h += (int)((h1 * 1529784657 + 1) ^ (h1 * 2912831877) ^ (h1 * 1118771817 + 2));
Magic Number,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ComputeHashCode,The following statement contains a magic number: h += (int)((h1 * 1529784657 + 1) ^ (h1 * 2912831877) ^ (h1 * 1118771817 + 2));
Magic Number,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ComputeHashCode,The following statement contains a magic number: h += (int)((h1 * 1529784657 + 1) ^ (h1 * 2912831877) ^ (h1 * 1118771817 + 2));
Magic Number,C5,CollectionBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ComputeHashCode,The following statement contains a magic number: h += (int)((h1 * 1529784657 + 1) ^ (h1 * 2912831877) ^ (h1 * 1118771817 + 2));
Magic Number,C5,ArrayBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,expand,The following statement contains a magic number: expand(2 * array.Length' size);
Magic Number,C5,ArrayBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,expand,The following statement contains a magic number: newlength *= 2;
Magic Number,C5,ArrayBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ArrayBase,The following statement contains a magic number: int newlength = 8;
Magic Number,C5,ArrayBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,ArrayBase,The following statement contains a magic number: newlength *= 2;
Magic Number,C5,ArrayBase<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Collections.cs,Clear,The following statement contains a magic number: array = new T[8];
Magic Number,C5,KeyValuePair,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Dictionaries.cs,GetHashCode,The following statement contains a magic number: return EqualityComparer<K>.Default.GetHashCode(Key) + 13984681 * EqualityComparer<V>.Default.GetHashCode(Value);
Magic Number,C5,KeyValuePair,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Dictionaries.cs,Show,The following statement contains a magic number: rest -= 4;
Magic Number,C5,Showing,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Formatting.cs,maxLength,The following statement contains a magic number: return 80;
Magic Number,C5,Showing,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Formatting.cs,ShowCollectionValue,The following statement contains a magic number: rest -= 2 * startdelim.Length;
Magic Number,C5,Showing,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Formatting.cs,ShowCollectionValue,The following statement contains a magic number: rest -= 3;
Magic Number,C5,Showing,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Formatting.cs,ShowDictionary,The following statement contains a magic number: rest -= 4;
Magic Number,C5,Showing,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Formatting.cs,ShowDictionary,The following statement contains a magic number: rest -= 3;
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,shrink,The following statement contains a magic number: bits > 3
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,resize,The following statement contains a magic number: bitsc = 32 - bits;
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,clear,The following statement contains a magic number: bitsc = 32 - bits;
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,HashSet,The following statement contains a magic number: fill < 0.1 || fill > 0.9
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,HashSet,The following statement contains a magic number: fill < 0.1 || fill > 0.9
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,HashSet,The following statement contains a magic number: origbits = 4;
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The following statement contains a magic number: bitsc != 32 - bits
Magic Number,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,Check,The following statement contains a magic number: bitsc != 32 - bits
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMin,The following statement contains a magic number: 2 * cell + 1 < size && comparer.Compare(currentitem' other) > 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMin,The following statement contains a magic number: int l = 2 * cell + 1' r = l + 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMin,The following statement contains a magic number: 2 * l < size && comparer.Compare(lv = heap[l].first' minitem) < 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMin,The following statement contains a magic number: 2 * r < size && comparer.Compare(rv = heap[r].first' minitem) < 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMin,The following statement contains a magic number: 2 * currentmin + 1 < size && comparer.Compare(currentitem' other) > 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMax,The following statement contains a magic number: int l = 2 * cell + 1' r = l + 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMax,The following statement contains a magic number: 2 * l + 1 < size && comparer.Compare(lv = heap[l].last' maxitem) > 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,heapifyMax,The following statement contains a magic number: 2 * r + 1 < size && comparer.Compare(rv = heap[r].last' maxitem) > 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,bubbleUpMin,The following statement contains a magic number: int p = (i + 1) / 2 - 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,bubbleUpMin,The following statement contains a magic number: comparer.Compare(iv' min = heap[p = (i + 1) / 2 - 1].first) < 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,bubbleUpMax,The following statement contains a magic number: int p = (i + 1) / 2 - 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,bubbleUpMax,The following statement contains a magic number: comparer.Compare(iv' max = heap[p = (i + 1) / 2 - 1].last) > 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,add,The following statement contains a magic number: Interval[] newheap = new Interval[2 * heap.Length];
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,add,The following statement contains a magic number: size == 2 * heap.Length
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,add,The following statement contains a magic number: int i = size / 2' p = (i + 1) / 2 - 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,add,The following statement contains a magic number: int i = size / 2' p = (i + 1) / 2 - 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,add,The following statement contains a magic number: size % 2 == 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,updateLast,The following statement contains a magic number: handle.index = 2 * cell + 1;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,updateFirst,The following statement contains a magic number: handle.index = 2 * cell;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,The following statement contains a magic number: yield return i % 2 == 0 ? heap[i >> 1].first : heap[i >> 1].last;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,The following statement contains a magic number: Console.WriteLine("Cell {0}: firsthandle.index({1}) != 2*cell({2})  [size={3}]"' i' interval.firsthandle.index' 2 * i' size);
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,The following statement contains a magic number: interval.firsthandle != null && interval.firsthandle.index != 2 * i
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,check,The following statement contains a magic number: 2 * i + 1 == size
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,Find,The following statement contains a magic number: int cell = toremove / 2;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,Find,The following statement contains a magic number: bool isfirst = toremove % 2 == 0;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,Delete,The following statement contains a magic number: int lastcell = (size - 1) / 2;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,Delete,The following statement contains a magic number: size % 2 == 0
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,checkHandle,The following statement contains a magic number: cell = toremove / 2;
Magic Number,C5,IntervalHeap<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,checkHandle,The following statement contains a magic number: isfirst = toremove % 2 == 0;
Magic Number,C5,Interval,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,The following statement contains a magic number: Node[] path = new Node[2 * tree.blackdepth];
Magic Number,C5,Interval,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\heaps\IntervalHeap.cs,GetEnumerator,The following statement contains a magic number: Node[] path = new Node[2 * tree.blackdepth];
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,splittaggroup,The following statement contains a magic number: int tgtdelta = (int)((ntgt + 0.0 - ptgt) / (newtgs + 2))' tgtag = ptgt;
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,redistributetaggroups,The following statement contains a magic number: double limit = 1' bigt = Math.Pow(Taggroups' 1.0 / 30);
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Reverse,The following statement contains a magic number: i < size / 2
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Reverse,The following statement contains a magic number: mirrorViewSentinelsForReverse(positions' ref poslow' ref poshigh' a' b' size / 2);
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Reverse,The following statement contains a magic number: positions != null && size % 2 != 0
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,RemoveAll,The following statement contains a magic number: remove(node' 118);
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,RemoveAll,The following statement contains a magic number: remove(n' 119);
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,RetainAll,The following statement contains a magic number: remove(n' 119);
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,RetainAll,The following statement contains a magic number: remove(n' 119);
Magic Number,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,checkViews,The following statement contains a magic number: Node[] nodes = new Node[size + 2];
Magic Number,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Reverse,The following statement contains a magic number: i < size / 2
Magic Number,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Reverse,The following statement contains a magic number: mirrorViewSentinelsForReverse(positions' ref poslow' ref poshigh' a' b' size / 2);
Magic Number,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Reverse,The following statement contains a magic number: positions != null && size % 2 != 0
Magic Number,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,checkViews,The following statement contains a magic number: Node[] nodes = new Node[size + 2];
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,Cmwc,The following statement contains a magic number: ulong t' a = 487198574UL;
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,Cmwc,The following statement contains a magic number: i = (i + 1) & 15;
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,Cmwc,The following statement contains a magic number: c = (uint)(t >> 32);
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,NextDouble,The following statement contains a magic number: return Cmwc() / 4294967296.0;
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,Next,The following statement contains a magic number: return (int)(Cmwc() / 4294967296.0 * max);
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,Next,The following statement contains a magic number: return min + (int)(Cmwc() / 4294967296.0 * (max - min));
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: j ^= j << 13;
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: j ^= j >> 17;
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: j ^= j << 5;
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: i < 16
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: Q[15] = (uint)(seed ^ (seed >> 32));
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: Q[15] = (uint)(seed ^ (seed >> 32));
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: Q.Length != 16
Magic Number,C5,C5Random,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Random.cs,C5Random,The following statement contains a magic number: Array.Copy(Q' this.Q' 16);
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Rec,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Records.cs,Show,The following statement contains a magic number: rest -= 2;
Magic Number,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,IntroSort,The following statement contains a magic number: int depth_limit = (int)Math.Floor(2.5 * Math.Log(b - f' 2));
Magic Number,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,IntroSort,The following statement contains a magic number: int depth_limit = (int)Math.Floor(2.5 * Math.Log(b - f' 2));
Magic Number,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,IntroSort,The following statement contains a magic number: b - f > 31
Magic Number,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,introSort,The following statement contains a magic number: const int size_threshold = 14;
Magic Number,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,partition,The following statement contains a magic number: int bot = f' mid = (b + f) / 2' top = b - 1;
Magic Number,C5,Sorter<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\Sorting.cs,heapify,The following statement contains a magic number: int l = 2 * j - f + 1' r = l + 1;
Magic Number,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,stackcheck,The following statement contains a magic number: dirs = new int[2 * dirs.Length];
Magic Number,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,stackcheck,The following statement contains a magic number: path = new Node[2 * dirs.Length];
Magic Number,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,stackcheck,The following statement contains a magic number: dirs.Length < 2 * blackdepth
Magic Number,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeAt,The following statement contains a magic number: dirs = new int[2 * dirs.Length];
Magic Number,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeAt,The following statement contains a magic number: path = new Node[2 * dirs.Length];
Magic Number,C5,TreeBag<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,removeAt,The following statement contains a magic number: dirs.Length < 2 * blackdepth
Magic Number,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Enumerator,The following statement contains a magic number: path = new Node[2 * tree.blackdepth];
Magic Number,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Enumerator,The following statement contains a magic number: path = new Node[2 * range.basis.blackdepth];
Magic Number,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Enumerator,The following statement contains a magic number: path = new Node[2 * tree.blackdepth];
Magic Number,C5,Enumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,Enumerator,The following statement contains a magic number: path = new Node[2 * range.basis.blackdepth];
Magic Number,C5,SnapEnumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,SnapEnumerator,The following statement contains a magic number: path = new Node[2 * tree.blackdepth];
Magic Number,C5,SnapEnumerator,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeBag.cs,SnapEnumerator,The following statement contains a magic number: path = new Node[2 * tree.blackdepth];
Magic Number,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,stackcheck,The following statement contains a magic number: dirs = new int[2 * dirs.Length];
Magic Number,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,stackcheck,The following statement contains a magic number: path = new Node[2 * dirs.Length];
Magic Number,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,stackcheck,The following statement contains a magic number: dirs.Length < 2 * blackdepth
Magic Number,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeAt,The following statement contains a magic number: dirs = new int[2 * dirs.Length];
Magic Number,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeAt,The following statement contains a magic number: path = new Node[2 * dirs.Length];
Magic Number,C5,TreeSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\trees\RedBlackTreeSet.cs,removeAt,The following statement contains a magic number: dirs.Length < 2 * blackdepth
Duplicate Code,C5,HashSet<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\hashing\HashTable.cs,searchoradd,The method contains a code clone-set at the following line numbers (starting from the method definition): ((31' 55)' (118' 142))
Duplicate Code,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Check,The method contains a code clone-set at the following line numbers (starting from the method definition): ((100' 121)' (158' 179))
Duplicate Code,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Check,The method contains a code clone-set at the following line numbers (starting from the method definition): ((100' 121)' (158' 179))
Missing Default,C5,ArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\ArrayList.cs,disposeOverlappingViews,The following switch statement is missing a default case: switch (viewPosition(view.offset' view.size))              {                case MutualViewPosition.ContainedIn:                  if (reverse)                    view.offset = 2 * offset + size - view.size - view.offset;                  else                    view.Dispose();                  break;                case MutualViewPosition.Overlapping:                  view.Dispose();                  break;                case MutualViewPosition.Contains:                case MutualViewPosition.NonOverlapping:                  break;              }
Missing Default,C5,HashedArrayList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\arrays\HashedArrayList.cs,disposeOverlappingViews,The following switch statement is missing a default case: switch (viewPosition(view.offset' view.size))              {                case MutualViewPosition.ContainedIn:                  if (reverse)                    view.offset = 2 * offset + size - view.size - view.offset;                  else                    view.Dispose();                  break;                case MutualViewPosition.Overlapping:                  view.Dispose();                  break;                case MutualViewPosition.Contains:                case MutualViewPosition.NonOverlapping:                  break;              }
Missing Default,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,disposeOverlappingViews,The following switch statement is missing a default case: switch (viewPosition(view))              {                case MutualViewPosition.ContainedIn:                  if (reverse)                  { }                  else                    view.Dispose();                  break;                case MutualViewPosition.Overlapping:                  view.Dispose();                  break;                case MutualViewPosition.Contains:                case MutualViewPosition.NonOverlapping:                  break;              }
Missing Default,C5,HashedLinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\HashedLinkedList.cs,Reverse,The following switch statement is missing a default case: switch (viewPosition(view))              {                case MutualViewPosition.ContainedIn:                  (_positions ?? (_positions = new CircularQueue<Position>())).Enqueue(new Position(view' true));                  _positions.Enqueue(new Position(view' false));                  break;                case MutualViewPosition.Overlapping:                  view.Dispose();                  break;                case MutualViewPosition.Contains:                case MutualViewPosition.NonOverlapping:                  break;              }
Missing Default,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,disposeOverlappingViews,The following switch statement is missing a default case: switch (viewPosition(view))              {                case MutualViewPosition.ContainedIn:                  if (reverse)                  { }                  else                    view.Dispose();                  break;                case MutualViewPosition.Overlapping:                  view.Dispose();                  break;                case MutualViewPosition.Contains:                case MutualViewPosition.NonOverlapping:                  break;              }
Missing Default,C5,LinkedList<T>,D:\research\architectureSmells\repos\ericksoa_i4o\i4o.Silverlight\c5\linkedlists\LinkedList.cs,Reverse,The following switch statement is missing a default case: switch (viewPosition(view))              {                case MutualViewPosition.ContainedIn:                  (_positions ?? (_positions = new CircularQueue<Position>())).Enqueue(new Position(view' true));                  _positions.Enqueue(new Position(view' false));                  break;                case MutualViewPosition.Overlapping:                  view.Dispose();                  break;                case MutualViewPosition.Contains:                case MutualViewPosition.NonOverlapping:                  break;              }
