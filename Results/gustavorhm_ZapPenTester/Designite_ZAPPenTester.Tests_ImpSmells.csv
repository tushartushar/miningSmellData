Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ZAPPenTester.Tests,ScannerTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\ScannerTests.cs,Scan_NotStarted_ReturnsFalse,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' A<HttpResponseType>.Ignored)).Returns("{\"status\":\"0\"}"); " is 127.
Long Statement,ZAPPenTester.Tests,ScannerTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\ScannerTests.cs,Scan_Started_ReturnsTrue,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' HttpResponseType.json)).Returns("{\"Result\":\"OK\"}"); " is 122.
Long Statement,ZAPPenTester.Tests,ScannerTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\ScannerTests.cs,Scan_Finished_ReturnsTrue,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' HttpResponseType.json)).Returns("{\"code\":\"scan_in_progress\"}"); " is 134.
Long Statement,ZAPPenTester.Tests,ScannerTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\ScannerTests.cs,HasCompleted_ResponseNot100_ReturnsFalse,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' A<HttpResponseType>.Ignored)).Returns("{\"status\":\"0\"}"); " is 127.
Long Statement,ZAPPenTester.Tests,ScannerTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\ScannerTests.cs,HasCompleted_Response100_ReturnsTrue,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' A<HttpResponseType>.Ignored)).Returns("{\"status\":\"100\"}"); " is 129.
Long Statement,ZAPPenTester.Tests,SpiderTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\SpiderTests.cs,Start_NotStarted_ReturnsFalse,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' A<HttpResponseType>.Ignored)).Returns("{\"Result\":\"0\"}"); " is 127.
Long Statement,ZAPPenTester.Tests,SpiderTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\SpiderTests.cs,Start_Started_ReturnsTrue,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' HttpResponseType.json)).Returns("{\"Result\":\"OK\"}"); " is 122.
Long Statement,ZAPPenTester.Tests,SpiderTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\SpiderTests.cs,HasCompleted_NotComplete_ReturnsFalse,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' HttpResponseType.json)).Returns("{\"status\":\"23\"}"); " is 122.
Long Statement,ZAPPenTester.Tests,SpiderTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\SpiderTests.cs,HasCompleted_Complete_ReturnsTrue,The length of the statement  "            A.CallTo(() => httpClientHelper.MakeHttpRequest(A<string>.Ignored' HttpResponseType.json)).Returns("{\"status\":\"100\"}"); " is 123.
Magic Number,ZAPPenTester.Tests,CommandLineReportPrinterTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\CommandLineReportPrinterTests.cs,AggregateReport_WhenOneReportItemWithThreeEntries_ReturnsOneGroupedIssueWithCountThree,The following statement contains a magic number: Assert.AreEqual(3' groupedIssues.ToList()[0].IssueCount);
Magic Number,ZAPPenTester.Tests,CommandLineReportPrinterTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\CommandLineReportPrinterTests.cs,AggregateReport_WhenTwoReportItems_ReturnsTwoGroupedIssues,The following statement contains a magic number: Assert.AreEqual(2' groupedIssues.Count());
Magic Number,ZAPPenTester.Tests,CommandLineReportPrinterTests,D:\research\architectureSmells\repos\gustavorhm_ZapPenTester\SGC.ZAPPenTester.Tests\CommandLineReportPrinterTests.cs,AggregateReport_WhenTwoReportItemsWithTwoEntries_ReturnsTowGroupedIssuesWithCountTwo,The following statement contains a magic number: Assert.AreEqual(2' groupedIssues.ToList()[0].IssueCount);
