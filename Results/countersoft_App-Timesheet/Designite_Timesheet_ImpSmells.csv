Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,Cyclomatic complexity of the method is 9
Complex Method,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeFilter,Cyclomatic complexity of the method is 8
Complex Method,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Show,Cyclomatic complexity of the method is 9
Complex Method,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Get,Cyclomatic complexity of the method is 10
Complex Method,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetTimeReport,Cyclomatic complexity of the method is 10
Long Parameter List,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The method has 11 parameters.
Long Parameter List,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The method has 18 parameters.
Long Parameter List,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The method has 23 parameters.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeReport,The length of the statement  "	var end = reportOptions.EndDate == null ? DateTime.Today.AddDays (1) : reportOptions.EndDate.Value.AddDays (1).ClearTime (); " is 124.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The length of the statement  "		var timeTypes = GetTimeFilter (new List<string> ()' options.ProjectIds).Select (x => string.Concat ('|'' x.Value)).ToList (); " is 125.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The length of the statement  "		var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))); " is 295.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The length of the statement  "				Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 415.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The length of the statement  "			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || !options.ResourceIds.Any () || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) { " is 406.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The length of the statement  "		var timeTypes = GetTimeFilter (new List<string> ()' options.ProjectIds).Select (x => string.Concat ('|'' x.Value)).ToList (); " is 125.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The length of the statement  "	IEnumerable<int> resources = allissues.SelectMany (i => i.TimeEntries.Where (te => options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)).Select (te => te.Entity.UserId)).Distinct (); " is 211.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The length of the statement  "			var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))); " is 329.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The length of the statement  "				Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 383.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The length of the statement  "					Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 362.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The length of the statement  "				foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) { " is 322.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "	IEnumerable<int> resources = allissues.SelectMany (i => i.TimeEntries.Where (te => options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)).Select (te => te.Entity.UserId)).Distinct (); " is 211.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "		var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId)); " is 133.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 187.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 161.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) { " is 121.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "			timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId)); " is 165.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "				Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 223.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "					Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)' " is 197.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The length of the statement  "				foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) { " is 157.
Long Statement,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeFilter,The length of the statement  "				var current = Timelist.Find (t => string.Compare (t.Label' type.Label' StringComparison.InvariantCultureIgnoreCase) == 0); " is 122.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Show,The length of the statement  "		tmp = new IssuesGridFilter (HttpSessionManager.GetFilter (CurrentCard.Id' IssuesFilter.CreateProjectFilter (UserContext.User.Entity.Id' UserContext.Project.Entity.Id))); " is 169.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Show,The length of the statement  "		model.ResourceList = reportsManager.GetReourceFilter (options.ResourceIds' model.ProjectList.Select (p => p.Value.ToInt ()).ToList ()); " is 135.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetTimeReport,The length of the statement  "		return Json (JsonResponse (options' RenderPartialViewToString (this' AppManager.Instance.GetAppUrl (AppGuid' "views/_TimeResourceReport.cshtml")' resultModel))); " is 161.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetTimeReport,The length of the statement  "		return Json (JsonResponse (options' RenderPartialViewToString (this' AppManager.Instance.GetAppUrl (AppGuid' "views/_TimeIssueReport.cshtml")' resultModel))); " is 158.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetTimeReport,The length of the statement  "	return Json (JsonResponse (options' RenderPartialViewToString (this' AppManager.Instance.GetAppUrl (AppGuid' "views/_TimeTypeReport.cshtml")' resultModel))); " is 157.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetFilterList,The length of the statement  "	navigationCards.AddRange (cardsManager.GetUser (CurrentUser.Entity.Id).FindAll (f => f.CardType == ProjectTemplatePageType.Items)); " is 131.
Long Statement,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetFilterList,The length of the statement  "	/*navigationCards.Insert(0' cardsManager.);*/IEnumerable<SelectListItem> result = new SelectList (navigationCards' "id"' "ShortDisplay"' selected); " is 147.
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeReport,The following statement contains a magic number: switch (reportOptions.Reports) {  case (int)ReportsModel.ReportTypes.TimeReportProject:  case (int)ReportsModel.ReportTypes.TimeReportUser:  	if (reportOptions.GroupBy == 1)  		// Resource  		return GetTimeDateReport (issueDtos' reportOptions);  	if (reportOptions.GroupBy == 2)  		// Issue  		return GetTimeIssueReport (issueDtos' reportOptions);  	else  		// Time Type  		return GetTimeTypeReport (issueDtos' reportOptions);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeReport,The following statement contains a magic number: if (reportOptions.GroupBy == 2)  	// Issue  	return GetTimeIssueReport (issueDtos' reportOptions);  else  	// Time Type  	return GetTimeTypeReport (issueDtos' reportOptions);  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The following statement contains a magic number: while (date <= options.EndDate) {  	var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  	foreach (IssueDto issueDto in dayIssues) {  		var issueItem = new TimeReportModel {  			Date = date'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || !options.ResourceIds.Any () || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  			var timeItem = new TimeReportModel {  				Date = date'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		result.Add (issueItem);  	}  	date = date.AddDays (1);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The following statement contains a magic number: while (date <= options.EndDate) {  	var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  	foreach (IssueDto issueDto in dayIssues) {  		var issueItem = new TimeReportModel {  			Date = date'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || !options.ResourceIds.Any () || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  			var timeItem = new TimeReportModel {  				Date = date'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		result.Add (issueItem);  	}  	date = date.AddDays (1);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The following statement contains a magic number: foreach (IssueDto issueDto in dayIssues) {  	var issueItem = new TimeReportModel {  		Date = date'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || !options.ResourceIds.Any () || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  		var timeItem = new TimeReportModel {  			Date = date'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			TimeTypeId = time.Entity.TimeTypeId.ToString ()'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	result.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The following statement contains a magic number: foreach (IssueDto issueDto in dayIssues) {  	var issueItem = new TimeReportModel {  		Date = date'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || !options.ResourceIds.Any () || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  		var timeItem = new TimeReportModel {  			Date = date'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			TimeTypeId = time.Entity.TimeTypeId.ToString ()'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	result.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeIssueReport,The following statement contains a magic number: foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && (options.ResourceIds.Count == 0 || !options.ResourceIds.Any () || options.ResourceIds.Contains (te.Entity.UserId)) && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  	var timeItem = new TimeReportModel {  		Date = date'  		Display = time.Entity.Comment'  		KeyId = time.Entity.Id'  		Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  		TimeTypeId = time.Entity.TimeTypeId.ToString ()'  		ReportItem = time  	};  	issueItem.SubItems.Add (timeItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var date = options.StartDate.Value.ClearTime ();  	var fullname = usermanager.Get (resourceId).Fullname;  	while (date <= options.EndDate) {  		var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  		var resourceItem = new TimeReportModel {  			Date = date'  			Display = fullname'  			Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			ReportItem = Cache.Users.Get (resourceId).Fullname  		};  		foreach (IssueDto issueDto in dayIssues) {  			var issueItem = new TimeReportModel {  				Date = date'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  				var timeItem = new TimeReportModel {  					Date = date'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		date = date.AddDays (1);  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var date = options.StartDate.Value.ClearTime ();  	var fullname = usermanager.Get (resourceId).Fullname;  	while (date <= options.EndDate) {  		var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  		var resourceItem = new TimeReportModel {  			Date = date'  			Display = fullname'  			Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			ReportItem = Cache.Users.Get (resourceId).Fullname  		};  		foreach (IssueDto issueDto in dayIssues) {  			var issueItem = new TimeReportModel {  				Date = date'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  				var timeItem = new TimeReportModel {  					Date = date'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		date = date.AddDays (1);  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var date = options.StartDate.Value.ClearTime ();  	var fullname = usermanager.Get (resourceId).Fullname;  	while (date <= options.EndDate) {  		var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  		var resourceItem = new TimeReportModel {  			Date = date'  			Display = fullname'  			Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			ReportItem = Cache.Users.Get (resourceId).Fullname  		};  		foreach (IssueDto issueDto in dayIssues) {  			var issueItem = new TimeReportModel {  				Date = date'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  				var timeItem = new TimeReportModel {  					Date = date'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		date = date.AddDays (1);  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: while (date <= options.EndDate) {  	var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  	var resourceItem = new TimeReportModel {  		Date = date'  		Display = fullname'  		Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		ReportItem = Cache.Users.Get (resourceId).Fullname  	};  	foreach (IssueDto issueDto in dayIssues) {  		var issueItem = new TimeReportModel {  			Date = date'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  			var timeItem = new TimeReportModel {  				Date = date'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	date = date.AddDays (1);  	result.Add (resourceItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: while (date <= options.EndDate) {  	var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  	var resourceItem = new TimeReportModel {  		Date = date'  		Display = fullname'  		Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		ReportItem = Cache.Users.Get (resourceId).Fullname  	};  	foreach (IssueDto issueDto in dayIssues) {  		var issueItem = new TimeReportModel {  			Date = date'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  			var timeItem = new TimeReportModel {  				Date = date'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	date = date.AddDays (1);  	result.Add (resourceItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: while (date <= options.EndDate) {  	var dayIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)));  	var resourceItem = new TimeReportModel {  		Date = date'  		Display = fullname'  		Minutes = dayIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		ReportItem = Cache.Users.Get (resourceId).Fullname  	};  	foreach (IssueDto issueDto in dayIssues) {  		var issueItem = new TimeReportModel {  			Date = date'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  			var timeItem = new TimeReportModel {  				Date = date'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	date = date.AddDays (1);  	result.Add (resourceItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: foreach (IssueDto issueDto in dayIssues) {  	var issueItem = new TimeReportModel {  		Date = date'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  		var timeItem = new TimeReportModel {  			Date = date'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			TimeTypeId = time.Entity.TimeTypeId.ToString ()'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	resourceItem.SubItems.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: foreach (IssueDto issueDto in dayIssues) {  	var issueItem = new TimeReportModel {  		Date = date'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.EntryDate.ClearTime () == date && te.Entity.UserId == resourceId && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null)).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  		var timeItem = new TimeReportModel {  			Date = date'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			TimeTypeId = time.Entity.TimeTypeId.ToString ()'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	resourceItem.SubItems.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeDateReport,The following statement contains a magic number: foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.EntryDate.ClearTime () == date && (options.TimeTypeIds.Count == 0 || types.Find (t => t.Contains (string.Format ("{0}|"' te.Entity.TimeTypeId.GetValueOrDefault ())' StringComparison.InvariantCultureIgnoreCase)) != null))) {  	var timeItem = new TimeReportModel {  		Date = date'  		Display = time.Entity.Comment'  		KeyId = time.Entity.Id'  		Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  		TimeTypeId = time.Entity.TimeTypeId.ToString ()'  		ReportItem = time  	};  	issueItem.SubItems.Add (timeItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var fullname = usermanager.Get (resourceId).Fullname;  	//Get all unassigned items' before looping through time types  	var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId));  	var resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = string.Empty'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = string.Empty'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = string.Empty'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  	foreach (var id in options.TimeTypeIds) {  		var timeTypeIds = id.SplitEntries (0);  		timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  		resourceItem = new TimeReportModel {  			Date = null'  			Display = fullname'  			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			TimeTypeId = id'  			ReportItem = Cache.Users.Get (resourceId)  		};  		//Get Issues for the resource  		foreach (IssueDto issueDto in timeTypeIssues) {  			var issueItem = new TimeReportModel {  				Date = null'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				TimeTypeId = id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  				var timeItem = new TimeReportModel {  					Date = time.Entity.EntryDate'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var fullname = usermanager.Get (resourceId).Fullname;  	//Get all unassigned items' before looping through time types  	var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId));  	var resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = string.Empty'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = string.Empty'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = string.Empty'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  	foreach (var id in options.TimeTypeIds) {  		var timeTypeIds = id.SplitEntries (0);  		timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  		resourceItem = new TimeReportModel {  			Date = null'  			Display = fullname'  			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			TimeTypeId = id'  			ReportItem = Cache.Users.Get (resourceId)  		};  		//Get Issues for the resource  		foreach (IssueDto issueDto in timeTypeIssues) {  			var issueItem = new TimeReportModel {  				Date = null'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				TimeTypeId = id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  				var timeItem = new TimeReportModel {  					Date = time.Entity.EntryDate'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var fullname = usermanager.Get (resourceId).Fullname;  	//Get all unassigned items' before looping through time types  	var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId));  	var resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = string.Empty'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = string.Empty'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = string.Empty'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  	foreach (var id in options.TimeTypeIds) {  		var timeTypeIds = id.SplitEntries (0);  		timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  		resourceItem = new TimeReportModel {  			Date = null'  			Display = fullname'  			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			TimeTypeId = id'  			ReportItem = Cache.Users.Get (resourceId)  		};  		//Get Issues for the resource  		foreach (IssueDto issueDto in timeTypeIssues) {  			var issueItem = new TimeReportModel {  				Date = null'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				TimeTypeId = id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  				var timeItem = new TimeReportModel {  					Date = time.Entity.EntryDate'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var fullname = usermanager.Get (resourceId).Fullname;  	//Get all unassigned items' before looping through time types  	var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId));  	var resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = string.Empty'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = string.Empty'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = string.Empty'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  	foreach (var id in options.TimeTypeIds) {  		var timeTypeIds = id.SplitEntries (0);  		timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  		resourceItem = new TimeReportModel {  			Date = null'  			Display = fullname'  			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			TimeTypeId = id'  			ReportItem = Cache.Users.Get (resourceId)  		};  		//Get Issues for the resource  		foreach (IssueDto issueDto in timeTypeIssues) {  			var issueItem = new TimeReportModel {  				Date = null'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				TimeTypeId = id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  				var timeItem = new TimeReportModel {  					Date = time.Entity.EntryDate'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var fullname = usermanager.Get (resourceId).Fullname;  	//Get all unassigned items' before looping through time types  	var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId));  	var resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = string.Empty'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = string.Empty'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = string.Empty'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  	foreach (var id in options.TimeTypeIds) {  		var timeTypeIds = id.SplitEntries (0);  		timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  		resourceItem = new TimeReportModel {  			Date = null'  			Display = fullname'  			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			TimeTypeId = id'  			ReportItem = Cache.Users.Get (resourceId)  		};  		//Get Issues for the resource  		foreach (IssueDto issueDto in timeTypeIssues) {  			var issueItem = new TimeReportModel {  				Date = null'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				TimeTypeId = id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  				var timeItem = new TimeReportModel {  					Date = time.Entity.EntryDate'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (int rId in resources) {  	var resourceId = rId;  	var fullname = usermanager.Get (resourceId).Fullname;  	//Get all unassigned items' before looping through time types  	var timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => te.Entity.TimeTypeId == null && te.Entity.UserId == resourceId));  	var resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = string.Empty'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = string.Empty'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = string.Empty'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  	foreach (var id in options.TimeTypeIds) {  		var timeTypeIds = id.SplitEntries (0);  		timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  		resourceItem = new TimeReportModel {  			Date = null'  			Display = fullname'  			Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			SubItems = new Collection<TimeReportModel> ()'  			KeyId = resourceId'  			TimeTypeId = id'  			ReportItem = Cache.Users.Get (resourceId)  		};  		//Get Issues for the resource  		foreach (IssueDto issueDto in timeTypeIssues) {  			var issueItem = new TimeReportModel {  				Date = null'  				Display = issueDto.Entity.Title'  				Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  				KeyId = issueDto.Entity.Id'  				TimeTypeId = id'  				SubItems = new Collection<TimeReportModel> ()'  				ReportItem = issueDto  			};  			foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  				var timeItem = new TimeReportModel {  					Date = time.Entity.EntryDate'  					TimeTypeId = time.Entity.TimeTypeId.ToString ()'  					Display = time.Entity.Comment'  					KeyId = time.Entity.Id'  					Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  					ReportItem = time  				};  				issueItem.SubItems.Add (timeItem);  			}  			resourceItem.SubItems.Add (issueItem);  		}  		result.Add (resourceItem);  	}  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (IssueDto issueDto in timeTypeIssues) {  	var issueItem = new TimeReportModel {  		Date = null'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		TimeTypeId = string.Empty'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  		var timeItem = new TimeReportModel {  			Date = time.Entity.EntryDate'  			TimeTypeId = string.Empty'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	resourceItem.SubItems.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (IssueDto issueDto in timeTypeIssues) {  	var issueItem = new TimeReportModel {  		Date = null'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		TimeTypeId = string.Empty'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  		var timeItem = new TimeReportModel {  			Date = time.Entity.EntryDate'  			TimeTypeId = string.Empty'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	resourceItem.SubItems.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && te.Entity.TimeTypeId == null)) {  	var timeItem = new TimeReportModel {  		Date = time.Entity.EntryDate'  		TimeTypeId = string.Empty'  		Display = time.Entity.Comment'  		KeyId = time.Entity.Id'  		Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  		ReportItem = time  	};  	issueItem.SubItems.Add (timeItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (var id in options.TimeTypeIds) {  	var timeTypeIds = id.SplitEntries (0);  	timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  	resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = id'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (var id in options.TimeTypeIds) {  	var timeTypeIds = id.SplitEntries (0);  	timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  	resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = id'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (var id in options.TimeTypeIds) {  	var timeTypeIds = id.SplitEntries (0);  	timeTypeIssues = allissues.Where (i => i.TimeEntries.Any (te => timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()) && te.Entity.UserId == resourceId));  	resourceItem = new TimeReportModel {  		Date = null'  		Display = fullname'  		Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		SubItems = new Collection<TimeReportModel> ()'  		KeyId = resourceId'  		TimeTypeId = id'  		ReportItem = Cache.Users.Get (resourceId)  	};  	//Get Issues for the resource  	foreach (IssueDto issueDto in timeTypeIssues) {  		var issueItem = new TimeReportModel {  			Date = null'  			Display = issueDto.Entity.Title'  			Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  			KeyId = issueDto.Entity.Id'  			TimeTypeId = id'  			SubItems = new Collection<TimeReportModel> ()'  			ReportItem = issueDto  		};  		foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  			var timeItem = new TimeReportModel {  				Date = time.Entity.EntryDate'  				TimeTypeId = time.Entity.TimeTypeId.ToString ()'  				Display = time.Entity.Comment'  				KeyId = time.Entity.Id'  				Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  				ReportItem = time  			};  			issueItem.SubItems.Add (timeItem);  		}  		resourceItem.SubItems.Add (issueItem);  	}  	result.Add (resourceItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: resourceItem = new TimeReportModel {  	Date = null'  	Display = fullname'  	Minutes = timeTypeIssues.SelectMany (i => i.TimeEntries).Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  	SubItems = new Collection<TimeReportModel> ()'  	KeyId = resourceId'  	TimeTypeId = id'  	ReportItem = Cache.Users.Get (resourceId)  };  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (IssueDto issueDto in timeTypeIssues) {  	var issueItem = new TimeReportModel {  		Date = null'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		TimeTypeId = id'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  		var timeItem = new TimeReportModel {  			Date = time.Entity.EntryDate'  			TimeTypeId = time.Entity.TimeTypeId.ToString ()'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	resourceItem.SubItems.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (IssueDto issueDto in timeTypeIssues) {  	var issueItem = new TimeReportModel {  		Date = null'  		Display = issueDto.Entity.Title'  		Minutes = issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ())).Sum (te => te.Entity.Hours * 60 + te.Entity.Minutes)'  		KeyId = issueDto.Entity.Id'  		TimeTypeId = id'  		SubItems = new Collection<TimeReportModel> ()'  		ReportItem = issueDto  	};  	foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  		var timeItem = new TimeReportModel {  			Date = time.Entity.EntryDate'  			TimeTypeId = time.Entity.TimeTypeId.ToString ()'  			Display = time.Entity.Comment'  			KeyId = time.Entity.Id'  			Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  			ReportItem = time  		};  		issueItem.SubItems.Add (timeItem);  	}  	resourceItem.SubItems.Add (issueItem);  }  
Magic Number,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeTypeReport,The following statement contains a magic number: foreach (var time in issueDto.TimeEntries.Where (te => te.Entity.UserId == resourceId && timeTypeIds.Contains (te.Entity.TimeTypeId.GetValueOrDefault ()))) {  	var timeItem = new TimeReportModel {  		Date = time.Entity.EntryDate'  		TimeTypeId = time.Entity.TimeTypeId.ToString ()'  		Display = time.Entity.Comment'  		KeyId = time.Entity.Id'  		Minutes = time.Entity.Hours * 60 + time.Entity.Minutes'  		ReportItem = time  	};  	issueItem.SubItems.Add (timeItem);  }  
Magic Number,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Get,The following statement contains a magic number: if (form.StartDate.HasValue && form.EndDate.HasValue && form.EndDate < form.StartDate)  	form.StartDate = form.EndDate.Value.AddDays (-14);  
Magic Number,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Get,The following statement contains a magic number: form.StartDate = form.EndDate.Value.AddDays (-14);  
Magic Number,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Get,The following statement contains a magic number: switch ((ReportsModel.ReportTypes)form.Reports) {  case ReportsModel.ReportTypes.TimeReport:  case ReportsModel.ReportTypes.TimeReportProject:  case ReportsModel.ReportTypes.TimeReportUser:  	form.StartDate = form.StartDate.HasValue ? form.StartDate.Value : DateTime.Today.FirstDayOfWeek ().ClearTime ();  	form.EndDate = form.EndDate.HasValue ? form.EndDate.Value : form.StartDate.Value.AddDays (6).ClearTime ();  	return GetTimeReport (form);  default:  	return Content ("Not Found");  }  
Magic Number,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,Get,The following statement contains a magic number: form.EndDate = form.EndDate.HasValue ? form.EndDate.Value : form.StartDate.Value.AddDays (6).ClearTime ();  
Magic Number,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetTimeReport,The following statement contains a magic number: if (options.GroupBy == 2) {  	return Json (JsonResponse (options' RenderPartialViewToString (this' AppManager.Instance.GetAppUrl (AppGuid' "views/_TimeIssueReport.cshtml")' resultModel)));  }  
Missing Default,Timesheet,ReportManager,C:\repos\countersoft_App-Timesheet\ReportManager.cs,GetTimeReport,The following switch statement is missing a default case: switch (reportOptions.Reports) {  case (int)ReportsModel.ReportTypes.TimeReportProject:  case (int)ReportsModel.ReportTypes.TimeReportUser:  	if (reportOptions.GroupBy == 1)  		// Resource  		return GetTimeDateReport (issueDtos' reportOptions);  	if (reportOptions.GroupBy == 2)  		// Issue  		return GetTimeIssueReport (issueDtos' reportOptions);  	else  		// Time Type  		return GetTimeTypeReport (issueDtos' reportOptions);  }  
Missing Default,Timesheet,TimesheetController,C:\repos\countersoft_App-Timesheet\Timesheet.cs,GetTimeReport,The following switch statement is missing a default case: switch (options.Reports) {  case (int)ReportsModel.ReportTypes.TimeReportProject:  	timeReport = reportManager.GetTimeReport (options);  	break;  case (int)ReportsModel.ReportTypes.TimeReportUser:  	options.ResourceIds = new List<int> () {  		CurrentUser.Entity.Id  	};  	timeReport = reportManager.GetTimeReport (options);  	break;  }  
