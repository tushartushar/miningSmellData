Implementation smell,Namespace,Class,File,Method,Description
Long Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,And,The method has 124 lines of code.
Long Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,AndNot,The method has 142 lines of code.
Long Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Intersects,The method has 100 lines of code.
Long Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Or,The method has 122 lines of code.
Long Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,OrNot,The method has 152 lines of code.
Long Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Xor,The method has 140 lines of code.
Complex Method,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,PopulateBitMapIndexes,Cyclomatic complexity of the method is 10
Complex Method,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,PrintTagStats,Cyclomatic complexity of the method is 13
Complex Method,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedArrayForTag,Cyclomatic complexity of the method is 11
Complex Method,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateExclusionBitMap,Cyclomatic complexity of the method is 8
Complex Method,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,ExpandTagsTrie,Cyclomatic complexity of the method is 10
Complex Method,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,DoStartsWithOrEndsWithSearch,Cyclomatic complexity of the method is 9
Complex Method,StackOverflowTagServer.CLR,HashSet<T>,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\HashSet.cs,CheckUniqueAndUnfoundElements,Cyclomatic complexity of the method is 8
Complex Method,StackOverflowTagServer.CLR,HashSet<T>,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\HashSet.cs,HashSetEquals,Cyclomatic complexity of the method is 11
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,And,Cyclomatic complexity of the method is 14
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,AndNot,Cyclomatic complexity of the method is 16
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,GetPositions,Cyclomatic complexity of the method is 9
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Intersects,Cyclomatic complexity of the method is 17
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Not,Cyclomatic complexity of the method is 8
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Or,Cyclomatic complexity of the method is 14
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,OrNot,Cyclomatic complexity of the method is 19
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,SetOptimised,Cyclomatic complexity of the method is 8
Complex Method,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Xor,Cyclomatic complexity of the method is 16
Complex Method,StackOverflowTagServer.Querying,BitMapQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BitMapQueryProcessor.cs,Query,Cyclomatic complexity of the method is 13
Complex Method,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,Query,Cyclomatic complexity of the method is 9
Complex Method,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,OrQuery,Cyclomatic complexity of the method is 10
Complex Method,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,OrNotQuery,Cyclomatic complexity of the method is 10
Long Parameter List,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The method has 7 parameters. Parameters: tagServer' tag1' tag2' pageSize' queryTypeToTest' tagsToExclude' exclusionBitMap
Long Parameter List,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,BooleanQueryWithExclusionsLINQVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,BooleanQueryWithExclusionsFastVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,BooleanQueryWithExclusionsFastAlternativeVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,BooleanQueryWithExclusionsBloomFilterVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CollectPossibleNGramMatches,The method has 6 parameters. Parameters: allTagsList' nGrams' searches' tagPattern' expandedTags' results
Long Parameter List,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,AndQuery,The method has 5 parameters. Parameters: tag1Ids' tag2Ids' pageSize' skip' tagsToExclude
Long Parameter List,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,AndNotQuery,The method has 5 parameters. Parameters: tag1Ids' tag2Ids' pageSize' skip' tagsToExclude
Long Parameter List,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,OrQuery,The method has 5 parameters. Parameters: tag1Ids' tag2Ids' pageSize' skip' tagsToExclude
Long Parameter List,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,OrNotQuery,The method has 6 parameters. Parameters: tag1Ids' tag2Ids' allTagIds' pageSize' skip' tagsToExclude
Long Parameter List,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsLINQVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsFastVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsFastAlternativeVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Parameter List,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The method has 5 parameters. Parameters: type' tag' excludedTags' pageSize' skip
Long Identifier,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,,The length of the parameter tagsByLastActivityDateBitMapIndex is 33.
Long Identifier,Ewah,RunningLengthWord,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\RunningLengthWord.cs,,The length of the parameter NotRunningLengthPlusRunningBit is 30.
Long Identifier,Ewah,RunningLengthWord,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\RunningLengthWord.cs,,The length of the parameter NotShiftedLargestRunningLengthCount is 35.
Long Identifier,Ewah,RunningLengthWord,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\RunningLengthWord.cs,,The length of the parameter ShiftedLargestRunningLengthCount is 32.
Long Statement,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexForExcludedTags,The length of the statement  "                Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to tidy-up the Bit Map (SetSizeInBits(..) and Shrink())' Size={2:N0} bytes ({3:N2} MB)"' " is 137.
Long Statement,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexForExcludedTags,The length of the statement  "                    Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) in TOTAL' made BitMap from {2:N0} Tags ({3:N0} Qu Ids)' Cardinality={4:N0} ({5:N0})\n"' " is 136.
Long Statement,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The length of the statement  "            Logger.LogStartupMessage("Created {0:N0} BitMap Indexes in total (one per/Tag' per/QueryType' for {1:N0} Tags) - Using {2:N2} MB ({3:N2} GB) of memory\n"' " is 154.
Long Statement,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The length of the statement  "            Logger.LogStartupMessage("\nTook {0} ({1'6:N0} ms) in Total to create {2:N0} BitMap Indexes - Using {3:N2} MB ({4:N2} GB) of memory in total\n"' " is 144.
Long Statement,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The length of the statement  "            Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to shrink {2:N0} BitMap Indexes - Now using {3:N2} MB ({4:N2} GB) of memory in total\n"' " is 137.
Long Statement,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,PostProcessBitMapIndexes,The length of the statement  "            // Ensure that the BitMap Indexes represent the entire count of questions and then shrink them to their smallest possible size " is 126.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "            TagServer tagServer = TagServer.CreateFromSerialisedData(rawQuestions' intermediateFilesFolder: folder); //' deserialiseBitMapsIndexes: false); " is 143.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "            Logger.LogStartupMessage("Took {0} ({1'6:N2} ms)' in total to complete Startup - Using {2:N2} MB ({3:N2} GB) of memory in TOTAL"' " is 129.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "            var expandedTags = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' leppieTags' nGrams' printLoggingMessages: true); " is 121.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "                //var expandedTags = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' leppieTags' nGrams' printLoggingMessages: true); " is 123.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "                //var expandedTags = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' new List<string>(new[] { "*c#*" })' nGrams' printLoggingMessages: true); " is 147.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "                var expandedTags = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' new List<string>(new[] { "*c#*"' "*java*" })' nGrams' printLoggingMessages: true); " is 155.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "            var expandedTagsNGrams = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' leppieTags' nGrams' printLoggingMessages: true); " is 127.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "            //var expandedTagsNGrams = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' new List<string>(new[] { "*c#*" })' nGrams' printLoggingMessages: true); " is 153.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The length of the statement  "            var bitMapIndex = tagServer.CreateBitMapIndexForExcludedTags(expandedTagsNGrams' queryTypeToTest' printLoggingMessages: true); " is 126.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,GetLeppieTagInfo,The length of the statement  "            Logger.Log("Leppie list of {0:N0} tags contains {1:N0} that are wildcards"' leppieTags.Count' leppieTags.Count(t => t.Contains('*'))); " is 134.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,GetLeppieTagInfo,The length of the statement  "            Logger.Log("Leppie {0:N0} tags with wildcards expand to {1:N0} tags in total"' leppieTags.Count' leppieExpandedTags.Count); " is 123.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            //                         expandedTagsVB.Count' expandTagsVBTimer.Elapsed.TotalMilliseconds' expandTagsVBTimer.Elapsed); " is 121.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            Logger.LogStartupMessage("\nIn Contains but not in Regex: " + string.Join("' "' expandTagsContains.Except(expandedTagsRegex))); " is 127.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            Logger.LogStartupMessage("\nIn Regex but not in Contains: " + string.Join("' "' expandedTagsRegex.Except(expandTagsContains))); " is 127.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            //Logger.LogStartupMessage("\nIn Contains but not in VB: " + string.Join("' "' expandTagsContains.Except(expandedTagsVB))); " is 123.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            //Logger.LogStartupMessage("\nIn VB but not in Contains: " + string.Join("' "' expandedTagsVB.Except(expandTagsContains))); " is 123.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            Logger.LogStartupMessage("\nIn Contains but not in Trie: " + string.Join("' "' expandTagsContains.Except(expandedTagsTrie))); " is 125.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            Logger.LogStartupMessage("\nIn Trie but not in Contains: " + string.Join("' "' expandedTagsTrie.Except(expandTagsContains))); " is 125.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            Logger.LogStartupMessage("\nIn Contains but not in NGrams: " + string.Join("' "' expandTagsContains.Except(expandedTagsNGrams))); " is 129.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,ProcessTagsForFastLookup,The length of the statement  "            Logger.LogStartupMessage("\nIn NGrams but not in Contains: " + string.Join("' "' expandedTagsNGrams.Except(expandTagsContains))); " is 129.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "                var bitMapIndex = tagServer.CreateBitMapIndexForExcludedTags(new CLR.HashSet<string>(tagServer.AllTags.Keys)' QueryType.AnswerCount' printLoggingMessages: true); " is 161.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            var expandedTagsNGrams = WildcardProcessor.ExpandTagsNGrams(tagServer.AllTags' tagsToExpand' nGrams' printLoggingMessages: true); " is 129.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            Logger.LogStartupMessage("\nIn Contains but not in NGrams: " + string.Join("' "' expandTagsContains.Except(expandedTagsNGrams))); " is 129.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            Logger.LogStartupMessage("\nIn NGrams but not in Contains: " + string.Join("' "' expandedTagsNGrams.Except(expandTagsContains))); " is 129.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            var bitMapIndexAnswerCount = tagServer.CreateBitMapIndexForExcludedTags(expandedTagsNGrams' QueryType.AnswerCount' printLoggingMessages: true); " is 143.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            //var bitMapIndexCreationDate = tagServer.CreateBitMapIndexForExcludedTags(expandedTagsNGrams' QueryType.CreationDate' printLoggingMessages: true); " is 147.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            //var bitMapIndexLastActivityDate = tagServer.CreateBitMapIndexForExcludedTags(expandedTagsNGrams' QueryType.LastActivityDate' printLoggingMessages: true); " is 155.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            //var bitMapIndexScore = tagServer.CreateBitMapIndexForExcludedTags(expandedTagsNGrams' QueryType.Score' printLoggingMessages: true); " is 133.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The length of the statement  "            //var bitMapIndexViewCount = tagServer.CreateBitMapIndexForExcludedTags(expandedTagsNGrams' QueryType.ViewCount' printLoggingMessages: true); " is 141.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The length of the statement  "                        var shouldHaveBeenExcludedResults = tagServer.GetShouldHaveBeenExcludedResults(resultBitMap.Questions' info' tagsToExclude); " is 124.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The length of the statement  "                                Logger.LogStartupMessage("ERROR: shouldHaveBeenExcludedResults contains {0} items"' shouldHaveBeenExcludedResults.Count); " is 121.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The length of the statement  "                                Logger.LogStartupMessage("It is EXPECTED that {0} queries won't match when comparing \"Regular\" v. \"BitMap\""' query); " is 120.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "            Results.CreateNewFile(string.Format("Results-Exclusion-Queries-{0}.csv"' DateTime.Now.ToString("yyyy-MM-dd @ HH-mm-ss"))); " is 122.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "                    //Logger.LogStartupMessage("Count={0}' excludedTags.Count={1} tags:{2}\n\n"' count' excludedTags.Count' string.Join("' "' excludedTags)); " is 137.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "                        //var results1 = tagServer.BooleanQueryWithExclusionsLINQVersion(QueryType.Score' ".net"' excludedTags' pageSize: pageSize); " is 124.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "                        var results2 = tagServer.BooleanQueryWithExclusionsFastVersion(QueryType.Score' ".net"' excludedTags' pageSize: pageSize); " is 122.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "                        var results3 = tagServer.BooleanQueryWithExclusionsFastAlternativeVersion(QueryType.Score' ".net"' excludedTags' pageSize: pageSize); " is 133.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "                        //var results4 = tagServer.BooleanQueryWithExclusionsBloomFilterVersion(QueryType.Score' ".net"' excludedTags' pageSize: pageSize); " is 131.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "            //        var resultsSlow = tagServer.BooleanQueryWithExclusionsLINQVersion(QueryType.Score' ".net"' notQueries: 400' pageSize: pageSize' skip: (int)skip); " is 155.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "            //        var resultsFast = tagServer.BooleanQueryWithExclusionsFastVersion(QueryType.Score' ".net"' notQueries: 400' pageSize: pageSize' skip: (int)skip); " is 155.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "            //        var resultsFastAlt = tagServer.BooleanQueryWithExclusionsFastAlternativeVersion(QueryType.Score' ".net"' notQueries: 400' pageSize: pageSize' skip: (int)skip); " is 169.
Long Statement,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The length of the statement  "            //        //tagServer.BooleanQueryWithExclusionsBloomFilterVersion(QueryType.Score' ".net"' notQueries: 400' pageSize: pageSize' skip: (int)skip); " is 146.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The length of the statement  "                    // Here we write out the # of bits that have set (Cardinality)' then it can be used as a sanity-check during deserialisation " is 124.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The length of the statement  "                    //Logger.LogStartupMessage("Wrote Tag {0'30}' Bit Map: Cardinality={1'7:N0}' SizeInBytes={2'7:N0} (Record Size={3'7:N0})"' " is 122.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The length of the statement  "                        Logger.LogStartupMessage("Error' Expected to read {0:N0} bytes (recordLength)' but only read {1:N0}"' recordLength' bytesRead); " is 127.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The length of the statement  "                    var bitMap = bitMapIndexSerialiser.Deserialize(new MemoryStream(record' recordBytesToSkip' record.Length - recordBytesToSkip)); " is 127.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The length of the statement  "                    //Logger.LogStartupMessage("Read Tag {0'30}' Bit Map: Cardinality={1'7:N0}' SizeInBytes={2'7:N0} (Record Size={3'7:N0})"' " is 121.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The length of the statement  "                        Logger.LogStartupMessage("Error' Cardinality from BitMap = {0:N0}' Expected {1:N0}"' bitMap.GetCardinality()' cardinality); " is 123.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The length of the statement  "                    var diff = Math.Abs((recordLength - recordBytesToSkip) - (bitMap.SizeInBytes + 12)); // BitMap add 12 bytes into the record " is 123.
Long Statement,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The length of the statement  "                        Logger.LogStartupMessage("Error' BitMap \"SizeInBytes + 12\" = {0:N0}' is meant to match \"recordLength - recordBytesToSkip\" = {1:N0} (diff = {2:N0})"' " is 152.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,GetRawQuestionsFromDisk,The length of the statement  "            Logger.LogStartupMessage("Took {0} to DE-serialise {1:N0} Stack Overflow Questions from disk - Using {2:N2} MB ({3:N2} GB) of memory\n"' " is 136.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateFromSerialisedData,The length of the statement  "            Logger.LogStartupMessage("\nTook {0} (in TOTAL) to DE-serialise the intermediate data FROM disk\n"' deserializeTimer.Elapsed); " is 126.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,GetTagBitMapIndexForQueryType,The length of the statement  "                    throw new InvalidOperationException(string.Format("GetTagBitMapIndexForQueryType - Invalid query type {0}"' (int)type)); " is 120.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The length of the statement  "            //    Took 00:00:11.2802896 (11'280 ms) to sort the 191'030 arrays ALTERNATIVE method - Using 4'537.50 MB (4.43 GB) of memory " is 125.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The length of the statement  "            //    Took 00:00:11.4762493 (11'476 ms) to sort the 191'030 arrays ALTERNATIVE method - Using 4'537.50 MB (4.43 GB) of memory " is 125.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The length of the statement  "            //Old slower way of doing it (using a custom Comparer and indexing into the Questions array for each comparision' results from 2 different runs): " is 145.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The length of the statement  "            Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to sort the {2:N0} arrays {3}- Using {4:N2} MB ({5:N2} GB) of memory\n"' " is 121.
Long Statement,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedArrayForTag,The length of the statement  "            // http://stackoverflow.com/questions/17399917/c-sharp-fastest-way-to-sort-array-of-primitives-and-track-their-indices/17399982#17399982 " is 136.
Long Statement,StackOverflowTagServer,Utils,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Utils.cs,CompareLists,The length of the statement  "                Logger.LogStartupMessage("ERROR: list have different lengths' {0}: {1}' {2}: {3}"' nameA' listA.Count' nameB' listB.Count); " is 123.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateTagOrdering,The length of the statement  "            ValidateItems(GetTagByQueryLookup(QueryType.LastActivityDate).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 133.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateTagOrdering,The length of the statement  "            ValidateItems(GetTagByQueryLookup(QueryType.CreationDate).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 129.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateTagOrdering,The length of the statement  "            ValidateItems(GetTagByQueryLookup(QueryType.Score).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 122.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateTagOrdering,The length of the statement  "            ValidateItems(GetTagByQueryLookup(QueryType.ViewCount).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 126.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateTagOrdering,The length of the statement  "            ValidateItems(GetTagByQueryLookup(QueryType.AnswerCount).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 128.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateBitMapIndexOrdering,The length of the statement  "            ValidateItems(GetTagByQueryBitMapLookup(QueryType.LastActivityDate).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 139.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateBitMapIndexOrdering,The length of the statement  "            ValidateItems(GetTagByQueryBitMapLookup(QueryType.CreationDate).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 135.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateBitMapIndexOrdering,The length of the statement  "            ValidateItems(GetTagByQueryBitMapLookup(QueryType.Score).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 128.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateBitMapIndexOrdering,The length of the statement  "            ValidateItems(GetTagByQueryBitMapLookup(QueryType.ViewCount).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 132.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateBitMapIndexOrdering,The length of the statement  "            ValidateItems(GetTagByQueryBitMapLookup(QueryType.AnswerCount).ToDictionary(item => item.Key' item => item.Value as IEnumerable<int>)' " is 134.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateItems,The length of the statement  "                            Logger.LogStartupMessage("Failed with Id {0}' Expected Tag {1}' Got Tags {2}"' id' tag' string.Join("' "' current.Tags)); " is 121.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateItems,The length of the statement  "                    Logger.LogStartupMessage("ERROR - Tag {0}' Checked {1} items' Expected to Check {2} items"' tag' counter' item.Value.Count()); " is 126.
Long Statement,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,GetInvalidResults,The length of the statement  "                    var andNotMatches = results.Where(q => q.Tags.Any(t => t == queryInfo.Tag) && q.Tags.All(t => t != queryInfo.OtherTag)); " is 120.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateTrie,The length of the statement  "            //     Hint: if you only want prefix matches (where the strings have to start with s)' use a TST as described in the text. " is 122.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateTrie,The length of the statement  "            //     To support substring matches' insert the suffixes of each word (e.g.' string' tring' ring' ing' ng' g) into the TST. " is 123.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateTrie,The length of the statement  "            Logger.LogStartupMessage("\nTook {0} ({1'6:N2} ms) to SETUP the Trie (ONE-OFF cost)"' trieSetupTimer.Elapsed' trieSetupTimer.Elapsed.TotalMilliseconds); " is 152.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateNGrams,The length of the statement  "            Logger.LogStartupMessage("\nTook {0} ({1'6:N2} ms) to create {2:N0} N-Grams (with {3:N0} positions)' using N={4} (this is a ONE-OFF cost)\n"' " is 141.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,ExpandTagsVisualBasic,The length of the statement  "            // http://stackoverflow.com/questions/6907720/need-to-perform-wildcard-etc-search-on-a-string-using-regex/16737492#16737492 " is 123.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,ExpandTagsRegex,The length of the statement  "                    // See http://www.c-sharpcorner.com/uploadfile/b81385/efficient-string-matching-algorithm-with-use-of-wildcard-characters/ " is 122.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,ExpandTagsTrie,The length of the statement  "            Logger.Log("Took {0} ({1'6:N2} ms) for Trie expansion JUST to do brute force searches"' bruteForceTimer.Elapsed' bruteForceTimer.ElapsedMilliseconds); " is 150.
Long Statement,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,ExpandTagsNGrams,The length of the statement  "            // Query: /Google.*Search/' we can build a query of ANDs and ORs that gives the trigrams that must be present in any text matching the regular expression. " is 154.
Long Statement,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,IsMarked,The length of the statement  "                //            string.Format("Must be less than {0}' but was {1} (bitPosition:{2})"' m_length' bitArrayIndex' bitPosition)); " is 123.
Long Statement,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,GetPositions,The length of the statement  "                Console.WriteLine("GetPositions' got {0:N0} positions' expected {1:N0} (from GetCardinality())"' positions.Count' GetCardinality()); " is 132.
Long Statement,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,ToDebugString,The length of the statement  "                "EwahCompressedBitArray' size in bits = {0:N0}' size in words = {1:N0}' compressed size in bytes = {2:N0} (uncompressed = {3:N0} bytes)' cardinality = {4:N0}\n"' " is 161.
Long Statement,StackOverflowTagServer.Querying,BaseQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BaseQueryProcessor.cs,ThrowIfInvalidParameters,The length of the statement  "                throw new InvalidOperationException(string.Format("Invalid page size provided: {0}' only values from 1 to 250 are allowed"' pageSize)); " is 135.
Long Statement,StackOverflowTagServer.Querying,BitMapQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BitMapQueryProcessor.cs,Query,The length of the statement  "            //PrintResults(Enumerable.Range(0' questionLookup.Length)' qu => questionLookup[qu]' TagServer.ALL_TAGS_KEY' info.Type); " is 120.
Long Statement,StackOverflowTagServer.Querying,BitMapQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BitMapQueryProcessor.cs,Query,The length of the statement  "                // TODO Work out what a "NOT" query really means' the LINQ version was "result = tag1Query.Except(tag2Query)" (which is the same as AND-NOT?!) " is 142.
Long Statement,StackOverflowTagServer.Querying,BitMapQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BitMapQueryProcessor.cs,Query,The length of the statement  "                        Logger.Log("Took {0'5:N2} ms to apply exclusion BitMap (Cardinality={1:N0})' Results Cardinality: Before={2:N0}' After={3:N0}"' " is 127.
Long Statement,StackOverflowTagServer.Querying,BitMapQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BitMapQueryProcessor.cs,Query,The length of the statement  "                                   exclusionTimer.Elapsed.TotalMilliseconds' exclusionBitMap.GetCardinality()' cardinalityBeforeExclusions' bitMapResult.GetCardinality()); " is 136.
Long Statement,StackOverflowTagServer.Querying,BitMapQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BitMapQueryProcessor.cs,Query,The length of the statement  "                //PrintResults(bitMapResult' qu => questionLookup[qu]' string.Format("{0} {1} {2}"' info.Tag' info.Operator' info.OtherTag)' info.Type); " is 136.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,Query,The length of the statement  "            Logger.Log("REGULAR  Boolean Query: \"{0}\" {1} \"{2}\"' pageSize = {3:N0}' skip = {4:N0}' took {5} ({6:N2} ms) REGULAR"' " is 121.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,QueryNoLINQ,The length of the statement  "                    queryResult = OrNotQuery(queryInfo[info.Tag]' queryInfo[info.OtherTag]' queryInfo[TagServer.ALL_TAGS_KEY]' info.PageSize' info.Skip' tagsToExclude); " is 148.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,QueryNoLINQ,The length of the statement  "            Logger.Log("NO LINQ  Boolean Query: \"{0}\" {1} \"{2}\"' pageSize = {3:N0}' skip = {4:N0}' took {5} ({6:N2} ms) NO LINQ"' " is 121.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,QueryNoLINQ,The length of the statement  "            Logger.Log("Got {0:N0} results in total' baseQueryCounter = {1:N0}' itemsSkipped = {2:N0}' excludedCounter = {3:N0} ({4} tags to be excluded)"' " is 143.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,AndQuery,The length of the statement  "            var queryResult = new ComplexQueryResult { Results = new List<Question>(pageSize)' BaseQueryCounter = 0' ItemsSkipped = 0' ExcludedCounter = 0 }; " is 145.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,AndNotQuery,The length of the statement  "            var queryResult = new ComplexQueryResult { Results = new List<Question>(pageSize)' BaseQueryCounter = 0' ItemsSkipped = 0' ExcludedCounter = 0 }; " is 145.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,OrQuery,The length of the statement  "            var queryResult = new ComplexQueryResult { Results = new List<Question>(pageSize)' BaseQueryCounter = 0' ItemsSkipped = 0' ExcludedCounter = 0 }; " is 145.
Long Statement,StackOverflowTagServer.Querying,ComplexQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\ComplexQueryProcessor.cs,OrNotQuery,The length of the statement  "            var queryResult = new ComplexQueryResult { Results = new List<Question>(pageSize)' BaseQueryCounter = 0' ItemsSkipped = 0' ExcludedCounter = 0 }; " is 145.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,Query,The length of the statement  "            var formattedResults = result.Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("' "' r.Tags))); " is 152.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsLINQVersion,The length of the statement  "            //var formattedResults = results.Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("'"' r.Tags))); " is 154.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsFastVersion,The length of the statement  "            //var formattedResults = results.Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("'"' r.Tags))); " is 154.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsFastAlternativeVersion,The length of the statement  "            Logger.Log("Got {0} results ({1} in allResults)' {2:N0} items in exclusions"' results.Count()' allResults.Count' exclusions.Count); " is 131.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsFastAlternativeVersion,The length of the statement  "            //var formattedResults = results.Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("'"' r.Tags))); " is 154.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The length of the statement  "                       bloomFilterCreationTimer.Elapsed' bloomFilterCreationTimer.Elapsed.TotalMilliseconds' bloomFilterSize' bloomFilterSize / 8); " is 124.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The length of the statement  "            //var tests = new[] { 1066589' 2793150' 364114' 910374 }; // These are the Question Id's NOT the array index ([]) values!! " is 122.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The length of the statement  "            Logger.Log("Got {0} results' Bloom Filter contains {1:N0} items (some could be dupes)"' result.Count()' bloomFilter.NumberOfItems); " is 131.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The length of the statement  "            //var formattedResults = result.Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("'"' r.Tags))); " is 153.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The length of the statement  "            //                       .Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("'"' r.Tags))); " is 147.
Long Statement,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The length of the statement  "                                    .Select(r => string.Format("Id: {0'8}' {1}: {2'4}' Tags: {3}' "' r.Id' type' fieldSelector(r)' string.Join("'"' r.Tags))); " is 122.
Long Statement,StackOverflowTagServer.Querying,QueryTester,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryTester.cs,TestAndOrNotQueries,The length of the statement  "            //var tagIntersect2 = tagGroup1.Intersect(tagGroup2).Skip(allIntersect.Count() - 10).Take(10).Select(i => questions[i]).ToArray(); " is 130.
Long Statement,StackOverflowTagServer.Querying,QueryTester,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryTester.cs,TestQueries,The length of the statement  "            //Console.WriteLine("2) Most Recent C# tags took {0}' ({1:0.00} ms) - NOT using LINQ' using foreach instead ({2} items)"' " is 121.
Long Statement,StackOverflowTagServer.Querying,QueryTester,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryTester.cs,TestQueries,The length of the statement  "            //Console.WriteLine("2) Most Recent C# tags took {0}' ({1:0.00} ms) - NOT using LINQ' using foreach instead ({2} items)"' " is 121.
Long Statement,StackOverflowTagServer.Querying,QueryTester,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryTester.cs,TestQueries,The length of the statement  "            //Console.WriteLine("When comparing LINQ with non-LINQ method' results are {0}\n"' areEqual ? "the SAME" : "DIFFERENT"); " is 120.
Long Statement,StackOverflowTagServer.DataStructures,Trie<TValue>,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\Trie`1.cs,CopyTo,The length of the statement  "            Array.Copy(GetAllNodes().Select(n => new KeyValuePair<string' TValue>(n.Key' n.Value)).ToArray()' 0' array' arrayIndex' Count); " is 127.
Complex Conditional,StackOverflowTagServer.CLR,HashSet<T>,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\HashSet.cs,HashSet,The conditional expression  "(m_count == 0 && m_slots.Length > HashHelpers.GetMinPrime()) ||                  (m_count > 0 && m_slots.Length / m_count > ShrinkThreshold)"  is complex.
Empty Catch Block,StackOverflowTagServer,Results,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Results.cs,AddHeaders,The method has an empty catch block.
Empty Catch Block,StackOverflowTagServer,Results,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Results.cs,StartNewRow,The method has an empty catch block.
Empty Catch Block,StackOverflowTagServer,Results,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Results.cs,AddData,The method has an empty catch block.
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexForExcludedTags,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to tidy-up the Bit Map (SetSizeInBits(..) and Shrink())' Size={2:N0} bytes ({3:N2} MB)"'                                           tidyUpTimer.Elapsed' tidyUpTimer.ElapsedMilliseconds' bitMap.SizeInBytes' bitMap.SizeInBytes / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexForExcludedTags,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to tidy-up the Bit Map (SetSizeInBits(..) and Shrink())' Size={2:N0} bytes ({3:N2} MB)"'                                           tidyUpTimer.Elapsed' tidyUpTimer.ElapsedMilliseconds' bitMap.SizeInBytes' bitMap.SizeInBytes / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: Logger.LogStartupMessage("Created {0:N0} BitMap Indexes in total (one per/Tag' per/QueryType' for {1:N0} Tags) - Using {2:N2} MB ({3:N2} GB) of memory\n"'                                       tagsToUse.Length * 5' tagsToUse.Length' mbUsed' mbUsed / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: Logger.LogStartupMessage("Created {0:N0} BitMap Indexes in total (one per/Tag' per/QueryType' for {1:N0} Tags) - Using {2:N2} MB ({3:N2} GB) of memory\n"'                                       tagsToUse.Length * 5' tagsToUse.Length' mbUsed' mbUsed / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: var memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: var memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: Logger.LogStartupMessage("\nTook {0} ({1'6:N0} ms) in Total to create {2:N0} BitMap Indexes - Using {3:N2} MB ({4:N2} GB) of memory in total\n"'                                       bitSetsTimer.Elapsed' bitSetsTimer.ElapsedMilliseconds' tagsToUse.Length * 5' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: Logger.LogStartupMessage("\nTook {0} ({1'6:N0} ms) in Total to create {2:N0} BitMap Indexes - Using {3:N2} MB ({4:N2} GB) of memory in total\n"'                                       bitSetsTimer.Elapsed' bitSetsTimer.ElapsedMilliseconds' tagsToUse.Length * 5' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to shrink {2:N0} BitMap Indexes - Now using {3:N2} MB ({4:N2} GB) of memory in total\n"'                                       shrinkTimer.Elapsed' shrinkTimer.ElapsedMilliseconds' tagsToUse.Length * 5' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,BitMapIndexHandler,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\BitMapIndexHandler.cs,CreateBitMapIndexes,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to shrink {2:N0} BitMap Indexes - Now using {3:N2} MB ({4:N2} GB) of memory in total\n"'                                       shrinkTimer.Elapsed' shrinkTimer.ElapsedMilliseconds' tagsToUse.Length * 5' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The following statement contains a magic number: var totalMemory = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The following statement contains a magic number: var totalMemory = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,Main,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N2} ms)' in total to complete Startup - Using {2:N2} MB ({3:N2} GB) of memory in TOTAL"'                                startupTimer.Elapsed' startupTimer.Elapsed.TotalMilliseconds' totalMemory' totalMemory / 1024.0);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The following statement contains a magic number: wildcards.Count > 50
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The following statement contains a magic number: expansions.Count > 50
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,TestWildcards,The following statement contains a magic number: expandedTagsNGrams.Count > 50
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunComparisonQueries,The following statement contains a magic number: var smallTag = tagServer.AllTags.Where(t => t.Value <= 200).First().Key;
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunComparisonQueries,The following statement contains a magic number: int pageSize = 25;
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunAndOrNotComparisionQueries,The following statement contains a magic number: var skipCounts = new[] { 0' 100' 250' 500' 1000' 2000' 4000' 8000 };
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The following statement contains a magic number: notQueries <= 6400
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunExclusionQueryTests,The following statement contains a magic number: var pageSize = 50;
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 10' skip: 0);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 10' skip: 9);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 10' skip: 9);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 10' skip: 10);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 10' skip: 10);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 100' skip: 10000);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 100' skip: 10000);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 100' skip: 1000000);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.LastActivityDate' "c#"' pageSize: 100' skip: 1000000);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.Score' ".net"' pageSize: 6' skip: 95);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.Score' ".net"' pageSize: 6' skip: 95);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.Score' ".net"' pageSize: 6' skip: 100);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.Score' ".net"' pageSize: 6' skip: 100);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.Score' ".net"' pageSize: 6' skip: 105);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,RunSimpleQueries,The following statement contains a magic number: tagServer.Query(QueryType.Score' ".net"' pageSize: 6' skip: 105);
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,PrintTagStats,The following statement contains a magic number: tag.Value <= 10
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,PrintTagStats,The following statement contains a magic number: Logger.LogStartupMessage("{0'8:N0}: {1} {2} {3}"'                      bucket.Key'                      bucket.Value.Count.ToString("N0").PadRight(8)'                      totalsPerBucket[bucket.Key].ToString("N0").PadRight(8)'                      totalSoFar.ToString("N0").PadRight(8));
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,PrintTagStats,The following statement contains a magic number: Logger.LogStartupMessage("{0'8:N0}: {1} {2} {3}"'                      bucket.Key'                      bucket.Value.Count.ToString("N0").PadRight(8)'                      totalsPerBucket[bucket.Key].ToString("N0").PadRight(8)'                      totalSoFar.ToString("N0").PadRight(8));
Magic Number,StackOverflowTagServer,Program,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Program.cs,PrintTagStats,The following statement contains a magic number: Logger.LogStartupMessage("{0'8:N0}: {1} {2} {3}"'                      bucket.Key'                      bucket.Value.Count.ToString("N0").PadRight(8)'                      totalsPerBucket[bucket.Key].ToString("N0").PadRight(8)'                      totalSoFar.ToString("N0").PadRight(8));
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseToDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to serialise:    {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseToDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to serialise:    {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseToDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to serialise:    {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: int lengthOfEntireRecord = item.Value.SizeInBytes + 12;
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: lengthOfEntireRecord += (4 + tagAsBytes.Length + 8);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: lengthOfEntireRecord += (4 + tagAsBytes.Length + 8);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: fileSteam.Write(BitConverter.GetBytes(lengthOfEntireRecord)' 0' 4);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: fileSteam.Write(BitConverter.GetBytes(tagAsBytes.Length)' 0' 4);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: fileSteam.Write(BitConverter.GetBytes(item.Value.GetCardinality())' 0' 8);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to serialise:    {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to serialise:    {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,SerialiseBitMapIndexToDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to serialise:    {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to DE-serialise: {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to DE-serialise: {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to DE-serialise: {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: byte[] buff = new byte[8];
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: fileSteam.Read(buff' 0' 4);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: var tag = Encoding.UTF8.GetString(record' 4' tagAsBytesLength);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: var cardinality = BitConverter.ToUInt64(record' 4 + tagAsBytesLength);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: var recordBytesToSkip = 4 + tagAsBytesLength + 8;
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: var recordBytesToSkip = 4 + tagAsBytesLength + 8;
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: var diff = Math.Abs((recordLength - recordBytesToSkip) - (bitMap.SizeInBytes + 12));
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Error' BitMap \"SizeInBytes + 12\" = {0:N0}' is meant to match \"recordLength - recordBytesToSkip\" = {1:N0} (diff = {2:N0})"'                                                   bitMap.SizeInBytes + 12' recordLength - recordBytesToSkip' diff);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to DE-serialise: {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to DE-serialise: {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,Serialisation,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Serialisation.cs,DeserialiseFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to DE-serialise: {2} Size: {3'6:N2} MB"'                                       timer.Elapsed' timer.ElapsedMilliseconds' fileName.PadRight(42)' info.Length / 1024.0 / 1024.0);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,GetRawQuestionsFromDisk,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,GetRawQuestionsFromDisk,The following statement contains a magic number: var memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,GetRawQuestionsFromDisk,The following statement contains a magic number: var memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,GetRawQuestionsFromDisk,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} to DE-serialise {1:N0} Stack Overflow Questions from disk - Using {2:N2} MB ({3:N2} GB) of memory\n"'                  fileReadTimer.Elapsed' rawQuestions.Count' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: Logger.LogStartupMessage("After TagServer created - Using {0:N2} MB ({1:N2} GB) of memory in total\n"' mbUsed' mbUsed / 1024.0);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,TagServer,The following statement contains a magic number: Logger.LogStartupMessage("After TagServer created - Using {0:N2} MB ({1:N2} GB) of memory in total\n"' mbUsed' mbUsed / 1024.0);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateTagGroupings,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateTagGroupings,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateTagGroupings,The following statement contains a magic number: var mbUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateTagGroupings,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to group all the tags - Using {2:N2} MB ({3:N2} GB) of memory\n"'                                       tagGroupingTimer.Elapsed' tagGroupingTimer.ElapsedMilliseconds' mbUsed' mbUsed / 1024.0);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The following statement contains a magic number: GC.Collect(2' GCCollectionMode.Forced);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The following statement contains a magic number: var memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The following statement contains a magic number: var memoryUsed = GC.GetTotalMemory(true) / 1024.0 / 1024.0;
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to sort the {2:N0} arrays {3}- Using {4:N2} MB ({5:N2} GB) of memory\n"'                                       sortingTimer.Elapsed' sortingTimer.ElapsedMilliseconds' groupedTags.Count * 5'                                       useAlternativeMethod ? "ALTERNATIVE method " : ""' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedLists,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to sort the {2:N0} arrays {3}- Using {4:N2} MB ({5:N2} GB) of memory\n"'                                       sortingTimer.Elapsed' sortingTimer.ElapsedMilliseconds' groupedTags.Count * 5'                                       useAlternativeMethod ? "ALTERNATIVE method " : ""' memoryUsed' memoryUsed / 1024.0);
Magic Number,StackOverflowTagServer,Utils,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Utils.cs,GetColorForTimespan,The following statement contains a magic number: elapsed.TotalMilliseconds > 500
Magic Number,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateTagOrdering,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to VALIDATE the {2:N0} arrays\n"'                                       validationTimer.Elapsed' validationTimer.ElapsedMilliseconds' allTags.Count * 5);
Magic Number,StackOverflowTagServer,Validator,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Validator.cs,ValidateBitMapIndexOrdering,The following statement contains a magic number: Logger.LogStartupMessage("Took {0} ({1'6:N0} ms) to VALIDATE all the {2:N0} Bit Map Indexes\n"'                                       validationTimer.Elapsed' validationTimer.ElapsedMilliseconds' allTags.Count * 5);
Magic Number,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateNGrams,The following statement contains a magic number: var expected = Math.Max(1' item.Tag.Length - N + 1 + 2);
Magic Number,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateNGrams,The following statement contains a magic number: var locations = new List<int>(10) { item.Posn };
Magic Number,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,ExpandTagsTrie,The following statement contains a magic number: var actualTag = tagToExpand.Substring(1' tagToExpand.Length - 2);
Magic Number,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,CreateSearches,The following statement contains a magic number: actualTag = tagPattern.Substring(1' tagPattern.Length - 2);
Magic Number,StackOverflowTagServer,WildcardProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\WildcardProcessor.cs,DoStartsWithOrEndsWithSearch,The following statement contains a magic number: var actualTag = tagToExpand.Substring(1' tagToExpand.Length - 2);
Magic Number,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,GetCardinality,The following statement contains a magic number: var bits = Convert.ToString(m_array[i]' 2).PadLeft(IntSize' '0').Reverse().Take(bitsToUse).ToArray();
Magic Number,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,GetPositions,The following statement contains a magic number: var bits = Convert.ToString(m_array[intCounter]' 2).PadLeft(IntSize' '0').Reverse().ToArray();
Magic Number,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,NumberOfSetBits,The following statement contains a magic number: i = (i & 0x33333333) + ((i >> 2) & 0x33333333);
Magic Number,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,NumberOfSetBits,The following statement contains a magic number: return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24;
Magic Number,StackOverflowTagServer.CLR,BitHelper,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\BitHelper.cs,NumberOfSetBits,The following statement contains a magic number: return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24;
Magic Number,StackOverflowTagServer.CLR,HashHelpers,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\HashHelpers.cs,ExpandPrime,The following statement contains a magic number: int newSize = 2 * oldSize;
Magic Number,StackOverflowTagServer.CLR,HashHelpers,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\HashHelpers.cs,IsPrime,The following statement contains a magic number: return (candidate == 2);
Magic Number,StackOverflowTagServer.CLR,HashSet<T>,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\CLR\HashSet.cs,SymmetricExceptWithEnumerable,The following statement contains a magic number: intArrayLength <= StackAllocThreshold / 2
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,GetHashCode,The following statement contains a magic number: const int B = 31;
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,GetHashCode,The following statement contains a magic number: karprabin += B * karprabin                                 + (i._Rlw.RunningLength & ((1L << 32) - 1));
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,GetHashCode,The following statement contains a magic number: karprabin += B * karprabin + (long)(((ulong)i._Rlw.RunningLength) >> 32);
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,GetHashCode,The following statement contains a magic number: karprabin += B * karprabin + (buf & ((1L << 32) - 1));
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,GetHashCode,The following statement contains a magic number: karprabin += B * karprabin + (long)(((ulong)buf) >> 32);
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,ToDebugString,The following statement contains a magic number: ans.AppendFormat(                  "EwahCompressedBitArray' size in bits = {0:N0}' size in words = {1:N0}' compressed size in bytes = {2:N0} (uncompressed = {3:N0} bytes)' cardinality = {4:N0}\n"'                  SizeInBits' _ActualSizeInWords' SizeInBytes' SizeInBits / 8.0' GetCardinality());
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,ToDebugString,The following statement contains a magic number: ans.AppendFormat("\t[{0'4}]= {1'20}' {2'2} bits set -> {{{3}}} \n"'                                           j' data' bitCount((ulong)data)' Convert.ToString(data' 2).PadLeft(sizeof(long) * 8' '0'));
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,ToDebugString,The following statement contains a magic number: ans.AppendFormat("\t[{0'4}]= {1'20}' {2'2} bits set -> {{{3}}} \n"'                                           j' data' bitCount((ulong)data)' Convert.ToString(data' 2).PadLeft(sizeof(long) * 8' '0'));
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,AddLiteralWord,The following statement contains a magic number: return 2;
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,NegativePushBack,The following statement contains a magic number: Array.Resize(ref _Buffer' _Buffer.Length * 2);
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,PushBack,The following statement contains a magic number: Array.Resize(ref _Buffer' _Buffer.Length * 2);
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,PushBack,The following statement contains a magic number: Array.Resize(ref _Buffer' _Buffer.Length * 2);
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,bitCount,The following statement contains a magic number: const UInt64 mask1h = (~0UL) / 3 << 1;
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,bitCount,The following statement contains a magic number: const UInt64 mask2l = (~0UL) / 5;
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,bitCount,The following statement contains a magic number: const UInt64 mask4l = (~0UL) / 17;
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,bitCount,The following statement contains a magic number: v = (v & mask2l) + ((v >> 2) & mask2l);
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,bitCount,The following statement contains a magic number: v += v >> 4;
Magic Number,Ewah,EwahCompressedBitArray,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,bitCount,The following statement contains a magic number: return (v * MaskMult) >> 56;
Magic Number,Ewah,IntIteratorImpl,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArray.cs,Add,The following statement contains a magic number: Array.Resize(ref _LocalBuffer' _LocalBuffer.Length * 2);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Deserialize,The following statement contains a magic number: byte[] buff= new byte[8];
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Deserialize,The following statement contains a magic number: serializationStream.Read(buff' 0' 4);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Deserialize,The following statement contains a magic number: serializationStream.Read(buff' 0' 4);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Deserialize,The following statement contains a magic number: serializationStream.Read(buff' 0' 4);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Deserialize,The following statement contains a magic number: serializationStream.Read(buff' 0' 8);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Serialize,The following statement contains a magic number: serializationStream.Write(BitConverter.GetBytes(bitArray.SizeInBits)' 0' 4);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Serialize,The following statement contains a magic number: serializationStream.Write(BitConverter.GetBytes(bitArray._ActualSizeInWords)' 0' 4);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Serialize,The following statement contains a magic number: serializationStream.Write(BitConverter.GetBytes(bitArray._Rlw.Position)' 0' 4);
Magic Number,Ewah,EwahCompressedBitArraySerializer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\EWAH\EwahCompressedBitArraySerializer.cs,Serialize,The following statement contains a magic number: serializationStream.Write(BitConverter.GetBytes(bitArray._Buffer[i])' 0' 8);
Magic Number,StackOverflowTagServer.Querying,BaseQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BaseQueryProcessor.cs,ThrowIfInvalidParameters,The following statement contains a magic number: pageSize < 1 || pageSize > 250
Magic Number,StackOverflowTagServer.Querying,BaseQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BaseQueryProcessor.cs,PrintResults,The following statement contains a magic number: questions.Take(10)
Magic Number,StackOverflowTagServer.Querying,BaseQueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\BaseQueryProcessor.cs,PrintResults,The following statement contains a magic number: bits.Take(10)
Magic Number,StackOverflowTagServer.Querying,QueryInfo,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryInfo.cs,QueryInfo,The following statement contains a magic number: PageSize = 25;
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: int bloomFilterSize = 100 * 1000 * 1000;
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: int bloomFilterSize = 100 * 1000 * 1000;
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: int bloomFilterSize = 100 * 1000 * 1000;
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: Logger.Log("Took {0} ({1:N2} ms) to create the bloom filter with {2:N0} bits ({3:N2} bytes)"'                         bloomFilterCreationTimer.Elapsed' bloomFilterCreationTimer.Elapsed.TotalMilliseconds' bloomFilterSize' bloomFilterSize / 8);
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: var tests = new[] {  192257'  616585'  53029' 158368 };
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: var tests = new[] {  192257'  616585'  53029' 158368 };
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: var tests = new[] {  192257'  616585'  53029' 158368 };
Magic Number,StackOverflowTagServer.Querying,QueryProcessor,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\Querying\QueryProcessor.cs,BooleanQueryWithExclusionsBloomFilterVersion,The following statement contains a magic number: var tests = new[] {  192257'  616585'  53029' 158368 };
Magic Number,StackOverflowTagServer.DataStructures,GCCollectionInfo,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\GCCollectionInfo.cs,GCCollectionInfo,The following statement contains a magic number: InitialValues = new GCInfoInstance(GC.CollectionCount(0)' GC.CollectionCount(1)' GC.CollectionCount(2));
Magic Number,StackOverflowTagServer.DataStructures,GCCollectionInfo,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\GCCollectionInfo.cs,UpdateCollectionInfo,The following statement contains a magic number: Count = new GCInfoInstance(                  GC.CollectionCount(0) - InitialValues.Gen0'                  GC.CollectionCount(1) - InitialValues.Gen1'                  GC.CollectionCount(2) - InitialValues.Gen2);
Magic Number,StackOverflowTagServer.DataStructures,SimpleBloomFilter,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\SimpleBloomFilter.cs,HashThomasWang,The following statement contains a magic number: x = ~x + (x << 15);
Magic Number,StackOverflowTagServer.DataStructures,SimpleBloomFilter,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\SimpleBloomFilter.cs,HashThomasWang,The following statement contains a magic number: x = x ^ (x >> 12);
Magic Number,StackOverflowTagServer.DataStructures,SimpleBloomFilter,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\SimpleBloomFilter.cs,HashThomasWang,The following statement contains a magic number: x = x + (x << 2);
Magic Number,StackOverflowTagServer.DataStructures,SimpleBloomFilter,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\SimpleBloomFilter.cs,HashThomasWang,The following statement contains a magic number: x = x ^ (x >> 4);
Magic Number,StackOverflowTagServer.DataStructures,SimpleBloomFilter,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\SimpleBloomFilter.cs,HashThomasWang,The following statement contains a magic number: x = x * 2057;
Magic Number,StackOverflowTagServer.DataStructures,SimpleBloomFilter,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\DataStructures\SimpleBloomFilter.cs,HashThomasWang,The following statement contains a magic number: x = x ^ (x >> 16);
Missing Default,StackOverflowTagServer,TagServer,D:\research\architectureSmells\repos\mattwarren_StackOverflowTagServer\TagServer\TagServer.cs,CreateSortedArrayForTag,The following switch statement is missing a default case: switch (queryType)              {                  case QueryType.AnswerCount:                      for (int i = 0; i < questionValues.Length; i++)                          questionValues[i] = questions[questionIds[i]].AnswerCount ?? -1;                      break;                  case QueryType.CreationDate:                      for (int i = 0; i < questionValues.Length; i++)                          questionValues[i] = questions[questionIds[i]].CreationDate.Ticks;                      break;                  case QueryType.LastActivityDate:                      for (int i = 0; i < questionValues.Length; i++)                          questionValues[i] = questions[questionIds[i]].LastActivityDate.Ticks;                      break;                  case QueryType.Score:                      for (int i = 0; i < questionValues.Length; i++)                          questionValues[i] = questions[questionIds[i]].Score ?? -1;                      break;                  case QueryType.ViewCount:                      for (int i = 0; i < questionValues.Length; i++)                          questionValues[i] = questions[questionIds[i]].ViewCount ?? -1;                      break;              }
