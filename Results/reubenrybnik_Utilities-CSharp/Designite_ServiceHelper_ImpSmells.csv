Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Run,The method has 107 lines of code.
Long Method,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The method has 140 lines of code.
Complex Method,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Run,Cyclomatic complexity of the method is 16
Complex Method,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,PerformOperation,Cyclomatic complexity of the method is 9
Complex Method,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,RunDebug,Cyclomatic complexity of the method is 15
Complex Method,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,ServiceLoop,Cyclomatic complexity of the method is 10
Complex Method,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,Cyclomatic complexity of the method is 25
Long Parameter List,ServiceHelper,NativeMethods,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\NativeMethods.cs,LogonUser,The method has 6 parameters.
Long Parameter List,ServiceHelper,NativeMethods,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\NativeMethods.cs,LogonUser,The method has 6 parameters.
Long Parameter List,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,GetOptionValue,The method has 6 parameters.
Long Identifier,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Cleanup,The length of the parameter disposableServiceImplementation is 31.
Long Statement,ServiceHelper,Arguments,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\Arguments.cs,PopulateNamedArguments,The length of the statement  "	Dictionary<string' string> namedArguments = new Dictionary<string' string> (this.namedArguments' this.namedArguments.Comparer); " is 127.
Long Statement,ServiceHelper,Arguments,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\Arguments.cs,Add,The length of the statement  "	string argument = "\"" + Arguments.namedArgumentFlags [0] + name.Replace ("\""' "\\\"") + Arguments.nameValueDelimiters [0] + value.Replace ("\""' "\\\"") + "\""; " is 162.
Long Statement,ServiceHelper,ReusableThread,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\ReusableThread.cs,Wait,The length of the statement  "		throw new ArgumentOutOfRangeException ("millisecondsTimeout"' "millisecondsTimeout must be a nonnegative integer or ReusableThread.Infinite (same as Timeout.Infinite)."); " is 170.
Long Statement,ServiceHelper,ReusableThread,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\ReusableThread.cs,Wait,The length of the statement  "	return (this.threadContext == null || !this.threadContext.IsAlive || this.threadContext.AsyncWaitHandle.WaitOne (millisecondsTimeout)); " is 135.
Long Statement,ServiceHelper,ReusableThread,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\ReusableThread.cs,Wait,The length of the statement  "		throw new ArgumentOutOfRangeException ("timeout"' "timeout must be a nonnegative length of time or ReusableThread.InfiniteTimeSpan (same as Timeout.InfiniteTimeSpan)."); " is 169.
Long Statement,ServiceHelper,ReusableThread,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\ReusableThread.cs,Wait,The length of the statement  "	return (this.threadContext == null || !this.threadContext.IsAlive || this.threadContext.AsyncWaitHandle.WaitOne (timeout)); " is 123.
Long Statement,ServiceHelper,WindowsServiceImplementation,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceImplementation.cs,WakeOnStopRequested,The length of the statement  "		throw new ArgumentOutOfRangeException ("sleepTime"' "sleepTime must be a nonnegative length of time or ReusableThread.InfiniteTimeSpan (same as Timeout.InfiniteTimeSpan)."); " is 173.
Long Statement,ServiceHelper,WindowsServiceImplementation,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceImplementation.cs,WakeOnStopRequested,The length of the statement  "		throw new ArgumentOutOfRangeException ("timeout"' "timeout must be a nonnegative length of time or ReusableThread.InfiniteTimeSpan (same as Timeout.InfiniteTimeSpan)."); " is 169.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Usage,The length of the statement  "	Console.WriteLine ("Running this program directly provides the means to control' debug' install' or uninstall this service."); " is 126.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Usage,The length of the statement  "	Console.WriteLine ("The operations below can be used to control the service instead of using a control mechanism built in to the operating system."); " is 149.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Usage,The length of the statement  "	Console.WriteLine ("For more information on the additional parameters available for these operations' run " + executable + " <Operation> /?"); " is 142.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageInstall,The length of the statement  "	Console.WriteLine (executable + " /I[nstall] [/Interactive|/Quiet] [/StartType:<Automatic|Manual|Disabled>] [/UserName:<LocalSystem|LocalService|NetworkService|UserName> [/Password:<Password>]] [/DisplayName:<FriendlyName>] [/Description:<Description>]"); " is 255.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageInstall,The length of the statement  "	Console.WriteLine ("/StartType - Whether the service should start automatically' should start on user request' or should be disabled. The default is " + Properties.Settings.Default.DefaultServiceStartType.ToString () + "."); " is 224.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageInstall,The length of the statement  "	Console.WriteLine ("/UserName - The user or well-known service account that the service should be run as. " + userNameDefaultStatement); " is 136.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageInstall,The length of the statement  "	Console.WriteLine ("/Password - The password for the specified user account. If a user that is not a well-known service account is provided for the UserName argument and this argument is not supplied' the user will be prompted for the appropriate password."); " is 259.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageInstall,The length of the statement  "	Console.WriteLine ("/Description - The description to give the service or blank to provide no description. " + descriptionDefaultStatement); " is 140.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageDebug,The length of the statement  "	Console.WriteLine (executable + " /Debug [/Once] [/UserName:<UserName> [/Password:<Password>]] [/LogEvents [/EventLogSource:<SourceName> | /EventLogName:<LogName>]]"); " is 167.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageDebug,The length of the statement  "	Console.WriteLine ("/Once - If this argument is provided' the service loop will be run exactly once. Otherwise' it will be looped as if the service were running normally until enter is pressed."); " is 196.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageDebug,The length of the statement  "	Console.WriteLine ("/UserName - If this argument is provided' the service will be run as the specified user' otherwise it will be run as the current user. Service accounts cannot be specified."); " is 195.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,UsageDebug,The length of the statement  "	Console.WriteLine ("/Password - The password for the specified user account. If UserName is provided and Password is not' the user will be prompted for the password."); " is 168.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Run,The length of the statement  "			performServiceOperation = (arguments [0].Equals ("/Start"' StringComparison.CurrentCultureIgnoreCase) || arguments [0].Equals ("/Stop"' StringComparison.CurrentCultureIgnoreCase) || arguments [0].Equals ("/Restart"' StringComparison.CurrentCultureIgnoreCase)); " is 260.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Run,The length of the statement  "			performInstallOperation = (arguments [0].Equals ("/Install"' StringComparison.CurrentCultureIgnoreCase) || arguments [0].Equals ("/Uninstall"' StringComparison.CurrentCultureIgnoreCase) || arguments [0].Equals ("/I"' StringComparison.CurrentCultureIgnoreCase) || arguments [0].Equals ("/U"' StringComparison.CurrentCultureIgnoreCase)); " is 335.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Run,The length of the statement  "			if (!(performServiceOperation || performInstallOperation || runDebugMode) || arguments.Exists ("?") || arguments.Exists ("help")) { " is 131.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,PerformOperation,The length of the statement  "				Trace.WriteLine (string.Format ("The service cannot be stopped in its current state of {0}."' serviceController.Status.ToString ())); " is 133.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,PerformOperation,The length of the statement  "				Trace.WriteLine ("The service failed to be stopped within the timeout of {0} seconds."' stopTimeout.TotalSeconds.ToString ()); " is 126.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,PerformOperation,The length of the statement  "				Trace.WriteLine (string.Format ("The service cannot be started in its current state of {0}."' serviceController.Status.ToString ())); " is 133.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,PerformOperation,The length of the statement  "				Trace.WriteLine (string.Format ("The service failed to be started within the timeout of {0} seconds."' startTimeout.TotalSeconds.ToString ())); " is 143.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,RunDebug,The length of the statement  "					if (!NativeMethods.LogonUser (user' domain' password' NativeMethods.LogonType.LOGON32_LOGON_INTERACTIVE' NativeMethods.LogonProvider.LOGON32_PROVIDER_DEFAULT' out userToken)) { " is 176.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,RunDebug,The length of the statement  "								logonSucceeded = NativeMethods.LogonUser (user' domain' unmanagedSecurePassword' NativeMethods.LogonType.LOGON32_LOGON_INTERACTIVE' NativeMethods.LogonProvider.LOGON32_PROVIDER_DEFAULT' out userToken); " is 201.
Long Statement,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,ServiceLoop,The length of the statement  "				this.serviceImplementation.LogError ("Unhandled exception in service call:" + Environment.NewLine + this.serviceTaskThread.Exception.ToString ()); " is 146.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "		throw new InvalidInstallOptionException ("Both interactive and quiet were specified. These arguments are mutually exclusive."' Constants.ERROR_BAD_ARGUMENTS); " is 158.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "		string value = this.GetOptionValue (optionName' friendlyOptionName' defaultValue' interactive' validationRegex' validationMessage); " is 131.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "			string selectedValue = this.GetValidInteractiveInput (friendlyOptionName' defaultValue' validationRegex' validationMessage); " is 124.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "			throw new InvalidInstallOptionException ("Input was required for user name in quiet mode."' Constants.ERROR_BAD_ARGUMENTS); " is 123.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "				string value = this.GetOptionValue (optionName' friendlyOptionName' defaultValue' userNameInteractive' validationRegex' validationMessage); " is 139.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "						throw new InvalidInstallOptionException ("Input was required for password in quiet mode."' Constants.ERROR_BAD_ARGUMENTS); " is 122.
Long Statement,ServiceHelper,WindowsServiceInstaller,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsServiceInstaller.cs,OnBeforeInstall,The length of the statement  "				logonSucceeded = NativeMethods.LogonUser (user' domain' this.Password' NativeMethods.LogonType.LOGON32_LOGON_INTERACTIVE' NativeMethods.LogonProvider.LOGON32_PROVIDER_DEFAULT' out userToken); " is 191.
Complex Conditional,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,Run,The conditional expression  "!(performServiceOperation || performInstallOperation || runDebugMode) || arguments.Exists ("?") || arguments.Exists ("help")"  is complex.
Empty Catch Block,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,OnStop,The method has an empty catch block.
Magic Number,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,OnStop,The following statement contains a magic number: try {  	// tell the service thread to stop as soon as possible  	serviceStopEvent.Set ();  	// wait for the service thread to stop  	bool stopSucceeded = this.WaitForServiceTask (Properties.Settings.Default.StopTimeout);  	// if the service thread takes longer than expected to stop' attempt to abort it  	// to make sure cleanup can run safely  	if (!stopSucceeded) {  		try {  			this.serviceTaskThread.Abort ();  		}  		catch {  		}  		// if the service thread cannot be aborted' fail immediately and do not clean up  		if (!this.WaitForServiceTask (TimeSpan.FromSeconds (5))) {  			throw new System.ServiceProcess.TimeoutException ("The service could not be stopped.");  		}  	}  	// run the cleanup method  	this.serviceTaskThread.Start (Cleanup);  	// if cleanup takes longer than expected' report an error  	if (!this.WaitForServiceTask (Properties.Settings.Default.CleanupTimeout)) {  		throw new System.ServiceProcess.TimeoutException ("Service cleanup failed to complete in a timely fashion.");  	}  	// if the cleanup method fails' propagate the error  	if (this.serviceTaskThread.Exception != null) {  		throw new ServiceTaskFailedException ("Service cleanup failed."' this.serviceTaskThread.Exception);  	}  	// if the service thread took longer than expected to stop' report an error  	if (!stopSucceeded) {  		throw new System.ServiceProcess.TimeoutException ("The service failed to stop in a timely fashion and was aborted.");  	}  }  finally {  	serviceTaskThread.Dispose ();  }  
Magic Number,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,OnStop,The following statement contains a magic number: if (!stopSucceeded) {  	try {  		this.serviceTaskThread.Abort ();  	}  	catch {  	}  	// if the service thread cannot be aborted' fail immediately and do not clean up  	if (!this.WaitForServiceTask (TimeSpan.FromSeconds (5))) {  		throw new System.ServiceProcess.TimeoutException ("The service could not be stopped.");  	}  }  
Magic Number,ServiceHelper,WindowsService,C:\repos\reubenrybnik_Utilities-CSharp\ServiceHelper\ServiceHelper\WindowsService.cs,OnStop,The following statement contains a magic number: if (!this.WaitForServiceTask (TimeSpan.FromSeconds (5))) {  	throw new System.ServiceProcess.TimeoutException ("The service could not be stopped.");  }  
