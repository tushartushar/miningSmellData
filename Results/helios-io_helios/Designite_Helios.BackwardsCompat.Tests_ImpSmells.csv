Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,TcpServerSocketChannelAndConnectionCompatSpecs,The following statement contains a magic number: _clientBootstrap = new ClientBootstrap()                  .SetTransport(TransportType.Tcp)                  .SetDecoder(new LengthFieldFrameBasedDecoder(int.MaxValue' 0' 4' 0' 4))                  .SetEncoder(new LengthFieldPrepender(4' false))                  .WorkerThreads(1).Build();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,TcpServerSocketChannelAndConnectionCompatSpecs,The following statement contains a magic number: _clientBootstrap = new ClientBootstrap()                  .SetTransport(TransportType.Tcp)                  .SetDecoder(new LengthFieldFrameBasedDecoder(int.MaxValue' 0' 4' 0' 4))                  .SetEncoder(new LengthFieldPrepender(4' false))                  .WorkerThreads(1).Build();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,TcpServerSocketChannelAndConnectionCompatSpecs,The following statement contains a magic number: _clientBootstrap = new ClientBootstrap()                  .SetTransport(TransportType.Tcp)                  .SetDecoder(new LengthFieldFrameBasedDecoder(int.MaxValue' 0' 4' 0' 4))                  .SetEncoder(new LengthFieldPrepender(4' false))                  .WorkerThreads(1).Build();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,TcpServerSocketChannelAndConnectionCompatSpecs,The following statement contains a magic number: _serverBootstrap = new ServerBootstrap()                  .Channel<TcpServerSocketChannel>()                  .Group(_serverGroup)                  .ChildHandler(new ActionChannelInitializer<TcpSocketChannel>(channel =>                  {                      channel.Pipeline.AddLast(new LengthFieldBasedFrameDecoder(int.MaxValue' 0' 4' 0' 4' true))                          .AddLast(new HeliosBackwardsCompatabilityLengthFramePrepender(4' false))                          .AddLast(new EchoHandler());                  }));
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,TcpServerSocketChannelAndConnectionCompatSpecs,The following statement contains a magic number: _serverBootstrap = new ServerBootstrap()                  .Channel<TcpServerSocketChannel>()                  .Group(_serverGroup)                  .ChildHandler(new ActionChannelInitializer<TcpSocketChannel>(channel =>                  {                      channel.Pipeline.AddLast(new LengthFieldBasedFrameDecoder(int.MaxValue' 0' 4' 0' 4' true))                          .AddLast(new HeliosBackwardsCompatabilityLengthFramePrepender(4' false))                          .AddLast(new EchoHandler());                  }));
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,TcpServerSocketChannelAndConnectionCompatSpecs,The following statement contains a magic number: _serverBootstrap = new ServerBootstrap()                  .Channel<TcpServerSocketChannel>()                  .Group(_serverGroup)                  .ChildHandler(new ActionChannelInitializer<TcpSocketChannel>(channel =>                  {                      channel.Pipeline.AddLast(new LengthFieldBasedFrameDecoder(int.MaxValue' 0' 4' 0' 4' true))                          .AddLast(new HeliosBackwardsCompatabilityLengthFramePrepender(4' false))                          .AddLast(new EchoHandler());                  }));
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,Helios20_Server_and_Helios14_Client_Should_ReadWrite,The following statement contains a magic number: client.Send(Unpooled.Buffer(4).WriteInt(write).Array' 0' 4' null);
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpServerSocketChannelAndConnectionCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpServerSocketChannelAndConnectionCompatSpecs.cs,Helios20_Server_and_Helios14_Client_Should_ReadWrite,The following statement contains a magic number: client.Send(Unpooled.Buffer(4).WriteInt(write).Array' 0' 4' null);
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,TcpSocketChannelAndReactorCompatSpecs,The following statement contains a magic number: _serverBootstrap = new ServerBootstrap()                  .SetTransport(TransportType.Tcp)                  .SetDecoder(new LengthFieldFrameBasedDecoder(int.MaxValue' 0' 4' 0' 4))                  .SetEncoder(new LengthFieldPrepender(4' false)).Build();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,TcpSocketChannelAndReactorCompatSpecs,The following statement contains a magic number: _serverBootstrap = new ServerBootstrap()                  .SetTransport(TransportType.Tcp)                  .SetDecoder(new LengthFieldFrameBasedDecoder(int.MaxValue' 0' 4' 0' 4))                  .SetEncoder(new LengthFieldPrepender(4' false)).Build();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,TcpSocketChannelAndReactorCompatSpecs,The following statement contains a magic number: _serverBootstrap = new ServerBootstrap()                  .SetTransport(TransportType.Tcp)                  .SetDecoder(new LengthFieldFrameBasedDecoder(int.MaxValue' 0' 4' 0' 4))                  .SetEncoder(new LengthFieldPrepender(4' false)).Build();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,TcpSocketChannelAndReactorCompatSpecs,The following statement contains a magic number: _clientBootstrap = new ClientBootstrap()                  .Channel<TcpSocketChannel>()                  .Group(_clientGroup)                  .Handler(new ActionChannelInitializer<TcpSocketChannel>(channel =>                  {                      channel.Pipeline.AddLast(new LengthFieldBasedFrameDecoder(int.MaxValue' 0' 4' 0' 4' true))                          .AddLast(new HeliosBackwardsCompatabilityLengthFramePrepender(4' false))                          .AddLast(new ReadRecorderHandler(_received' _resetEvent' ReadCount));                  }));
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,TcpSocketChannelAndReactorCompatSpecs,The following statement contains a magic number: _clientBootstrap = new ClientBootstrap()                  .Channel<TcpSocketChannel>()                  .Group(_clientGroup)                  .Handler(new ActionChannelInitializer<TcpSocketChannel>(channel =>                  {                      channel.Pipeline.AddLast(new LengthFieldBasedFrameDecoder(int.MaxValue' 0' 4' 0' 4' true))                          .AddLast(new HeliosBackwardsCompatabilityLengthFramePrepender(4' false))                          .AddLast(new ReadRecorderHandler(_received' _resetEvent' ReadCount));                  }));
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,TcpSocketChannelAndReactorCompatSpecs,The following statement contains a magic number: _clientBootstrap = new ClientBootstrap()                  .Channel<TcpSocketChannel>()                  .Group(_clientGroup)                  .Handler(new ActionChannelInitializer<TcpSocketChannel>(channel =>                  {                      channel.Pipeline.AddLast(new LengthFieldBasedFrameDecoder(int.MaxValue' 0' 4' 0' 4' true))                          .AddLast(new HeliosBackwardsCompatabilityLengthFramePrepender(4' false))                          .AddLast(new ReadRecorderHandler(_received' _resetEvent' ReadCount));                  }));
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,Helios20_Client_and_Helios14_Server_Should_ReadWrite,The following statement contains a magic number: Task.Delay(TimeSpan.FromMilliseconds(500)).Wait();
Magic Number,Helios.BackwardsCompat.Tests.Tcp,TcpSocketChannelAndReactorCompatSpecs,D:\research\architectureSmells\repos\helios-io_helios\tests\Helios.BackwardsCompat.Tests\Tcp\TcpSocketChannelAndReactorCompatSpecs.cs,Helios20_Client_and_Helios14_Server_Should_ReadWrite,The following statement contains a magic number: client.WriteAndFlushAsync(Unpooled.Buffer(4).WriteInt(write));
