Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Helios.Channels,AbstractChannelHandlerContext,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\AbstractChannelHandlerContext.cs,CalculateSkipPropagationFlags,Cyclomatic complexity of the method is 20
Complex Method,Helios.Channels,ChannelOutboundBuffer,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\ChannelOutboundBuffer.cs,GetNioBuffers,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels,DefaultChannelConfiguration,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,GetOption,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels,DefaultChannelConfiguration,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,SetOption,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels.Local,LocalChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Local\LocalChannel.cs,DoClose,Cyclomatic complexity of the method is 8
Complex Method,Helios.Channels.Sockets,AbstractSocketByteChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Sockets\AbstractSocketByteChannel.cs,DoWrite,Cyclomatic complexity of the method is 10
Complex Method,Helios.Channels.Sockets,AbstractSocketChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Sockets\AbstractSocketChannel.cs,OnIoCompleted,Cyclomatic complexity of the method is 9
Complex Method,Helios.Channels.Sockets,DefaultSocketChannelConfiguration,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Sockets\DefaultSocketChannelConfiguration.cs,GetOption,Cyclomatic complexity of the method is 8
Complex Method,Helios.Channels.Sockets,DefaultSocketChannelConfiguration,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Sockets\DefaultSocketChannelConfiguration.cs,SetOption,Cyclomatic complexity of the method is 9
Complex Method,Helios.Channels.Sockets,TcpSocketChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Sockets\TcpSocketChannel.cs,DoWrite,Cyclomatic complexity of the method is 14
Complex Method,Helios.Codecs,ByteToMessageDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\ByteToMessageDecoder.cs,CallDecode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,Decode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Concurrency,SingleThreadEventExecutor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,GracefulShutdownAsync,Cyclomatic complexity of the method is 8
Complex Method,Helios.Serialization,LengthFieldFrameBasedDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,Decode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,Cyclomatic complexity of the method is 9
Complex Method,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,Configure,Cyclomatic complexity of the method is 8
Complex Method,Helios.Reactor.Tcp,TcpProxyReactor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,Configure,Cyclomatic complexity of the method is 9
Long Parameter List,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,UnpooledDirectByteBuf,The method has 5 parameters. Parameters: alloc' initialArray' readerIndex' writerIndex' maxCapacity
Long Parameter List,Helios.Channels,PausableChannelEventExecutor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\PausableChannelEventExecutor.cs,ScheduleAsync,The method has 5 parameters. Parameters: action' context' state' delay' cancellationToken
Long Parameter List,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,LengthFieldBasedFrameDecoder,The method has 5 parameters. Parameters: maxFrameLength' lengthFieldOffset' lengthFieldLength' lengthAdjustment' initialBytesToStrip
Long Parameter List,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,LengthFieldBasedFrameDecoder,The method has 6 parameters. Parameters: maxFrameLength' lengthFieldOffset' lengthFieldLength' lengthAdjustment' initialBytesToStrip' failFast
Long Parameter List,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,LengthFieldBasedFrameDecoder,The method has 7 parameters. Parameters: byteOrder' maxFrameLength' lengthFieldOffset' lengthFieldLength' lengthAdjustment' initialBytesToStrip' failFast
Long Parameter List,Helios.Concurrency,AbstractEventExecutor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\AbstractEventExecutor.cs,ScheduleAsync,The method has 5 parameters. Parameters: action' context' state' delay' cancellationToken
Long Parameter List,Helios.Concurrency,AbstractScheduledEventExecutor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\AbstractScheduledEventExecutor.cs,ScheduleAsync,The method has 5 parameters. Parameters: action' context' state' delay' cancellationToken
Long Parameter List,Helios.Concurrency,ActionWithStateAndContextScheduledAsyncTask,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\ActionWithStateAndContextScheduledAsyncTask.cs,ActionWithStateAndContextScheduledAsyncTask,The method has 6 parameters. Parameters: executor' action' context' state' deadline' cancellationToken
Long Parameter List,Helios.Concurrency,ActionWithStateAndContextScheduledTask,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\ActionWithStateAndContextScheduledTask.cs,ActionWithStateAndContextScheduledTask,The method has 5 parameters. Parameters: executor' action' context' state' deadline
Long Parameter List,Helios.Concurrency,ActionWithStateScheduledAsyncTask,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\ActionWithStateScheduledAsyncTask.cs,ActionWithStateScheduledAsyncTask,The method has 5 parameters. Parameters: executor' action' state' deadline' cancellationToken
Long Parameter List,Helios.Concurrency,IEventExecutor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\IEventExecutor.cs,ScheduleAsync,The method has 5 parameters. Parameters: action' context' state' delay' cancellationToken
Long Parameter List,Helios.Util,ByteArrayExtensions,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\ByteArrayExtensions.cs,SetRange,The method has 5 parameters. Parameters: array' index' src' srcIndex' srcLength
Long Parameter List,Helios.Serialization,LengthFieldFrameBasedDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,LengthFieldFrameBasedDecoder,The method has 5 parameters. Parameters: maxFrameLength' lengthFieldOffset' lengthFieldLength' lengthAdjustment' initialBytesToStrip
Long Parameter List,Helios.Serialization,LengthFieldFrameBasedDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,LengthFieldFrameBasedDecoder,The method has 6 parameters. Parameters: maxFrameLength' lengthFieldOffset' lengthFieldLength' lengthAdjustment' initialBytesToStrip' failFast
Long Parameter List,Helios.Net.Connections,MulticastUdpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\MulticastUdpConnection.cs,MulticastUdpConnection,The method has 7 parameters. Parameters: eventLoop' binding' multicastAddress' timeout' encoder' decoder' allocator
Long Parameter List,Helios.Net.Connections,MulticastUdpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\MulticastUdpConnection.cs,MulticastUdpConnection,The method has 6 parameters. Parameters: eventLoop' binding' multicastAddress' encoder' decoder' allocator
Long Parameter List,Helios.Net.Connections,UdpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\UdpConnection.cs,UdpConnection,The method has 6 parameters. Parameters: eventLoop' binding' timeout' encoder' decoder' allocator
Long Parameter List,Helios.Net.Connections,UdpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\UdpConnection.cs,UdpConnection,The method has 5 parameters. Parameters: eventLoop' binding' encoder' decoder' allocator
Long Parameter List,Helios.Net.Connections,UnstreamedConnectionBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,UnstreamedConnectionBase,The method has 7 parameters. Parameters: eventLoop' binding' timeout' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Net.Connections,UnstreamedConnectionBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,UnstreamedConnectionBase,The method has 6 parameters. Parameters: eventLoop' binding' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,TcpConnection,The method has 7 parameters. Parameters: eventLoop' node' timeout' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,TcpConnection,The method has 6 parameters. Parameters: eventLoop' node' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,TcpConnection,The method has 5 parameters. Parameters: client' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Reactor,ProxyReactorBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\ProxyReactorBase.cs,ProxyReactorBase,The method has 9 parameters. Parameters: localAddress' localPort' eventLoop' encoder' decoder' allocator' socketType' protocol' bufferSize
Long Parameter List,Helios.Reactor,ReactorBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\ReactorBase.cs,ReactorBase,The method has 9 parameters. Parameters: localAddress' localPort' eventLoop' encoder' decoder' allocator' socketType' protocol' bufferSize
Long Parameter List,Helios.Reactor,SingleReceiveLoopProxyReactor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\SingleReceiveLoopProxyReactor.cs,SingleReceiveLoopProxyReactor,The method has 9 parameters. Parameters: localAddress' localPort' eventLoop' encoder' decoder' allocator' socketType' protocol' bufferSize
Long Parameter List,Helios.Reactor.Response,TcpReactorResponseChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Response\TcpReactorResponseChannel.cs,TcpReactorResponseChannel,The method has 5 parameters. Parameters: reactor' outboundSocket' endPoint' eventLoop' bufferSize
Long Parameter List,Helios.Reactor.Tcp,TcpProxyReactor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,TcpProxyReactor,The method has 7 parameters. Parameters: localAddress' localPort' eventLoop' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Reactor.Tcp,TcpSingleEventLoopProxyReactor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,TcpSingleEventLoopProxyReactor,The method has 7 parameters. Parameters: localAddress' localPort' eventLoop' encoder' decoder' allocator' bufferSize
Long Parameter List,Helios.Reactor.Udp,UdpProxyReactor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Udp\UdpProxyReactor.cs,UdpProxyReactor,The method has 7 parameters. Parameters: localAddress' localPort' eventLoop' encoder' decoder' allocator' bufferSize
Long Identifier,Helios.Channels,AbstractUnsafe,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\AbstractChannel.cs,,The length of the parameter InvokeWritabilityChangedUnsafe is 30.
Long Identifier,Helios.Channels,AbstractChannelHandlerContext,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\AbstractChannelHandlerContext.cs,,The length of the parameter MASK_CHANNEL_WRITABILITY_CHANGED is 32.
Long Identifier,Helios.Channels,ChannelOutboundBuffer,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\ChannelOutboundBuffer.cs,,The length of the parameter _fireChannelWritabilityChanged is 30.
Long Identifier,Helios.Channels,DefaultChannelHandlerInvoker,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelHandlerInvoker.cs,,The length of the parameter InvokeChannelReadCompleteAction is 31.
Long Identifier,Helios.Channels,DefaultChannelHandlerInvoker,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelHandlerInvoker.cs,,The length of the parameter InvokeChannelWritabilityChangedAction is 37.
Long Identifier,Helios.Channels,DefaultChannelHandlerInvoker,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelHandlerInvoker.cs,,The length of the parameter InvokeUserEventTriggeredAction is 30.
Long Identifier,Helios.Codecs,HeliosBackwardsCompatabilityLengthFramePrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\HeliosBackwardsCompatabilityLengthFramePrepender.cs,HeliosBackwardsCompatabilityLengthFramePrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,HeliosBackwardsCompatabilityLengthFramePrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\HeliosBackwardsCompatabilityLengthFramePrepender.cs,HeliosBackwardsCompatabilityLengthFramePrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,HeliosBackwardsCompatabilityLengthFramePrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\HeliosBackwardsCompatabilityLengthFramePrepender.cs,HeliosBackwardsCompatabilityLengthFramePrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthFieldIncludesLengthFieldLength is 36.
Long Identifier,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,,The length of the parameter _lengthFieldIncludesLengthFieldLength is 37.
Long Identifier,Helios.Concurrency,ScheduledAsyncTask,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\ScheduledAsyncTask.cs,,The length of the parameter _cancellationTokenRegistration is 30.
Long Identifier,Helios.Net,NetworkEventLoop,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\NetworkEventLoop.cs,,The length of the parameter _internalConnectionEstablished is 30.
Long Identifier,Helios.Net,MulticastHelper,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\MulticastHelper.cs,,The length of the parameter MulticastIPv4AddressRangeRegex is 30.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpClientConnectFailureCounter is 30.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpClientReceiveFailureCounter is 30.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpClientReceiveSuccessCounter is 30.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpInboundAcceptFailureCounter is 30.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpInboundAcceptSuccessCounter is 30.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpInboundReceiveFailureCounter is 31.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter TcpInboundReceiveSuccessCounter is 31.
Long Identifier,Helios.Tracing,Counters,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Tracing\Impl\HeliosCounterTraceWriter.cs,,The length of the parameter UdpClientReceiveSuccessCounter is 30.
Long Identifier,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthIncludesLenghtFieldLength is 31.
Long Identifier,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,LengthFieldPrepender,The length of the parameter lengthIncludesLenghtFieldLength is 31.
Long Identifier,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,,The length of the parameter _lengthIncludesLenghtFieldLength is 32.
Long Statement,Helios.Logging,LogEvent,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Logging\LogEvent.cs,ToString,The length of the statement  "                $"[{Level.ToString().ToUpperInvariant()}][{Timestamp}][Thread {ThreadId.ToString().PadLeft(4' '0')}][{LogSource}] {Message}"; " is 125.
Long Statement,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,Open,The length of the statement  "                    // JKH = because I want to know if my BeginConnect has failed and because when I use BeginConnect I cannot catch this throw and it litters my Debug window " is 154.
Complex Conditional,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The conditional expression  "lengthFieldLength != 1 && lengthFieldLength != 2 &&                  lengthFieldLength != 4 && lengthFieldLength != 8"  is complex.
Virtual Method Call from Constructor,Helios.Buffers,DuplicateByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\DuplicateByteBuf.cs,DuplicateByteBuf,The constructor "DuplicateByteBuf" calls a virtual method "SetIndex".
Virtual Method Call from Constructor,Helios.Buffers,SlicedByteBuffer,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\SlicedByteBuffer.cs,SlicedByteBuffer,The constructor "SlicedByteBuffer" calls a virtual method "SetWriterIndex".
Virtual Method Call from Constructor,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,UnpooledDirectByteBuf,The constructor "UnpooledDirectByteBuf" calls a virtual method "SetIndex".
Virtual Method Call from Constructor,Helios.Channels,AbstractChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\AbstractChannel.cs,AbstractChannel,The constructor "AbstractChannel" calls a virtual method "NewUnsafe".
Empty Catch Block,Helios.Channels.Sockets,DefaultSocketChannelConfiguration,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Sockets\DefaultSocketChannelConfiguration.cs,DefaultSocketChannelConfiguration,The method has an empty catch block.
Empty Catch Block,Helios.Net.Connections,UnstreamedConnectionBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\UnstreamedConnectionBase.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Helios.Reactor,ReactorBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\ReactorBase.cs,Stop,The method has an empty catch block.
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: var firstHexColumn =                  8 // 8 characters for the address                  + 3;
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: var firstHexColumn =                  8 // 8 characters for the address                  + 3;
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: var firstCharColumn = firstHexColumn                                    + bytesPerLine*3 // - 2 digit for the hexadecimal value and 1 space                                    + (bytesPerLine - 1)/8 // - 1 extra space every 8 characters from the 9th                                    + 2;
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: var firstCharColumn = firstHexColumn                                    + bytesPerLine*3 // - 2 digit for the hexadecimal value and 1 space                                    + (bytesPerLine - 1)/8 // - 1 extra space every 8 characters from the 9th                                    + 2;
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: var firstCharColumn = firstHexColumn                                    + bytesPerLine*3 // - 2 digit for the hexadecimal value and 1 space                                    + (bytesPerLine - 1)/8 // - 1 extra space every 8 characters from the 9th                                    + 2;
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[0] = HexChars[(i >> 28) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[1] = HexChars[(i >> 24) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[2] = HexChars[(i >> 20) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[2] = HexChars[(i >> 20) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[3] = HexChars[(i >> 16) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[3] = HexChars[(i >> 16) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[4] = HexChars[(i >> 12) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[4] = HexChars[(i >> 12) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[5] = HexChars[(i >> 8) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[5] = HexChars[(i >> 8) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[6] = HexChars[(i >> 4) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[6] = HexChars[(i >> 4) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: line[7] = HexChars[(i >> 0) & 0xF];
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: j > 0 && (j & 7) == 0
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,HexDump,The following statement contains a magic number: hexColumn += 3;
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapLong,The following statement contains a magic number: return ((SwapInt((int) value) & 0xFFFFFFFF) << 32)                     | (SwapInt((int) (value >> 32)) & 0xFFFFFFFF);
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapLong,The following statement contains a magic number: return ((SwapInt((int) value) & 0xFFFFFFFF) << 32)                     | (SwapInt((int) (value >> 32)) & 0xFFFFFFFF);
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapInt,The following statement contains a magic number: return ((SwapShort((short) value) & 0xFFFF) << 16)                     | (SwapShort((short) (value >> 16)) & 0xFFFF);
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapInt,The following statement contains a magic number: return ((SwapShort((short) value) & 0xFFFF) << 16)                     | (SwapShort((short) (value >> 16)) & 0xFFFF);
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapShort,The following statement contains a magic number: return (short) (((value & 0xFF) << 8) | (value >> 8) & 0xFF);
Magic Number,Helios.Buffers,ByteBufferUtil,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\ByteBufferUtil.cs,SwapShort,The following statement contains a magic number: return (short) (((value & 0xFF) << 8) | (value >> 8) & 0xFF);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,GetShort,The following statement contains a magic number: CheckIndex(index' 2);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,GetInt,The following statement contains a magic number: CheckIndex(index' 4);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,GetLong,The following statement contains a magic number: CheckIndex(index' 8);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetShort,The following statement contains a magic number: CheckIndex(index' 2);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetInt,The following statement contains a magic number: CheckIndex(index' 4);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,SetLong,The following statement contains a magic number: CheckIndex(index' 8);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadShort,The following statement contains a magic number: CheckReadableBytes(2);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadShort,The following statement contains a magic number: ReaderIndex += 2;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadInt,The following statement contains a magic number: CheckReadableBytes(4);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadInt,The following statement contains a magic number: ReaderIndex += 4;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadLong,The following statement contains a magic number: CheckReadableBytes(8);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,ReadLong,The following statement contains a magic number: ReaderIndex += 8;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteShort,The following statement contains a magic number: EnsureWritable(2);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteShort,The following statement contains a magic number: WriterIndex += 2;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteInt,The following statement contains a magic number: EnsureWritable(4);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteInt,The following statement contains a magic number: WriterIndex += 4;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteLong,The following statement contains a magic number: EnsureWritable(8);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteLong,The following statement contains a magic number: WriterIndex += 8;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: nLong = (int) ((uint) length >> 3);
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: nBytes = length & 7;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: wIndex += 8;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: wIndex += 4;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,WriteZero,The following statement contains a magic number: nBytes == 4
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,CalculateNewCapacity,The following statement contains a magic number: var threshold = 1048576*4;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,CalculateNewCapacity,The following statement contains a magic number: var threshold = 1048576*4;
Magic Number,Helios.Buffers,AbstractByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\AbstractByteBuf.cs,CalculateNewCapacity,The following statement contains a magic number: newCapacity = 64;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetShort,The following statement contains a magic number: return unchecked((short) (_buffer[index] | _buffer[index + 1] << 8));
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer[index] |                               _buffer[index + 1] << 8 |                               _buffer[index + 2] << 16 |                               _buffer[index + 3] << 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer[index] |                               _buffer[index + 1] << 8 |                               _buffer[index + 2] << 16 |                               _buffer[index + 3] << 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer[index] |                               _buffer[index + 1] << 8 |                               _buffer[index + 2] << 16 |                               _buffer[index + 3] << 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer[index] |                               _buffer[index + 1] << 8 |                               _buffer[index + 2] << 16 |                               _buffer[index + 3] << 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetInt,The following statement contains a magic number: return unchecked(_buffer[index] |                               _buffer[index + 1] << 8 |                               _buffer[index + 2] << 16 |                               _buffer[index + 3] << 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i1 = _buffer[index] |                           _buffer[index + 1] << 8 |                           _buffer[index + 2] << 16 |                           _buffer[index + 3] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i1 = _buffer[index] |                           _buffer[index + 1] << 8 |                           _buffer[index + 2] << 16 |                           _buffer[index + 3] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i1 = _buffer[index] |                           _buffer[index + 1] << 8 |                           _buffer[index + 2] << 16 |                           _buffer[index + 3] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i1 = _buffer[index] |                           _buffer[index + 1] << 8 |                           _buffer[index + 2] << 16 |                           _buffer[index + 3] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i1 = _buffer[index] |                           _buffer[index + 1] << 8 |                           _buffer[index + 2] << 16 |                           _buffer[index + 3] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: var i2 = _buffer[index + 4] |                           _buffer[index + 5] << 8 |                           _buffer[index + 6] << 16 |                           _buffer[index + 7] << 24;
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_GetLong,The following statement contains a magic number: return (uint) i1 | ((long) i2 << 32);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetShort,The following statement contains a magic number: _buffer[index + 1] = (byte) ((ushort) value >> 8);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer[index + 1] = (byte) (unsignedValue >> 8);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer[index + 2] = (byte) (unsignedValue >> 16);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer[index + 2] = (byte) (unsignedValue >> 16);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer[index + 3] = (byte) (unsignedValue >> 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetInt,The following statement contains a magic number: _buffer[index + 3] = (byte) (unsignedValue >> 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 1] = (byte) (unsignedValue >> 8);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 2] = (byte) (unsignedValue >> 16);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 2] = (byte) (unsignedValue >> 16);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 3] = (byte) (unsignedValue >> 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 3] = (byte) (unsignedValue >> 24);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 4] = (byte) (unsignedValue >> 32);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 4] = (byte) (unsignedValue >> 32);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 5] = (byte) (unsignedValue >> 40);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 5] = (byte) (unsignedValue >> 40);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 6] = (byte) (unsignedValue >> 48);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 6] = (byte) (unsignedValue >> 48);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 7] = (byte) (unsignedValue >> 56);
Magic Number,Helios.Buffers,UnpooledDirectByteBuf,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Buffers\UnpooledDirectByteBuf.cs,_SetLong,The following statement contains a magic number: _buffer[index + 7] = (byte) (unsignedValue >> 56);
Magic Number,Helios.Channels,DefaultChannelConfiguration,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelConfiguration.cs,DefaultChannelConfiguration,The following statement contains a magic number: _maxMessagesPerRead = 16;
Magic Number,Helios.Channels,DefaultChannelPipeline,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\DefaultChannelPipeline.cs,DefaultChannelPipeline,The following statement contains a magic number: _nameContextMap = new Dictionary<string' AbstractChannelHandlerContext>(4);
Magic Number,Helios.Channels.Local,LocalAddress,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Local\LocalAddress.cs,LocalAddress,The following statement contains a magic number: var sb = new StringBuilder(16);
Magic Number,Helios.Channels.Local,LocalAddress,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Local\LocalAddress.cs,LocalAddress,The following statement contains a magic number: sb[7] = ':';
Magic Number,Helios.Channels.Local,LocalAddress,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Local\LocalAddress.cs,LocalAddress,The following statement contains a magic number: Id = _strVal.Substring(6);
Magic Number,Helios.Channels.Local,LocalServerChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Local\LocalServerChannel.cs,DoClose,The following statement contains a magic number: _state = 2;
Magic Number,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length)              {                  case 1:                      frameLength = buffer.GetByte(offset);                      break;                  case 2:                      frameLength = buffer.GetShort(offset);                      break;                  case 4:                      frameLength = buffer.GetInt(offset);                      break;                  case 8:                      frameLength = buffer.GetLong(offset);                      break;                  default:                      throw new DecoderException("unsupported lengthFieldLength: " + lengthFieldLength +                                                 " (expected: 1' 2' 3' 4' or 8)");              }
Magic Number,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length)              {                  case 1:                      frameLength = buffer.GetByte(offset);                      break;                  case 2:                      frameLength = buffer.GetShort(offset);                      break;                  case 4:                      frameLength = buffer.GetInt(offset);                      break;                  case 8:                      frameLength = buffer.GetLong(offset);                      break;                  default:                      throw new DecoderException("unsupported lengthFieldLength: " + lengthFieldLength +                                                 " (expected: 1' 2' 3' 4' or 8)");              }
Magic Number,Helios.Codecs,LengthFieldBasedFrameDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length)              {                  case 1:                      frameLength = buffer.GetByte(offset);                      break;                  case 2:                      frameLength = buffer.GetShort(offset);                      break;                  case 4:                      frameLength = buffer.GetInt(offset);                      break;                  case 8:                      frameLength = buffer.GetLong(offset);                      break;                  default:                      throw new DecoderException("unsupported lengthFieldLength: " + lengthFieldLength +                                                 " (expected: 1' 2' 3' 4' or 8)");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The following statement contains a magic number: lengthFieldLength != 1 && lengthFieldLength != 2 &&                  lengthFieldLength != 4 && lengthFieldLength != 8
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The following statement contains a magic number: lengthFieldLength != 1 && lengthFieldLength != 2 &&                  lengthFieldLength != 4 && lengthFieldLength != 8
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,LengthFieldPrepender,The following statement contains a magic number: lengthFieldLength != 1 && lengthFieldLength != 2 &&                  lengthFieldLength != 4 && lengthFieldLength != 8
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Codecs,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Codecs\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                      {                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      }                      output.Add(context.Allocator.Buffer(1).WithOrder(_byteOrder).WriteByte((byte) length));                      break;                  case 2:                      if (length >= 65536)                      {                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      }                      output.Add(context.Allocator.Buffer(2).WithOrder(_byteOrder).WriteShort((short) length));                      break;                  case 4:                      output.Add(context.Allocator.Buffer(4).WithOrder(_byteOrder).WriteInt(length));                      break;                  case 8:                      output.Add(context.Allocator.Buffer(8).WithOrder(_byteOrder).WriteLong(length));                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Concurrency,SingleThreadEventExecutor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\SingleThreadEventExecutor.cs,ConfirmShutdown,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,Helios.Concurrency.Impl,ThreadPoolFiber,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\Impl\ThreadPoolFiber.cs,SwapExecutor,The following statement contains a magic number: Executor.GracefulShutdown(TimeSpan.FromSeconds(3));
Magic Number,Helios.Concurrency.Impl,DedicatedThreadPoolFiber,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\Impl\DedicatedThreadPoolFiber.cs,SwapExecutor,The following statement contains a magic number: Executor.GracefulShutdown(TimeSpan.FromSeconds(3));
Magic Number,Helios.Concurrency.Impl,SynchronousFiber,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Concurrency\Impl\SynchronousFiber.cs,SwapExecutor,The following statement contains a magic number: Executor.GracefulShutdown(TimeSpan.FromSeconds(3));
Magic Number,Helios.Logging,LogEvent,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Logging\LogEvent.cs,ToString,The following statement contains a magic number: return                  $"[{Level.ToString().ToUpperInvariant()}][{Timestamp}][Thread {ThreadId.ToString().PadLeft(4' '0')}][{LogSource}] {Message}";
Magic Number,Helios.Util,InternalThreadLocalMap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\InternalThreadLocalMap.cs,CreateIndexedVariableTable,The following statement contains a magic number: var array = new object[32];
Magic Number,Helios.Util,InternalThreadLocalMap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift(2);
Magic Number,Helios.Util,InternalThreadLocalMap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift(4);
Magic Number,Helios.Util,InternalThreadLocalMap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift(8);
Magic Number,Helios.Util,InternalThreadLocalMap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\InternalThreadLocalMap.cs,ExpandIndexedVariableTableAndSet,The following statement contains a magic number: newCapacity |= newCapacity.RightUShift(16);
Magic Number,Helios.Util.Collections,PriorityQueue<T>,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\Collections\PriorityQueue.cs,PriorityQueue,The following statement contains a magic number: _capacity = 11;
Magic Number,Helios.Util.Collections,PriorityQueue<T>,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\Collections\PriorityQueue.cs,GrowHeap,The following statement contains a magic number: _capacity = oldCapacity + (oldCapacity <= 64 ? oldCapacity + 2 : oldCapacity >> 1);
Magic Number,Helios.Util.Collections,PriorityQueue<T>,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Util\Collections\PriorityQueue.cs,GrowHeap,The following statement contains a magic number: _capacity = oldCapacity + (oldCapacity <= 64 ? oldCapacity + 2 : oldCapacity >> 1);
Magic Number,Helios.Topology,Node,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: var hashCode = 17;
Magic Number,Helios.Topology,Node,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: hashCode += 23*Host.GetHashCode();
Magic Number,Helios.Topology,Node,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Topology\Node.cs,GetHashCode,The following statement contains a magic number: hashCode += 23*Port.GetHashCode();
Magic Number,Helios.Serialization,LengthFieldFrameBasedDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length)              {                  case 1:                      framelength = buf.GetByte(offset);                      break;                  case 2:                      framelength = buf.GetShort(offset);                      break;                  case 4:                      framelength = buf.GetInt(offset);                      break;                  case 8:                      framelength = buf.GetLong(offset);                      break;                  default:                      throw new DecoderException(                          string.Format("unsupported lengtFieldLength: {0} (expected: 1' 2' 4' or 8)"' length));              }
Magic Number,Helios.Serialization,LengthFieldFrameBasedDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length)              {                  case 1:                      framelength = buf.GetByte(offset);                      break;                  case 2:                      framelength = buf.GetShort(offset);                      break;                  case 4:                      framelength = buf.GetInt(offset);                      break;                  case 8:                      framelength = buf.GetLong(offset);                      break;                  default:                      throw new DecoderException(                          string.Format("unsupported lengtFieldLength: {0} (expected: 1' 2' 4' or 8)"' length));              }
Magic Number,Helios.Serialization,LengthFieldFrameBasedDecoder,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldFrameBasedDecoder.cs,GetUnadjustedFrameLength,The following statement contains a magic number: switch (length)              {                  case 1:                      framelength = buf.GetByte(offset);                      break;                  case 2:                      framelength = buf.GetShort(offset);                      break;                  case 4:                      framelength = buf.GetInt(offset);                      break;                  case 8:                      framelength = buf.GetLong(offset);                      break;                  default:                      throw new DecoderException(                          string.Format("unsupported lengtFieldLength: {0} (expected: 1' 2' 4' or 8)"' length));              }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)                  {                      case 1:                          if (length >= 256)                              throw new ArgumentException("length of object does not fit into one byte: " + length);                          memoryStream.Write(BitConverter.GetBytes((byte) length)' 0' 1);                          break;                      case 2:                          if (length >= 65536)                              throw new ArgumentException("length of object does not fit into a short integer: " + length);                          memoryStream.Write(BitConverter.GetBytes((ushort) length)' 0' 2);                          break;                      case 4:                          memoryStream.Write(BitConverter.GetBytes((uint) length)' 0' 4);                          break;                      case 8:                          memoryStream.Write(BitConverter.GetBytes((long) length)' 0' 8);                          break;                      default:                          throw new Exception("Unknown lenght field length");                  }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      sourceByteBuf.WriteByte(length);                      break;                  case 2:                      if (length >= 65536)                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      sourceByteBuf.WriteShort((ushort) length);                      break;                  case 4:                      unchecked                      {                          sourceByteBuf.WriteUnsignedInt((uint) length);                      }                      break;                  case 8:                      sourceByteBuf.WriteLong(length);                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      sourceByteBuf.WriteByte(length);                      break;                  case 2:                      if (length >= 65536)                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      sourceByteBuf.WriteShort((ushort) length);                      break;                  case 4:                      unchecked                      {                          sourceByteBuf.WriteUnsignedInt((uint) length);                      }                      break;                  case 8:                      sourceByteBuf.WriteLong(length);                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      sourceByteBuf.WriteByte(length);                      break;                  case 2:                      if (length >= 65536)                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      sourceByteBuf.WriteShort((ushort) length);                      break;                  case 4:                      unchecked                      {                          sourceByteBuf.WriteUnsignedInt((uint) length);                      }                      break;                  case 8:                      sourceByteBuf.WriteLong(length);                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      sourceByteBuf.WriteByte(length);                      break;                  case 2:                      if (length >= 65536)                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      sourceByteBuf.WriteShort((ushort) length);                      break;                  case 4:                      unchecked                      {                          sourceByteBuf.WriteUnsignedInt((uint) length);                      }                      break;                  case 8:                      sourceByteBuf.WriteLong(length);                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Serialization,LengthFieldPrepender,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Serialization\LengthFieldPrepender.cs,Encode,The following statement contains a magic number: switch (_lengthFieldLength)              {                  case 1:                      if (length >= 256)                          throw new ArgumentException("length of object does not fit into one byte: " + length);                      sourceByteBuf.WriteByte(length);                      break;                  case 2:                      if (length >= 65536)                          throw new ArgumentException("length of object does not fit into a short integer: " + length);                      sourceByteBuf.WriteShort((ushort) length);                      break;                  case 4:                      unchecked                      {                          sourceByteBuf.WriteUnsignedInt((uint) length);                      }                      break;                  case 8:                      sourceByteBuf.WriteLong(length);                      break;                  default:                      throw new Exception("Unknown length field length");              }
Magic Number,Helios.Net.Bootstrap,ClientBootstrap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Bootstrap\ClientBootstrap.cs,ClientBootstrap,The following statement contains a magic number: Workers = 2;
Magic Number,Helios.Reactor.Bootstrap,ServerBootstrap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Bootstrap\ServerBootstrap.cs,ServerBootstrap,The following statement contains a magic number: Workers = 2;
Magic Number,Helios.Reactor.Bootstrap,ServerBootstrap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Bootstrap\ServerBootstrap.cs,BufferSize,The following statement contains a magic number: bufferSize < 1024
Magic Number,Helios.Reactor.Bootstrap,ServerBootstrap,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Bootstrap\ServerBootstrap.cs,Validate,The following statement contains a magic number: BufferBytes < 1024
Magic Number,Helios.Net.Connections,UdpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\UdpConnection.cs,Close,The following statement contains a magic number: EventLoop.Shutdown(TimeSpan.FromSeconds(2));
Magic Number,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,Configure,The following statement contains a magic number: Linger = 10;
Magic Number,Helios.Net.Connections,TcpConnection,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Net\Connections\TcpConnection.cs,Close,The following statement contains a magic number: EventLoop.Shutdown(TimeSpan.FromSeconds(2));
Magic Number,Helios.Reactor,ReactorBase,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\ReactorBase.cs,Stop,The following statement contains a magic number: EventLoop.Shutdown(TimeSpan.FromSeconds(2));
Magic Number,Helios.Reactor.Tcp,TcpProxyReactor,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Reactor\Tcp\TcpProxyReactor.cs,Configure,The following statement contains a magic number: Listener.SetSocketOption(SocketOptionLevel.Socket' SocketOptionName.Linger' new LingerOption(true' 10));
Missing Default,Helios.Channels.Local,LocalChannel,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Channels\Local\LocalChannel.cs,DoWrite,The following switch statement is missing a default case: switch (_state)              {                  case State.Open:                  case State.Bound:                      throw NotYetConnectedException.Instance;                  case State.Closed:                      throw ClosedChannelException.Instance;                  case State.Connected:                      break;              }
Missing Default,Helios.Logging,LoggingAdapter,D:\research\architectureSmells\repos\helios-io_helios\src\Helios\Logging\LoggingAdapter.cs,Log,The following switch statement is missing a default case: switch (logLevel)              {                  case LogLevel.Info:                      Info(format' args);                      break;                  case LogLevel.Warning:                      Warning(format' args);                      break;                  case LogLevel.Error:                      Error(format' args);                      break;                  case LogLevel.Debug:                      Debug(format' args);                      break;              }
