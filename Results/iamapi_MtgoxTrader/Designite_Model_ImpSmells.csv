Implementation smell,Namespace,Class,File,Method,Description
Long Method,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has 138 lines of code.
Complex Method,MtGoxTrader.Model,DynamicJsonObject,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\Utilities.cs,ToString,Cyclomatic complexity of the method is 10
Long Parameter List,MtGoxTrader.Model,MtGoxTickerItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxTickerItem.cs,MtGoxTickerItem,The method has 10 parameters. Parameters: high' low' avg' vwap' vol' last_all' last_local' last' buy' sell
Long Parameter List,MtGoxTrader.Model,MtGoxWallet,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxWallet.cs,MtGoxWallet,The method has 6 parameters. Parameters: name' balance' Operations' Daily_Withdraw_Limit' Monthly_Withdraw_Limit' Max_Withdraw
Long Statement,MtGoxTrader.Model,Encryption,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\Encryption.cs,DecryptData,The length of the statement  "                byte[] decryptedData = ProtectedData.Unprotect(Convert.FromBase64String(encryptedData)' null' DataProtectionScope.LocalMachine); " is 128.
Long Statement,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,BuildWallet,The length of the statement  "            MtGoxWalletBalance bal = new MtGoxWalletBalance(double.Parse(obj.Balance.value)' Int64.Parse(obj.Balance.value_int)' obj.Balance.display' (MtGoxCurrencySymbol)Enum.Parse(typeof(MtGoxCurrencySymbol)' obj.Balance.currency' true)); " is 228.
Long Statement,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,BuildWallet,The length of the statement  "                dwd = new MtGoxWithdrawalLimit(double.Parse(obj.Daily_Withdraw_Limit.value)' Int64.Parse(obj.Daily_Withdraw_Limit.value_int)' obj.Daily_Withdraw_Limit.display' (MtGoxCurrencySymbol)Enum.Parse(typeof(MtGoxCurrencySymbol)' obj.Daily_Withdraw_Limit.currency' true)); " is 263.
Long Statement,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,BuildWallet,The length of the statement  "                mwd = new MtGoxWithdrawalLimit(double.Parse(obj.Monthly_Withdraw_Limit.value)' Int64.Parse(obj.Monthly_Withdraw_Limit.value_int)' obj.Monthly_Withdraw_Limit.display' (MtGoxCurrencySymbol)Enum.Parse(typeof(MtGoxCurrencySymbol)' obj.Monthly_Withdraw_Limit.currency' true)); " is 271.
Long Statement,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,BuildWallet,The length of the statement  "                maxwd = new MtGoxWithdrawalLimit(double.Parse(obj.Max_Withdraw.value)' Int64.Parse(obj.Max_Withdraw.value_int)' obj.Max_Withdraw.display' (MtGoxCurrencySymbol)Enum.Parse(typeof(MtGoxCurrencySymbol)' obj.Max_Withdraw.currency' true)); " is 233.
Long Statement,MtGoxTrader.Model,MtGoxSocketIOClient,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\Utilities.cs,Connect,The length of the statement  "                             "Sec-WebSocket-Key: HSmrc0sMlYUkAGmm5OPpG2HaGWk=\r\n" + // note see: https://en.wikipedia.org/wiki/WebSocket on draft-ietf-hybi-thewebsocketprotocol-06 version of protocol for instructions on how to construct the key " is 216.
Long Statement,MtGoxTrader.Model,MtGoxSocketIOClient,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\Utilities.cs,CreateSocket,The length of the statement  "            SslStream sslClientStream = new SslStream(mClient.GetStream()' false' new RemoteCertificateValidationCallback(ValidateServerCertificate)' null); " is 144.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Empty Catch Block,MtGoxTrader.Model,MtGoxHistoryItem,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxHistoryItem.cs,getObjects,The method has an empty catch block.
Magic Number,MtGoxTrader.Model,MtGoxDepthInfo,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxDepthInfo.cs,getObjects,The following statement contains a magic number: itemPrice = Math.Round(itemPrice' 2);
Magic Number,MtGoxTrader.Model,MtGoxDepthInfo,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxDepthInfo.cs,getObjects,The following statement contains a magic number: i > 1500
Magic Number,MtGoxTrader.Model,MtGoxDepthInfo,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxDepthInfo.cs,getObjects,The following statement contains a magic number: itemPrice = Math.Round(itemPrice' 2);
Magic Number,MtGoxTrader.Model,MtGoxDepthInfo,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxDepthInfo.cs,getObjects,The following statement contains a magic number: j > 1500
Magic Number,MtGoxTrader.Model,MtGoxOrder,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxOrder.cs,getObjects,The following statement contains a magic number: switch ((int)int.Parse(obj.orders[i].type.ToString()))                  {                      case 1:                          ord.type = MtGoxOrderType.Sell;                          break;                      case 2:                          ord.type = MtGoxOrderType.Buy;                          break;                  }
Magic Number,MtGoxTrader.Model,MtGoxOrder,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxOrder.cs,getObjects,The following statement contains a magic number: switch ((int)int.Parse(obj.orders[i].status.ToString()))                  {                      case 0:                          ord.status = MtGoxOrderStatus.Invalid;                          break;                      case 2:                          ord.status = MtGoxOrderStatus.Invalid;                          break;                  }
Magic Number,MtGoxTrader.Model,MtGoxTrade,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxTrade.cs,getObjects,The following statement contains a magic number: i > 100
Magic Number,MtGoxTrader.Model,MtGoxSocketIOClient,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\Utilities.cs,ReadMessage,The following statement contains a magic number: byte[] buffer = new byte[2048];
Magic Number,MtGoxTrader.Model,MtGoxSocketIOClient,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\Utilities.cs,Recv,The following statement contains a magic number: len += b * 128;
Missing Default,MtGoxTrader.Model,MtGoxOrder,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxOrder.cs,getObjects,The following switch statement is missing a default case: switch ((int)int.Parse(obj.orders[i].type.ToString()))                  {                      case 1:                          ord.type = MtGoxOrderType.Sell;                          break;                      case 2:                          ord.type = MtGoxOrderType.Buy;                          break;                  }
Missing Default,MtGoxTrader.Model,MtGoxOrder,D:\research\architectureSmells\repos\iamapi_MtgoxTrader\MtgoxTrader\Model\MtGoxOrder.cs,getObjects,The following switch statement is missing a default case: switch ((int)int.Parse(obj.orders[i].status.ToString()))                  {                      case 0:                          ord.status = MtGoxOrderStatus.Invalid;                          break;                      case 2:                          ord.status = MtGoxOrderStatus.Invalid;                          break;                  }
