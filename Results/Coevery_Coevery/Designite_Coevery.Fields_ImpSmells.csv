Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Coevery.Fields,ResourceManifest,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\ResourceManifest.cs,BuildManifests,The length of the statement  "            manifest.DefineScript("Bootstrap_Datetimepicker").SetUrl("bootstrap-datetimepicker.min.js"' "bootstrap-datetimepicker.js").SetDependencies("jQuery"); " is 149.
Long Statement,Coevery.Fields,ResourceManifest,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\ResourceManifest.cs,BuildManifests,The length of the statement  "            manifest.DefineStyle("Bootstrap_Datetimepicker").SetUrl("bootstrap-datetimepicker.min.css"'"bootstrap-datetimepicker.min.css"); " is 127.
Long Statement,Coevery.Fields.Services,FieldDependencyService,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Services\FieldDependencyService.cs,Create,The length of the statement  "            var dependentField = partDefinition.ContentPartFieldDefinitionRecords.SingleOrDefault(x => x.Name == dependentFieldName); " is 121.
Long Statement,Coevery.Fields.Tokens,FieldTokens,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Tokens\FieldTokens.cs,Evaluate,The length of the statement  "            //    .Token("Date"' (Func<DateTimeField' object>)(d => d.DateTime.ToString(_dateTimeLocalization.ShortDateFormat.Text' _cultureInfo.Value))) " is 141.
Long Statement,Coevery.Fields.Tokens,FieldTokens,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Tokens\FieldTokens.cs,Evaluate,The length of the statement  "            //    .Token("Time"' (Func<DateTimeField' object>)(d => d.DateTime.ToString(_dateTimeLocalization.ShortTimeFormat.Text' _cultureInfo.Value))) " is 141.
Long Statement,Coevery.Fields.Tokens,FieldTokens,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Tokens\FieldTokens.cs,Evaluate,The length of the statement  "            //    .Token("DateTime"' (Func<DateTimeField' object>)(d => d.DateTime.ToString(_dateTimeLocalization.ShortDateFormat.Text + " " + _dateTimeLocalization.ShortTimeFormat.Text' _cultureInfo.Value))) " is 196.
Magic Number,Coevery.Fields.Drivers,NumberFieldDriver,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Drivers\NumberFieldDriver.cs,Editor,The following statement contains a magic number: if (updater.TryUpdateModel(field' GetPrefix(field' part)' null' null)) {                  var settings = field.PartFieldDefinition.Settings.GetModel<NumberFieldSettings>();                  if (settings.Required && !field.Value.HasValue) {                      updater.AddModelError(field.Name' T("The field {0} is required."' T(field.DisplayName)));                  }                  if (field.Value.HasValue) {                      var intPart = Math.Floor(field.Value.Value);                      var decPart = field.Value.Value - intPart;                      if (intPart.ToString().Length > settings.Length) {                          updater.AddModelError(GetPrefix(field' part)' T("The integer part of field {0} is overlength."' T(field.DisplayName)));                      }                      if (decPart.ToString().Length > settings.DecimalPlaces + 2) {                          updater.AddModelError(GetPrefix(field' part)' T("The decimal part of field {0} is overlength."' T(field.DisplayName)));                      }                  }              }
Magic Number,Coevery.Fields.Drivers,CurrencyFieldDriver,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Drivers\CurrencyFieldDriver.cs,Editor,The following statement contains a magic number: if (updater.TryUpdateModel(field' GetPrefix(field' part)' null' null)) {                  var settings = field.PartFieldDefinition.Settings.GetModel<CurrencyFieldSettings>();                  if (settings.Required && !field.Value.HasValue) {                      updater.AddModelError(GetPrefix(field' part)' T("The field {0} is required."' T(field.DisplayName)));                      return Editor(part' field' shapeHelper);                  }                  if (field.Value.HasValue) {                      field.Value = Math.Round(field.Value.Value'settings.DecimalPlaces);                      var intPart = decimal.Floor(field.Value.Value);                      var decPart = field.Value.Value - intPart;                      if (intPart.ToString().Length > settings.Length) {                          updater.AddModelError(GetPrefix(field' part)' T("The integer part of field {0} is overlength."' T(field.DisplayName)));                      }                      if (decPart.ToString().Length > settings.DecimalPlaces + 2) {                          updater.AddModelError(GetPrefix(field' part)' T("The decimal part of field {0} is overlength."' T(field.DisplayName)));                      }                  }              }
Magic Number,Coevery.Fields,Migrations,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Migrations.cs,Create,The following statement contains a magic number: return 5;
Magic Number,Coevery.Fields.Settings,MultilineTextFieldSettings,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Settings\MultilineTextFieldSettings.cs,MultilineTextFieldSettings,The following statement contains a magic number: RowNumber = 3;
Magic Number,Coevery.Fields.Settings,MultilineTextFieldSettings,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Settings\MultilineTextFieldSettings.cs,MultilineTextFieldSettings,The following statement contains a magic number: MaxLength = 255;
Magic Number,Coevery.Fields.Settings,NumberFieldSettings,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Settings\NumberFieldSettings.cs,NumberFieldSettings,The following statement contains a magic number: Length = 18;
Magic Number,Coevery.Fields.Settings,CurrencyFieldSettings,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Settings\CurrencyFieldSettings.cs,CurrencyFieldSettings,The following statement contains a magic number: Length = 18;
Magic Number,Coevery.Fields.Settings,TextFieldSettings,C:\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Fields\Settings\TextFieldSettings.cs,TextFieldSettings,The following statement contains a magic number: MaxLength = 255;
