Implementation smell,Namespace,Class,File,Method,Description
Long Method,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The method has 208 lines of code.
Long Method,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The method has 127 lines of code.
Complex Method,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,Edit,Cyclomatic complexity of the method is 9
Complex Method,Coevery.Projections.Controllers,EntityController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\EntityController.cs,CreateFilters,Cyclomatic complexity of the method is 8
Complex Method,Coevery.Projections.FilterEditors.Forms,DateTimeFilterFormValidation,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFormValidation.cs,Validating,Cyclomatic complexity of the method is 16
Complex Method,Coevery.Projections.FilterEditors.Forms,NumericFieldTypeEditorValidation,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterFormValidation.cs,Validating,Cyclomatic complexity of the method is 11
Complex Method,Coevery.Projections.FilterEditors.Forms,DateFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateFilterForm.cs,GetFilterPredicate,Cyclomatic complexity of the method is 13
Complex Method,Coevery.Projections.FilterEditors.Forms,DateFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateFilterForm.cs,DisplayFilter,Cyclomatic complexity of the method is 8
Complex Method,Coevery.Projections.FilterEditors.Forms,DateTimeFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFilterForm.cs,GetFilterPredicate,Cyclomatic complexity of the method is 13
Complex Method,Coevery.Projections.FilterEditors.Forms,DateTimeFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFilterForm.cs,DisplayFilter,Cyclomatic complexity of the method is 8
Complex Method,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,GetFilterPredicate,Cyclomatic complexity of the method is 11
Complex Method,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,DisplayFilter,Cyclomatic complexity of the method is 8
Complex Method,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,GetFilterPredicate,Cyclomatic complexity of the method is 11
Complex Method,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,DisplayFilter,Cyclomatic complexity of the method is 11
Complex Method,Coevery.Projections.Providers.Layouts,LayoutShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\LayoutShapes.cs,Grid,Cyclomatic complexity of the method is 13
Complex Method,Coevery.Projections.Providers.Layouts,RawShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\RawShapes.cs,Raw,Cyclomatic complexity of the method is 11
Complex Method,Coevery.Projections.Services,CompareContentService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\CompareContentService.cs,CompareContent,Cyclomatic complexity of the method is 9
Complex Method,Coevery.Projections.Services,FieldIndexService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\FieldIndexService.cs,Set,Cyclomatic complexity of the method is 13
Complex Method,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,PropertyWrapper,Cyclomatic complexity of the method is 20
Long Parameter List,Coevery.Projections,ListViewShape,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\ListViewShape.cs,ngGrid,The method has 5 parameters. Parameters: Display' Output' Html' Items' ContentType
Long Parameter List,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,AdminController,The method has 5 parameters. Parameters: services' shapeFactory' siteService' queryService' projectionManager
Long Parameter List,Coevery.Projections.Controllers,EntityController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\EntityController.cs,EntityController,The method has 8 parameters. Parameters: iContentManager' coeveryServices' projectionManager' contentDefinitionExtension' tokenizer' gridService' filterRepository' filterGroupRepository
Long Parameter List,Coevery.Projections.Controllers,EntityController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\EntityController.cs,GetFilteredRecords,The method has 5 parameters. Parameters: id' part' filterDescription' model' query
Long Parameter List,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,LayoutController,The method has 6 parameters. Parameters: services' formManager' shapeFactory' projectionManager' repository' queryService
Long Parameter List,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,SortCriterionController,The method has 7 parameters. Parameters: services' formManager' shapeFactory' projectionManager' repository' queryService' sortService
Long Parameter List,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,EditPost,The method has 5 parameters. Parameters: id' category' type' sortCriterionId' formCollection
Long Parameter List,Coevery.Projections.Descriptors.Filter,DescribeFilterFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\Filter\DescribeFilterFor.cs,Element,The method has 6 parameters. Parameters: type' name' description' filter' display' form
Long Parameter List,Coevery.Projections.Descriptors.Layout,DescribeLayoutFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\Layout\DescribeLayoutFor.cs,Element,The method has 6 parameters. Parameters: type' name' description' display' render' form
Long Parameter List,Coevery.Projections.Descriptors.Property,DescribePropertyFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\Property\DescribePropertyFor.cs,Element,The method has 6 parameters. Parameters: type' name' description' display' property' form
Long Parameter List,Coevery.Projections.Descriptors.SortCriterion,DescribeSortCriterionFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\SortCriterion\DescribeSortCriteriaFor.cs,Element,The method has 6 parameters. Parameters: type' name' description' sort' display' form
Long Parameter List,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,ProjectionPartDriver,The method has 7 parameters. Parameters: services' queryRepository' projectionManager' feedManager' tokenizer' displayHelperFactory' workContextAccessor
Long Parameter List,Coevery.Projections.FieldTypeEditors,OptionSetFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\OptionSetFieldTypeEditor.cs,ApplyFilter,The method has 5 parameters. Parameters: context' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.FieldTypeEditors,OptionSetFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\OptionSetFieldTypeEditor.cs,ApplySortCriterion,The method has 5 parameters. Parameters: context' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.FieldTypeEditors,IConcreteFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\IConcreteFieldTypeEditor.cs,ApplyFilter,The method has 5 parameters. Parameters: context' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.FieldTypeEditors,IConcreteFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\IConcreteFieldTypeEditor.cs,ApplySortCriterion,The method has 5 parameters. Parameters: context' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.FieldTypeEditors,ConcreteFieldTypeEditorBase,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\IConcreteFieldTypeEditor.cs,ApplyFilter,The method has 5 parameters. Parameters: context' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.FieldTypeEditors,ConcreteFieldTypeEditorBase,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\IConcreteFieldTypeEditor.cs,ApplySortCriterion,The method has 5 parameters. Parameters: context' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.Handlers,FieldIndexPartHandler,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Handlers\FieldIndexPartHandler.cs,FieldIndexPartHandler,The method has 5 parameters. Parameters: contentDefinitionManager' repository' fieldIndexService' contentFieldDrivers' fieldStorageProviderSelector
Long Parameter List,Coevery.Projections.Providers.Layouts,LayoutShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\LayoutShapes.cs,Grid,The method has 17 parameters. Parameters: Display' Output' Html' Id' Horizontal' Items' Columns' Tag' Classes' Attributes' RowTag' RowClasses' RowAttributes' CellTag' CellClasses' CellAttributes' EmptyCell
Long Parameter List,Coevery.Projections.Providers.Layouts,RawShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\RawShapes.cs,Raw,The method has 14 parameters. Parameters: Display' Output' Html' Id' Tag' Items' Classes' Attributes' ItemTag' ItemClasses' ItemAttributes' Prepend' Append' Separator
Long Parameter List,Coevery.Projections.Providers.Properties,ContentFieldProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\ContentFieldProperties.cs,ContentFieldProperties,The method has 5 parameters. Parameters: contentDefinitionExtension' contentFieldDrivers' fieldTypeEditors' propertyFormater' contentFieldValueProviders
Long Parameter List,Coevery.Projections.Providers.Properties,ContentFieldProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\ContentFieldProperties.cs,Render,The method has 7 parameters. Parameters: context' contentItem' fieldTypeEditor' storageName' storageType' part' field
Long Parameter List,Coevery.Projections.Services,FieldIndexService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\FieldIndexService.cs,Set,The method has 6 parameters. Parameters: part' partName' fieldName' valueName' value' valueType
Long Parameter List,Coevery.Projections.Services,IFieldIndexService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\IFieldIndexService.cs,Set,The method has 6 parameters. Parameters: part' partName' fieldName' valueName' value' valueType
Long Parameter List,Coevery.Projections.Services,ProjectionManager,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\ProjectionManager.cs,ProjectionManager,The method has 7 parameters. Parameters: tokenizer' filterProviders' sortCriterionProviders' layoutProviders' propertyProviders' contentManager' queryRepository
Long Parameter List,Coevery.Projections.Services,ProjectionService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\ProjectionService.cs,ProjectionService,The method has 6 parameters. Parameters: services' projectionManager' contentManager' formManager' fieldToPropertyStateProviders' contentDefinitionManager
Long Parameter List,Coevery.Projections.Services,ProjectionService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\ProjectionService.cs,UpdateLayoutProperties,The method has 5 parameters. Parameters: partName' layout' category' settingName' pickedFileds
Long Parameter List,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,LayoutGroup,The method has 5 parameters. Parameters: Display' Output' Html' Key' List
Long Parameter List,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,PropertyWrapper,The method has 8 parameters. Parameters: Display' Output' Html' Url' Item' ContentItem' ContentItemMetadata' Property
Long Identifier,Coevery.Projections.Services,ProjectionService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\ProjectionService.cs,,The length of the parameter _fieldToPropertyStateProviders is 30.
Long Statement,Coevery.Projections,AdminMenu,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\AdminMenu.cs,GetNavigation,The length of the statement  "                        qi => qi.Action("Index"' "Admin"' new { area = "Coevery.Projections" }).Permission(Permissions.ManageQueries).LocalNav()) " is 121.
Long Statement,Coevery.Projections,AdminMenu,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\AdminMenu.cs,GetNavigation,The length of the statement  "                        bi => bi.Action("Index"' "Binding"' new { area = "Coevery.Projections" }).Permission(Permissions.ManageQueries).LocalNav()) " is 123.
Long Statement,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The length of the statement  "                        .WithSetting("AutorouteSettings.PatternDefinitions"' "[{Name:'Title'' Pattern: '{Content.Slug}'' Description: 'my-projections'}]") " is 130.
Long Statement,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,UpdateFrom1,The length of the statement  "            SchemaBuilder.ExecuteSql(string.Format(@"INSERT INTO {0}Coevery_Projections_ListViewPartRecord(Id'ItemContentType'VisableTo) " is 124.
Long Statement,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,Edit,The length of the statement  "                                DisplayText = String.IsNullOrWhiteSpace(filter.Description) ? f.Display(new FilterContext {State = FormParametersHelper.ToDynamic(filter.State)}).Text : filter.Description " is 171.
Long Statement,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,Edit,The length of the statement  "                            DisplayText = String.IsNullOrWhiteSpace(sortCriterion.Description) ? f.Display(new SortCriterionContext { State = FormParametersHelper.ToDynamic(sortCriterion.State) }).Text : sortCriterion.Description   " is 201.
Long Statement,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,Edit,The length of the statement  "                            DisplayText = String.IsNullOrWhiteSpace(layout.Description) ? f.Display(new LayoutContext { State = FormParametersHelper.ToDynamic(layout.State) }).Text : layout.Description " is 173.
Long Statement,Coevery.Projections.Controllers,BindingController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\BindingController.cs,Create,The length of the statement  "            var record = recordBluePrints.FirstOrDefault(r => r.Type.FullName.Equals(fullName' StringComparison.OrdinalIgnoreCase)); " is 120.
Long Statement,Coevery.Projections.Controllers,BindingController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\BindingController.cs,Edit,The length of the statement  "            var record = recordBluePrints.FirstOrDefault(r => String.Equals(r.Type.FullName' binding.Type' StringComparison.OrdinalIgnoreCase)); " is 132.
Long Statement,Coevery.Projections.Controllers,EntityController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\EntityController.cs,CreateFilters,The length of the statement  "                        filterDescription += descriptor.Display(new FilterContext { State = FormParametersHelper.ToDynamic(relationFilter.State) }).Text; " is 129.
Long Statement,Coevery.Projections.Controllers,EntityController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\EntityController.cs,GetLayoutComponents,The length of the statement  "            var fieldDescriptors = layout.Properties.OrderBy(p => p.Position).Select(p => allFielDescriptors.SelectMany(x => x.Descriptors).Select(d => new {Descriptor = d' Property = p}).FirstOrDefault(x => x.Descriptor.Category == p.Category && x.Descriptor.Type == p.Type)).ToList(); " is 274.
Long Statement,Coevery.Projections.Controllers,EntityController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\EntityController.cs,GetLayoutComponents,The length of the statement  "            var tokenizedDescriptors = fieldDescriptors.Select(fd => new {fd.Descriptor' fd.Property' State = FormParametersHelper.ToDynamic(_tokenizer.Replace(fd.Property.State' tokens))}).ToList(); " is 187.
Long Statement,Coevery.Projections.Controllers,HistoryController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\HistoryController.cs,Get,The length of the statement  "            var message = new HttpResponseMessage {Content = new StringContent(json' System.Text.Encoding.UTF8' "application/json")}; " is 121.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,Create,The length of the statement  "            var layout = _projectionManager.DescribeLayouts().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == category && x.Type == type); " is 143.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,CreatePost,The length of the statement  "            model.Layout = _projectionManager.DescribeLayouts().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == model.Category && x.Type == model.Type); " is 157.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,CreatePost,The length of the statement  "            _formManager.Validate(new ValidatingContext { FormName = model.Layout.Form' ModelState = ModelState' ValueProvider = ValueProvider }); " is 134.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,Edit,The length of the statement  "            var layoutDescriptor = _projectionManager.DescribeLayouts().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == layoutRecord.Category && x.Type == layoutRecord.Type); " is 179.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,Edit,The length of the statement  "                            DisplayText = String.IsNullOrWhiteSpace(field.Description) ? f.Display(new PropertyContext {State = FormParametersHelper.ToDynamic(field.State)}).Text : field.Description' " is 171.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,EditPost,The length of the statement  "            var layout = _projectionManager.DescribeLayouts().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == model.Category && x.Type == model.Type); " is 155.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,EditPost,The length of the statement  "            _formManager.Validate(new ValidatingContext { FormName = layout.Form' ModelState = ModelState' ValueProvider = ValueProvider }); " is 128.
Long Statement,Coevery.Projections.Controllers,LayoutController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\LayoutController.cs,EditPost,The length of the statement  "                            DisplayText = String.IsNullOrWhiteSpace(field.Description) ? f.Display(new PropertyContext { State = FormParametersHelper.ToDynamic(field.State) }).Text : field.Description' " is 173.
Long Statement,Coevery.Projections.Controllers,PropertyController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\PropertyController.cs,Get,The length of the statement  "            var message = new HttpResponseMessage { Content = new StringContent(json' System.Text.Encoding.UTF8' "application/json") }; " is 123.
Long Statement,Coevery.Projections.Controllers,PropertyController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\PropertyController.cs,GetDescriptors,The length of the statement  "            var fieldDescriptors = queryPartRecord.Layouts[0].Properties.OrderBy(p => p.Position).Select(p => allFielDescriptors.SelectMany(x => x.Descriptors).Select(d => new FieldDescriptor {Descriptor = d' Property = p}).FirstOrDefault(x => x.Descriptor.Category == p.Category && x.Descriptor.Type == p.Type)).ToList(); " is 310.
Long Statement,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,Edit,The length of the statement  "            var sortCriterion = _projectionManager.DescribeSortCriteria().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == category && x.Type == type); " is 155.
Long Statement,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,Edit,The length of the statement  "            var viewModel = new SortCriterionEditViewModel { Id = id' Description = description' SortCriterion = sortCriterion' Form = form }; " is 130.
Long Statement,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,EditPost,The length of the statement  "            var sortCriterion = _projectionManager.DescribeSortCriteria().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == category && x.Type == type); " is 155.
Long Statement,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,EditPost,The length of the statement  "            _formManager.Validate(new ValidatingContext { FormName = sortCriterion.Form' ModelState = ModelState' ValueProvider = ValueProvider }); " is 135.
Long Statement,Coevery.Projections.Controllers,SortCriterionController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\SortCriteriaController.cs,EditPost,The length of the statement  "            var viewModel = new SortCriterionEditViewModel { Id = id' Description = model.Description' SortCriterion = sortCriterion' Form = form }; " is 136.
Long Statement,Coevery.Projections.Descriptors.Filter,DescribeFilterFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\Filter\DescribeFilterFor.cs,Element,The length of the statement  "            Types.Add(new FilterDescriptor { Type = type' Name = name' Description = description' Category = _category' Filter = filter' Display = display' Form = form }); " is 159.
Long Statement,Coevery.Projections.Descriptors.Layout,DescribeLayoutFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\Layout\DescribeLayoutFor.cs,Element,The length of the statement  "            Types.Add(new LayoutDescriptor { Type = type' Name = name' Description = description' Category = _category' Display = display' Render = render' Form = form }); " is 159.
Long Statement,Coevery.Projections.Providers.Filters,ContentPartRecordsForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentPartRecordsForm.cs,Describe,The length of the statement  "                        if (typeof(ContentPartRecord).IsAssignableFrom(recordBluePrint.Type) || typeof(ContentPartVersionRecord).IsAssignableFrom(recordBluePrint.Type)) { " is 146.
Long Statement,Coevery.Projections.Providers.Filters,MemberBindingFilter,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\MemberBindingFilter.cs,Describe,The length of the statement  "                var descriptor = describe.For(typeMembers.Name' new LocalizedString(typeMembers.Name.CamelFriendly())' T("Members for {0}"' typeMembers.Name)); " is 143.
Long Statement,Coevery.Projections.Providers.Filters,MemberBindingFilter,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\MemberBindingFilter.cs,Describe,The length of the statement  "                        context => _filterCoordinator.Display(closureMember.Property.PropertyType' closureMember.DisplayName.Text' context.State)' " is 122.
Long Statement,Coevery.Projections.Providers.Filters,ContentFieldsFilter,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentFieldsFilter.cs,Describe,The length of the statement  "                var descriptor = describe.For(part.Name + "ContentFields"' T("{0} Content Fields"' part.Name.CamelFriendly())' T("Content Fields for {0}"' part.Name.CamelFriendly())); " is 167.
Long Statement,Coevery.Projections.Providers.Filters,ContentFieldsFilter,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentFieldsFilter.cs,Describe,The length of the statement  "                    var drivers = _contentFieldDrivers.Where(x => x.GetFieldInfo().Any(fi => fi.FieldTypeName == localField.FieldDefinition.Name)).ToList(); " is 136.
Long Statement,Coevery.Projections.Providers.Filters,ContentFieldsFilter,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentFieldsFilter.cs,Describe,The length of the statement  "                            IConcreteFieldTypeEditor concreteFieldTypeEditor = _fieldTypeEditors.FirstOrDefault(x => x.CanHandle(localField.FieldDefinition.Name' storageType)) " is 147.
Long Statement,Coevery.Projections.Providers.Filters,ContentFieldsFilter,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentFieldsFilter.cs,Describe,The length of the statement  "                                display: context => fieldTypeEditor.DisplayFilter(localPart.Name.CamelFriendly() + "." + localField.DisplayName' storageName' context.State)' " is 141.
Long Statement,Coevery.Projections.Descriptors.Property,DescribePropertyFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\Property\DescribePropertyFor.cs,Element,The length of the statement  "            Types.Add(new PropertyDescriptor { Type = type' Name = name' Description = description' Category = _category' Display = display' Property = property' Form = form }); " is 165.
Long Statement,Coevery.Projections.Descriptors.SortCriterion,DescribeSortCriterionFor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Descriptors\SortCriterion\DescribeSortCriteriaFor.cs,Element,The length of the statement  "            Types.Add(new SortCriterionDescriptor { Type = type' Name = name' Description = description' Category = _category' Sort = sort' Display = display' Form = form }); " is 162.
Long Statement,Coevery.Projections.Drivers,NavigationQueryPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\NavigationQueryPartDriver.cs,Exporting,The length of the statement  "                var queryPart = Services.ContentManager.Query<QueryPart' QueryPartRecord>("Query").Where(x => x.Id == part.Record.QueryPartRecord.Id).List().FirstOrDefault(); " is 158.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The length of the statement  "                    var contentItems = _projectionManager.GetContentItems(query.Id' pager.GetStartIndex() + part.Record.Skip' pager.PageSize).ToList(); " is 131.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The length of the statement  "                    LayoutDescriptor layoutDescriptor = layout == null ? null : _projectionManager.DescribeLayouts().SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == layout.Category && x.Type == layout.Type); " is 204.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The length of the statement  "                    var fieldDescriptors = layout.Properties.OrderBy(p => p.Position).Select(p => allFielDescriptors.SelectMany(x => x.Descriptors).Select(d => new { Descriptor = d' Property = p }).FirstOrDefault(x => x.Descriptor.Category == p.Category && x.Descriptor.Type == p.Type)).ToList(); " is 276.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The length of the statement  "                    var tokenizedState = _tokenizer.Replace(layout.State' new Dictionary<string' object> { { "Content"' part.ContentItem } }); " is 122.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The length of the statement  "                        var display = _displayHelperFactory.CreateHelper(new ViewContext { HttpContext = _workContextAccessor.GetContext().HttpContext }' new ViewDataContainer()); " is 155.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The length of the statement  "                                var propertyShape = ((IEnumerable<dynamic>)x.Properties.Items).First(p => ((PropertyRecord)p.Property).Id == groupPropertyId); " is 126.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Editor,The length of the statement  "                                    model.QueryRecordEntries = Services.ContentManager.Query<QueryPart>().Join<TitlePartRecord>().OrderBy(x => x.Title).List() " is 122.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,GetLayoutDescription,The length of the statement  "            return String.IsNullOrWhiteSpace(l.Description) ? descriptor.Display(new LayoutContext {State = FormParametersHelper.ToDynamic(l.State)}).Text : l.Description; " is 159.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Editor,The length of the statement  "                part.Record.LayoutRecord = part.Record.QueryPartRecord.Layouts.FirstOrDefault(x => x.Id == Int32.Parse(queryLayoutIds[1])); " is 123.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Editor,The length of the statement  "                if(!String.IsNullOrWhiteSpace(part.Record.PagerSuffix) && !String.Equals(part.Record.PagerSuffix.ToSafeName()' part.Record.PagerSuffix' StringComparison.OrdinalIgnoreCase)) { " is 174.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Importing,The length of the statement  "            IfNotNull(context.Attribute(part.PartDefinition.Name' "DisplayPager")' x => part.Record.DisplayPager = Boolean.Parse(x)); " is 121.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Exporting,The length of the statement  "                var queryPart = Services.ContentManager.Query<QueryPart' QueryPartRecord>("Query").Where(x => x.Id == part.Record.QueryPartRecord.Id).List().FirstOrDefault(); " is 158.
Long Statement,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Exporting,The length of the statement  "                    context.Element(part.PartDefinition.Name).SetAttributeValue("LayoutIndex"' part.Record.QueryPartRecord.Layouts.IndexOf(part.Record.LayoutRecord)); " is 146.
Long Statement,Coevery.Projections.Drivers,QueryPartTitleDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\QueryPartTitleDriver.cs,Editor,The length of the statement  "            var query = _contentManager.Query("Query").Where<TitlePartRecord>(x => x.Title == part.Title).Slice(0' 1).FirstOrDefault(); " is 123.
Long Statement,Coevery.Projections.FieldTypeEditors,OptionSetFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\OptionSetFieldTypeEditor.cs,ApplyFilter,The length of the statement  "                    Action<IAliasFactory> selectorAny = alias => alias.ContentPartRecord<OptionItemContainerPartRecord>().Property("OptionItems"' "opits").Property("OptionItemRecord"' "opcpr"); " is 173.
Long Statement,Coevery.Projections.FieldTypeEditors,OptionSetFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\OptionSetFieldTypeEditor.cs,ApplyFilter,The length of the statement  "                    Action<IAliasFactory> selectorNotAny = alias => alias.ContentPartRecord<OptionItemContainerPartRecord>().Property("OptionItems"' "opits").Property("OptionItemRecord"' "opcpr"); " is 176.
Long Statement,Coevery.Projections.FieldTypeEditors,ConcreteFieldTypeEditorBase,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\IConcreteFieldTypeEditor.cs,ApplyFilter,The length of the statement  "            // combines the predicate with a filter on the specific property name of the storage' as implemented in FieldIndexService " is 121.
Long Statement,Coevery.Projections.FieldTypeEditors,ConcreteFieldTypeEditorBase,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\IConcreteFieldTypeEditor.cs,ApplySortCriterion,The length of the statement  "            // combines the predicate with a filter on the specific property name of the storage' as implemented in FieldIndexService " is 121.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateTimeFilterFormValidation,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFormValidation.cs,Validating,The length of the statement  "                            context.ModelState.AddModelError("Min"' T("The field {0} should contain a valid date (YYYY-MM-DD hh:mm:ss)"' T("Min").Text).Text); " is 130.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateTimeFilterFormValidation,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFormValidation.cs,Validating,The length of the statement  "                            context.ModelState.AddModelError("Max"' T("The field {0} should contain a valid date (YYYY-MM-DD hh:mm:ss)"' T("Max").Text).Text); " is 130.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateTimeFilterFormValidation,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFormValidation.cs,Validating,The length of the statement  "                            context.ModelState.AddModelError("Value"' T("The field {0} should contain a valid date (YYYY-MM-DD hh:mm:ss)"' T("Value").Text).Text); " is 134.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateFilterForm.cs,Describe,The length of the statement  "                        new SelectListItem {Value = Convert.ToString(DateTimeOperator.LessThanEquals)' Text = T("Is less than or equal to").Text}' " is 122.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateFilterForm.cs,Describe,The length of the statement  "                        new SelectListItem {Value = Convert.ToString(DateTimeOperator.GreaterThanEquals)' Text = T("Is greater than or equal to").Text}' " is 128.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateTimeFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFilterForm.cs,Describe,The length of the statement  "                        new SelectListItem {Value = Convert.ToString(DateTimeOperator.LessThanEquals)' Text = T("Is less than or equal to").Text}' " is 122.
Long Statement,Coevery.Projections.FilterEditors.Forms,DateTimeFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFilterForm.cs,Describe,The length of the statement  "                        new SelectListItem {Value = Convert.ToString(DateTimeOperator.GreaterThanEquals)' Text = T("Is greater than or equal to").Text}' " is 128.
Long Statement,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,Describe,The length of the statement  "                        new SelectListItem {Value = Convert.ToString(NumericOperator.LessThanEquals)' Text = T("Is less than or equal to").Text}' " is 121.
Long Statement,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,Describe,The length of the statement  "                        new SelectListItem {Value = Convert.ToString(NumericOperator.GreaterThanEquals)' Text = T("Is greater than or equal to").Text}' " is 127.
Long Statement,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,GetFilterPredicate,The length of the statement  "            var op = (Coevery.Projections.FilterEditors.Forms.NumericOperator) Enum.Parse(typeof (Coevery.Projections.FilterEditors.Forms.NumericOperator)' Convert.ToString(formState.Operator)); " is 182.
Long Statement,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,GetFilterPredicate,The length of the statement  "            if (op == Coevery.Projections.FilterEditors.Forms.NumericOperator.Between || op == Coevery.Projections.FilterEditors.Forms.NumericOperator.NotBetween) { " is 152.
Long Statement,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,GetFilterPredicate,The length of the statement  "                    return min == max ? (Action<IHqlExpressionFactory>) (x => x.Not(y => y.Eq(property' min))) : (y => y.Or(x => x.Lt(property' min)' x => x.Gt(property' max))); " is 157.
Long Statement,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,DisplayFilter,The length of the statement  "            var op = (Coevery.Projections.FilterEditors.Forms.NumericOperator) Enum.Parse(typeof (Coevery.Projections.FilterEditors.Forms.NumericOperator)' Convert.ToString(formState.Operator)); " is 182.
Long Statement,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,GetFilterPredicate,The length of the statement  "            var op = (Coevery.Projections.FilterEditors.Forms.StringOperator) Enum.Parse(typeof (Coevery.Projections.FilterEditors.Forms.StringOperator)' Convert.ToString(formState.Operator)); " is 180.
Long Statement,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,GetFilterPredicate,The length of the statement  "                    var predicates1 = values1.Skip(1).Select<string' Action<IHqlExpressionFactory>>(x => y => y.Like(property' x' HqlMatchMode.Anywhere)).ToArray(); " is 144.
Long Statement,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,GetFilterPredicate,The length of the statement  "                    var predicates2 = values2.Skip(1).Select<string' Action<IHqlExpressionFactory>>(x => y => y.Like(property' x' HqlMatchMode.Anywhere)).ToArray(); " is 144.
Long Statement,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,DisplayFilter,The length of the statement  "            var op = (Coevery.Projections.FilterEditors.Forms.StringOperator) Enum.Parse(typeof (Coevery.Projections.FilterEditors.Forms.StringOperator)' Convert.ToString(formState.Operator)); " is 180.
Long Statement,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,DisplayFilter,The length of the statement  "                    return T("{0} contains any of '{1}'"' fieldName' new LocalizedString(String.Join("'' '"' value.Split(new[] {' '}' StringSplitOptions.RemoveEmptyEntries)))); " is 156.
Long Statement,Coevery.Projections.FilterEditors.Forms,StringFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\StringFilterForm.cs,DisplayFilter,The length of the statement  "                    return T("{0} contains all '{1}'"' fieldName' new LocalizedString(String.Join("'' '"' value.Split(new[] {' '}' StringSplitOptions.RemoveEmptyEntries)))); " is 153.
Long Statement,Coevery.Projections.Handlers,FieldIndexPartHandler,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Handlers\FieldIndexPartHandler.cs,Publishing,The length of the statement  "                    var drivers = _contentFieldDrivers.Where(x => x.GetFieldInfo().Any(fi => fi.FieldTypeName == field.FieldDefinition.Name)).ToList(); " is 131.
Long Statement,Coevery.Projections.Handlers,ProjectionEntityEventsHandler,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Handlers\ProjectionEntityEventsHandler.cs,OnDeleting,The length of the statement  "            var projections = _contentManager.Query<ListViewPart' ListViewPartRecord>().Where(x => x.ItemContentType == entityName).List(); " is 127.
Long Statement,Coevery.Projections.Navigation,NavigationQueryProvider,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Navigation\NavigationQueryProvider.cs,Filter,The length of the statement  "                    var contentItems = _projectionManager.GetContentItems(navigationQuery.QueryPartRecord.Id' navigationQuery.Skip' navigationQuery.Items).ToList(); " is 144.
Long Statement,Coevery.Projections.PropertyEditors,DateTimePropertyEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\DateTimePropertyEditor.cs,Format,The length of the statement  "            return DateTimePropertyForm.FormatDateTime(display' Convert.ToDateTime(value' new System.Globalization.CultureInfo(culture))' formState' culture); " is 146.
Long Statement,Coevery.Projections.PropertyEditors,NumericPropertyEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\NumericPropertyEditor.cs,Format,The length of the statement  "            return NumericPropertyForm.FormatNumber(Convert.ToDecimal(value' new System.Globalization.CultureInfo(culture))' formState' culture); " is 133.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "f"' Text = T("Full date/time pattern (short time): Monday' June 15' 2009 1:45 PM").Text }); " is 135.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "F"' Text = T("Full date/time pattern (long time): Monday' June 15' 2009 1:45:30 PM").Text }); " is 137.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "g"' Text = T("General date/time pattern (short time): 6/15/2009 1:45 PM").Text }); " is 126.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "G"' Text = T("General date/time pattern (long time): 6/15/2009 1:45:30 PM").Text }); " is 128.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "O"' Text = T("Round-trip date/time pattern: 2009-06-15T13:45:30.0900000").Text }); " is 126.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "u"' Text = T("Universal sortable date/time pattern: 2009-06-15 20:45:30Z").Text }); " is 127.
Long Statement,Coevery.Projections.PropertyEditors.Forms,DateTimePropertyForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\PropertyEditors\Forms\DateTimePropertyForm.cs,Describe,The length of the statement  "                    f._Format.Add(new SelectListItem { Value = "U"' Text = T("Universal full date/time pattern:  Monday' June 15' 2009 8:45:30 PM").Text }); " is 136.
Long Statement,Coevery.Projections.Providers.Layouts,GridLayout,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\GridLayout.cs,RenderLayout,The length of the statement  "            return Shape.Grid(Id: gridId' Horizontal: horizontal' Columns: columns' Items: shapes' Tag: gridTag' Classes: new[] { gridClass }' RowTag: rowTag' RowClasses: new[] { rowClass }' CellTag: cellTag' CellClasses: new[] { cellClass }' EmptyCell: emptyCell); " is 253.
Long Statement,Coevery.Projections.Providers.Layouts,ListLayout,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\ListLayout.cs,RenderLayout,The length of the statement  "                shapes = layoutComponentResults.Select(x => _contentManager.BuildDisplay(x.ContentItem' context.LayoutRecord.DisplayType)); " is 123.
Long Statement,Coevery.Projections.Providers.Layouts,ShapeLayout,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\ShapeLayout.cs,RenderLayout,The length of the statement  "            shape.BuildShapes= (Func<IEnumerable<dynamic>>) (() => context.LayoutRecord.Display == (int)LayoutRecord.Displays.Content " is 121.
Long Statement,Coevery.Projections.Providers.Properties,ContentFieldProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\ContentFieldProperties.cs,Describe,The length of the statement  "                var descriptor = describe.For(part.Name + "ContentFields"' T("{0} Content Fields"' part.Name.CamelFriendly())' T("Content Fields for {0}"' part.Name.CamelFriendly())); " is 167.
Long Statement,Coevery.Projections.Providers.Properties,ContentFieldProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\ContentFieldProperties.cs,Describe,The length of the statement  "                    var drivers = _contentFieldDrivers.Where(x => x.GetFieldInfo().Any(fi => fi.FieldTypeName == localField.FieldDefinition.Name)).ToList(); " is 136.
Long Statement,Coevery.Projections.Providers.Properties,ContentFieldProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\ContentFieldProperties.cs,Describe,The length of the statement  "                                property: (context' contentItem) => Render(context' contentItem' fieldTypeEditor' storageName' storageType' localPart' localField)' " is 131.
Long Statement,Coevery.Projections.Providers.Properties,ContentFieldProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\ContentFieldProperties.cs,DisplayFilter,The length of the statement  "            return T("Field {0}: {1}"' fieldDefinition.Name' String.IsNullOrEmpty(storageName) ? T("Default value").Text : storageName); " is 124.
Long Statement,Coevery.Projections.Providers.Properties,MemberBindingProperties,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Properties\MemberBindingProperties.cs,Describe,The length of the statement  "                var descriptor = describe.For(typeMembers.Name' new LocalizedString(typeMembers.Name.CamelFriendly())' T("Members for {0}"' typeMembers.Name)); " is 143.
Long Statement,Coevery.Projections.Providers.SortCriteria,ContentFieldsSortCriterion,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\SortCriteria\ContentFieldsSortCriteria.cs,Describe,The length of the statement  "                var descriptor = describe.For(part.Name + "ContentFields"' T("{0} Content Fields"' part.Name.CamelFriendly())' T("Content Fields for {0}"' part.Name.CamelFriendly())); " is 167.
Long Statement,Coevery.Projections.Providers.SortCriteria,ContentFieldsSortCriterion,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\SortCriteria\ContentFieldsSortCriteria.cs,Describe,The length of the statement  "                    var drivers = _contentFieldDrivers.Where(x => x.GetFieldInfo().Any(fi => fi.FieldTypeName == localField.FieldDefinition.Name)).ToList(); " is 136.
Long Statement,Coevery.Projections.Providers.SortCriteria,ContentFieldsSortCriterion,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\SortCriteria\ContentFieldsSortCriteria.cs,Describe,The length of the statement  "                            IConcreteFieldTypeEditor fieldTypeEditor = _fieldTypeEditors.FirstOrDefault(x => x.CanHandle(localField.FieldDefinition.Name' storageType)) " is 139.
Long Statement,Coevery.Projections.Providers.SortCriteria,MemberBindingSortCriteria,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\SortCriteria\MemberBindingSortCriteria.cs,Describe,The length of the statement  "                var descriptor = describe.For(typeMembers.Name' new LocalizedString(typeMembers.Name.CamelFriendly())' T("Members for {0}"' typeMembers.Name)); " is 143.
Long Statement,Coevery.Projections.Services,CompareContentService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\CompareContentService.cs,CompareContent,The length of the statement  "            var allFielDescriptors = _projectionManager.DescribeProperties().Where(p => p.Category == category).SelectMany(x => x.Descriptors).ToList(); " is 140.
Long Statement,Coevery.Projections.Services,CustomMemberBindingProvider,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\CustomMemberBindingProvider.cs,GetMemberBindings,The length of the statement  "                var record = recordBluePrints.FirstOrDefault(r => String.Equals(r.Type.FullName' member.Type' StringComparison.OrdinalIgnoreCase)); " is 131.
Long Statement,Coevery.Projections.Services,FieldIndexService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\FieldIndexService.cs,Get,The length of the statement  "                    return dateTimeRecord != null ? (T)Convert.ChangeType(new DateTime(Convert.ToInt64(dateTimeRecord.Value))' typeof(T)) : default(T); " is 131.
Long Statement,Coevery.Projections.Services,ProjectionManager,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\ProjectionManager.cs,GetContentItems,The length of the statement  "                var descriptor = availableSortCriteria.SelectMany(x => x.Descriptors).FirstOrDefault(x => x.Category == category && x.Type == type); " is 132.
Long Statement,Coevery.Projections.Services,ProjectionService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\ProjectionService.cs,UpdateLayoutProperties,The length of the statement  "                var fieldStateProvider = _fieldToPropertyStateProviders.FirstOrDefault(provider=>provider.CanHandle(field.FieldDefinition.Name)); " is 129.
Long Statement,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,PropertyWrapper,The length of the statement  "                resultOutput = _tokenizer.Replace(Property.RewriteText' new Dictionary<string' object> { { "Text"' resultOutput }' { "Content"' ContentItem } }); " is 145.
Long Statement,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,PropertyWrapper,The length of the statement  "            var wrapperTag = new TagBuilder(Property.CustomizeWrapperHtml && !String.IsNullOrEmpty(Property.CustomWrapperTag) ? Property.CustomWrapperTag : "div"); " is 151.
Long Statement,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,PropertyWrapper,The length of the statement  "                var labelTag = new TagBuilder(Property.CustomizeLabelHtml && !String.IsNullOrEmpty(Property.CustomLabelTag) ? Property.CustomLabelTag : "span"); " is 144.
Long Statement,Coevery.Projections.Services,PropertyShapes,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\PropertyShapes.cs,PropertyWrapper,The length of the statement  "            var propertyTag = new TagBuilder(Property.CustomizePropertyHtml && !String.IsNullOrEmpty(Property.CustomPropertyTag) ? Property.CustomPropertyTag : "span"); " is 156.
Long Statement,Coevery.Projections.StandardQueries,QueryFeedQuery,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\StandardQueries\QueryFeedQuery.cs,Execute,The length of the statement  "                    var uriBuilder = new UriBuilder(urlHelper.RequestContext.HttpContext.Request.ToRootUrlString()) { Path = urlHelper.RouteUrl(inspector.Link) }; " is 142.
Complex Conditional,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Imported,The conditional expression  "layoutIndex != null                       && Int32.TryParse(layoutIndex' out layoutIndexValue)                      && layoutIndexValue != -1                      && part.Record.QueryPartRecord.Layouts.Count >= layoutIndexValue + 1"  is complex.
Complex Conditional,Coevery.Projections.Services,CompareContentService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\CompareContentService.cs,CompareContent,The conditional expression  "preValue != null && !string.IsNullOrEmpty(preValue.ToString())                      && (newValue == null || string.IsNullOrEmpty(newValue.ToString()))"  is complex.
Complex Conditional,Coevery.Projections.Services,CompareContentService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\CompareContentService.cs,CompareContent,The conditional expression  "preValue != null && newValue.ToString() != preValue.ToString() ||                           preValue == null && newValue != null && !string.IsNullOrEmpty(newValue.ToString())"  is complex.
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("StringFieldIndexRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("PropertyName")                      .Column<string>("Value"' c => c.WithLength(4000))                      .Column<int>("FieldIndexPartRecord_Id")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("FilterRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("FilterGroupRecord_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("FilterRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("FilterGroupRecord_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("FilterRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("FilterGroupRecord_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("SortCriterionRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("QueryPartRecord_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("SortCriterionRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("QueryPartRecord_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("SortCriterionRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("QueryPartRecord_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("LayoutRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<string>("DisplayType"' c => c.WithLength(64))                      .Column<int>("Display")                      .Column<int>("QueryPartRecord_id")                      .Column<int>("GroupProperty_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("LayoutRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<string>("DisplayType"' c => c.WithLength(64))                      .Column<int>("Display")                      .Column<int>("QueryPartRecord_id")                      .Column<int>("GroupProperty_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("LayoutRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<string>("DisplayType"' c => c.WithLength(64))                      .Column<int>("Display")                      .Column<int>("QueryPartRecord_id")                      .Column<int>("GroupProperty_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("LayoutRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<string>("DisplayType"' c => c.WithLength(64))                      .Column<int>("Display")                      .Column<int>("QueryPartRecord_id")                      .Column<int>("GroupProperty_id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("PropertyRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Category"' c => c.WithLength(64))                      .Column<string>("Type"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(255))                      .Column<string>("State"' c => c.Unlimited())                      .Column<int>("Position")                      .Column<int>("LayoutRecord_id")                        .Column<bool>("ExcludeFromDisplay")                      .Column<bool>("CreateLabel")                      .Column<string>("Label"' c => c.WithLength(255))                      .Column<bool>("LinkToContent")                        .Column<bool>("CustomizePropertyHtml")                      .Column<string>("CustomPropertyTag"' c => c.WithLength(64))                      .Column<string>("CustomPropertyCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeLabelHtml")                      .Column<string>("CustomLabelTag"' c => c.WithLength(64))                      .Column<string>("CustomLabelCss"' c => c.WithLength(64))                      .Column<bool>("CustomizeWrapperHtml")                      .Column<string>("CustomWrapperTag"' c => c.WithLength(64))                      .Column<string>("CustomWrapperCss"' c => c.WithLength(64))                        .Column<string>("NoResultText"' c => c.Unlimited())                      .Column<bool>("ZeroIsEmpty")                      .Column<bool>("HideEmpty")                        .Column<bool>("RewriteOutput")                      .Column<string>("RewriteText"' c => c.Unlimited())                      .Column<bool>("StripHtmlTags")                      .Column<bool>("TrimLength")                      .Column<bool>("AddEllipsis")                      .Column<int>("MaxLength")                      .Column<bool>("TrimOnWordBoundary")                      .Column<bool>("PreserveLines")                      .Column<bool>("TrimWhiteSpace")              );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("ProjectionPartRecord"'                  table => table                      .ContentPartRecord()                      .Column<int>("Items")                      .Column<int>("ItemsPerPage")                      .Column<int>("Skip")                      .Column<string>("PagerSuffix"' c => c.WithLength(255))                      .Column<int>("MaxItems")                      .Column<bool>("DisplayPager")                      .Column<int>("QueryPartRecord_id")                      .Column<int>("LayoutRecord_Id")                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("MemberBindingRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Type"' c => c.WithLength(255))                      .Column<string>("Member"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(500))                      .Column<string>("DisplayName"' c => c.WithLength(64))                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("MemberBindingRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Type"' c => c.WithLength(255))                      .Column<string>("Member"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(500))                      .Column<string>("DisplayName"' c => c.WithLength(64))                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("MemberBindingRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Type"' c => c.WithLength(255))                      .Column<string>("Member"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(500))                      .Column<string>("DisplayName"' c => c.WithLength(64))                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("MemberBindingRecord"'                  table => table                      .Column<int>("Id"' c => c.PrimaryKey().Identity())                      .Column<string>("Type"' c => c.WithLength(255))                      .Column<string>("Member"' c => c.WithLength(64))                      .Column<string>("Description"' c => c.WithLength(500))                      .Column<string>("DisplayName"' c => c.WithLength(64))                  );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,UpdateFrom1,The following statement contains a magic number: return 2;
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,UpdateFrom2,The following statement contains a magic number: SchemaBuilder.AlterTable("ProjectionPartRecord"'                             table => table                                 .AlterColumn("PagerSuffix"' c => c.WithType(DbType.String).WithLength(255))                             );
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,UpdateFrom2,The following statement contains a magic number: return 3;
Magic Number,Coevery.Projections,Migrations,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Migrations.cs,UpdateFrom3,The following statement contains a magic number: return 4;
Magic Number,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,Preview,The following statement contains a magic number: var contentItems = _projectionManager.GetContentItems(id' 0' 20);
Magic Number,Coevery.Projections.Providers.Filters,ContentPartRecordsForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentPartRecordsForm.cs,Describe,The following statement contains a magic number: Func<IShapeFactory' object> form =                  shape => {                        var f = Shape.Form(                          Id: "AnyOfContentPartRecords"'                          _Parts: Shape.SelectList(                              Id: "contentpartrecordss"' Name: "ContentPartRecords"'                              Title: T("Content part records")'                              Description: T("Select some content part records.")'                              Size: 10'                              Multiple: true                              )                          );                        foreach (var recordBluePrint in _shellBlueprint.Records.OrderBy(x => x.Type.Name)) {                          if (typeof(ContentPartRecord).IsAssignableFrom(recordBluePrint.Type) || typeof(ContentPartVersionRecord).IsAssignableFrom(recordBluePrint.Type)) {                              f._Parts.Add(new SelectListItem { Value = recordBluePrint.Type.Name' Text = recordBluePrint.Type.Name });                          }                      }                        return f;                  };
Magic Number,Coevery.Projections.Providers.Filters,ContentTypesFilterForms,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Filters\ContentTypesFilter.cs,Describe,The following statement contains a magic number: Func<IShapeFactory' object> form =                  shape => {                        var f = Shape.Form(                          Id: "AnyOfContentTypes"'                          _Parts: Shape.SelectList(                              Id: "contenttypes"' Name: "ContentTypes"'                              Title: T("Content types")'                              Description: T("Select some content types.")'                              Size: 10'                              Multiple: true                              )                          );                        f._Parts.Add(new SelectListItem { Value = ""' Text = T("Any").Text });                        foreach (var contentType in _contentDefinitionManager.ListTypeDefinitions().OrderBy(x => x.DisplayName)) {                          f._Parts.Add(new SelectListItem { Value = contentType.Name' Text = contentType.DisplayName });                      }                        return f;                  };
Magic Number,Coevery.Projections.Drivers,ProjectionPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Drivers\ProjectionPartDriver.cs,Display,The following statement contains a magic number: pageSize == 128
Magic Number,Coevery.Projections.Handlers,ProjectionEntityEventsHandler,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Handlers\ProjectionEntityEventsHandler.cs,OnCreated,The following statement contains a magic number: var viewModel = new ProjectionEditViewModel {                  ItemContentType = entityName.ToPartName()'                  DisplayName = entityName + " DefaultView"'                  PageRowCount = 50'                  IsDefault = true              };
Magic Number,Coevery.Projections.Models,ProjectionPartRecord,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Models\ProjectionPartRecord.cs,ProjectionPartRecord,The following statement contains a magic number: MaxItems = 20;
Magic Number,Coevery.Projections.Providers.Layouts,GridLayoutForms,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Providers\Layouts\GridLayoutForms.cs,Describe,The following statement contains a magic number: Func<IShapeFactory' object> form =                  shape => {                        var f = Shape.Form(                          Id: "GridLayout"'                          _Options: Shape.Fieldset(                              Title: T("Alignment")'                              _ValueTrue: Shape.Radio(                                  Id: "horizontal"' Name: "Alignment"'                                  Title: T("Horizontal")' Value: "horizontal"'                                  Checked: true'                                  Description: T("Horizontal alignment will place items starting in the upper left and moving right.")                                  )'                              _ValueFalse: Shape.Radio(                                  Id: "vertical"' Name: "Alignment"'                                  Title: T("Vertical")' Value: "vertical"'                                  Description: T("Vertical alignment will place items starting in the upper left and moving down.")                                  )'                              _Colums: Shape.TextBox(                                  Id: "columns"' Name: "Columns"'                                  Title: T("Number of columns/lines ")'                                  Value: 3'                                  Description: T("How many columns (in Horizontal mode) or lines (in Vertical mode) to display in the grid.")'                                  Classes: new[] { "small-text"' "tokenized" }                                  )                              )'                          _HtmlProperties: Shape.Fieldset(                              Title: T("Html properties")'                              _GridTag: Shape.TextBox(                                  Id: "grid-tag"' Name: "GridTag"'                                  Title: T("Grid tag")'                                  Description: T("The tag of the grid. Leave empty for no tag. (e.g.' table)")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _GridId: Shape.TextBox(                                  Id: "grid-id"' Name: "GridId"'                                  Title: T("Grid id")'                                  Description: T("The id to provide on the grid element.")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _GridClass: Shape.TextBox(                                  Id: "grid-class"' Name: "GridClass"'                                  Title: T("Grid class")'                                  Description: T("The class to provide on the grid element.")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _RowTag: Shape.TextBox(                                  Id: "row-tag"' Name: "RowTag"'                                  Title: T("Row tag")'                                  Description: T("The tag of a row. Leave empty for no tag. (e.g.' tr)")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _RowClass: Shape.TextBox(                                  Id: "row-class"' Name: "RowClass"'                                  Title: T("Row class")'                                  Description: T("The class to provide on each row.")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _CellTag: Shape.TextBox(                                  Id: "cell-tag"' Name: "CellTag"'                                  Title: T("Cell tag")'                                  Description: T("The tag of a cell. Leave empty for no tag. (e.g.' td)")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _CellClass: Shape.TextBox(                                  Id: "cell-class"' Name: "CellClass"'                                  Title: T("Cell class")'                                  Description: T("The class to provide on each cell.")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )'                              _EmptyCell: Shape.TextBox(                                  Id: "empty-cell"' Name: "EmptyCell"'                                  Title: T("Empty Cell")'                                  Description: T("The HTML to render as empty cells to fill a row. (e.g.' <td>&nbsp;</td>")'                                  Classes: new[] { "text medium"' "tokenized" }                                  )                              )                          );                        return f;                  };
Magic Number,Coevery.Projections.Services,FieldIndexService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\FieldIndexService.cs,Set,The following statement contains a magic number: switch (typeCode) {                  case TypeCode.Char:                  case TypeCode.String:                      var stringRecord = part.Record.StringFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (stringRecord == null) {                          stringRecord = new StringFieldIndexRecord { PropertyName = propertyName };                          part.Record.StringFieldIndexRecords.Add(stringRecord);                      }                        // take the first 4000 chars as it is the limit for the field                      stringRecord.Value = value == null ? null : value.ToString().Substring(0' Math.Min(value.ToString().Length' 4000));                                              break;                  case TypeCode.Byte:                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      var integerRecord = part.Record.IntegerFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (integerRecord == null) {                          integerRecord = new IntegerFieldIndexRecord { PropertyName = propertyName };                          part.Record.IntegerFieldIndexRecords.Add(integerRecord);                      }                        integerRecord.Value = value == null ? default(long?) : Convert.ToInt64(value);                      break;                  case TypeCode.DateTime:                      var dateTimeRecord = part.Record.IntegerFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (dateTimeRecord == null) {                          dateTimeRecord = new IntegerFieldIndexRecord { PropertyName = propertyName };                          part.Record.IntegerFieldIndexRecords.Add(dateTimeRecord);                      }                        dateTimeRecord.Value = value == null ? default(long?) : ((DateTime)value).Ticks;                      break;                  case TypeCode.Boolean:                      var booleanRecord = part.Record.IntegerFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (booleanRecord == null) {                          booleanRecord = new IntegerFieldIndexRecord { PropertyName = propertyName };                          part.Record.IntegerFieldIndexRecords.Add(booleanRecord);                      }                        booleanRecord.Value = value == null ? default(long?) : Convert.ToInt64((bool)value);                      break;                  case TypeCode.Decimal:                      var decimalRecord = part.Record.DecimalFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (decimalRecord == null) {                          decimalRecord = new DecimalFieldIndexRecord { PropertyName = propertyName };                          part.Record.DecimalFieldIndexRecords.Add(decimalRecord);                      }                        decimalRecord.Value = value == null ? default(decimal?) : Convert.ToDecimal((decimal)value);                      break;                  case TypeCode.Single:                  case TypeCode.Double:                      var doubleRecord = part.Record.DoubleFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (doubleRecord == null) {                          doubleRecord = new DoubleFieldIndexRecord { PropertyName = propertyName };                          part.Record.DoubleFieldIndexRecords.Add(doubleRecord);                      }                        doubleRecord.Value = value == null ? default(double?) : Convert.ToDouble(value);                      break;              }
Magic Number,Coevery.Projections.StandardQueries,QueryFeedQuery,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\StandardQueries\QueryFeedQuery.cs,Execute,The following statement contains a magic number: var limit = 20;
Missing Default,Coevery.Projections.Controllers,AdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\AdminController.cs,Index,The following switch statement is missing a default case: switch (options.Order) {                  case QueriesOrder.Name:                      queries = queries.Join<TitlePartRecord>().OrderBy(u => u.Title);                      break;              }
Missing Default,Coevery.Projections.Controllers,BindingController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Controllers\BindingController.cs,Index,The following switch statement is missing a default case: switch (options.Order) {                  case BindingsOrder.Name:                      bindings = bindings.OrderBy(u => u.DisplayName);                      break;              }
Missing Default,Coevery.Projections.FieldTypeEditors,OptionSetFieldTypeEditor,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FieldTypeEditors\OptionSetFieldTypeEditor.cs,ApplyFilter,The following switch statement is missing a default case: switch (op) {                  case OptionSetOperator.MatchesAny:                      Action<IAliasFactory> selectorAny = alias => alias.ContentPartRecord<OptionItemContainerPartRecord>().Property("OptionItems"' "opits").Property("OptionItemRecord"' "opcpr");                      Action<IHqlExpressionFactory> filterAny = x => x.InG("Id"' valueArr);                      context.Query.Where(selectorAny' filterAny);                      break;                  case OptionSetOperator.MatchesAll:                      foreach (var id in valueArr) {                          var optionId = id;                          Action<IAliasFactory> selectorAll =                              alias => alias.ContentPartRecord<OptionItemContainerPartRecord>().Property("OptionItems"' "opit" + optionId);                          Action<IHqlExpressionFactory> filterAll = x => x.Eq("OptionItemRecord.Id"' optionId);                          context.Query.Where(selectorAll' filterAll);                      }                      break;                  case OptionSetOperator.NotMatchesAny:                      Action<IAliasFactory> selectorNotAny = alias => alias.ContentPartRecord<OptionItemContainerPartRecord>().Property("OptionItems"' "opits").Property("OptionItemRecord"' "opcpr");                      Action<IHqlExpressionFactory> filterNotAny = x => x.Not(y => y.InG("Id"' valueArr));                      context.Query.Where(selectorNotAny' filterNotAny);                      break;              }
Missing Default,Coevery.Projections.FilterEditors.Forms,OptionSetFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\OptionSetFilterForm.cs,DisplayFilter,The following switch statement is missing a default case: switch (op) {                  case OptionSetOperator.MatchesAny:                      return T("{0} matches any in the {1} selected items"' fieldName' items.Length);                  case OptionSetOperator.MatchesAll:                      return T("{0} matches all the {1} selected items"' fieldName' items.Length);                  case OptionSetOperator.NotMatchesAny:                      return T("{0} not matches any in the {1} selected items"' fieldName' items.Length);              }
Missing Default,Coevery.Projections.FilterEditors.Forms,ReferenceFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\ReferenceFilterForm.cs,DisplayFilter,The following switch statement is missing a default case: switch (op) {                  case ReferenceOperator.MatchesAny:                      return T("{0} matches any in the {1} selected items"' fieldName' items.Length);                  case ReferenceOperator.NotMatchesAny:                      return T("{0} not matches any in the {1} selected items"' fieldName' items.Length);              }
Missing Default,Coevery.Projections.FilterEditors.Forms,DateFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateFilterForm.cs,DisplayFilter,The following switch statement is missing a default case: switch (op) {                  case DateTimeOperator.LessThan:                      return T("{0} is less than {1}"' fieldName' value);                  case DateTimeOperator.LessThanEquals:                      return T("{0} is less or equal than {1}"' fieldName' value);                  case DateTimeOperator.Equals:                      return T("{0} equals {1}"' fieldName' value);                  case DateTimeOperator.NotEquals:                      return T("{0} is not equal to {1}"' fieldName' value);                  case DateTimeOperator.GreaterThan:                      return T("{0} is greater than {1}"' fieldName' value);                  case DateTimeOperator.GreaterThanEquals:                      return T("{0} is greater or equal than {1}"' fieldName' value);                  case DateTimeOperator.Between:                      return T("{0} is between {1} and {2}"' fieldName' min' max);                  case DateTimeOperator.NotBetween:                      return T("{0} is not between {1} and {2}"' fieldName' min' max);              }
Missing Default,Coevery.Projections.FilterEditors.Forms,DateTimeFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\DateTimeFilterForm.cs,DisplayFilter,The following switch statement is missing a default case: switch (op) {                  case DateTimeOperator.LessThan:                      return T("{0} is less than {1}"' fieldName' value);                  case DateTimeOperator.LessThanEquals:                      return T("{0} is less or equal than {1}"' fieldName' value);                  case DateTimeOperator.Equals:                      return T("{0} equals {1}"' fieldName' value);                  case DateTimeOperator.NotEquals:                      return T("{0} is not equal to {1}"' fieldName' value);                  case DateTimeOperator.GreaterThan:                      return T("{0} is greater than {1}"' fieldName' value);                  case DateTimeOperator.GreaterThanEquals:                      return T("{0} is greater or equal than {1}"' fieldName' value);                  case DateTimeOperator.Between:                      return T("{0} is between {1} and {2}"' fieldName' min' max);                  case DateTimeOperator.NotBetween:                      return T("{0} is not between {1} and {2}"' fieldName' min' max);              }
Missing Default,Coevery.Projections.FilterEditors.Forms,NumericFilterForm,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\FilterEditors\Forms\NumericFilterForm.cs,DisplayFilter,The following switch statement is missing a default case: switch (op) {                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.LessThan:                      return T("{0} is less than {1}"' fieldName' value);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.LessThanEquals:                      return T("{0} is less or equal than {1}"' fieldName' value);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.Equals:                      return T("{0} equals {1}"' fieldName' value);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.NotEquals:                      return T("{0} is not equal to {1}"' fieldName' value);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.GreaterThan:                      return T("{0} is greater than {1}"' fieldName' value);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.GreaterThanEquals:                      return T("{0} is greater or equal than {1}"' fieldName' value);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.Between:                      return T("{0} is between {1} and {2}"' fieldName' min' max);                  case Coevery.Projections.FilterEditors.Forms.NumericOperator.NotBetween:                      return T("{0} is not between {1} and {2}"' fieldName' min' max);              }
Missing Default,Coevery.Projections.Services,FieldIndexService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Projections\Services\FieldIndexService.cs,Set,The following switch statement is missing a default case: switch (typeCode) {                  case TypeCode.Char:                  case TypeCode.String:                      var stringRecord = part.Record.StringFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (stringRecord == null) {                          stringRecord = new StringFieldIndexRecord { PropertyName = propertyName };                          part.Record.StringFieldIndexRecords.Add(stringRecord);                      }                        // take the first 4000 chars as it is the limit for the field                      stringRecord.Value = value == null ? null : value.ToString().Substring(0' Math.Min(value.ToString().Length' 4000));                                              break;                  case TypeCode.Byte:                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.Int32:                  case TypeCode.Int64:                  case TypeCode.UInt16:                  case TypeCode.UInt32:                  case TypeCode.UInt64:                      var integerRecord = part.Record.IntegerFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (integerRecord == null) {                          integerRecord = new IntegerFieldIndexRecord { PropertyName = propertyName };                          part.Record.IntegerFieldIndexRecords.Add(integerRecord);                      }                        integerRecord.Value = value == null ? default(long?) : Convert.ToInt64(value);                      break;                  case TypeCode.DateTime:                      var dateTimeRecord = part.Record.IntegerFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (dateTimeRecord == null) {                          dateTimeRecord = new IntegerFieldIndexRecord { PropertyName = propertyName };                          part.Record.IntegerFieldIndexRecords.Add(dateTimeRecord);                      }                        dateTimeRecord.Value = value == null ? default(long?) : ((DateTime)value).Ticks;                      break;                  case TypeCode.Boolean:                      var booleanRecord = part.Record.IntegerFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (booleanRecord == null) {                          booleanRecord = new IntegerFieldIndexRecord { PropertyName = propertyName };                          part.Record.IntegerFieldIndexRecords.Add(booleanRecord);                      }                        booleanRecord.Value = value == null ? default(long?) : Convert.ToInt64((bool)value);                      break;                  case TypeCode.Decimal:                      var decimalRecord = part.Record.DecimalFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (decimalRecord == null) {                          decimalRecord = new DecimalFieldIndexRecord { PropertyName = propertyName };                          part.Record.DecimalFieldIndexRecords.Add(decimalRecord);                      }                        decimalRecord.Value = value == null ? default(decimal?) : Convert.ToDecimal((decimal)value);                      break;                  case TypeCode.Single:                  case TypeCode.Double:                      var doubleRecord = part.Record.DoubleFieldIndexRecords.FirstOrDefault(r => r.PropertyName == propertyName);                      if (doubleRecord == null) {                          doubleRecord = new DoubleFieldIndexRecord { PropertyName = propertyName };                          part.Record.DoubleFieldIndexRecords.Add(doubleRecord);                      }                        doubleRecord.Value = value == null ? default(double?) : Convert.ToDouble(value);                      break;              }
