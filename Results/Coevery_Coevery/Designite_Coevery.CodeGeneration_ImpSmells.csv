Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateDataMigration,Cyclomatic complexity of the method is 8
Complex Method,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,Cyclomatic complexity of the method is 13
Long Parameter List,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateThemeFromTemplates,The method has 5 parameters.
Long Parameter List,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,AddToSolution,The method has 5 parameters.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateDataMigration,The length of the statement  "	ExtensionDescriptor extensionDescriptor = _extensionManager.AvailableExtensions ().FirstOrDefault (extension => DefaultExtensionTypes.IsModule (extension.ExtensionType) && extension.Features.Any (feature => String.Equals (feature.Id' featureName' StringComparison.OrdinalIgnoreCase))); " is 285.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateDataMigration,The length of the statement  "	string moduleCsProjPath = HostingEnvironment.MapPath (string.Format ("~/Modules/{0}/{0}.csproj"' extensionDescriptor.Id)); " is 122.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateDataMigration,The length of the statement  "		string itemGroupReference = string.Format ("</ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"{0}\" />\r\n  "' "Migrations.cs"); " is 134.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateModule,The length of the statement  "	if (_extensionManager.AvailableExtensions ().Any (extension => String.Equals (moduleName' extension.Name' StringComparison.OrdinalIgnoreCase))) { " is 145.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateTheme,The length of the statement  "	if (_extensionManager.AvailableExtensions ().Any (extension => String.Equals (themeName' extension.Id' StringComparison.OrdinalIgnoreCase))) { " is 142.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateTheme,The length of the statement  "		if (!_extensionManager.AvailableExtensions ().Any (extension => string.Equals (extension.ExtensionType' DefaultExtensionTypes.Theme' StringComparison.OrdinalIgnoreCase) && string.Equals (BasedOn' extension.Id' StringComparison.OrdinalIgnoreCase))) { " is 249.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateController,The length of the statement  "	ExtensionDescriptor extensionDescriptor = _extensionManager.AvailableExtensions ().FirstOrDefault (extension => DefaultExtensionTypes.IsModule (extension.ExtensionType) && string.Equals (moduleName' extension.Name' StringComparison.OrdinalIgnoreCase)); " is 252.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateController,The length of the statement  "		Context.Output.WriteLine (T ("Creating Controller {0} failed: target Module {1} could not be found."' controllerName' moduleName)); " is 131.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateController,The length of the statement  "	string moduleCsProjPath = HostingEnvironment.MapPath (string.Format ("~/Modules/{0}/{0}.csproj"' extensionDescriptor.Id)); " is 122.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateController,The length of the statement  "		string compileReference = string.Format ("<Compile Include=\"{0}\" />\r\n    "' "Controllers\\" + controllerName + ".cs"); " is 122.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateController,The length of the statement  "		string itemGroupReference = string.Format ("</ItemGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"{0}\" />\r\n  "' "Controllers\\" + controllerName + ".cs"); " is 159.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,IntegrateTheme,The length of the statement  "	CreateThemeFromTemplates (Context.Output' themeName' baseTheme' CreateProject ? Guid.NewGuid ().ToString ().ToUpper () : null' IncludeInSolution); " is 146.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateFilesFromTemplates,The length of the statement  "	File.WriteAllText (modulePath + "Scripts\\Web.config"' File.ReadAllText (_codeGenTemplatePath + "StaticFilesWebConfig.txt")); " is 125.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateFilesFromTemplates,The length of the statement  "	File.WriteAllText (modulePath + "Styles\\Web.config"' File.ReadAllText (_codeGenTemplatePath + "StaticFilesWebConfig.txt")); " is 124.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateThemeFromTemplates,The length of the statement  "	File.WriteAllText (themePath + "Scripts\\Web.config"' File.ReadAllText (_codeGenTemplatePath + "StaticFilesWebConfig.txt")); " is 124.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateThemeFromTemplates,The length of the statement  "	File.WriteAllText (themePath + "Styles\\Web.config"' File.ReadAllText (_codeGenTemplatePath + "StaticFilesWebConfig.txt")); " is 123.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateThemeFromTemplates,The length of the statement  "	File.WriteAllText (themePath + "Content\\Web.config"' File.ReadAllText (_codeGenTemplatePath + "StaticFilesWebConfig.txt")); " is 124.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,CreateThemeFromTemplates,The length of the statement  "	var templateText = File.ReadAllText (_codeGenTemplatePath + "\\ThemeManifest.txt").Replace ("$$ThemeName$$"' themeName); " is 120.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,AddToSolution,The length of the statement  "			var projectReference = string.Format ("EndProject\r\nProject(\"{{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}}\") = \"{0}\"' \"Coevery.Web\\{2}\\{0}\\{0}.csproj\"' \"{{{1}}}\"\r\n"' projectName' projectGuid' containingFolder); " is 219.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,AddToSolution,The length of the statement  "			var projectConfiguationPlatforms = string.Format ("GlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{{{0}}}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n\t\t{{{0}}}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n\t\t{{{0}}}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n\t\t{{{0}}}.Release|Any CPU.Build.0 = Release|Any CPU\r\n"' projectGuid); " is 354.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,AddToSolution,The length of the statement  "			solutionText = solutionText.Insert (solutionText.LastIndexOf ("EndProject\r\n")' projectReference).Replace ("GlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n"' projectConfiguationPlatforms); " is 205.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,AddToSolution,The length of the statement  "			solutionText = solutionText.Insert (solutionText.LastIndexOf ("EndGlobalSection")' "\t{" + projectGuid + "} = {" + solutionFolderGuid + "}\r\n\t"); " is 147.
Long Statement,Coevery.CodeGeneration.Commands,CodeGenerationCommands,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Commands\CodeGenerationCommands.cs,TouchSolution,The length of the statement  "		output.WriteLine (T ("An unexpected error occured while trying to refresh the Visual Studio solution. Please reload it.")); " is 123.
Long Statement,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,The length of the statement  "	var matchContentPartRecord = command.TableCommands.OfType<CreateColumnCommand> ().Any (c => c.IsPrimaryKey && c.ColumnName == "Id" && !c.IsIdentity && c.DbType == DbType.Int32); " is 177.
Long Statement,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,The length of the statement  "	var matchContentPartVersionRecord = matchContentPartRecord && command.TableCommands.OfType<CreateColumnCommand> ().Any (c => c.ColumnName == "ContentItemRecord_id" && c.DbType == DbType.Int32); " is 193.
Long Statement,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,The length of the statement  "		_output.WriteLine ("\t\t\t\t.Column(\"{0}\"' DbType.{1}{2})"' field' type' options.Any () ? "' column => column." + string.Join ("."' options) : string.Empty); " is 159.
Magic Number,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,The following statement contains a magic number: foreach (var createColumn in command.TableCommands.OfType<CreateColumnCommand> ()) {  	if (createColumn.ColumnName == "Id" && matchContentPartRecord) {  		continue;  	}  	if (createColumn.ColumnName == "ContentItemRecord_id" && matchContentPartVersionRecord) {  		continue;  	}  	var type = createColumn.DbType.ToString ();  	var field = createColumn.ColumnName;  	var options = new List<string> ();  	if (createColumn.IsPrimaryKey) {  		options.Add ("PrimaryKey()");  	}  	if (createColumn.IsIdentity) {  		options.Add ("Identity()");  	}  	if (createColumn.IsUnique) {  		options.Add ("Unique()");  	}  	if (createColumn.IsNotNull) {  		options.Add ("NotNull()");  	}  	if (createColumn.Length.HasValue) {  		if (createColumn.Length == 10000) {  			options.Add ("Unlimited()");  		} else {  			options.Add (string.Format ("WithLength({0})"' createColumn.Length));  		}  	}  	if (createColumn.Precision > 0) {  		options.Add (string.Format ("WithPrecision({0})"' createColumn.Precision));  		options.Add (string.Format ("WithScale({0})"' createColumn.Scale));  	}  	_output.WriteLine ("\t\t\t\t.Column(\"{0}\"' DbType.{1}{2})"' field' type' options.Any () ? "' column => column." + string.Join ("."' options) : string.Empty);  }  
Magic Number,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,The following statement contains a magic number: if (createColumn.Length.HasValue) {  	if (createColumn.Length == 10000) {  		options.Add ("Unlimited()");  	} else {  		options.Add (string.Format ("WithLength({0})"' createColumn.Length));  	}  }  
Magic Number,Coevery.CodeGeneration.Services,CodeGenerationCommandInterpreter,F:\newReposMay17\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.CodeGeneration\Services\CodeGenerationCommandInterpreter.cs,Visit,The following statement contains a magic number: if (createColumn.Length == 10000) {  	options.Add ("Unlimited()");  } else {  	options.Add (string.Format ("WithLength({0})"' createColumn.Length));  }  
