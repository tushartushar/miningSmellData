Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The length of the statement  "            Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture))); " is 213.
Long Statement,Orchard.Tokens.Tests,UserTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\UserTokenTests.cs,TestUserTokens,The length of the statement  "            var str = _tokenizer.Replace("{User.Name}'{User.Email}'{User.Id}"' new { User = new TestUser { UserName = "Joe"' Email = "test@test.com"' Id = 88 } }); " is 151.
Long Statement,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestEvaluate,The length of the statement  "            var tokens = _tokenManager.Evaluate("Site"' new Dictionary<string' string> { { "Global1"' "Site.Global1" }' { "Global2"' "Site.Global2" } }' null); " is 147.
Long Statement,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribe,The length of the statement  "            Assert.That(string.Join("'"' tokens.Select(td => td.Name.ToString()))' Is.EqualTo("Global1'Global2'Global3'Current User")); " is 123.
Long Statement,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribe,The length of the statement  "            Assert.That(string.Join("'"' tokens.Select(td => td.Description.ToString()))' Is.EqualTo("description of token1'description of token2'description of token3'The current user")); " is 176.
Long Statement,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribe,The length of the statement  "            Assert.That(string.Join("'"' tokens.Select(td => td.Description.ToString()))' Is.EqualTo("Their user name'Date of birth")); " is 123.
Long Statement,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribe,The length of the statement  "            Assert.That(string.Join("'"' tokens.Select(td => td.Description.ToString()))' Is.EqualTo("Current system date in short date format. You can chain a .NET DateTime format string to customize.")); " is 193.
Long Statement,Orchard.Tokens.Tests,TestTokenProvider,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TestTokenProvider.cs,Describe,The length of the statement  "                .Token("Now"' T("Now")' T("Current system date in short date format. You can chain a .NET DateTime format string to customize.")); " is 130.
Long Statement,Orchard.Tokens.Tests,TokenizerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenizerTests.cs,TestGlobalTokens,The length of the statement  "            Assert.That(_tokenizer.Replace("{Site.Global1}{Site.Global2}{Site.Global1}{Site.Global2}"' null)' Is.EqualTo("[global1][global2][global1][global2]")); " is 150.
Long Statement,Orchard.Tokens.Tests,TokenizerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenizerTests.cs,TestContextTokens,The length of the statement  "            Assert.That(_tokenizer.Replace("{User.Name}"' new { User = new TestUser { UserName = "LocalUser" } })' Is.EqualTo("LocalUser")); " is 128.
Long Statement,Orchard.Tokens.Tests,TokenizerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenizerTests.cs,TestChainedTokens,The length of the statement  "            Assert.That(_tokenizer.Replace("{Site.CurrentUser.Name}"' new { User = new TestUser { UserName = "ShouldStillUseParentValue" } })' Is.EqualTo("CurrentUser")); " is 158.
Long Statement,Orchard.Tokens.Tests,TokenizerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenizerTests.cs,TestTokenEscapeSequences,The length of the statement  "            Assert.That(_tokenizer.Replace("{{escaped}} {Site.Global1} }}{{ {{{{ }}}}"' null)' Is.EqualTo("{escaped} [global1] }{ {{ }}")); " is 127.
Long Statement,Orchard.Tokens.Tests,TokenizerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenizerTests.cs,TestNoEncode,The length of the statement  "            Assert.That(_tokenizer.Replace("{Date.Now.<>}"' null' new ReplaceOptions { Encoding = ReplaceOptions.NoEncode })' Is.EqualTo("<>")); " is 132.
Long Statement,Orchard.Tokens.Tests,TokenizerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenizerTests.cs,TestPredicate,The length of the statement  "            Assert.That(_tokenizer.Replace("{Site.Global1}{Site.Global2}"' null' new ReplaceOptions { Predicate = token => token == "Site.Global2" })' Is.EqualTo("{Site.Global1}[global2]")); " is 178.
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The following statement contains a magic number: Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture)));
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The following statement contains a magic number: Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture)));
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The following statement contains a magic number: Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture)));
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The following statement contains a magic number: Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture)));
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The following statement contains a magic number: Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture)));
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestDateTokens,The following statement contains a magic number: Assert.That(_tokenizer.Replace("{Date}"' new { Date = new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc) })' Is.EqualTo(new DateTime(1978' 11' 15' 0' 0' 0' DateTimeKind.Utc).ToString(dateTimeFormat' culture)));
Magic Number,Orchard.Tokens.Tests,DateTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\DateTokenTests.cs,TestSince,The following statement contains a magic number: var date = _clock.UtcNow.Subtract(TimeSpan.FromHours(25));
Magic Number,Orchard.Tokens.Tests,StubClock,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\StubClock.cs,StubClock,The following statement contains a magic number: UtcNow = new DateTime(2009' 10' 14' 12' 34' 56' DateTimeKind.Utc);
Magic Number,Orchard.Tokens.Tests,StubClock,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\StubClock.cs,StubClock,The following statement contains a magic number: UtcNow = new DateTime(2009' 10' 14' 12' 34' 56' DateTimeKind.Utc);
Magic Number,Orchard.Tokens.Tests,StubClock,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\StubClock.cs,StubClock,The following statement contains a magic number: UtcNow = new DateTime(2009' 10' 14' 12' 34' 56' DateTimeKind.Utc);
Magic Number,Orchard.Tokens.Tests,StubClock,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\StubClock.cs,StubClock,The following statement contains a magic number: UtcNow = new DateTime(2009' 10' 14' 12' 34' 56' DateTimeKind.Utc);
Magic Number,Orchard.Tokens.Tests,StubClock,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\StubClock.cs,StubClock,The following statement contains a magic number: UtcNow = new DateTime(2009' 10' 14' 12' 34' 56' DateTimeKind.Utc);
Magic Number,Orchard.Tokens.Tests,StubClock,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\StubClock.cs,StubClock,The following statement contains a magic number: UtcNow = new DateTime(2009' 10' 14' 12' 34' 56' DateTimeKind.Utc);
Magic Number,Orchard.Tokens.Tests,UserTokenTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\UserTokenTests.cs,TestUserTokens,The following statement contains a magic number: var str = _tokenizer.Replace("{User.Name}'{User.Email}'{User.Id}"' new { User = new TestUser { UserName = "Joe"' Email = "test@test.com"' Id = 88 } });
Magic Number,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribe,The following statement contains a magic number: Assert.That(allTokens.Count()' Is.EqualTo(3));
Magic Number,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribeFilter,The following statement contains a magic number: Assert.That(tokenDescriptors.Count()' Is.EqualTo(3));
Magic Number,Orchard.Tokens.Tests,TokenManagerTests,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TokenManagerTests.cs,TestDescribeFilter,The following statement contains a magic number: Assert.That(tokenDescriptors.Count()' Is.EqualTo(2));
Magic Number,Orchard.Tokens.Tests,TestTokenProvider,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TestTokenProvider.cs,Evaluate,The following statement contains a magic number: context.For<IUser>("User"' () => new TestUser { UserName = "CurrentUser" })                  .Token("Name"' u => u.UserName)                  .Token("Birthdate"' u => "Nov 15")                  .Chain("Birthdate"' "DateTime"' u => new DateTime(1978' 11' 15));
Magic Number,Orchard.Tokens.Tests,TestTokenProvider,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TestTokenProvider.cs,Evaluate,The following statement contains a magic number: context.For<IUser>("User"' () => new TestUser { UserName = "CurrentUser" })                  .Token("Name"' u => u.UserName)                  .Token("Birthdate"' u => "Nov 15")                  .Chain("Birthdate"' "DateTime"' u => new DateTime(1978' 11' 15));
Magic Number,Orchard.Tokens.Tests,TestTokenProvider,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Tokens\Tests\TestTokenProvider.cs,Evaluate,The following statement contains a magic number: context.For<IUser>("User"' () => new TestUser { UserName = "CurrentUser" })                  .Token("Name"' u => u.UserName)                  .Token("Birthdate"' u => "Nov 15")                  .Chain("Birthdate"' "DateTime"' u => new DateTime(1978' 11' 15));
