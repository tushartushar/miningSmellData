Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,ValidateRegistration,Cyclomatic complexity of the method is 8
Complex Method,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,ErrorCodeToString,Cyclomatic complexity of the method is 10
Complex Method,Coevery.Users.Controllers,SystemAdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\SystemAdminController.cs,CreatePOST,Cyclomatic complexity of the method is 8
Complex Method,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,CreateUser,Cyclomatic complexity of the method is 11
Long Parameter List,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,AccountController,The method has 5 parameters. Parameters: authenticationService' membershipService' userService' coeveryServices' userEventHandler
Long Parameter List,Coevery.Users.Controllers,SystemAdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\SystemAdminController.cs,SystemAdminController,The method has 6 parameters. Parameters: services' membershipService' userService' shapeFactory' userEventHandlers' siteService
Long Parameter List,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,MembershipService,The method has 5 parameters. Parameters: coeveryServices' messageManager' userEventHandlers' clock' encryptionService
Long Parameter List,Coevery.Users.Services,UserService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\UserService.cs,UserService,The method has 6 parameters. Parameters: contentManager' membershipService' clock' messageManager' shellSettings' encryptionService
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,AccessDenied,The length of the statement  "            //TODO: (erikpo) Add a setting for whether or not to log access denieds since these can fill up a database pretty fast from bots on a high traffic site " is 151.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,AccessDenied,The length of the statement  "            //Suggestion: Could instead use the new AccessDenined IUserEventHandler method and let modules decide if they want to log this event? " is 133.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,Register,The length of the statement  "                        _userService.SendChallengeEmail(user.As<UserPart>()' nonce => Url.MakeAbsolute(Url.Action("ChallengeEmail"' "Account"' new { Area = "Coevery.Users"' nonce = nonce })' siteUrl)); " is 177.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,RequestLostPassword,The length of the statement  "            _userService.SendLostPasswordEmail(username' nonce => Url.MakeAbsolute(Url.Action("LostPassword"' "Account"' new { Area = "Coevery.Users"' nonce = nonce })' siteUrl)); " is 167.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,LostPassword,The length of the statement  "                ModelState.AddModelError("newPassword"' T("You must specify a new password of {0} or more characters."' MinPasswordLength)); " is 124.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,ValidateChangePassword,The length of the statement  "                ModelState.AddModelError("newPassword"' T("You must specify a new password of {0} or more characters."' MinPasswordLength)); " is 124.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,ErrorCodeToString,The length of the statement  "                        "The authentication provider returned an error. Please verify your entry and try again. If the problem persists' please contact your system administrator."; " is 156.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,ErrorCodeToString,The length of the statement  "                        "The user creation request has been canceled. Please verify your entry and try again. If the problem persists' please contact your system administrator."; " is 154.
Long Statement,Coevery.Users.Controllers,AccountController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\AccountController.cs,ErrorCodeToString,The length of the statement  "                        "An unknown error occurred. Please verify your entry and try again. If the problem persists' please contact your system administrator."; " is 136.
Long Statement,Coevery.Users.Controllers,UserController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\UserController.cs,Delete,The length of the statement  "                return Request.CreateErrorResponse(HttpStatusCode.NonAuthoritativeInformation' T("Not authorized to manage users").Text); " is 121.
Long Statement,Coevery.Users.Controllers,SystemAdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\SystemAdminController.cs,Create,The length of the statement  "            // Casting to avoid invalid (under medium trust) reflection over the protected View method and force a static invocation. " is 121.
Long Statement,Coevery.Users.Controllers,SystemAdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\SystemAdminController.cs,Edit,The length of the statement  "            var editor = Shape.EditorTemplate(TemplateName: "Parts/User.Edit"' Model: new UserEditViewModel {User = user}' Prefix: null); " is 125.
Long Statement,Coevery.Users.Controllers,SystemAdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\SystemAdminController.cs,Edit,The length of the statement  "            // Casting to avoid invalid (under medium trust) reflection over the protected View method and force a static invocation. " is 121.
Long Statement,Coevery.Users.Controllers,SystemAdminController,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Controllers\SystemAdminController.cs,SendChallengeEmail,The length of the statement  "                _userService.SendChallengeEmail(user.As<UserPart>()' nonce => Url.MakeAbsolute(Url.Action("ChallengeEmail"' "Account"' new {Area = "Coevery.Users"' nonce = nonce})' siteUrl)); " is 175.
Long Statement,Coevery.Users.Drivers,UserPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Drivers\UserPartDriver.cs,Importing,The length of the statement  "            part.Record.EmailStatus = (UserStatus)Enum.Parse(typeof(UserStatus)' context.Attribute(part.PartDefinition.Name' "EmailStatus")); " is 129.
Long Statement,Coevery.Users.Drivers,UserPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Drivers\UserPartDriver.cs,Importing,The length of the statement  "            part.Record.PasswordFormat = (MembershipPasswordFormat)Enum.Parse(typeof(MembershipPasswordFormat)' context.Attribute(part.PartDefinition.Name' "PasswordFormat")); " is 163.
Long Statement,Coevery.Users.Drivers,UserPartDriver,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Drivers\UserPartDriver.cs,Importing,The length of the statement  "            part.Record.RegistrationStatus = (UserStatus)Enum.Parse(typeof(UserStatus)' context.Attribute(part.PartDefinition.Name' "RegistrationStatus")); " is 143.
Long Statement,Coevery.Users.Handlers,UserMessagesAlteration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Handlers\UserMessagesAlteration.cs,Sending,The length of the statement  "                        T("The user <b>{0}</b> with email <b>{1}</b> has requested a new account. This user won't be able to log while his account has not been approved."' " is 147.
Long Statement,Coevery.Users.Handlers,UserMessagesAlteration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Handlers\UserMessagesAlteration.cs,Sending,The length of the statement  "                        T("Thank you for registering with {0}.<br/><br/><br/><b>Final Step</b><br/>To verify that you own this e-mail address' please click the following link:<br/><a href=\"{1}\">{1}</a><br/><br/><b>Troubleshooting:</b><br/>If clicking on the link above does not work' try the following:<br/><br/>Select and copy the entire link.<br/>Open a browser window and paste the link in the address bar.<br/>Click <b>Go</b> or' on your keyboard' press <b>Enter</b> or <b>Return</b>."' " is 468.
Long Statement,Coevery.Users.Handlers,UserMessagesAlteration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Handlers\UserMessagesAlteration.cs,Sending,The length of the statement  "                            T("<br/><br/>If you continue to have access problems or want to report other issues' please <a href=\"mailto:{0}\">Contact Us</a>."' " is 132.
Long Statement,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,CreateUser,The length of the statement  "            if ( registrationSettings != null  && registrationSettings.UsersAreModerated && registrationSettings.NotifyModeration && !createUserParams.IsApproved ) { " is 153.
Long Statement,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,CreateUser,The length of the statement  "                        _messageManager.Send(recipient.ContentItem.Record' MessageTypes.Moderation' "email" ' new Dictionary<string' string> { { "UserName"' createUserParams.Username}' { "Email" ' createUserParams.Email } }); " is 201.
Long Statement,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,GetUser,The length of the statement  "            return _coeveryServices.ContentManager.Query<UserPart' UserPartRecord>().Where(u => u.NormalizedUserName == lowerName).List().FirstOrDefault(); " is 143.
Long Statement,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,ValidateUser,The length of the statement  "            var user = _coeveryServices.ContentManager.Query<UserPart' UserPartRecord>().Where(u => u.NormalizedUserName == lowerName).List().FirstOrDefault(); " is 147.
Long Statement,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,ValidateUser,The length of the statement  "                user = _coeveryServices.ContentManager.Query<UserPart' UserPartRecord>().Where(u => u.Email == lowerName).List().FirstOrDefault(); " is 130.
Long Statement,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,ValidatePasswordEncrypted,The length of the statement  "            return String.Equals(password' Encoding.UTF8.GetString(_encryptionService.Decode(Convert.FromBase64String(partRecord.Password)))' StringComparison.Ordinal); " is 156.
Long Statement,Coevery.Users.Services,MissingSettingsBanner,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MissingSettingsBanner.cs,GetNotifications,The length of the statement  "                yield return new NotifyEntry { Message = T("Some Coevery.User settings require an Email channel to be enabled.")' Type = NotifyType.Warning }; " is 142.
Long Statement,Coevery.Users.Services,UserService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\UserService.cs,CreateNonce,The length of the statement  "            var challengeToken = new XElement("n"' new XAttribute("un"' user.UserName)' new XAttribute("utc"' _clock.UtcNow.ToUniversalTime().Add(delay).ToString(CultureInfo.InvariantCulture))).ToString(); " is 193.
Long Statement,Coevery.Users.Services,UserService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\UserService.cs,SendChallengeEmail,The length of the statement  "            _messageManager.Send(user.ContentItem.Record' MessageTypes.Validation' "email"' new Dictionary<string' string> { { "ChallengeUrl"' url } }); " is 140.
Long Statement,Coevery.Users.Services,UserService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\UserService.cs,SendLostPasswordEmail,The length of the statement  "            var user = _contentManager.Query<UserPart' UserPartRecord>().Where(u => u.NormalizedUserName == lowerName || u.Email == lowerName).List().FirstOrDefault(); " is 155.
Long Statement,Coevery.Users.Services,UserService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\UserService.cs,SendLostPasswordEmail,The length of the statement  "                _messageManager.Send(user.ContentItem.Record' MessageTypes.LostPassword' "email"' new Dictionary<string' string> { { "LostPasswordUrl"' url } }); " is 145.
Complex Conditional,Coevery.Users.Services,MembershipService,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MembershipService.cs,CreateUser,The conditional expression  "registrationSettings != null  && registrationSettings.UsersAreModerated && registrationSettings.NotifyModeration && !createUserParams.IsApproved"  is complex.
Complex Conditional,Coevery.Users.Services,MissingSettingsBanner,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Services\MissingSettingsBanner.cs,GetNotifications,The conditional expression  "registrationSettings != null &&                      ( registrationSettings.UsersMustValidateEmail ||                      registrationSettings.NotifyModeration ||                      registrationSettings.EnableLostPassword ) &&                  !_messageManager.GetAvailableChannelServices().Contains("email")"  is complex.
Magic Number,Coevery.Users,UsersDataMigration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("RegistrationSettingsPartRecord"'                   table => table                      .ContentPartRecord()                      .Column<bool>("UsersCanRegister"' c => c.WithDefault(false))                      .Column<bool>("UsersMustValidateEmail"' c => c.WithDefault(false))                      .Column<string>("ValidateEmailRegisteredWebsite"' c => c.WithLength(255))                      .Column<string>("ValidateEmailContactEMail"' c => c.WithLength(255))                      .Column<bool>("UsersAreModerated"' c => c.WithDefault(false))                      .Column<bool>("NotifyModeration"' c => c.WithDefault(false))                      .Column<string>("NotificationsRecipients"' c => c.Unlimited())                      .Column<bool>("EnableLostPassword"' c => c.WithDefault(false))                  );
Magic Number,Coevery.Users,UsersDataMigration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Migrations.cs,Create,The following statement contains a magic number: SchemaBuilder.CreateTable("RegistrationSettingsPartRecord"'                   table => table                      .ContentPartRecord()                      .Column<bool>("UsersCanRegister"' c => c.WithDefault(false))                      .Column<bool>("UsersMustValidateEmail"' c => c.WithDefault(false))                      .Column<string>("ValidateEmailRegisteredWebsite"' c => c.WithLength(255))                      .Column<string>("ValidateEmailContactEMail"' c => c.WithLength(255))                      .Column<bool>("UsersAreModerated"' c => c.WithDefault(false))                      .Column<bool>("NotifyModeration"' c => c.WithDefault(false))                      .Column<string>("NotificationsRecipients"' c => c.Unlimited())                      .Column<bool>("EnableLostPassword"' c => c.WithDefault(false))                  );
Magic Number,Coevery.Users,UsersDataMigration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Migrations.cs,UpdateFrom1,The following statement contains a magic number: return 2;
Missing Default,Coevery.Users.Handlers,UserMessagesAlteration,D:\research\architectureSmells\repos\Coevery_Coevery\src\Coevery.Web\Modules\Coevery.Users\Handlers\UserMessagesAlteration.cs,Sending,The following switch statement is missing a default case: switch (context.Type) {                  case MessageTypes.Moderation:                      context.MailMessage.Subject = T("New account").Text;                      context.MailMessage.Body =                          T("The user <b>{0}</b> with email <b>{1}</b> has requested a new account. This user won't be able to log while his account has not been approved."'                              context.Properties["UserName"]' context.Properties["Email"]).Text;                      FormatEmailBody(context);                      context.MessagePrepared = true;                      break;                    case MessageTypes.Validation:                      var registeredWebsite = _siteService.GetSiteSettings().As<RegistrationSettingsPart>().ValidateEmailRegisteredWebsite;                      var contactEmail = _siteService.GetSiteSettings().As<RegistrationSettingsPart>().ValidateEmailContactEMail;                      context.MailMessage.Subject = T("Verification E-Mail").Text;                      context.MailMessage.Body =                          T("Thank you for registering with {0}.<br/><br/><br/><b>Final Step</b><br/>To verify that you own this e-mail address' please click the following link:<br/><a href=\"{1}\">{1}</a><br/><br/><b>Troubleshooting:</b><br/>If clicking on the link above does not work' try the following:<br/><br/>Select and copy the entire link.<br/>Open a browser window and paste the link in the address bar.<br/>Click <b>Go</b> or' on your keyboard' press <b>Enter</b> or <b>Return</b>."'                              registeredWebsite' context.Properties["ChallengeUrl"]).Text;                        if (!String.IsNullOrWhiteSpace(contactEmail)) {                          context.MailMessage.Body +=                              T("<br/><br/>If you continue to have access problems or want to report other issues' please <a href=\"mailto:{0}\">Contact Us</a>."'                                  contactEmail).Text;                      }                      FormatEmailBody(context);                      context.MessagePrepared = true;                      break;                    case MessageTypes.LostPassword:                      var recipient = GetRecipient(context);                      context.MailMessage.Subject = T("Lost password").Text;                      context.MailMessage.Body =                          T("Dear {0}' please <a href=\"{1}\">click here</a> to change your password."' recipient.UserName'                            context.Properties["LostPasswordUrl"]).Text;                      FormatEmailBody(context);                      context.MessagePrepared = true;                      break;              }
