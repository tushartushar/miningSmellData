Implementation smell,Namespace,Class,File,Method,Description
Long Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetDecoratorExpressionOrDefault,The method has 109 lines of code.
Long Method,DryIoc,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithService,The method has 116 lines of code.
Long Method,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetClosedFactoryMethodOrDefault,The method has 116 lines of code.
Long Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetDecoratorExpressionOrDefault,The method has 109 lines of code.
Long Method,DryIoc.Experimental,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithService,The method has 116 lines of code.
Long Method,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetClosedFactoryMethodOrDefault,The method has 116 lines of code.
Complex Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfInvalidRegistration,Cyclomatic complexity of the method is 11
Complex Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,Cyclomatic complexity of the method is 10
Complex Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,Cyclomatic complexity of the method is 25
Complex Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetDecoratorExpressionOrDefault,Cyclomatic complexity of the method is 21
Complex Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetOrAddStateItemExpression,Cyclomatic complexity of the method is 8
Complex Method,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetServiceFactoryOrDefault,Cyclomatic complexity of the method is 17
Complex Method,DryIoc,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetArrayExpression,Cyclomatic complexity of the method is 17
Complex Method,DryIoc,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetFuncOrActionExpressionOrDefault,Cyclomatic complexity of the method is 8
Complex Method,DryIoc,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetMetaExpressionOrDefault,Cyclomatic complexity of the method is 12
Complex Method,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,Cyclomatic complexity of the method is 10
Complex Method,DryIoc,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,Cyclomatic complexity of the method is 8
Complex Method,DryIoc,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithResolvedFactory,Cyclomatic complexity of the method is 10
Complex Method,DryIoc,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfReuseHasShorterLifespanThanParent,Cyclomatic complexity of the method is 9
Complex Method,DryIoc,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetFirstParentNonTransientReuseUntilFunc,Cyclomatic complexity of the method is 9
Complex Method,DryIoc,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Setup,Cyclomatic complexity of the method is 9
Complex Method,DryIoc,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetExpressionOrDefault,Cyclomatic complexity of the method is 15
Complex Method,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateExpressionOrDefault,Cyclomatic complexity of the method is 14
Complex Method,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetClosedFactoryMethodOrDefault,Cyclomatic complexity of the method is 13
Complex Method,DryIoc,ClosedGenericFactoryGenerator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetGeneratedFactory,Cyclomatic complexity of the method is 10
Complex Method,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetHashCode,Cyclomatic complexity of the method is 8
Complex Method,DryIoc,ReflectionTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,SetToNullGenericParametersReferencedInConstraints,Cyclomatic complexity of the method is 8
Complex Method,DryIoc,ClosureInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,ConstructClosure,Cyclomatic complexity of the method is 11
Complex Method,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitNestedLambda,Cyclomatic complexity of the method is 9
Complex Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfInvalidRegistration,Cyclomatic complexity of the method is 11
Complex Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,Cyclomatic complexity of the method is 10
Complex Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,Cyclomatic complexity of the method is 25
Complex Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetDecoratorExpressionOrDefault,Cyclomatic complexity of the method is 21
Complex Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetOrAddStateItemExpression,Cyclomatic complexity of the method is 8
Complex Method,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetServiceFactoryOrDefault,Cyclomatic complexity of the method is 17
Complex Method,DryIoc.Experimental,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetArrayExpression,Cyclomatic complexity of the method is 17
Complex Method,DryIoc.Experimental,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetFuncOrActionExpressionOrDefault,Cyclomatic complexity of the method is 8
Complex Method,DryIoc.Experimental,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetMetaExpressionOrDefault,Cyclomatic complexity of the method is 12
Complex Method,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,Cyclomatic complexity of the method is 10
Complex Method,DryIoc.Experimental,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,Cyclomatic complexity of the method is 8
Complex Method,DryIoc.Experimental,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithResolvedFactory,Cyclomatic complexity of the method is 10
Complex Method,DryIoc.Experimental,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfReuseHasShorterLifespanThanParent,Cyclomatic complexity of the method is 9
Complex Method,DryIoc.Experimental,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetFirstParentNonTransientReuseUntilFunc,Cyclomatic complexity of the method is 9
Complex Method,DryIoc.Experimental,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Setup,Cyclomatic complexity of the method is 9
Complex Method,DryIoc.Experimental,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetExpressionOrDefault,Cyclomatic complexity of the method is 15
Complex Method,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateExpressionOrDefault,Cyclomatic complexity of the method is 14
Complex Method,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetClosedFactoryMethodOrDefault,Cyclomatic complexity of the method is 13
Complex Method,DryIoc.Experimental,ClosedGenericFactoryGenerator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetGeneratedFactory,Cyclomatic complexity of the method is 10
Complex Method,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetHashCode,Cyclomatic complexity of the method is 8
Complex Method,DryIoc.Experimental,ReflectionTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,SetToNullGenericParametersReferencedInConstraints,Cyclomatic complexity of the method is 8
Complex Method,ImTools,ArrayTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,Match,Cyclomatic complexity of the method is 9
Complex Method,ImTools,ArrayTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,Match,Cyclomatic complexity of the method is 10
Long Parameter List,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 5 parameters. Parameters: factory' serviceType' serviceKey' ifAlreadyRegistered' isStaticallyChecked
Long Parameter List,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,The method has 6 parameters. Parameters: serviceType' serviceKey' ifUnresolvedReturnDefault' requiredServiceType' preResolveParent' scope
Long Parameter List,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The method has 7 parameters. Parameters: serviceType' serviceKey' requiredServiceType' compositeParentKey' compositeParentRequiredType' preResolveParent' scope
Long Parameter List,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetMatchingResolutionScope,The method has 5 parameters. Parameters: scope' assignableFromServiceType' serviceKey' outermost' throwIfNotFound
Long Parameter List,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Container,The method has 7 parameters. Parameters: rules' registry' singletonScope' scopeContext' openedScope' disposed' rootContainer
Long Parameter List,DryIoc,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Registry,The method has 7 parameters. Parameters: services' decorators' wrappers' defaultFactoryDelegateCache' keyedFactoryDelegateCache' factoryExpressionCache' isChangePermitted
Long Parameter List,DryIoc,ContainerTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMapping,The method has 5 parameters. Parameters: container' serviceType' registeredServiceType' serviceKey' registeredServiceKey
Long Parameter List,DryIoc,FastExpressionCompiler,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,TryCompile,The method has 5 parameters. Parameters: compiledDelegate' bodyExpr' paramExprs' paramTypes' returnType
Long Parameter List,DryIoc,FastExpressionCompiler,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,TryCompile,The method has 5 parameters. Parameters: compiledDelegate' bodyExpr' paramExprs' paramTypes' returnType
Long Parameter List,DryIoc,FastExpressionCompiler,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,TryCompile,The method has 6 parameters. Parameters: closureInfo' delegateType' paramTypes' returnType' bodyExpr' paramExprs
Long Parameter List,DryIoc,Made,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Made,The method has 5 parameters. Parameters: factoryMethod' parameters' propertiesAndFields' factoryMethodKnownResultType' hasCustomValue
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 5 parameters. Parameters: registrator' serviceType' factory' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 8 parameters. Parameters: registrator' serviceType' implementationType' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 7 parameters. Parameters: registrator' serviceAndMayBeImplementationType' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' made' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' made' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 8 parameters. Parameters: registrator' serviceTypes' implementationType' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 9 parameters. Parameters: registrator' implTypes' reuse' made' setup' ifAlreadyRegistered' serviceTypeCondition' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 8 parameters. Parameters: registrator' reuse' made' setup' ifAlreadyRegistered' serviceTypeCondition' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 8 parameters. Parameters: registrator' made' reuse' setup' ifAlreadyRegistered' serviceTypeCondition' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 9 parameters. Parameters: registrator' implTypeAssemblies' serviceTypeCondition' reuse' made' setup' ifAlreadyRegistered' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterDelegate,The method has 6 parameters. Parameters: registrator' factoryDelegate' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterDelegate,The method has 7 parameters. Parameters: registrator' serviceType' factoryDelegate' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,The method has 8 parameters. Parameters: container' serviceType' instance' reuse' ifAlreadyRegistered' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,The method has 7 parameters. Parameters: container' instance' reuse' ifAlreadyRegistered' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,UseInstance,The method has 5 parameters. Parameters: container' instance' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,UseInstance,The method has 6 parameters. Parameters: container' serviceType' instance' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,IsRegistered,The method has 5 parameters. Parameters: registrator' serviceType' serviceKey' factoryType' condition
Long Parameter List,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Unregister,The method has 5 parameters. Parameters: registrator' serviceType' serviceKey' factoryType' condition
Long Parameter List,DryIoc,Resolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,The method has 5 parameters. Parameters: resolver' serviceType' serviceKey' ifUnresolved' requiredServiceType
Long Parameter List,DryIoc,ServiceDetails,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Of,The method has 6 parameters. Parameters: requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc,ServiceDetails,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ServiceDetails,The method has 7 parameters. Parameters: requiredServiceType' ifUnresolved' serviceKey' metadataKey' metadata' value' hasCustomValue
Long Parameter List,DryIoc,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,The method has 5 parameters. Parameters: dependency' owner' shouldInheritServiceKey' ownerType' container
Long Parameter List,DryIoc,ServiceInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Of,The method has 6 parameters. Parameters: serviceType' requiredServiceType' ifUnresolved' serviceKey' metadataKey' metadata
Long Parameter List,DryIoc,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Create,The method has 7 parameters. Parameters: container' serviceType' serviceKey' ifUnresolved' requiredServiceType' scope' preResolveParent
Long Parameter List,DryIoc,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 7 parameters. Parameters: serviceType' serviceKey' ifUnresolved' requiredServiceType' scope' preResolveParent' flags
Long Parameter List,DryIoc,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Request,The method has 7 parameters. Parameters: requestContext' parent' serviceInfo' factory' reuse' funcArgs' flags
Long Parameter List,DryIoc,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Setup,The method has 9 parameters. Parameters: condition' openResolutionScope' asResolutionCall' asResolutionRoot' preventDisposal' weaklyReferenced' allowDisposableTransient' trackDisposableTransient' useParentReuse
Long Parameter List,DryIoc,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,With,The method has 10 parameters. Parameters: metadataOrFuncOfMetadata' condition' openResolutionScope' asResolutionCall' asResolutionRoot' preventDisposal' weaklyReferenced' allowDisposableTransient' trackDisposableTransient' useParentReuse
Long Parameter List,DryIoc,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperWith,The method has 7 parameters. Parameters: wrappedServiceTypeArgIndex' alwaysWrapsRequiredServiceType' unwrap' openResolutionScope' asResolutionCall' preventDisposal' condition
Long Parameter List,DryIoc,ServiceSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ServiceSetup,The method has 10 parameters. Parameters: condition' metadataOrFuncOfMetadata' openResolutionScope' asResolutionCall' asResolutionRoot' preventDisposal' weaklyReferenced' allowDisposableTransient' trackDisposableTransient' useParentReuse
Long Parameter List,DryIoc,WrapperSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperSetup,The method has 7 parameters. Parameters: wrappedServiceTypeArgIndex' alwaysWrapsRequiredServiceType' unwrap' condition' openResolutionScope' asResolutionCall' preventDisposal
Long Parameter List,DryIoc,Parameters,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Name,The method has 8 parameters. Parameters: source' name' requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc,Parameters,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Type,The method has 7 parameters. Parameters: source' requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc,PropertiesAndFields,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,All,The method has 5 parameters. Parameters: withNonPublic' withPrimitive' withFields' ifUnresolved' withInfo
Long Parameter List,DryIoc,PropertiesAndFields,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Name,The method has 8 parameters. Parameters: source' name' requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateServiceExpression,The method has 5 parameters. Parameters: ctorOrMethodOrMember' factoryExpr' paramExprs' request' allParamsAreConstants
Long Parameter List,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,MatchServiceWithImplementedTypeParams,The method has 5 parameters. Parameters: resultImplArgs' implParams' serviceParams' serviceArgs' resultCount
Long Parameter List,DryIoc,CurrentScopeReuse,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetOrAddItemOrDefault,The method has 6 parameters. Parameters: containerScopes' scopeName' throwIfNoScopeFound' trackTransientDisposable' factoryId' createValue
Long Parameter List,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 8 parameters. Parameters: serviceType' requiredServiceType' serviceKey' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 9 parameters. Parameters: serviceType' requiredServiceType' serviceKey' ifUnresolved' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 11 parameters. Parameters: serviceType' requiredServiceType' serviceKey' metadataKey' metadata' ifUnresolved' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 6 parameters. Parameters: serviceInfo' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RequestInfo,The method has 7 parameters. Parameters: serviceInfo' factoryID' factoryType' implementationType' reuse' flags' parentOrWrapper
Long Parameter List,DryIoc,IResolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,The method has 6 parameters. Parameters: serviceType' serviceKey' ifUnresolvedReturnDefault' requiredServiceType' preResolveParent' scope
Long Parameter List,DryIoc,IResolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The method has 7 parameters. Parameters: serviceType' serviceKey' requiredServiceType' compositeParentKey' compositeParentRequiredType' preResolveParent' scope
Long Parameter List,DryIoc,IRegistrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 5 parameters. Parameters: factory' serviceType' serviceKey' ifAlreadyRegistered' isStaticallyChecked
Long Parameter List,DryIoc,IScopeAccess,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetMatchingResolutionScope,The method has 5 parameters. Parameters: scope' assignableFromServiceType' serviceKey' outermost' throwIfNotFound
Long Parameter List,DryIoc,ContainerException,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Of,The method has 7 parameters. Parameters: errorCheck' errorCode' arg0' arg1' arg2' arg3' innerException
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,If,The method has 6 parameters. Parameters: throwCondition' error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIf,The method has 6 parameters. Parameters: arg0' throwCondition' error' arg1' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfNull,The method has 6 parameters. Parameters: arg' error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfNotOf,The method has 5 parameters. Parameters: arg0' arg1' error' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfNotImplementedBy,The method has 5 parameters. Parameters: arg0' arg1' error' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,IfThrows,The method has 7 parameters. Parameters: operation' throwCondition' error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,It,The method has 5 parameters. Parameters: error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,For,The method has 5 parameters. Parameters: error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc,PrintTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Print,The method has 5 parameters. Parameters: s' x' quote' itemSeparator' getTypeName
Long Parameter List,DryIoc,Closure,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,CreateClosure,The method has 5 parameters. Parameters: v1' v2' v3' v4' v5
Long Parameter List,DryIoc,Closure,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,CreateClosure,The method has 6 parameters. Parameters: v1' v2' v3' v4' v5' v6
Long Parameter List,DryIoc,Closure,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,CreateClosure,The method has 7 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7
Long Parameter List,DryIoc,Closure,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,CreateClosure,The method has 8 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8
Long Parameter List,DryIoc,Closure,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,CreateClosure,The method has 9 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9
Long Parameter List,DryIoc,Closure,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,CreateClosure,The method has 10 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9' v10
Long Parameter List,DryIoc,Closure<T1;T2;T3;T4;T5>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,Closure,The method has 5 parameters. Parameters: v1' v2' v3' v4' v5
Long Parameter List,DryIoc,Closure<T1;T2;T3;T4;T5;T6>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,Closure,The method has 6 parameters. Parameters: v1' v2' v3' v4' v5' v6
Long Parameter List,DryIoc,Closure<T1;T2;T3;T4;T5;T6;T7>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,Closure,The method has 7 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7
Long Parameter List,DryIoc,Closure<T1;T2;T3;T4;T5;T6;T7;T8>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,Closure,The method has 8 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8
Long Parameter List,DryIoc,Closure<T1;T2;T3;T4;T5;T6;T7;T8;T9>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,Closure,The method has 9 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9
Long Parameter List,DryIoc,Closure<T1;T2;T3;T4;T5;T6;T7;T8;T9;T10>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,Closure,The method has 10 parameters. Parameters: v1' v2' v3' v4' v5' v6' v7' v8' v9' v10
Long Parameter List,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 5 parameters. Parameters: factory' serviceType' serviceKey' ifAlreadyRegistered' isStaticallyChecked
Long Parameter List,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,The method has 6 parameters. Parameters: serviceType' serviceKey' ifUnresolvedReturnDefault' requiredServiceType' preResolveParent' scope
Long Parameter List,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The method has 7 parameters. Parameters: serviceType' serviceKey' requiredServiceType' compositeParentKey' compositeParentRequiredType' preResolveParent' scope
Long Parameter List,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetMatchingResolutionScope,The method has 5 parameters. Parameters: scope' assignableFromServiceType' serviceKey' outermost' throwIfNotFound
Long Parameter List,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Container,The method has 7 parameters. Parameters: rules' registry' singletonScope' scopeContext' openedScope' disposed' rootContainer
Long Parameter List,DryIoc.Experimental,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Registry,The method has 7 parameters. Parameters: services' decorators' wrappers' defaultFactoryDelegateCache' keyedFactoryDelegateCache' factoryExpressionCache' isChangePermitted
Long Parameter List,DryIoc.Experimental,ContainerTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMapping,The method has 5 parameters. Parameters: container' serviceType' registeredServiceType' serviceKey' registeredServiceKey
Long Parameter List,DryIoc.Experimental,FastExpressionCompiler,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,TryCompile,The method has 5 parameters. Parameters: compiledDelegate' bodyExpr' paramExprs' paramTypes' returnType
Long Parameter List,DryIoc.Experimental,Made,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Made,The method has 5 parameters. Parameters: factoryMethod' parameters' propertiesAndFields' factoryMethodKnownResultType' hasCustomValue
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 5 parameters. Parameters: registrator' serviceType' factory' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 8 parameters. Parameters: registrator' serviceType' implementationType' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 7 parameters. Parameters: registrator' serviceAndMayBeImplementationType' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' made' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 6 parameters. Parameters: registrator' made' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 8 parameters. Parameters: registrator' serviceTypes' implementationType' reuse' made' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 9 parameters. Parameters: registrator' implTypes' reuse' made' setup' ifAlreadyRegistered' serviceTypeCondition' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 8 parameters. Parameters: registrator' reuse' made' setup' ifAlreadyRegistered' serviceTypeCondition' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 8 parameters. Parameters: registrator' made' reuse' setup' ifAlreadyRegistered' serviceTypeCondition' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterMany,The method has 9 parameters. Parameters: registrator' implTypeAssemblies' serviceTypeCondition' reuse' made' setup' ifAlreadyRegistered' nonPublicServiceTypes' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterDelegate,The method has 6 parameters. Parameters: registrator' factoryDelegate' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterDelegate,The method has 7 parameters. Parameters: registrator' serviceType' factoryDelegate' reuse' setup' ifAlreadyRegistered' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,The method has 8 parameters. Parameters: container' serviceType' instance' reuse' ifAlreadyRegistered' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,The method has 7 parameters. Parameters: container' instance' reuse' ifAlreadyRegistered' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,UseInstance,The method has 5 parameters. Parameters: container' instance' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,UseInstance,The method has 6 parameters. Parameters: container' serviceType' instance' preventDisposal' weaklyReferenced' serviceKey
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,IsRegistered,The method has 5 parameters. Parameters: registrator' serviceType' serviceKey' factoryType' condition
Long Parameter List,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Unregister,The method has 5 parameters. Parameters: registrator' serviceType' serviceKey' factoryType' condition
Long Parameter List,DryIoc.Experimental,Resolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,The method has 5 parameters. Parameters: resolver' serviceType' serviceKey' ifUnresolved' requiredServiceType
Long Parameter List,DryIoc.Experimental,ServiceDetails,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Of,The method has 6 parameters. Parameters: requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc.Experimental,ServiceDetails,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ServiceDetails,The method has 7 parameters. Parameters: requiredServiceType' ifUnresolved' serviceKey' metadataKey' metadata' value' hasCustomValue
Long Parameter List,DryIoc.Experimental,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,The method has 5 parameters. Parameters: dependency' owner' shouldInheritServiceKey' ownerType' container
Long Parameter List,DryIoc.Experimental,ServiceInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Of,The method has 6 parameters. Parameters: serviceType' requiredServiceType' ifUnresolved' serviceKey' metadataKey' metadata
Long Parameter List,DryIoc.Experimental,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Create,The method has 7 parameters. Parameters: container' serviceType' serviceKey' ifUnresolved' requiredServiceType' scope' preResolveParent
Long Parameter List,DryIoc.Experimental,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 7 parameters. Parameters: serviceType' serviceKey' ifUnresolved' requiredServiceType' scope' preResolveParent' flags
Long Parameter List,DryIoc.Experimental,Request,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Request,The method has 7 parameters. Parameters: requestContext' parent' serviceInfo' factory' reuse' funcArgs' flags
Long Parameter List,DryIoc.Experimental,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Setup,The method has 9 parameters. Parameters: condition' openResolutionScope' asResolutionCall' asResolutionRoot' preventDisposal' weaklyReferenced' allowDisposableTransient' trackDisposableTransient' useParentReuse
Long Parameter List,DryIoc.Experimental,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,With,The method has 10 parameters. Parameters: metadataOrFuncOfMetadata' condition' openResolutionScope' asResolutionCall' asResolutionRoot' preventDisposal' weaklyReferenced' allowDisposableTransient' trackDisposableTransient' useParentReuse
Long Parameter List,DryIoc.Experimental,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperWith,The method has 7 parameters. Parameters: wrappedServiceTypeArgIndex' alwaysWrapsRequiredServiceType' unwrap' openResolutionScope' asResolutionCall' preventDisposal' condition
Long Parameter List,DryIoc.Experimental,ServiceSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ServiceSetup,The method has 10 parameters. Parameters: condition' metadataOrFuncOfMetadata' openResolutionScope' asResolutionCall' asResolutionRoot' preventDisposal' weaklyReferenced' allowDisposableTransient' trackDisposableTransient' useParentReuse
Long Parameter List,DryIoc.Experimental,WrapperSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperSetup,The method has 7 parameters. Parameters: wrappedServiceTypeArgIndex' alwaysWrapsRequiredServiceType' unwrap' condition' openResolutionScope' asResolutionCall' preventDisposal
Long Parameter List,DryIoc.Experimental,Parameters,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Name,The method has 8 parameters. Parameters: source' name' requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc.Experimental,Parameters,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Type,The method has 7 parameters. Parameters: source' requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc.Experimental,PropertiesAndFields,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,All,The method has 5 parameters. Parameters: withNonPublic' withPrimitive' withFields' ifUnresolved' withInfo
Long Parameter List,DryIoc.Experimental,PropertiesAndFields,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Name,The method has 8 parameters. Parameters: source' name' requiredServiceType' serviceKey' ifUnresolved' defaultValue' metadataKey' metadata
Long Parameter List,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateServiceExpression,The method has 5 parameters. Parameters: ctorOrMethodOrMember' factoryExpr' paramExprs' request' allParamsAreConstants
Long Parameter List,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,MatchServiceWithImplementedTypeParams,The method has 5 parameters. Parameters: resultImplArgs' implParams' serviceParams' serviceArgs' resultCount
Long Parameter List,DryIoc.Experimental,CurrentScopeReuse,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetOrAddItemOrDefault,The method has 6 parameters. Parameters: containerScopes' scopeName' throwIfNoScopeFound' trackTransientDisposable' factoryId' createValue
Long Parameter List,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 8 parameters. Parameters: serviceType' requiredServiceType' serviceKey' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 9 parameters. Parameters: serviceType' requiredServiceType' serviceKey' ifUnresolved' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 11 parameters. Parameters: serviceType' requiredServiceType' serviceKey' metadataKey' metadata' ifUnresolved' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Push,The method has 6 parameters. Parameters: serviceInfo' factoryID' factoryType' implementationType' reuse' flags
Long Parameter List,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RequestInfo,The method has 7 parameters. Parameters: serviceInfo' factoryID' factoryType' implementationType' reuse' flags' parentOrWrapper
Long Parameter List,DryIoc.Experimental,IResolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Resolve,The method has 6 parameters. Parameters: serviceType' serviceKey' ifUnresolvedReturnDefault' requiredServiceType' preResolveParent' scope
Long Parameter List,DryIoc.Experimental,IResolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The method has 7 parameters. Parameters: serviceType' serviceKey' requiredServiceType' compositeParentKey' compositeParentRequiredType' preResolveParent' scope
Long Parameter List,DryIoc.Experimental,IRegistrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The method has 5 parameters. Parameters: factory' serviceType' serviceKey' ifAlreadyRegistered' isStaticallyChecked
Long Parameter List,DryIoc.Experimental,IScopeAccess,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetMatchingResolutionScope,The method has 5 parameters. Parameters: scope' assignableFromServiceType' serviceKey' outermost' throwIfNotFound
Long Parameter List,DryIoc.Experimental,ContainerException,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Of,The method has 7 parameters. Parameters: errorCheck' errorCode' arg0' arg1' arg2' arg3' innerException
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,If,The method has 6 parameters. Parameters: throwCondition' error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIf,The method has 6 parameters. Parameters: arg0' throwCondition' error' arg1' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfNull,The method has 6 parameters. Parameters: arg' error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfNotOf,The method has 5 parameters. Parameters: arg0' arg1' error' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfNotImplementedBy,The method has 5 parameters. Parameters: arg0' arg1' error' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,IfThrows,The method has 7 parameters. Parameters: operation' throwCondition' error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,It,The method has 5 parameters. Parameters: error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc.Experimental,Throw,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,For,The method has 5 parameters. Parameters: error' arg0' arg1' arg2' arg3
Long Parameter List,DryIoc.Experimental,PrintTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Print,The method has 5 parameters. Parameters: s' x' quote' itemSeparator' getTypeName
Long Parameter List,ImTools,ArrayTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,AppendTo,The method has 5 parameters. Parameters: source' sourcePos' count' map' results
Long Parameter List,ImTools,ImTreeMap<K;V>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,ImTreeMap,The method has 6 parameters. Parameters: hash' key' value' conficts' left' right
Long Parameter List,ImTools,ImTreeMap<K;V>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,AddOrUpdate,The method has 5 parameters. Parameters: hash' key' value' update' updateOnly
Long Identifier,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The length of the parameter serviceKeyWithOpenGenericRequiredType is 37.
Long Identifier,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceType,The length of the parameter serviceKeyWithOpenGenericRequiredType is 37.
Long Identifier,DryIoc,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetLazyExpressionOrDefault,The length of the parameter nullWrapperForUnresolvedService is 31.
Long Identifier,DryIoc,FactoryMethod,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ConstructorWithResolvableArguments is 34.
Long Identifier,DryIoc,FactoryMethod,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ConstructorWithResolvableArgumentsIncludingNonPublic is 52.
Long Identifier,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The length of the parameter serviceAndMayBeImplementationType is 33.
Long Identifier,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,The length of the parameter canReuseAlreadyRegisteredFactory is 32.
Long Identifier,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ExcludedGeneralPurposeServiceTypes is 34.
Long Identifier,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter _weaklyReferencedInstanceSetup is 30.
Long Identifier,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter _preventDisposableInstanceSetup is 31.
Long Identifier,DryIoc,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter _weaklyReferencedAndPreventDisposableInstanceSetup is 50.
Long Identifier,DryIoc,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperWith,The length of the parameter alwaysWrapsRequiredServiceType is 30.
Long Identifier,DryIoc,WrapperSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperSetup,The length of the parameter alwaysWrapsRequiredServiceType is 30.
Long Identifier,DryIoc,WrapperSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter AlwaysWrapsRequiredServiceType is 30.
Long Identifier,DryIoc,InstanceFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ApplyReuse,The length of the parameter tracksTransientDisposableIgnored is 32.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToResolveFromRegisteredServices is 37.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisterImplementationNotAssignableToServiceType is 48.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteredFactoryMethodResultTypesIsNotAssignableToImplementationType is 69.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringOpenGenericRequiresFactoryProvider is 45.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringOpenGenericImplWithNonGenericService is 47.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringOpenGenericServiceWithMissingTypeArgs is 48.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringNotAGenericTypedefImplType is 37.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringNotAGenericTypedefServiceType is 40.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringNullImplementationTypeAndNoFactoryMethod is 51.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringAbstractImplementationTypeAndNoFactoryMethod is 55.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoDefinedMethodToSelectFromMultipleConstructors is 47.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedImplementedTypesWithServiceType is 40.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedFactoryMethodDeclaringTypeWithServiceTypeArgs is 54.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedFactoryMethodWithServiceTypeArgs is 41.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter OpenGenericFactoryMethodDeclaringTypeIsNotSupportedOnThisPlatform is 65.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ResolvingOpenGenericServiceTypeIsNotPossible is 44.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotFoundOpenGenericImplTypeArgInService is 39.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToGetConstructorFromSelector is 34.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToFindCtorWithAllResolvableArgs is 37.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToFindMatchingCtorForFuncWithArgs is 39.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegedFactoryDlgResultNotOfServiceType is 37.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotFoundSpecifiedWritablePropertyOrField is 40.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter PushingToRequestWithoutFactory is 30.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedGenericParamConstraints is 32.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GenericWrapperWithMultipleTypeArgsShouldSpecifyArgIndex is 55.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GenericWrapperTypeArgIndexOutOfBounds is 37.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter DependencyHasShorterReuseLifespan is 33.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ServiceIsNotAssignableFromFactoryMethod is 39.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter FactoryObjIsNullInFactoryMethod is 31.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter FactoryObjProvidedButMethodIsStatic is 35.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GotNullConstructorFromFactoryMethod is 35.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToRegisterDuplicateDefault is 32.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchingScopeWhenRegisteringInstance is 38.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ResolutionScopeIsNotSupportedForRegisterInstance is 48.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnexpectedFactoryMemberExpression is 33.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnexpectedExpressionInsteadOfArgMethod is 38.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnexpectedExpressionInsteadOfConstant is 37.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter InjectedCustomValueIsOfDifferentType is 36.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ArgOfValueIsProvidedButNoArgValues is 34.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ArgOfValueIndesIsOutOfProvidedArgValues is 39.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ResolutionNeedsRequiredServiceType is 34.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisterMappingNotFoundRegisteredService is 40.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringInstanceNotAssignableToServiceType is 45.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringWithNotSupportedDepedendencyCustomValueType is 54.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GotNullFactoryWhenResolvingService is 34.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteredDisposableTransientWontBeDisposedByContainer is 54.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotPossibleToResolveLazyInsideFuncWithArgs is 42.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotPossibleToResolveLazyEnumerableInsideFuncWithArgs is 52.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToUseInstanceForExistingNonInstanceFactory is 48.
Long Identifier,DryIoc,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToSelectFromManyRegistrationsWithMatchingMetadata is 55.
Long Identifier,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The length of the parameter serviceKeyWithOpenGenericRequiredType is 37.
Long Identifier,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceType,The length of the parameter serviceKeyWithOpenGenericRequiredType is 37.
Long Identifier,DryIoc.Experimental,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetLazyExpressionOrDefault,The length of the parameter nullWrapperForUnresolvedService is 31.
Long Identifier,DryIoc.Experimental,FactoryMethod,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ConstructorWithResolvableArguments is 34.
Long Identifier,DryIoc.Experimental,FactoryMethod,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ConstructorWithResolvableArgumentsIncludingNonPublic is 52.
Long Identifier,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The length of the parameter serviceAndMayBeImplementationType is 33.
Long Identifier,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RegisterInstance,The length of the parameter canReuseAlreadyRegisteredFactory is 32.
Long Identifier,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ExcludedGeneralPurposeServiceTypes is 34.
Long Identifier,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter _weaklyReferencedInstanceSetup is 30.
Long Identifier,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter _preventDisposableInstanceSetup is 31.
Long Identifier,DryIoc.Experimental,Registrator,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter _weaklyReferencedAndPreventDisposableInstanceSetup is 50.
Long Identifier,DryIoc.Experimental,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperWith,The length of the parameter alwaysWrapsRequiredServiceType is 30.
Long Identifier,DryIoc.Experimental,WrapperSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WrapperSetup,The length of the parameter alwaysWrapsRequiredServiceType is 30.
Long Identifier,DryIoc.Experimental,WrapperSetup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter AlwaysWrapsRequiredServiceType is 30.
Long Identifier,DryIoc.Experimental,InstanceFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ApplyReuse,The length of the parameter tracksTransientDisposableIgnored is 32.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToResolveFromRegisteredServices is 37.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisterImplementationNotAssignableToServiceType is 48.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteredFactoryMethodResultTypesIsNotAssignableToImplementationType is 69.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringOpenGenericRequiresFactoryProvider is 45.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringOpenGenericImplWithNonGenericService is 47.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringOpenGenericServiceWithMissingTypeArgs is 48.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringNotAGenericTypedefImplType is 37.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringNotAGenericTypedefServiceType is 40.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringNullImplementationTypeAndNoFactoryMethod is 51.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringAbstractImplementationTypeAndNoFactoryMethod is 55.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoDefinedMethodToSelectFromMultipleConstructors is 47.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedImplementedTypesWithServiceType is 40.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedFactoryMethodDeclaringTypeWithServiceTypeArgs is 54.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedFactoryMethodWithServiceTypeArgs is 41.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter OpenGenericFactoryMethodDeclaringTypeIsNotSupportedOnThisPlatform is 65.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ResolvingOpenGenericServiceTypeIsNotPossible is 44.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotFoundOpenGenericImplTypeArgInService is 39.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToGetConstructorFromSelector is 34.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToFindCtorWithAllResolvableArgs is 37.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToFindMatchingCtorForFuncWithArgs is 39.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegedFactoryDlgResultNotOfServiceType is 37.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotFoundSpecifiedWritablePropertyOrField is 40.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter PushingToRequestWithoutFactory is 30.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchedGenericParamConstraints is 32.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GenericWrapperWithMultipleTypeArgsShouldSpecifyArgIndex is 55.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GenericWrapperTypeArgIndexOutOfBounds is 37.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter DependencyHasShorterReuseLifespan is 33.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ServiceIsNotAssignableFromFactoryMethod is 39.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter FactoryObjIsNullInFactoryMethod is 31.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter FactoryObjProvidedButMethodIsStatic is 35.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GotNullConstructorFromFactoryMethod is 35.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToRegisterDuplicateDefault is 32.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NoMatchingScopeWhenRegisteringInstance is 38.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ResolutionScopeIsNotSupportedForRegisterInstance is 48.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnexpectedFactoryMemberExpression is 33.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnexpectedExpressionInsteadOfArgMethod is 38.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnexpectedExpressionInsteadOfConstant is 37.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter InjectedCustomValueIsOfDifferentType is 36.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ArgOfValueIsProvidedButNoArgValues is 34.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ArgOfValueIndesIsOutOfProvidedArgValues is 39.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter ResolutionNeedsRequiredServiceType is 34.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisterMappingNotFoundRegisteredService is 40.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringInstanceNotAssignableToServiceType is 45.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteringWithNotSupportedDepedendencyCustomValueType is 54.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter GotNullFactoryWhenResolvingService is 34.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter RegisteredDisposableTransientWontBeDisposedByContainer is 54.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotPossibleToResolveLazyInsideFuncWithArgs is 42.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter NotPossibleToResolveLazyEnumerableInsideFuncWithArgs is 52.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToUseInstanceForExistingNonInstanceFactory is 48.
Long Identifier,DryIoc.Experimental,Error,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,,The length of the parameter UnableToSelectFromManyRegistrationsWithMatchingMetadata is 55.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,With,The length of the statement  "            return new Container(rules' registryWithoutCache' _singletonScope' scopeContext' _openedScope' _disposed' RootContainer); " is 121.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithoutCache,The length of the statement  "            return new Container(Rules' registryWithoutCache' _singletonScope' _scopeContext' _openedScope' _disposed' RootContainer); " is 122.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithoutSingletonsAndCache,The length of the statement  "            return new Container(Rules' registryWithoutCache' newSingletons' _scopeContext' _openedScope' _disposed' RootContainer); " is 120.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,OpenScope,The length of the statement  "            return new Container(rules' _registry' _singletonScope' _scopeContext' nestedOpenedScope' _disposed' RootContainer ?? this); " is 124.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The length of the statement  "            if (!_registry.TrySwapIfStillCurrent(registry' registry.Register(factory' serviceType' ifAlreadyRegistered' serviceKey))) " is 121.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetOrAddStateItemExpression,The length of the statement  "                var elems = ((IEnumerable)item).Cast<object>().Select(it => GetOrAddStateItemExpression(it' null' throwIfStateRequired)); " is 121.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceType,The length of the statement  "            // Special case when open-generic required service type is encoded in ServiceKey as array of { ReqOpenGenServType' ServKey } " is 124.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetServiceFactoryOrDefault,The length of the statement  "            // Adds asResolutionCall for the factory to prevent caching of inlined expression in context with not matching condition " is 120.
Long Statement,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetServiceFactoryOrDefault,The length of the statement  "            // todo: May be a bug to match for more than 1 factory. Works with ResolveFactory' but may not work in other call sites. " is 120.
Long Statement,DryIoc,ContainerTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,New,The length of the statement  "            // No need to Dispose facade because it shares singleton/open scopes with source container' and disposing source container does the job. " is 136.
Long Statement,DryIoc,Resolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The length of the statement  "                ? resolver.ResolveMany(typeof(TService)' serviceKey' requiredServiceType' null' null' RequestInfo.Empty' null).Cast<TService>() " is 127.
Long Statement,DryIoc,Resolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,PopulateDependencyResolutionCallExpressions,The length of the statement  "            //   - Resolve call is not repeated for recursive dependency' e.g. new A(new Lazy<r => r.Resolve<B>()>) and new B(new A()) " is 122.
Long Statement,DryIoc,PropertiesAndFields,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Details,The length of the statement  "                return Throw.For<IEnumerable<PropertyOrFieldServiceInfo>>(Error.NotFoundSpecifiedWritablePropertyOrField' name' request); " is 121.
Long Statement,DryIoc,PrintTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Print,The length of the statement  "                    !x.GetType().IsAssignableTo(typeof(IEnumerable<>).MakeGenericType(x.GetType())) // exclude infinite recursion and StackOverflowEx " is 129.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,With,The length of the statement  "            return new Container(rules' registryWithoutCache' _singletonScope' scopeContext' _openedScope' _disposed' RootContainer); " is 121.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithoutCache,The length of the statement  "            return new Container(Rules' registryWithoutCache' _singletonScope' _scopeContext' _openedScope' _disposed' RootContainer); " is 122.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithoutSingletonsAndCache,The length of the statement  "            return new Container(Rules' registryWithoutCache' newSingletons' _scopeContext' _openedScope' _disposed' RootContainer); " is 120.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,OpenScope,The length of the statement  "            return new Container(rules' _registry' _singletonScope' _scopeContext' nestedOpenedScope' _disposed' RootContainer ?? this); " is 124.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Register,The length of the statement  "            if (!_registry.TrySwapIfStillCurrent(registry' registry.Register(factory' serviceType' ifAlreadyRegistered' serviceKey))) " is 121.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetOrAddStateItemExpression,The length of the statement  "                var elems = ((IEnumerable)item).Cast<object>().Select(it => GetOrAddStateItemExpression(it' null' throwIfStateRequired)); " is 121.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceType,The length of the statement  "            // Special case when open-generic required service type is encoded in ServiceKey as array of { ReqOpenGenServType' ServKey } " is 124.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetServiceFactoryOrDefault,The length of the statement  "            // Adds asResolutionCall for the factory to prevent caching of inlined expression in context with not matching condition " is 120.
Long Statement,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetServiceFactoryOrDefault,The length of the statement  "            // todo: May be a bug to match for more than 1 factory. Works with ResolveFactory' but may not work in other call sites. " is 120.
Long Statement,DryIoc.Experimental,ContainerTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,New,The length of the statement  "            // No need to Dispose facade because it shares singleton/open scopes with source container' and disposing source container does the job. " is 136.
Long Statement,DryIoc.Experimental,Resolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ResolveMany,The length of the statement  "                ? resolver.ResolveMany(typeof(TService)' serviceKey' requiredServiceType' null' null' RequestInfo.Empty' null).Cast<TService>() " is 127.
Long Statement,DryIoc.Experimental,Resolver,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,PopulateDependencyResolutionCallExpressions,The length of the statement  "            //   - Resolve call is not repeated for recursive dependency' e.g. new A(new Lazy<r => r.Resolve<B>()>) and new B(new A()) " is 122.
Long Statement,DryIoc.Experimental,PropertiesAndFields,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Details,The length of the statement  "                return Throw.For<IEnumerable<PropertyOrFieldServiceInfo>>(Error.NotFoundSpecifiedWritablePropertyOrField' name' request); " is 121.
Long Statement,DryIoc.Experimental,PrintTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Print,The length of the statement  "                    !x.GetType().IsAssignableTo(typeof(IEnumerable<>).MakeGenericType(x.GetType())) // exclude infinite recursion and StackOverflowEx " is 129.
Complex Conditional,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Dispose,The conditional expression  "_openedScope != null &&                  !(Rules.ImplicitOpenedRootScope && _openedScope.Parent == null && _scopeContext == null)"  is complex.
Complex Conditional,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfInvalidRegistration,The conditional expression  "(factory.Reuse ?? Rules.DefaultReuseInsteadOfTransient) == Reuse.Transient &&                      !factory.Setup.UseParentReuse &&                      !(factory.FactoryType == FactoryType.Decorator && ((Setup.DecoratorSetup)factory.Setup).UseDecorateeReuse) &&                      (factory.ImplementationType ?? serviceType).IsAssignableTo(typeof(IDisposable)) &&                      !setup.AllowDisposableTransient && Rules.ThrowOnRegisteringDisposableTransient"  is complex.
Complex Conditional,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,FindMatchingResolutionScope,The conditional expression  "name != null && (                      assignableFromServiceType == null ||                      name.Key.IsAssignableTo(assignableFromServiceType) ||                      assignableFromServiceType.IsOpenGeneric() &&                      name.Key.GetGenericDefinitionOrNull().IsAssignableTo(assignableFromServiceType)) &&                      (serviceKey == null || serviceKey.Equals(name.Value))"  is complex.
Complex Conditional,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceFactoriesOrNull,The conditional expression  "entry == null ||                      serviceKey != null && (                          entry is Factory && !serviceKey.Equals(DefaultKey.Value) ||                          entry is FactoriesEntry && ((FactoriesEntry)entry).Factories.GetValueOrDefault(serviceKey) == null)"  is complex.
Complex Conditional,DryIoc,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithService,The conditional expression  "implementationType == null ||                                      oldFactory != null && oldFactory.ImplementationType != implementationType ||                                      oldFactoriesEntry != null && oldFactoriesEntry.Factories.Enumerate()                                          .All(f => f.Value.ImplementationType != implementationType)"  is complex.
Complex Conditional,DryIoc,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,UnregisterServiceFactory,The conditional expression  "(serviceKey != null && !DefaultKey.Value.Equals(serviceKey)) ||                                  (condition != null && !condition((Factory)entry))"  is complex.
Complex Conditional,DryIoc,ContainerTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RequestInfoToExpression,The conditional expression  "ifUnresolved == IfUnresolved.Throw &&                  requiredServiceType == null && serviceKey == null && metadataKey == null && metadata == null &&                  factoryType == FactoryType.Service && flags == default(RequestFlags)"  is complex.
Complex Conditional,DryIoc,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetKeyValuePairExpressionOrDefault,The conditional expression  "serviceKey == null && serviceKeyType.IsValueType() ||                  serviceKey != null && !serviceKeyType.IsTypeOf(serviceKey)"  is complex.
Complex Conditional,DryIoc,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,The conditional expression  "ownerType == FactoryType.Wrapper ||                  // for decorated dependency' but not for other decorator dependencies                  ownerType == FactoryType.Decorator &&                  container != null &&                  container.GetWrappedType(serviceType' requiredServiceType).IsAssignableTo(owner.ServiceType)"  is complex.
Complex Conditional,DryIoc,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,The conditional expression  "serviceType == dependency.ServiceType && serviceKey == dependencyDetails.ServiceKey &&                  metadataKey == dependencyDetails.MetadataKey && metadata == dependencyDetails.Metadata &&                  ifUnresolved == dependencyDetails.IfUnresolved && requiredServiceType == dependencyDetails.RequiredServiceType"  is complex.
Complex Conditional,DryIoc,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,With,The conditional expression  "metadataOrFuncOfMetadata == null && condition == null &&                  openResolutionScope == false && asResolutionCall == false && asResolutionRoot == false &&                  preventDisposal == false && weaklyReferenced == false &&                  allowDisposableTransient == false && trackDisposableTransient == false &&                  useParentReuse == false"  is complex.
Complex Conditional,DryIoc,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetExpressionOrDefault,The conditional expression  "request.Rules.EagerCachingSingletonForFasterAccess &&                  request.Reuse is SingletonReuse &&                  !Setup.PreventDisposal && !Setup.WeaklyReferenced"  is complex.
Complex Conditional,DryIoc,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ApplyReuse,The conditional expression  "serviceExpr.NodeType == ExpressionType.Constant &&                  reuse is SingletonReuse && request.Rules.EagerCachingSingletonForFasterAccess &&                  !Setup.PreventDisposal && !Setup.WeaklyReferenced"  is complex.
Complex Conditional,DryIoc,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ApplyReuse,The conditional expression  "reuse is SingletonReuse &&                  request.Rules.EagerCachingSingletonForFasterAccess &&                  // except: For decorators and wrappers' when tracking tansient disposable and for lazy consumption in Func                  FactoryType == FactoryType.Service &&                  !tracksTransientDisposable &&                  !request.IsWrappedInFunc()"  is complex.
Complex Conditional,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,SetKnownImplementationType,The conditional expression  "openGenericImplType == typeof(object) || // for open-generic T implementation                  openGenericImplType != null && (         // for open-generic X<T> implementation                  openGenericImplType.IsGenericDefinition() ||                  openGenericImplType.IsGenericParameter)"  is complex.
Complex Conditional,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateServiceExpression,The conditional expression  "allParamsAreConstants && ctor.IsPublic &&                      rules.PropertiesAndFields == null && Made.PropertiesAndFields == null"  is complex.
Complex Conditional,DryIoc,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateServiceExpression,The conditional expression  "request.Reuse is SingletonReuse &&                          request.Rules.EagerCachingSingletonForFasterAccess &&                          FactoryType == FactoryType.Service &&                          !Setup.PreventDisposal && !Setup.WeaklyReferenced &&                          !request.TracksTransientDisposable &&                          !request.IsWrappedInFunc()"  is complex.
Complex Conditional,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,Dispose,The conditional expression  "_openedScope != null &&                  !(Rules.ImplicitOpenedRootScope && _openedScope.Parent == null && _scopeContext == null)"  is complex.
Complex Conditional,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ThrowIfInvalidRegistration,The conditional expression  "(factory.Reuse ?? Rules.DefaultReuseInsteadOfTransient) == Reuse.Transient &&                      !factory.Setup.UseParentReuse &&                      !(factory.FactoryType == FactoryType.Decorator && ((Setup.DecoratorSetup)factory.Setup).UseDecorateeReuse) &&                      (factory.ImplementationType ?? serviceType).IsAssignableTo(typeof(IDisposable)) &&                      !setup.AllowDisposableTransient && Rules.ThrowOnRegisteringDisposableTransient"  is complex.
Complex Conditional,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,FindMatchingResolutionScope,The conditional expression  "name != null && (                      assignableFromServiceType == null ||                      name.Key.IsAssignableTo(assignableFromServiceType) ||                      assignableFromServiceType.IsOpenGeneric() &&                      name.Key.GetGenericDefinitionOrNull().IsAssignableTo(assignableFromServiceType)) &&                      (serviceKey == null || serviceKey.Equals(name.Value))"  is complex.
Complex Conditional,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceFactoriesOrNull,The conditional expression  "entry == null ||                      serviceKey != null && (                          entry is Factory && !serviceKey.Equals(DefaultKey.Value) ||                          entry is FactoriesEntry && ((FactoriesEntry)entry).Factories.GetValueOrDefault(serviceKey) == null)"  is complex.
Complex Conditional,DryIoc.Experimental,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,WithService,The conditional expression  "implementationType == null ||                                      oldFactory != null && oldFactory.ImplementationType != implementationType ||                                      oldFactoriesEntry != null && oldFactoriesEntry.Factories.Enumerate()                                          .All(f => f.Value.ImplementationType != implementationType)"  is complex.
Complex Conditional,DryIoc.Experimental,Registry,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,UnregisterServiceFactory,The conditional expression  "(serviceKey != null && !DefaultKey.Value.Equals(serviceKey)) ||                                  (condition != null && !condition((Factory)entry))"  is complex.
Complex Conditional,DryIoc.Experimental,ContainerTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,RequestInfoToExpression,The conditional expression  "ifUnresolved == IfUnresolved.Throw &&                  requiredServiceType == null && serviceKey == null && metadataKey == null && metadata == null &&                  factoryType == FactoryType.Service && flags == default(RequestFlags)"  is complex.
Complex Conditional,DryIoc.Experimental,WrappersSupport,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetKeyValuePairExpressionOrDefault,The conditional expression  "serviceKey == null && serviceKeyType.IsValueType() ||                  serviceKey != null && !serviceKeyType.IsTypeOf(serviceKey)"  is complex.
Complex Conditional,DryIoc.Experimental,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,The conditional expression  "ownerType == FactoryType.Wrapper ||                  // for decorated dependency' but not for other decorator dependencies                  ownerType == FactoryType.Decorator &&                  container != null &&                  container.GetWrappedType(serviceType' requiredServiceType).IsAssignableTo(owner.ServiceType)"  is complex.
Complex Conditional,DryIoc.Experimental,ServiceInfoTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,InheritInfoFromDependencyOwner,The conditional expression  "serviceType == dependency.ServiceType && serviceKey == dependencyDetails.ServiceKey &&                  metadataKey == dependencyDetails.MetadataKey && metadata == dependencyDetails.Metadata &&                  ifUnresolved == dependencyDetails.IfUnresolved && requiredServiceType == dependencyDetails.RequiredServiceType"  is complex.
Complex Conditional,DryIoc.Experimental,Setup,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,With,The conditional expression  "metadataOrFuncOfMetadata == null && condition == null &&                  openResolutionScope == false && asResolutionCall == false && asResolutionRoot == false &&                  preventDisposal == false && weaklyReferenced == false &&                  allowDisposableTransient == false && trackDisposableTransient == false &&                  useParentReuse == false"  is complex.
Complex Conditional,DryIoc.Experimental,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetExpressionOrDefault,The conditional expression  "request.Rules.EagerCachingSingletonForFasterAccess &&                  request.Reuse is SingletonReuse &&                  !Setup.PreventDisposal && !Setup.WeaklyReferenced"  is complex.
Complex Conditional,DryIoc.Experimental,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ApplyReuse,The conditional expression  "serviceExpr.NodeType == ExpressionType.Constant &&                  reuse is SingletonReuse && request.Rules.EagerCachingSingletonForFasterAccess &&                  !Setup.PreventDisposal && !Setup.WeaklyReferenced"  is complex.
Complex Conditional,DryIoc.Experimental,Factory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,ApplyReuse,The conditional expression  "reuse is SingletonReuse &&                  request.Rules.EagerCachingSingletonForFasterAccess &&                  // except: For decorators and wrappers' when tracking tansient disposable and for lazy consumption in Func                  FactoryType == FactoryType.Service &&                  !tracksTransientDisposable &&                  !request.IsWrappedInFunc()"  is complex.
Complex Conditional,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,SetKnownImplementationType,The conditional expression  "openGenericImplType == typeof(object) || // for open-generic T implementation                  openGenericImplType != null && (         // for open-generic X<T> implementation                  openGenericImplType.IsGenericDefinition() ||                  openGenericImplType.IsGenericParameter)"  is complex.
Complex Conditional,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateServiceExpression,The conditional expression  "allParamsAreConstants && ctor.IsPublic &&                      rules.PropertiesAndFields == null && Made.PropertiesAndFields == null"  is complex.
Complex Conditional,DryIoc.Experimental,ReflectionFactory,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CreateServiceExpression,The conditional expression  "request.Reuse is SingletonReuse &&                          request.Rules.EagerCachingSingletonForFasterAccess &&                          FactoryType == FactoryType.Service &&                          !Setup.PreventDisposal && !Setup.WeaklyReferenced &&                          !request.TracksTransientDisposable &&                          !request.IsWrappedInFunc()"  is complex.
Complex Conditional,ImTools,ArrayTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,RemoveAt,The conditional expression  "source == null || source.Length == 0 || index < 0 || index >= source.Length"  is complex.
Empty Catch Block,DryIoc,ScopedDisposableHandling,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,DisposeItem,The method has an empty catch block.
Empty Catch Block,DryIoc.Experimental,ScopedDisposableHandling,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,DisposeItem,The method has an empty catch block.
Magic Number,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceType,The following statement contains a magic number: if (actualServiceType.IsClosedGeneric())              {                  var serviceKey = request.ServiceKey;                  var serviceKeyWithOpenGenericRequiredType = serviceKey as object[];                  if (serviceKeyWithOpenGenericRequiredType != null &&                      serviceKeyWithOpenGenericRequiredType.Length == 2)                  {                      var openGenericType = serviceKeyWithOpenGenericRequiredType[0] as Type;                      if (openGenericType != null &&                          openGenericType == actualServiceType.GetGenericDefinitionOrNull())                      {                          actualServiceType = openGenericType;                          serviceKey = serviceKeyWithOpenGenericRequiredType[1];                            // note: Mutates the request                          request.ChangeServiceKey(serviceKey);                      }                  }              }
Magic Number,DryIoc,Made,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetArgServiceDetails,The following statement contains a magic number: if (argExprs.Count == 2 &&                  argExprs[0].Type == typeof(string) &&                  argExprs[1].Type != typeof(IfUnresolved)) // matches the Of overload for metadata              {                  metadataKey = (string)GetArgExpressionValueOrThrow(argExprs[0]);                  metadata = GetArgExpressionValueOrThrow(argExprs[1]);              }              else              {                  for (var a = 0; a < argExprs.Count; a++)                  {                      var argValue = GetArgExpressionValueOrThrow(argExprs[a]);                      if (argValue != null)                      {                          if (argValue is IfUnresolved)                          {                              ifUnresolved = (IfUnresolved)argValue;                              if (hasPrevArg) // the only possible argument is default value.                              {                                  defaultValue = serviceKey;                                  serviceKey = null;                              }                          }                          else                          {                              serviceKey = argValue;                              hasPrevArg = true;                          }                      }                  }              }
Magic Number,DryIoc,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CombineHashCodes,The following statement contains a magic number: unchecked              {                  return (h1 << 5) + h1 ^ h2;              }
Magic Number,DryIoc,ReflectionTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetImplementedTypes,The following statement contains a magic number: if (baseType == null || baseType == typeof(object))                  results = new Type[sourcePlusInterfaceCount + includingObjectType];              else              {                  List<Type> baseBaseTypes = null;                  for (var bb = baseType.GetTypeInfo().BaseType; bb != null && bb != typeof(object); bb = bb.GetTypeInfo().BaseType)                      (baseBaseTypes ?? (baseBaseTypes = new List<Type>(2))).Add(bb);                    if (baseBaseTypes == null)                      results = new Type[sourcePlusInterfaceCount + includingObjectType + 1];                  else                  {                      results = new Type[sourcePlusInterfaceCount + baseBaseTypes.Count + includingObjectType + 1];                      baseBaseTypes.CopyTo(results' sourcePlusInterfaceCount + 1);                  }                    results[sourcePlusInterfaceCount] = baseType;              }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,LoadParamArg,The following statement contains a magic number: switch (paramIndex)                  {                      case 0:                          il.Emit(OpCodes.Ldarg_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldarg_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldarg_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldarg_3);                          break;                      default:                          if (paramIndex <= byte.MaxValue)                              il.Emit(OpCodes.Ldarg_S' (byte)paramIndex);                          else                              il.Emit(OpCodes.Ldarg' paramIndex);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,LoadParamArg,The following statement contains a magic number: switch (paramIndex)                  {                      case 0:                          il.Emit(OpCodes.Ldarg_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldarg_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldarg_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldarg_3);                          break;                      default:                          if (paramIndex <= byte.MaxValue)                              il.Emit(OpCodes.Ldarg_S' (byte)paramIndex);                          else                              il.Emit(OpCodes.Ldarg' paramIndex);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitLoadConstantInt,The following statement contains a magic number: switch (i)                  {                      case 0:                          il.Emit(OpCodes.Ldc_I4_0);                          break;                      case 1:                          il.Emit(OpCodes.Ldc_I4_1);                          break;                      case 2:                          il.Emit(OpCodes.Ldc_I4_2);                          break;                      case 3:                          il.Emit(OpCodes.Ldc_I4_3);                          break;                      case 4:                          il.Emit(OpCodes.Ldc_I4_4);                          break;                      case 5:                          il.Emit(OpCodes.Ldc_I4_5);                          break;                      case 6:                          il.Emit(OpCodes.Ldc_I4_6);                          break;                      case 7:                          il.Emit(OpCodes.Ldc_I4_7);                          break;                      case 8:                          il.Emit(OpCodes.Ldc_I4_8);                          break;                      default:                          il.Emit(OpCodes.Ldc_I4' i);                          break;                  }
Magic Number,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetRegisteredServiceType,The following statement contains a magic number: if (actualServiceType.IsClosedGeneric())              {                  var serviceKey = request.ServiceKey;                  var serviceKeyWithOpenGenericRequiredType = serviceKey as object[];                  if (serviceKeyWithOpenGenericRequiredType != null &&                      serviceKeyWithOpenGenericRequiredType.Length == 2)                  {                      var openGenericType = serviceKeyWithOpenGenericRequiredType[0] as Type;                      if (openGenericType != null &&                          openGenericType == actualServiceType.GetGenericDefinitionOrNull())                      {                          actualServiceType = openGenericType;                          serviceKey = serviceKeyWithOpenGenericRequiredType[1];                            // note: Mutates the request                          request.ChangeServiceKey(serviceKey);                      }                  }              }
Magic Number,DryIoc.Experimental,Made,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetArgServiceDetails,The following statement contains a magic number: if (argExprs.Count == 2 &&                  argExprs[0].Type == typeof(string) &&                  argExprs[1].Type != typeof(IfUnresolved)) // matches the Of overload for metadata              {                  metadataKey = (string)GetArgExpressionValueOrThrow(argExprs[0]);                  metadata = GetArgExpressionValueOrThrow(argExprs[1]);              }              else              {                  for (var a = 0; a < argExprs.Count; a++)                  {                      var argValue = GetArgExpressionValueOrThrow(argExprs[a]);                      if (argValue != null)                      {                          if (argValue is IfUnresolved)                          {                              ifUnresolved = (IfUnresolved)argValue;                              if (hasPrevArg) // the only possible argument is default value.                              {                                  defaultValue = serviceKey;                                  serviceKey = null;                              }                          }                          else                          {                              serviceKey = argValue;                              hasPrevArg = true;                          }                      }                  }              }
Magic Number,DryIoc.Experimental,RequestInfo,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CombineHashCodes,The following statement contains a magic number: unchecked              {                  return (h1 << 5) + h1 ^ h2;              }
Magic Number,DryIoc.Experimental,ReflectionTools,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,GetImplementedTypes,The following statement contains a magic number: if (baseType == null || baseType == typeof(object))                  results = new Type[sourcePlusInterfaceCount + includingObjectType];              else              {                  List<Type> baseBaseTypes = null;                  for (var bb = baseType.GetTypeInfo().BaseType; bb != null && bb != typeof(object); bb = bb.GetTypeInfo().BaseType)                      (baseBaseTypes ?? (baseBaseTypes = new List<Type>(2))).Add(bb);                    if (baseBaseTypes == null)                      results = new Type[sourcePlusInterfaceCount + includingObjectType + 1];                  else                  {                      results = new Type[sourcePlusInterfaceCount + baseBaseTypes.Count + includingObjectType + 1];                      baseBaseTypes.CopyTo(results' sourcePlusInterfaceCount + 1);                  }                    results[sourcePlusInterfaceCount] = baseType;              }
Magic Number,ImTools,KV<K;V>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,GetHashCode,The following statement contains a magic number: unchecked              {                  return ((object)Key == null ? 0 : Key.GetHashCode() * 397)                         ^ ((object)Value == null ? 0 : Value.GetHashCode());              }
Magic Number,ImTools,ImTreeMapIntToObj,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,KeepBalanced,The following statement contains a magic number: return delta >= 2 ? With(Left.Right.Height - Left.Left.Height == 1 ? Left.RotateLeft() : Left' Right).RotateRight()                  : (delta <= -2 ? With(Left' Right.Left.Height - Right.Right.Height == 1 ? Right.RotateRight() : Right).RotateLeft()                      : this);
Magic Number,ImTools,ImTreeMapIntToObj,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,KeepBalanced,The following statement contains a magic number: return delta >= 2 ? With(Left.Right.Height - Left.Left.Height == 1 ? Left.RotateLeft() : Left' Right).RotateRight()                  : (delta <= -2 ? With(Left' Right.Left.Height - Right.Right.Height == 1 ? Right.RotateRight() : Right).RotateLeft()                      : this);
Magic Number,ImTools,ImTreeMap<K;V>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,KeepBalanced,The following statement contains a magic number: return delta >= 2 ? With(Left.Right.Height - Left.Left.Height == 1 ? Left.RotateLeft() : Left' Right).RotateRight()                  : (delta <= -2 ? With(Left' Right.Left.Height - Right.Right.Height == 1 ? Right.RotateRight() : Right).RotateLeft()                      : this);
Magic Number,ImTools,ImTreeMap<K;V>,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\ImTools.cs,KeepBalanced,The following statement contains a magic number: return delta >= 2 ? With(Left.Right.Height - Left.Left.Height == 1 ? Left.RotateLeft() : Left' Right).RotateRight()                  : (delta <= -2 ? With(Left' Right.Left.Height - Right.Right.Height == 1 ? Right.RotateRight() : Right).RotateLeft()                      : this);
Missing Default,DryIoc,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CombineRegisteredAndDynamicFactories,The following switch statement is missing a default case: switch (it.IfAlreadyRegistered)                      {                          case IfAlreadyRegistered.Keep:                          case IfAlreadyRegistered.Throw: // throw will behave the same as keep                              return isNotKeyed                                  ? !registeredFactories.Any(_ => _.Key is DefaultKey)                                  : !registeredFactories.Any(_ => _.Key.Equals(it.ServiceKey));                            case IfAlreadyRegistered.Replace:                              registeredFactories = isNotKeyed                                  ? registeredFactories.Where(_ => !(_.Key is DefaultKey))                                  : registeredFactories.Where(_ => !_.Key.Equals(it.ServiceKey));                              return true;                            case IfAlreadyRegistered.AppendNotKeyed:                              return isNotKeyed                                  ? true                                  : !registeredFactories.Any(_ => _.Key.Equals(it.ServiceKey));                      }
Missing Default,DryIoc,EmittingVisitor,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\FastExpressionCompiler.cs,EmitComparison,The following switch statement is missing a default case: switch (c.NodeType)                      {                          case ExpressionType.Equal:                              il.Emit(OpCodes.Ceq);                              break;                          case ExpressionType.LessThan:                              il.Emit(OpCodes.Clt);                              break;                          case ExpressionType.GreaterThan:                              il.Emit(OpCodes.Cgt);                              break;                          case ExpressionType.NotEqual:                              il.Emit(OpCodes.Ceq);                              il.Emit(OpCodes.Ldc_I4_0);                              il.Emit(OpCodes.Ceq);                              break;                          case ExpressionType.LessThanOrEqual:                              il.Emit(OpCodes.Cgt);                              il.Emit(OpCodes.Ldc_I4_0);                              il.Emit(OpCodes.Ceq);                              break;                          case ExpressionType.GreaterThanOrEqual:                              il.Emit(OpCodes.Clt);                              il.Emit(OpCodes.Ldc_I4_0);                              il.Emit(OpCodes.Ceq);                              break;                      }
Missing Default,DryIoc.Experimental,Container,C:\repos\seesharper_LightInject\src\LightInject.Benchmarks\DryIoc\Container.cs,CombineRegisteredAndDynamicFactories,The following switch statement is missing a default case: switch (it.IfAlreadyRegistered)                      {                          case IfAlreadyRegistered.Keep:                          case IfAlreadyRegistered.Throw: // throw will behave the same as keep                              return isNotKeyed                                  ? !registeredFactories.Any(_ => _.Key is DefaultKey)                                  : !registeredFactories.Any(_ => _.Key.Equals(it.ServiceKey));                            case IfAlreadyRegistered.Replace:                              registeredFactories = isNotKeyed                                  ? registeredFactories.Where(_ => !(_.Key is DefaultKey))                                  : registeredFactories.Where(_ => !_.Key.Equals(it.ServiceKey));                              return true;                            case IfAlreadyRegistered.AppendNotKeyed:                              return isNotKeyed                                  ? true                                  : !registeredFactories.Any(_ => _.Key.Equals(it.ServiceKey));                      }
