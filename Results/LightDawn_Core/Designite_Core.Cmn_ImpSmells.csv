Implementation smell,Namespace,Class,File,Method,Description
Long Method,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The method has 112 lines of code.
Complex Method,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,Cyclomatic complexity of the method is 18
Complex Method,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,DayOfWeek,Cyclomatic complexity of the method is 24
Complex Method,Core.Cmn.FarsiUtils,toFarsi,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\toFarsi.cs,Convert,Cyclomatic complexity of the method is 34
Complex Method,Core.Cmn.FarsiUtils,toFarsi,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\toFarsi.cs,Convert,Cyclomatic complexity of the method is 34
Complex Method,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,Cyclomatic complexity of the method is 33
Complex Method,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,Cyclomatic complexity of the method is 9
Complex Method,Core.Cmn,PeriodicTaskFactory,C:\repos\LightDawn_Core\Core.Cmn\PeriodicTaskFactory.cs,MainPeriodicTaskAction,Cyclomatic complexity of the method is 11
Complex Method,FarsiUtils.Utils,toEnglish,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\toEnglish.cs,Convert,Cyclomatic complexity of the method is 34
Complex Method,Core.Cmn.Resources,ARLocalizer,C:\repos\LightDawn_Core\Core.Cmn\Resources\ARLocalizer.cs,GetLocalizedString,Cyclomatic complexity of the method is 31
Complex Method,Core.Cmn.Resources,ENLocalizer,C:\repos\LightDawn_Core\Core.Cmn\Resources\ENLocalizer.cs,GetLocalizedString,Cyclomatic complexity of the method is 39
Complex Method,Core.Cmn.Resources,FALocalizer,C:\repos\LightDawn_Core\Core.Cmn\Resources\FALocalizer.cs,GetLocalizedString,Cyclomatic complexity of the method is 39
Long Parameter List,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The method has 8 parameters.
Long Parameter List,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,PersianDate,The method has 5 parameters.
Long Parameter List,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,PersianDate,The method has 6 parameters.
Long Parameter List,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,PersianDate,The method has 7 parameters.
Long Parameter List,Core.Cmn,PeriodicTaskFactory,C:\repos\LightDawn_Core\Core.Cmn\PeriodicTaskFactory.cs,PeriodicTaskFactory,The method has 8 parameters.
Long Statement,Core.Cmn.Extensions,EnumExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\EnumExtension.cs,GetDescriptionEnum,The length of the statement  "	DescriptionAttribute attribute = Attribute.GetCustomAttribute (field' typeof(DescriptionAttribute)) as DescriptionAttribute; " is 124.
Long Statement,Core.Cmn.Extensions,EnumExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\EnumExtension.cs,GetEnumKeyValuePairEquivalents,The length of the statement  "			var fieldDescriptionAttr = Attribute.GetCustomAttribute (fieldInfos [i]' typeof(DescriptionAttribute)) as DescriptionAttribute; " is 127.
Long Statement,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The length of the statement  "		var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2)); " is 145.
Long Statement,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The length of the statement  "		var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2)); " is 143.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonth)); " is 192.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTime)); " is 195.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddYears,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTime)); " is 195.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonthDay)); " is 195.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToFourDigitYear,The length of the statement  "			//throw new System.ArgumentOutOfRangeException("Year"' year' ResourceLibrary.GetString(CalendarKeys.InvalidYear' CalendarKeys.Root)); " is 133.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToFourDigitYear,The length of the statement  "			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidFourDigitYear)); " is 200.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckEraRange,The length of the statement  "			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidEra)); " is 190.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckYearRange,The length of the statement  "			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidYear)); " is 191.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckMonthRange,The length of the statement  "			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonth)); " is 192.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The length of the statement  "				throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear)); " is 195.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The length of the statement  "				throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay)); " is 190.
Long Statement,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckTicksRange,The length of the statement  "			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTime)); " is 195.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckYear,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidYear)); " is 174.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckMonth,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonth)); " is 175.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckDay,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay)); " is 173.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckHour,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidHour)); " is 174.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckMinute,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMinute)); " is 176.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckSecond,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidSecond)); " is 176.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckMillisecond,The length of the statement  "		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMillisecond)); " is 181.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The length of the statement  "			throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength)); " is 190.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The length of the statement  "			throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The length of the statement  "			throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The length of the statement  "			throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength)); " is 190.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength)); " is 190.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidPersianDate,The length of the statement  "	if (splitedStringDate.Length != 3 || !int.TryParse (splitedStringDate [0]' out year) || !int.TryParse (splitedStringDate [1]' out month) || !int.TryParse (splitedStringDate [2]' out day)) " is 187.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseShortDate,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength)); " is 190.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseShortDate,The length of the statement  "		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat)); " is 186.
Long Statement,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The length of the statement  "		return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second)); " is 169.
Long Statement,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The length of the statement  "	if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) { " is 120.
Long Statement,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The length of the statement  "	return (toDouble (iGMonth) + "/" + toDouble (iGDay) + "/" + iGYear + " " + toDouble (date.Hour) + ":" + toDouble (date.Minute) + ":" + toDouble (date.Second)); " is 159.
Complex Conditional,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidPersianDate,The conditional expression  "splitedStringDate.Length != 3 || !int.TryParse (splitedStringDate [0]' out year) || !int.TryParse (splitedStringDate [1]' out month) || !int.TryParse (splitedStringDate [2]' out day)"  is complex.
Complex Conditional,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The conditional expression  "(tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)"  is complex.
Empty Catch Block,Core.Cmn.Extensions,SerializationExtensions,C:\repos\LightDawn_Core\Core.Cmn\Extensions\SerializationExtensions.cs,StoreViewElementIntoXML,The method has an empty catch block.
Empty Catch Block,Core.Cmn,PeriodicTaskFactory,C:\repos\LightDawn_Core\Core.Cmn\PeriodicTaskFactory.cs,MainPeriodicTaskAction,The method has an empty catch block.
Magic Number,Core.Cmn.Extensions,SerializationExtensions,C:\repos\LightDawn_Core\Core.Cmn\Extensions\SerializationExtensions.cs,SerializeObjectIntoXML,The following statement contains a magic number: xml = xml.Substring (xml.IndexOf (Convert.ToChar (60)));  
Magic Number,Core.Cmn.Extensions,SerializationExtensions,C:\repos\LightDawn_Core\Core.Cmn\Extensions\SerializationExtensions.cs,SerializeObjectIntoXML,The following statement contains a magic number: xml = xml.Substring (0' (xml.LastIndexOf (Convert.ToChar (62)) + 1));  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.Extensions,StringExt,C:\repos\LightDawn_Core\Core.Cmn\Extensions\StringExt.cs,ToDateTime,The following statement contains a magic number: if (persianDateStr.Length == 6) {  	var strDate = string.Format ("13{0}/{1}/{2}"' persianDateStr.Substring (0' 2)' persianDateStr.Substring (2' 2)' persianDateStr.Substring (4' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  else {  	var strDate = string.Format ("{0}/{1}/{2}"' persianDateStr.Substring (0' 4)' persianDateStr.Substring (4' 2)' persianDateStr.Substring (6' 2));  	DateTime dateTime = PersianDateConverter.ToGregorianDateTime (strDate);  	return dateTime;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The following statement contains a magic number: if (Math.Abs (months) > 120000) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonth));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The following statement contains a magic number: month += (year - 1) * 12 + months;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The following statement contains a magic number: year = (month - 1) / 12 + 1;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The following statement contains a magic number: month -= (year - 1) * 12;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddMonths,The following statement contains a magic number: if (day > 29) {  	int maxday = GetDaysInMonth (false' year' month' 0);  	if (maxday < day)  		day = maxday;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddYears,The following statement contains a magic number: if (day == 30 && month == 12) {  	if (!IsLeapYear (false' year' 0))  		day = 29;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddYears,The following statement contains a magic number: if (day == 30 && month == 12) {  	if (!IsLeapYear (false' year' 0))  		day = 29;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddYears,The following statement contains a magic number: if (day == 30 && month == 12) {  	if (!IsLeapYear (false' year' 0))  		day = 29;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddYears,The following statement contains a magic number: if (!IsLeapYear (false' year' 0))  	day = 29;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,AddYears,The following statement contains a magic number: day = 29;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (days <= 31)  		return days;  	days -= 31;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (days <= 31)  		return days;  	days -= 31;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: for (int i = 0; i < 6; i++) {  	if (days <= 31)  		return days;  	days -= 31;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: if (days <= 31)  	return days;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: days -= 31;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	if (days <= 30)  		return days;  	days -= 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	if (days <= 30)  		return days;  	days -= 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	if (days <= 30)  		return days;  	days -= 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: if (days <= 30)  	return days;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDayOfMonth,The following statement contains a magic number: days -= 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: if (month < 7)  	return 31;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: if (month < 7)  	return 31;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: return 31;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: if (month < 12)  	return 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: if (month < 12)  	return 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: return 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: if (IsLeapYear (false' year' 0))  	return 30;  else  	return 29;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: if (IsLeapYear (false' year' 0))  	return 30;  else  	return 29;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: return 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInMonth,The following statement contains a magic number: return 29;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInYear,The following statement contains a magic number: if (IsLeapYear (validate' year' era))  	return 366;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInYear,The following statement contains a magic number: return 366;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetDaysInYear,The following statement contains a magic number: return 365;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 31)  	return 1;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 62)  	return 2;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 62)  	return 2;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 2;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 93)  	return 3;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 93)  	return 3;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 3;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 124)  	return 4;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 124)  	return 4;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 4;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 155)  	return 5;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 155)  	return 5;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 5;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 186)  	return 6;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 186)  	return 6;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 6;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 216)  	return 7;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 216)  	return 7;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 7;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 246)  	return 8;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 246)  	return 8;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 8;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 276)  	return 9;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 276)  	return 9;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 9;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 306)  	return 10;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 306)  	return 10;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 10;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 336)  	return 11;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: if (days <= 336)  	return 11;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 11;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonth,The following statement contains a magic number: return 12;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetMonthsInYear,The following statement contains a magic number: return 12;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,IsLeapDay,The following statement contains a magic number: if (day == 30 && month == 12 && IsLeapYear (false' year' 0))  	return true;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,IsLeapDay,The following statement contains a magic number: if (day == 30 && month == 12 && IsLeapYear (false' year' 0))  	return true;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,HasLeapFrac,The following statement contains a magic number: if (a - Math.Floor (a) < 0.31)  	return true;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: for (int i = 1; i < month; i++) {  	if (i < 7)  		days += 31;  	else if (i < 12)  		days += 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: for (int i = 1; i < month; i++) {  	if (i < 7)  		days += 31;  	else if (i < 12)  		days += 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: for (int i = 1; i < month; i++) {  	if (i < 7)  		days += 31;  	else if (i < 12)  		days += 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: for (int i = 1; i < month; i++) {  	if (i < 7)  		days += 31;  	else if (i < 12)  		days += 30;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: if (i < 7)  	days += 31;  else if (i < 12)  	days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: if (i < 7)  	days += 31;  else if (i < 12)  	days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: if (i < 7)  	days += 31;  else if (i < 12)  	days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: if (i < 7)  	days += 31;  else if (i < 12)  	days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: days += 31;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: if (i < 12)  	days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: if (i < 12)  	days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: days += 30;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToDateTime,The following statement contains a magic number: days += 365 * year + NumberOfLeapYearsUntil (false' year);  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToFourDigitYear,The following statement contains a magic number: if (year > 99)  	return year;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToFourDigitYear,The following statement contains a magic number: if (year > TwoDigitYearMax - a * 100)  	a--;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,ToFourDigitYear,The following statement contains a magic number: return a * 100 + year;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,GetCentury,The following statement contains a magic number: return (GetYear (true' time) - 1) / 100 + 1;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,NumberOfLeapYearsUntil,The following statement contains a magic number: for (int i = 4; i < year; i++) {  	if (IsLeapYear (false' i' 0)) {  		count++;  		i += 3;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,NumberOfLeapYearsUntil,The following statement contains a magic number: for (int i = 4; i < year; i++) {  	if (IsLeapYear (false' i' 0)) {  		count++;  		i += 3;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,NumberOfLeapYearsUntil,The following statement contains a magic number: if (IsLeapYear (false' i' 0)) {  	count++;  	i += 3;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,NumberOfLeapYearsUntil,The following statement contains a magic number: i += 3;  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckYearRange,The following statement contains a magic number: if (validate) {  	if (year < 1 || 9378 < year) {  		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidYear));  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckYearRange,The following statement contains a magic number: if (year < 1 || 9378 < year) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidYear));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckMonthRange,The following statement contains a magic number: if (validate) {  	if (month < 1 || 12 < month) {  		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonth));  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckMonthRange,The following statement contains a magic number: if (month < 1 || 12 < month) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMonth));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The following statement contains a magic number: if (validate) {  	int maxday = GetDaysInMonth (true' year' month' 0);  	if (day < 1 || maxday < day) {  		if (day == 30 && month == 12) {  			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear));  		}  		else {  			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay));  		}  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The following statement contains a magic number: if (validate) {  	int maxday = GetDaysInMonth (true' year' month' 0);  	if (day < 1 || maxday < day) {  		if (day == 30 && month == 12) {  			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear));  		}  		else {  			throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay));  		}  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The following statement contains a magic number: if (day < 1 || maxday < day) {  	if (day == 30 && month == 12) {  		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear));  	}  	else {  		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay));  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The following statement contains a magic number: if (day < 1 || maxday < day) {  	if (day == 30 && month == 12) {  		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear));  	}  	else {  		throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay));  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The following statement contains a magic number: if (day == 30 && month == 12) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear));  }  else {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianCalendar,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianCalendar.cs,CheckDateRange,The following statement contains a magic number: if (day == 30 && month == 12) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidLeapYear));  }  else {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (System.Threading.Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDay));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,PersianDate,The following statement contains a magic number: MinValue = new PersianDate (1' 1' 1' 12' 0' 0' 0);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidYear,The following statement contains a magic number: return !(YearNo < 1 || YearNo > 9378);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidMonth,The following statement contains a magic number: return !(MonthNo > 12 || MonthNo < 1);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo < 6 && DayNo > 31)  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo < 6 && DayNo > 31)  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo > 6 && DayNo > 30)  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo > 6 && DayNo > 30)  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo == 12 && DayNo > 29) {  	if (!pc.IsLeapYear (YearNo) || DayNo > 30)  		return false;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo == 12 && DayNo > 29) {  	if (!pc.IsLeapYear (YearNo) || DayNo > 30)  		return false;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (MonthNo == 12 && DayNo > 29) {  	if (!pc.IsLeapYear (YearNo) || DayNo > 30)  		return false;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidDay,The following statement contains a magic number: if (!pc.IsLeapYear (YearNo) || DayNo > 30)  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckHour,The following statement contains a magic number: if (HourNo > 24 || HourNo < 0) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidHour));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckMinute,The following statement contains a magic number: if (MinuteNo > 60 || MinuteNo < 0) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMinute));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckSecond,The following statement contains a magic number: if (SecondNo > 60 || SecondNo < 0) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidSecond));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,CheckMillisecond,The following statement contains a magic number: if (MillisecondNo < 0 || MillisecondNo > 1000) {  	throw new InvalidPersianDateException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidMillisecond));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (includesTime) {  	if (value.Length > 19) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  	}  	string[] dt = value.Split (" ".ToCharArray ());  	if (dt.Length != 2) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	string _date = dt [0];  	string _time = dt [1];  	string[] dateParts = _date.Split ("/".ToCharArray ());  	string[] timeParts = _time.Split (":".ToCharArray ());  	if (dateParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	if (timeParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  	}  	int day = int.Parse (dateParts [2]);  	int month = int.Parse (dateParts [1]);  	int year = int.Parse (dateParts [0]);  	int hour = int.Parse (timeParts [0]);  	int minute = int.Parse (timeParts [1]);  	int second = int.Parse (timeParts [2]);  	return new PersianDate (year' month' day' hour' minute' second);  }  else {  	return Parse (value);  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (includesTime) {  	if (value.Length > 19) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  	}  	string[] dt = value.Split (" ".ToCharArray ());  	if (dt.Length != 2) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	string _date = dt [0];  	string _time = dt [1];  	string[] dateParts = _date.Split ("/".ToCharArray ());  	string[] timeParts = _time.Split (":".ToCharArray ());  	if (dateParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	if (timeParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  	}  	int day = int.Parse (dateParts [2]);  	int month = int.Parse (dateParts [1]);  	int year = int.Parse (dateParts [0]);  	int hour = int.Parse (timeParts [0]);  	int minute = int.Parse (timeParts [1]);  	int second = int.Parse (timeParts [2]);  	return new PersianDate (year' month' day' hour' minute' second);  }  else {  	return Parse (value);  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (includesTime) {  	if (value.Length > 19) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  	}  	string[] dt = value.Split (" ".ToCharArray ());  	if (dt.Length != 2) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	string _date = dt [0];  	string _time = dt [1];  	string[] dateParts = _date.Split ("/".ToCharArray ());  	string[] timeParts = _time.Split (":".ToCharArray ());  	if (dateParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	if (timeParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  	}  	int day = int.Parse (dateParts [2]);  	int month = int.Parse (dateParts [1]);  	int year = int.Parse (dateParts [0]);  	int hour = int.Parse (timeParts [0]);  	int minute = int.Parse (timeParts [1]);  	int second = int.Parse (timeParts [2]);  	return new PersianDate (year' month' day' hour' minute' second);  }  else {  	return Parse (value);  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (includesTime) {  	if (value.Length > 19) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  	}  	string[] dt = value.Split (" ".ToCharArray ());  	if (dt.Length != 2) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	string _date = dt [0];  	string _time = dt [1];  	string[] dateParts = _date.Split ("/".ToCharArray ());  	string[] timeParts = _time.Split (":".ToCharArray ());  	if (dateParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	if (timeParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  	}  	int day = int.Parse (dateParts [2]);  	int month = int.Parse (dateParts [1]);  	int year = int.Parse (dateParts [0]);  	int hour = int.Parse (timeParts [0]);  	int minute = int.Parse (timeParts [1]);  	int second = int.Parse (timeParts [2]);  	return new PersianDate (year' month' day' hour' minute' second);  }  else {  	return Parse (value);  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (includesTime) {  	if (value.Length > 19) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  	}  	string[] dt = value.Split (" ".ToCharArray ());  	if (dt.Length != 2) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	string _date = dt [0];  	string _time = dt [1];  	string[] dateParts = _date.Split ("/".ToCharArray ());  	string[] timeParts = _time.Split (":".ToCharArray ());  	if (dateParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	if (timeParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  	}  	int day = int.Parse (dateParts [2]);  	int month = int.Parse (dateParts [1]);  	int year = int.Parse (dateParts [0]);  	int hour = int.Parse (timeParts [0]);  	int minute = int.Parse (timeParts [1]);  	int second = int.Parse (timeParts [2]);  	return new PersianDate (year' month' day' hour' minute' second);  }  else {  	return Parse (value);  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (includesTime) {  	if (value.Length > 19) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  	}  	string[] dt = value.Split (" ".ToCharArray ());  	if (dt.Length != 2) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	string _date = dt [0];  	string _time = dt [1];  	string[] dateParts = _date.Split ("/".ToCharArray ());  	string[] timeParts = _time.Split (":".ToCharArray ());  	if (dateParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  	}  	if (timeParts.Length != 3) {  		throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  	}  	int day = int.Parse (dateParts [2]);  	int month = int.Parse (dateParts [1]);  	int year = int.Parse (dateParts [0]);  	int hour = int.Parse (timeParts [0]);  	int minute = int.Parse (timeParts [1]);  	int second = int.Parse (timeParts [2]);  	return new PersianDate (year' month' day' hour' minute' second);  }  else {  	return Parse (value);  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length > 19) {  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (dt.Length != 2) {  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (dateParts.Length != 3) {  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (timeParts.Length != 3) {  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The following statement contains a magic number: if (value.Length > 23)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The following statement contains a magic number: if (dt.Length != 3)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The following statement contains a magic number: if (dateParts.Length != 3)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseFullDateTime,The following statement contains a magic number: if (timeParts.Length != 3)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The following statement contains a magic number: if (value.Length > 20)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The following statement contains a magic number: if (dt.Length != 3)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The following statement contains a magic number: if (dateParts.Length != 3)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseDateShortTime,The following statement contains a magic number: if (timeParts.Length != 2)  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidTimeFormat));  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length == 10)  	return ParseShortDate (value);  else if (value.Length == 20)  	return ParseDateShortTime (value);  else if (value.Length == 23)  	return ParseFullDateTime (value);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length == 10)  	return ParseShortDate (value);  else if (value.Length == 20)  	return ParseDateShortTime (value);  else if (value.Length == 23)  	return ParseFullDateTime (value);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length == 10)  	return ParseShortDate (value);  else if (value.Length == 20)  	return ParseDateShortTime (value);  else if (value.Length == 23)  	return ParseFullDateTime (value);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length == 20)  	return ParseDateShortTime (value);  else if (value.Length == 23)  	return ParseFullDateTime (value);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length == 20)  	return ParseDateShortTime (value);  else if (value.Length == 23)  	return ParseFullDateTime (value);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,Parse,The following statement contains a magic number: if (value.Length == 23)  	return ParseFullDateTime (value);  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidPersianDate,The following statement contains a magic number: if (splitedStringDate.Length != 3 || !int.TryParse (splitedStringDate [0]' out year) || !int.TryParse (splitedStringDate [1]' out month) || !int.TryParse (splitedStringDate [2]' out day))  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,IsValidPersianDate,The following statement contains a magic number: if (splitedStringDate.Length != 3 || !int.TryParse (splitedStringDate [0]' out year) || !int.TryParse (splitedStringDate [1]' out month) || !int.TryParse (splitedStringDate [2]' out day))  	return false;  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseShortDate,The following statement contains a magic number: if (value.Length > 10) {  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateTimeLength));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ParseShortDate,The following statement contains a magic number: if (dateParts.Length != 3) {  	throw new InvalidPersianDateFormatException (FALocalizeManager.GetLocalizerByCulture (Thread.CurrentThread.CurrentUICulture).GetLocalizedString (StringID.PersianDate_InvalidDateFormat));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (format) {  case "D":  	//'yyyy mm dd dddd' e.g. 'دوشنبه 20 شهریور 1384'  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year  	});  case "DD"://'yyyy mm dd dddd' e.g. 'دوشنبه بیست شهریور هزار و سیصد و هشتاد و چهار'   {  	switch (Day) {  	case 1:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"اول"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	case 3:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			"سوم"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	default:  		return string.Format ("{0} {1} {2} {3}"' new object[4] {  			LocalizedWeekDayName'  			ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  			LocalizedMonthName'  			ToWords.ToString (Year)  		});  	}  }  case "f":  	//'hh:mm yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 21:30'  	return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (Hour)'  		Util.toDouble (Minute)  	});  case "F":  	//'tt hh:mm:ss yyyy mmmm dd dddd' e.g. 'دوشنبه 20 شهریور 1384 02:30:22 ب.ض'  	return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  		LocalizedWeekDayName'  		Util.toDouble (Day)'  		LocalizedMonthName'  		Year'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "g":  	//'yyyy/mm/dd hh:mm tt'  	return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		designator  	});  case "G":  	//'yyyy/mm/dd hh:mm:ss tt'  	return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  		Year'  		Util.toDouble (Month)'  		Util.toDouble (Day)'  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "M":  case "m":  	//'yyyy mmmm'  	return string.Format ("{0} {1}"' Year' LocalizedMonthName);  case "s":  	//'yyyy-mm-ddThh:mm:ss'  	return string.Format ("{0}-{1}-{2}T{3}:{4}:{5}"' Year' Util.toDouble (Month)' Util.toDouble (Day)' Util.toDouble (Hour)' Util.toDouble (Minute)' Util.toDouble (Second));  case "t":  	//'hh:mm tt'  	return string.Format ("{0}:{1} {2}"' Util.toDouble (smallhour)' Util.toDouble (Minute)' designator);  case "T":  	//'hh:mm:ss tt'  	return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  		Util.toDouble (smallhour)'  		Util.toDouble (Minute)'  		Util.toDouble (Second)'  		designator  	});  case "d":  default:  	//ShortDatePattern yyyy/mm/dd e.g. '1384/9/1'  	return string.Format ("{0}/{1}/{2}"' Year' Util.toDouble (Month)' Util.toDouble (Day));  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0} {1} {2} {3}"' new object[4] {  	LocalizedWeekDayName'  	Util.toDouble (Day)'  	LocalizedMonthName'  	Year  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (Day) {  case 1:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"اول"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  case 3:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"سوم"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  default:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (Day) {  case 1:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"اول"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  case 3:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"سوم"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  default:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (Day) {  case 1:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"اول"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  case 3:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"سوم"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  default:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: switch (Day) {  case 1:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"اول"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  case 3:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		"سوم"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  default:  	return string.Format ("{0} {1} {2} {3}"' new object[4] {  		LocalizedWeekDayName'  		ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  		LocalizedMonthName'  		ToWords.ToString (Year)  	});  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0} {1} {2} {3}"' new object[4] {  	LocalizedWeekDayName'  	"اول"'  	LocalizedMonthName'  	ToWords.ToString (Year)  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0} {1} {2} {3}"' new object[4] {  	LocalizedWeekDayName'  	"سوم"'  	LocalizedMonthName'  	ToWords.ToString (Year)  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0} {1} {2} {3}"' new object[4] {  	LocalizedWeekDayName'  	ToWords.ToString (int.Parse (Util.toDouble (Day))) + "م"'  	LocalizedMonthName'  	ToWords.ToString (Year)  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0} {1} {2} {3} {4}:{5}"' new object[6] {  	LocalizedWeekDayName'  	Util.toDouble (Day)'  	LocalizedMonthName'  	Year'  	Util.toDouble (Hour)'  	Util.toDouble (Minute)  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0} {1} {2} {3} {4}:{5}:{6} {7}"' new object[8] {  	LocalizedWeekDayName'  	Util.toDouble (Day)'  	LocalizedMonthName'  	Year'  	Util.toDouble (smallhour)'  	Util.toDouble (Minute)'  	Util.toDouble (Second)'  	designator  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0}/{1}/{2} {3}:{4} {5}"' new object[6] {  	Year'  	Util.toDouble (Month)'  	Util.toDouble (Day)'  	Util.toDouble (smallhour)'  	Util.toDouble (Minute)'  	designator  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0}/{1}/{2} {3}:{4}:{5} {6}"' new object[7] {  	Year'  	Util.toDouble (Month)'  	Util.toDouble (Day)'  	Util.toDouble (smallhour)'  	Util.toDouble (Minute)'  	Util.toDouble (Second)'  	designator  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDate,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDate.cs,ToString,The following statement contains a magic number: return string.Format ("{0}:{1}:{2} {3}"' new object[4] {  	Util.toDouble (smallhour)'  	Util.toDouble (Minute)'  	Util.toDouble (Second)'  	designator  });  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: Math.DivRem (iJYear' 33' out tmp);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeap,The following statement contains a magic number: if ((tmp == 1) || (tmp == 5) || (tmp == 9) || (tmp == 13) || (tmp == 17) || (tmp == 22) || (tmp == 26) || (tmp == 30)) {  	return 1;  }  else {  	return 0;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GLeap,The following statement contains a magic number: Math.DivRem (GregYear' 4' out Mod4);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GLeap,The following statement contains a magic number: Math.DivRem (GregYear' 100' out Mod100);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GLeap,The following statement contains a magic number: Math.DivRem (GregYear' 400' out Mod400);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GregDays,The following statement contains a magic number: Div4 = (iGYear - 1) / 4;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GregDays,The following statement contains a magic number: Div100 = (iGYear - 1) / 100;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GregDays,The following statement contains a magic number: Div400 = (iGYear - 1) / 400;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,GregDays,The following statement contains a magic number: return ((iGYear - 1) * 365 + iGDay + Div4 - Div100 + Div400);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: Div33 = iJYear / 33;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: iCurrentCycle = iJYear - (Div33 * 33);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: iLeap = (Div33 * 8);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: if (iCurrentCycle > 0) {  	for (iCounter = 1; iCounter <= 18; iCounter = iCounter + 4) {  		if (iCounter > iCurrentCycle)  			break;  		iLeap++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: if (iCurrentCycle > 0) {  	for (iCounter = 1; iCounter <= 18; iCounter = iCounter + 4) {  		if (iCounter > iCurrentCycle)  			break;  		iLeap++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: for (iCounter = 1; iCounter <= 18; iCounter = iCounter + 4) {  	if (iCounter > iCurrentCycle)  		break;  	iLeap++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: for (iCounter = 1; iCounter <= 18; iCounter = iCounter + 4) {  	if (iCounter > iCurrentCycle)  		break;  	iLeap++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: iCounter = iCounter + 4
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: if (iCurrentCycle > 21) {  	for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  		if (iCounter > iCurrentCycle)  			break;  		iLeap++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: if (iCurrentCycle > 21) {  	for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  		if (iCounter > iCurrentCycle)  			break;  		iLeap++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: if (iCurrentCycle > 21) {  	for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  		if (iCounter > iCurrentCycle)  			break;  		iLeap++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: if (iCurrentCycle > 21) {  	for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  		if (iCounter > iCurrentCycle)  			break;  		iLeap++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  	if (iCounter > iCurrentCycle)  		break;  	iLeap++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  	if (iCounter > iCurrentCycle)  		break;  	iLeap++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: for (iCounter = 22; iCounter <= 31; iCounter = iCounter + 4) {  	if (iCounter > iCurrentCycle)  		break;  	iLeap++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: iCounter = 22
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JLeapYears,The following statement contains a magic number: iCounter = iCounter + 4
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,JalaliDays,The following statement contains a magic number: iTotalDays = ((iJYear - 1) * 365 + iLeap + iJDay);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: iJYear = (int)(iTotalDays / (Solar - 0.25 / 33));  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: iJYear = (int)(iTotalDays / (Solar - 0.25 / 33));  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: iJDay = iTotalDays - (365 * iJYear + iLeap);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: if (iJDay == 0) {  	iJYear--;  	if (JLeap (iJYear) == 1) {  		iJDay = 366;  	}  	else {  		iJDay = 365;  	}  }  else {  	if ((iJDay == 366) && (JLeap (iJYear) != 1)) {  		iJDay = 1;  		iJYear++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: if (iJDay == 0) {  	iJYear--;  	if (JLeap (iJYear) == 1) {  		iJDay = 366;  	}  	else {  		iJDay = 365;  	}  }  else {  	if ((iJDay == 366) && (JLeap (iJYear) != 1)) {  		iJDay = 1;  		iJYear++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: if (iJDay == 0) {  	iJYear--;  	if (JLeap (iJYear) == 1) {  		iJDay = 366;  	}  	else {  		iJDay = 365;  	}  }  else {  	if ((iJDay == 366) && (JLeap (iJYear) != 1)) {  		iJDay = 1;  		iJYear++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: if (JLeap (iJYear) == 1) {  	iJDay = 366;  }  else {  	iJDay = 365;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: if (JLeap (iJYear) == 1) {  	iJDay = 366;  }  else {  	iJDay = 365;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: iJDay = 366;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: iJDay = 365;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: if ((iJDay == 366) && (JLeap (iJYear) != 1)) {  	iJDay = 1;  	iJYear++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToPersianDate,The following statement contains a magic number: for (iCounter = 0; iCounter <= 12; iCounter++) {  	if (iJDay <= JDayTable [iLeap' iCounter]) {  		break;  	}  	iJDay = iJDay - JDayTable [iLeap' iCounter];  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: iGYear = (int)(iTotalDays / (Solar - 0.25 / 33));  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: iGYear = (int)(iTotalDays / (Solar - 0.25 / 33));  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: Div4 = iGYear / 4;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: Div100 = iGYear / 100;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: Div400 = iGYear / 400;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: iGDays = iTotalDays - (365 * iGYear) - (Div4 - Div100 + Div400);  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: if (iGDays == 0) {  	iGYear--;  	if (GLeap (iGYear) == 1) {  		iGDays = 366;  	}  	else {  		iGDays = 365;  	}  }  else {  	if (iGDays == 366 && GLeap (iGYear) != 1) {  		iGDays = 1;  		iGYear++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: if (iGDays == 0) {  	iGYear--;  	if (GLeap (iGYear) == 1) {  		iGDays = 366;  	}  	else {  		iGDays = 365;  	}  }  else {  	if (iGDays == 366 && GLeap (iGYear) != 1) {  		iGDays = 1;  		iGYear++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: if (iGDays == 0) {  	iGYear--;  	if (GLeap (iGYear) == 1) {  		iGDays = 366;  	}  	else {  		iGDays = 365;  	}  }  else {  	if (iGDays == 366 && GLeap (iGYear) != 1) {  		iGDays = 1;  		iGYear++;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: if (GLeap (iGYear) == 1) {  	iGDays = 366;  }  else {  	iGDays = 365;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: if (GLeap (iGYear) == 1) {  	iGDays = 366;  }  else {  	iGDays = 365;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: iGDays = 366;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: iGDays = 365;  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: if (iGDays == 366 && GLeap (iGYear) != 1) {  	iGDays = 1;  	iGYear++;  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,ToGregorianDate,The following statement contains a magic number: for (i = 0; i <= 12; i++) {  	if (iGDays <= GDayTable [leap' i]) {  		break;  	}  	iGDays = iGDays - GDayTable [leap' i];  }  
Magic Number,Core.Cmn.FarsiUtils,PersianDateConverter,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\PersianDateConverter.cs,toDouble,The following statement contains a magic number: if (i > 9) {  	return i.ToString ();  }  else {  	return "0" + i.ToString ();  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [2] = "دو";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [3] = "سه";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [4] = "چهار";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [5] = "پنج";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [6] = "شش";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [7] = "هفت";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [8] = "هشت";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [9] = "نه";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [10] = "ده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [11] = "یازده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [12] = "دوازده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [13] = "سیزده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [14] = "چهارده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [15] = "پانزده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [16] = "شانزده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [17] = "هفده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [18] = "هجده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [19] = "نوزده";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [20] = "بيست";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [21] = "سی";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [22] = "چهل";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [23] = "پنجاه";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [24] = "شصت";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [25] = "هفتاد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [26] = "هشتاد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [27] = "نود";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [28] = "صد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [29] = "هزار";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [30] = "میلیون";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [31] = "میلیارد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [100] = "صد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [200] = "دویست";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [300] = "سیصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [400] = "چهارصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [500] = "پانصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [600] = "ششصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [700] = "هفتصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [800] = "هشتصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,BuildMapping,The following statement contains a magic number: cvtText [900] = "نهصد";  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 999)  	throw new ArgumentOutOfRangeException ("Number is larger than 999");  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 99) {  	t = x / 100;  	switch (t) {  	case 1:  		result = cvtText [100];  		break;  	case 2:  		result = cvtText [200];  		break;  	case 3:  		result = cvtText [300];  		break;  	case 4:  		result = cvtText [400];  		break;  	case 5:  		result = cvtText [500];  		break;  	case 6:  		result = cvtText [600];  		break;  	case 7:  		result = cvtText [700];  		break;  	case 8:  		result = cvtText [800];  		break;  	case 9:  		result = cvtText [900];  		break;  	}  	x = x - (t * 100);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: t = x / 100;  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [100];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [200];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [300];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [400];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [500];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [600];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [700];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [800];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = cvtText [900];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: x = x - (t * 100);  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 20) {  	t = x / 10;  	result = result + cvtText [t + 18];  	x = x - (t * 10);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 20) {  	t = x / 10;  	result = result + cvtText [t + 18];  	x = x - (t * 10);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 20) {  	t = x / 10;  	result = result + cvtText [t + 18];  	x = x - (t * 10);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: if (x > 20) {  	t = x / 10;  	result = result + cvtText [t + 18];  	x = x - (t * 10);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: t = x / 10;  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: result = result + cvtText [t + 18];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following statement contains a magic number: x = x - (t * 10);  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999999999)  	throw new ArgumentOutOfRangeException ("Number is too large to process");  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999999) {  	t = x / 1000000000;  	result += cvt100 (t) + " " + cvtText [31];  	x = x - (t * 1000000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999999) {  	t = x / 1000000000;  	result += cvt100 (t) + " " + cvtText [31];  	x = x - (t * 1000000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999999) {  	t = x / 1000000000;  	result += cvt100 (t) + " " + cvtText [31];  	x = x - (t * 1000000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999999) {  	t = x / 1000000000;  	result += cvt100 (t) + " " + cvtText [31];  	x = x - (t * 1000000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: t = x / 1000000000;  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: result += cvt100 (t) + " " + cvtText [31];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: x = x - (t * 1000000000);  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999) {  	t = x / 1000000;  	result += cvt100 (t) + " " + cvtText [30];  	x = x - (t * 1000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999) {  	t = x / 1000000;  	result += cvt100 (t) + " " + cvtText [30];  	x = x - (t * 1000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999) {  	t = x / 1000000;  	result += cvt100 (t) + " " + cvtText [30];  	x = x - (t * 1000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999999) {  	t = x / 1000000;  	result += cvt100 (t) + " " + cvtText [30];  	x = x - (t * 1000000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: t = x / 1000000;  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: result += cvt100 (t) + " " + cvtText [30];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: x = x - (t * 1000000);  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999) {  	t = x / 1000;  	result += cvt100 (t) + " " + cvtText [29];  	x = x - (t * 1000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999) {  	t = x / 1000;  	result += cvt100 (t) + " " + cvtText [29];  	x = x - (t * 1000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999) {  	t = x / 1000;  	result += cvt100 (t) + " " + cvtText [29];  	x = x - (t * 1000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: if (x > 999) {  	t = x / 1000;  	result += cvt100 (t) + " " + cvtText [29];  	x = x - (t * 1000);  	if (x <= 0) {  		return result;  	}  	else {  		result += String.Format (" {0} "' " و ");  		;  	}  }  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: t = x / 1000;  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: result += cvt100 (t) + " " + cvtText [29];  
Magic Number,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,ToString,The following statement contains a magic number: x = x - (t * 1000);  
Magic Number,Core.Cmn.FarsiUtils,Util,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\Utils.cs,toDouble,The following statement contains a magic number: if (i > 9) {  	return i.ToString ();  }  else {  	return "0" + i.ToString ();  }  
Missing Default,Core.Cmn.FarsiUtils,ToWords,C:\repos\LightDawn_Core\Core.Cmn\FarsiUtils\ToWords.cs,cvt100,The following switch statement is missing a default case: switch (t) {  case 1:  	result = cvtText [100];  	break;  case 2:  	result = cvtText [200];  	break;  case 3:  	result = cvtText [300];  	break;  case 4:  	result = cvtText [400];  	break;  case 5:  	result = cvtText [500];  	break;  case 6:  	result = cvtText [600];  	break;  case 7:  	result = cvtText [700];  	break;  case 8:  	result = cvtText [800];  	break;  case 9:  	result = cvtText [900];  	break;  }  
Missing Default,Core.Cmn.Resources,ARLocalizer,C:\repos\LightDawn_Core\Core.Cmn\Resources\ARLocalizer.cs,GetLocalizedString,The following switch statement is missing a default case: switch (id) {  case StringID.Empty:  	return string.Empty;  case StringID.Numbers_0:  	return "۰";  case StringID.Numbers_1:  	return "۱";  case StringID.Numbers_2:  	return "۲";  case StringID.Numbers_3:  	return "۳";  case StringID.Numbers_4:  	return "۴";  case StringID.Numbers_5:  	return "۵";  case StringID.Numbers_6:  	return "۶";  case StringID.Numbers_7:  	return "۷";  case StringID.Numbers_8:  	return "۸";  case StringID.Numbers_9:  	return "۹";  case StringID.FADateTextBox_Required:  	return "فيلد اجباری میباشد";  case StringID.FAMonthView_None:  	return "امح";  case StringID.FAMonthView_Today:  	return "اليوم";  case StringID.PersianDate_InvalidDateFormat:  	return "ساختار تاریخ مجاز نمیباشد.";  case StringID.PersianDate_InvalidDateTime:  	return "مقدار زمان/ساعت صحیح نمیباشد.";  case StringID.PersianDate_InvalidDateTimeLength:  	return "متن وارد شده برای زمان/ساعت صحیح نمیباشد.";  case StringID.PersianDate_InvalidDay:  	return "مقدار روز صحیح نمیباشد.";  case StringID.PersianDate_InvalidEra:  	return "محدوده وارد شده صحیح نمیباشد.";  case StringID.PersianDate_InvalidFourDigitYear:  	return "مقدار وارد شده را نمیتوان به سال تبدیل کرد.";  case StringID.PersianDate_InvalidHour:  	return "مقدار ساعت صحیح نمیباشد.";  case StringID.PersianDate_InvalidLeapYear:  	return "این سال ، سال کبیسه نیست. مقدار روز صحیح نمیباشد.";  case StringID.PersianDate_InvalidMinute:  	return "مقدار دقیقه صحیح نمیباشد.";  case StringID.PersianDate_InvalidMonth:  	return "مقدار ماه صحیح نمیباشد.";  case StringID.PersianDate_InvalidMonthDay:  	return "مقدار ماه/روز صحیح نمیباشد.";  case StringID.PersianDate_InvalidSecond:  	return "مقدار ثانیه صحیح نمیباشد.";  case StringID.PersianDate_InvalidTimeFormat:  	return "ساختار زمان صحیح نمیباشد.";  case StringID.PersianDate_InvalidYear:  	return "مقدار سال صحیح نمیباشد.";  case StringID.Validation_Cancel:  	return "مقدار انتخاب شده مجاز نمیباشد.";  case StringID.Validation_NotValid:  	return "داخل النص ليس صحيحا.";  case StringID.Validation_Required:  	return "انتخاب اجباری. لطفا مقداری برای این فیلد وارد کنید.";  }  
Missing Default,Core.Cmn.Resources,ENLocalizer,C:\repos\LightDawn_Core\Core.Cmn\Resources\ENLocalizer.cs,GetLocalizedString,The following switch statement is missing a default case: switch (id) {  case StringID.Empty:  	return string.Empty;  case StringID.Numbers_0:  	return "0";  case StringID.Numbers_1:  	return "1";  case StringID.Numbers_2:  	return "2";  case StringID.Numbers_3:  	return "3";  case StringID.Numbers_4:  	return "4";  case StringID.Numbers_5:  	return "5";  case StringID.Numbers_6:  	return "6";  case StringID.Numbers_7:  	return "7";  case StringID.Numbers_8:  	return "8";  case StringID.Numbers_9:  	return "9";  case StringID.FADateTextBox_Required:  	return "Mandatory field";  case StringID.FAMonthView_None:  	return "Empty";  case StringID.FAMonthView_Today:  	return "Today";  case StringID.PersianDate_InvalidDateFormat:  	return "Invalid date format";  case StringID.PersianDate_InvalidDateTime:  	return "Invalid date/time value";  case StringID.PersianDate_InvalidDateTimeLength:  	return "Invalid date time format";  case StringID.PersianDate_InvalidDay:  	return "Invalid Day value";  case StringID.PersianDate_InvalidEra:  	return "Invalid Era value";  case StringID.PersianDate_InvalidFourDigitYear:  	return "Invalid four digit Year value";  case StringID.PersianDate_InvalidHour:  	return "Invalid Hour value";  case StringID.PersianDate_InvalidLeapYear:  	return "Not a leap year. Correct the day value.";  case StringID.PersianDate_InvalidMinute:  	return "Invalid Minute value";  case StringID.PersianDate_InvalidMonth:  	return "Invalid Month value";  case StringID.PersianDate_InvalidMonthDay:  	return "Invalid Month/Day value";  case StringID.PersianDate_InvalidSecond:  	return "Invalid Second value";  case StringID.PersianDate_InvalidTimeFormat:  	return "Invalid Time format";  case StringID.PersianDate_InvalidYear:  	return "Invalid Year value.";  case StringID.Validation_Cancel:  	return "Cancel";  case StringID.Validation_NotValid:  	return "Entered value is not in valid range.";  case StringID.Validation_Required:  	return "This is a mandatory field. Please fill it in.";  case StringID.Validation_NullText:  	return "[Empty Value]";  case StringID.MessageBox_Ok:  	return "Ok";  case StringID.MessageBox_Abort:  	return "Abort";  case StringID.MessageBox_Cancel:  	return "Cancel";  case StringID.MessageBox_Ignore:  	return "Ignore";  case StringID.MessageBox_No:  	return "No";  case StringID.MessageBox_Retry:  	return "Retry";  case StringID.MessageBox_Yes:  	return "Yes";  }  
Missing Default,Core.Cmn.Resources,FALocalizer,C:\repos\LightDawn_Core\Core.Cmn\Resources\FALocalizer.cs,GetLocalizedString,The following switch statement is missing a default case: switch (id) {  case StringID.Empty:  	return string.Empty;  case StringID.Numbers_0:  	return "۰";  case StringID.Numbers_1:  	return "۱";  case StringID.Numbers_2:  	return "۲";  case StringID.Numbers_3:  	return "۳";  case StringID.Numbers_4:  	return "۴";  case StringID.Numbers_5:  	return "۵";  case StringID.Numbers_6:  	return "۶";  case StringID.Numbers_7:  	return "۷";  case StringID.Numbers_8:  	return "۸";  case StringID.Numbers_9:  	return "۹";  case StringID.FADateTextBox_Required:  	return "فيلد اجباری میباشد";  case StringID.FAMonthView_None:  	return "خالی";  case StringID.FAMonthView_Today:  	return "امروز";  case StringID.PersianDate_InvalidDateFormat:  	return "ساختار تاریخ مجاز نمیباشد.";  case StringID.PersianDate_InvalidDateTime:  	return "مقدار زمان/ساعت صحیح نمیباشد.";  case StringID.PersianDate_InvalidDateTimeLength:  	return "متن وارد شده برای زمان/ساعت صحیح نمیباشد.";  case StringID.PersianDate_InvalidDay:  	return "مقدار روز صحیح نمیباشد.";  case StringID.PersianDate_InvalidEra:  	return "محدوده وارد شده صحیح نمیباشد.";  case StringID.PersianDate_InvalidFourDigitYear:  	return "مقدار وارد شده را نمیتوان به سال تبدیل کرد.";  case StringID.PersianDate_InvalidHour:  	return "مقدار ساعت صحیح نمیباشد.";  case StringID.PersianDate_InvalidLeapYear:  	return "این سال ، سال کبیسه نیست. مقدار روز صحیح نمیباشد.";  case StringID.PersianDate_InvalidMinute:  	return "مقدار دقیقه صحیح نمیباشد.";  case StringID.PersianDate_InvalidMonth:  	return "مقدار ماه صحیح نمیباشد.";  case StringID.PersianDate_InvalidMonthDay:  	return "مقدار ماه/روز صحیح نمیباشد.";  case StringID.PersianDate_InvalidSecond:  	return "مقدار ثانیه صحیح نمیباشد.";  case StringID.PersianDate_InvalidTimeFormat:  	return "ساختار زمان صحیح نمیباشد.";  case StringID.PersianDate_InvalidYear:  	return "مقدار سال صحیح نمیباشد.";  case StringID.Validation_Cancel:  	return "مقدار انتخاب شده مجاز نمیباشد.";  case StringID.Validation_NotValid:  	return "مقدار انتخاب شده در محدوده مجاز نمیباشد.";  case StringID.Validation_Required:  	return "انتخاب اجباری. لطفا مقداری برای این فیلد وارد کنید.";  case StringID.Validation_NullText:  	return "[هیج مقداری انتخاب نشده]";  case StringID.MessageBox_Ok:  	return "قبول";  case StringID.MessageBox_Cancel:  	return "لغو";  case StringID.MessageBox_Abort:  	return "لغو";  case StringID.MessageBox_Ignore:  	return "ادامه عملیات";  case StringID.MessageBox_Retry:  	return "سعی مجدد";  case StringID.MessageBox_No:  	return "خیر";  case StringID.MessageBox_Yes:  	return "بله";  }  
