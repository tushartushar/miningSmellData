Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,Cyclomatic complexity of the method is 21
Complex Method,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WndProc,Cyclomatic complexity of the method is 11
Complex Method,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,fix_path,Cyclomatic complexity of the method is 9
Long Parameter List,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,SetWinEventHook,The method has 7 parameters.
Long Parameter List,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WinEventProc,The method has 7 parameters.
Long Parameter List,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WinEventProcTextChanges,The method has 7 parameters.
Long Parameter List,Tabber.Widgety,UacHelper,C:\repos\lubosch_Bakalarka\Serves skuska\Widgety\UacHelper.cs,GetTokenInformation,The method has 5 parameters.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,Form1_Load,The length of the statement  "		Error.Message ("Nepodarilo sa pripojiť k internetu. Prosím' pripojte sa k internetu alebo povoľte firewall pre aplikáciu Tabber. Ďakujem"); " is 139.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,Form1_Load,The length of the statement  "	//t2 = new Thread(() => SetWinEventHook(EVENT_SYSTEM_FOREGROUND' EVENT_SYSTEM_FOREGROUND' IntPtr.Zero' dele' 0' 0' WINEVENT_OUTOFCONTEXT)); " is 139.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,Form1_Load,The length of the statement  "	SetWinEventHook (EVENT_SYSTEM_FOREGROUND' EVENT_SYSTEM_FOREGROUND' IntPtr.Zero' winEventProc' 0' 0' WINEVENT_OUTOFCONTEXT); " is 123.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,Form1_Load,The length of the statement  "	//SetWinEventHook(EVENT_OBJECT_NAMECHANGE' EVENT_OBJECT_NAMECHANGE' IntPtr.Zero' winEventProcTextChange' 0' 0' WINEVENT_OUTOFCONTEXT); " is 134.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,button1_Click,The length of the statement  "	Byte[] byteArray = encoding.GetBytes ("{\"utf8\": \"\"' \"authenticity_token\":\"\"' \"user_session\": {\"name\":\"Lu_bosch\"' \"password\":\"aassdd\"}' \"commit\":\"Submit\"}"); " is 178.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,spracuj_audio,The length of the statement  "	Console.WriteLine ("Audio | " + f.Tag.FirstArtist + "|" + f.Tag.Title + " > " + f.Properties.Duration.TotalSeconds + " |"); " is 123.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,spracuj_audio,The length of the statement  "		byte[] response = client.UploadValues ("http://77.234.226.34:3000/song"' new System.Collections.Specialized.NameValueCollection () { " is 132.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,spracuj_video,The length of the statement  "		byte[] response = client.UploadValues ("http://77.234.226.34:3000/video"' new System.Collections.Specialized.NameValueCollection () { " is 133.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,PastedClipboardData,The length of the statement  "				client.UploadValuesAsync (new Uri ("http://77.234.226.34:3000/pasted")' new System.Collections.Specialized.NameValueCollection () { " is 131.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,CopiedClipboardData,The length of the statement  "				byte[] response = client.UploadValues ("http://77.234.226.34:3000/copied"' new System.Collections.Specialized.NameValueCollection () { " is 134.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WinEventProc,The length of the statement  "			//byte[] response = client.UploadValues("http://77.234.226.34:3000/user_sessions"' new System.Collections.Specialized.NameValueCollection() { { "uniq_pc"' UserSQL.get_my_uniq_id() } }); " is 185.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WinEventProc,The length of the statement  "			byte[] response = client.UploadValues ("http://77.234.226.34:3000/log_software"' new System.Collections.Specialized.NameValueCollection () { " is 140.
Long Statement,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WinEventProc,The length of the statement  "		System.Console.WriteLine ("Lognute> " + process.filePath + " | " + process.processName + " | " + process.windowName + "\r\n"); " is 126.
Long Statement,Tabber.Model,UserSQL,C:\repos\lubosch_Bakalarka\Serves skuska\Model\UserSQL.cs,get_by_uniq_id,The length of the statement  "			byte[] response = client.UploadValues ("http://77.234.226.34:3000/user/update_ip"' new System.Collections.Specialized.NameValueCollection () { " is 142.
Empty Catch Block,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,poSpusteni,The method has an empty catch block.
Empty Catch Block,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,PastedClipboardData,The method has an empty catch block.
Empty Catch Block,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,CopiedClipboardData,The method has an empty catch block.
Empty Catch Block,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,WinEventProc,The method has an empty catch block.
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,poSpusteni,The following statement contains a magic number: using (TaskService ts = new TaskService ()) {  	try {  		// Create a new task definition and assign properties  		TaskDefinition td = ts.NewTask ();  		td.RegistrationInfo.Description = "Spusti Tabber po spusteni";  		// Create a trigger that will fire the task at this time every other day  		LogonTrigger lt = new LogonTrigger ();  		lt.Delay = new System.TimeSpan (0' 5' 0);  		td.Triggers.Add (lt);  		td.Principal.RunLevel = TaskRunLevel.Highest;  		// Create an action that will launch Notepad whenever the trigger fires  		td.Actions.Add (new ExecAction (exePath' null' null));  		// Register the task in the root folder  		ts.RootFolder.RegisterTaskDefinition (@"Tabber"' td);  		// Remove the task we just created  		//ts.RootFolder.DeleteTask("Test");  	}  	catch (System.Exception ex) {  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,poSpusteni,The following statement contains a magic number: try {  	// Create a new task definition and assign properties  	TaskDefinition td = ts.NewTask ();  	td.RegistrationInfo.Description = "Spusti Tabber po spusteni";  	// Create a trigger that will fire the task at this time every other day  	LogonTrigger lt = new LogonTrigger ();  	lt.Delay = new System.TimeSpan (0' 5' 0);  	td.Triggers.Add (lt);  	td.Principal.RunLevel = TaskRunLevel.Highest;  	// Create an action that will launch Notepad whenever the trigger fires  	td.Actions.Add (new ExecAction (exePath' null' null));  	// Register the task in the root folder  	ts.RootFolder.RegisterTaskDefinition (@"Tabber"' td);  	// Remove the task we just created  	//ts.RootFolder.DeleteTask("Test");  }  catch (System.Exception ex) {  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,poSpusteni,The following statement contains a magic number: lt.Delay = new System.TimeSpan (0' 5' 0);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,SysTrayApp,The following statement contains a magic number: trayIcon.Icon = new Icon (this.Icon' 40' 40);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,SysTrayApp,The following statement contains a magic number: trayIcon.Icon = new Icon (this.Icon' 40' 40);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,quitLog,The following statement contains a magic number: trayMenu.MenuItems.RemoveAt (2);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,continueLog,The following statement contains a magic number: trayMenu.MenuItems.RemoveAt (2);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,startAgainLog,The following statement contains a magic number: trayMenu.MenuItems.RemoveAt (2);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,pauseLog,The following statement contains a magic number: pauseLog (3600000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,pauseLog,The following statement contains a magic number: trayMenu.MenuItems.RemoveAt (2);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,pause,The following statement contains a magic number: System.Console.WriteLine ("Pauzujem " + time / 1000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,pause,The following statement contains a magic number: Thread.Sleep (3600000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: while (true) {  	if (!should_log) {  		Thread.Sleep (50000);  		continue;  	}  	else {  		Thread.Sleep (30000);  	}  	try {  		List<String> watching_videos = new List<String> ();  		List<String> listening_music = new List<String> ();  		Process analyzator = new Process ();  		String path = AppDomain.CurrentDomain.BaseDirectory;  		analyzator.StartInfo = new System.Diagnostics.ProcessStartInfo (path);  		analyzator.StartInfo.WorkingDirectory = path;  		analyzator.StartInfo.FileName = "handle.exe";  		analyzator.StartInfo.Arguments = "-a";  		analyzator.StartInfo.CreateNoWindow = true;  		analyzator.StartInfo.UseShellExecute = false;  		analyzator.StartInfo.RedirectStandardOutput = true;  		myProcessArray.Clear ();  		int i = 0;  		Dictionary<string' Regex> programs = programs_regex_init ();  		string program;  		StringBuilder sb = new StringBuilder ();  		analyzator.Start ();  		foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  			//sb.AppendLine(line);  			String anal_result = anal_file (line.ToString ());  			if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  				string subor = line.Substring (line.IndexOf (":\\") - 1);  				subor = subor.Substring (0' subor.Length - 1);  				subor = fix_path (subor);  				if (subor == "") {  					continue;  				}  				ProcessData prc = getProcessOfFile (subor);  				if (prc == null) {  					continue;  				}  				switch (anal_result) {  				case "audio":  					try {  						if (!listening_music.Contains (subor))  							listening_music.Add (subor);  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						//pauseLog(300000);  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				case "video":  					try {  						if (!watching_videos.Contains (subor)) {  							//MessageBox.Show(watching_videos.Contains(subor).ToString());  							watching_videos.Add (subor);  						}  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				}  			}  			//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  			//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  		}  		List<string> music = listening_music.Except (music_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_music in music) {  			spracuj_audio (subor_music);  		}  		List<string> video = watching_videos.Except (videos_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_video in video) {  			spracuj_video (subor_video);  		}  		music_buffer = listening_music;  		videos_buffer = watching_videos;  		analyzator.WaitForExit ();  		analyzator.Close ();  		//Console.Out.Write("FINITO");  	}  	catch (Exception exception) {  		String path = AppDomain.CurrentDomain.BaseDirectory + "handle.exe";  		Error.Show (exception.ToString () + " \n " + path + File.Exists (path)' get_user_id ().ToString ());  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: while (true) {  	if (!should_log) {  		Thread.Sleep (50000);  		continue;  	}  	else {  		Thread.Sleep (30000);  	}  	try {  		List<String> watching_videos = new List<String> ();  		List<String> listening_music = new List<String> ();  		Process analyzator = new Process ();  		String path = AppDomain.CurrentDomain.BaseDirectory;  		analyzator.StartInfo = new System.Diagnostics.ProcessStartInfo (path);  		analyzator.StartInfo.WorkingDirectory = path;  		analyzator.StartInfo.FileName = "handle.exe";  		analyzator.StartInfo.Arguments = "-a";  		analyzator.StartInfo.CreateNoWindow = true;  		analyzator.StartInfo.UseShellExecute = false;  		analyzator.StartInfo.RedirectStandardOutput = true;  		myProcessArray.Clear ();  		int i = 0;  		Dictionary<string' Regex> programs = programs_regex_init ();  		string program;  		StringBuilder sb = new StringBuilder ();  		analyzator.Start ();  		foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  			//sb.AppendLine(line);  			String anal_result = anal_file (line.ToString ());  			if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  				string subor = line.Substring (line.IndexOf (":\\") - 1);  				subor = subor.Substring (0' subor.Length - 1);  				subor = fix_path (subor);  				if (subor == "") {  					continue;  				}  				ProcessData prc = getProcessOfFile (subor);  				if (prc == null) {  					continue;  				}  				switch (anal_result) {  				case "audio":  					try {  						if (!listening_music.Contains (subor))  							listening_music.Add (subor);  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						//pauseLog(300000);  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				case "video":  					try {  						if (!watching_videos.Contains (subor)) {  							//MessageBox.Show(watching_videos.Contains(subor).ToString());  							watching_videos.Add (subor);  						}  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				}  			}  			//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  			//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  		}  		List<string> music = listening_music.Except (music_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_music in music) {  			spracuj_audio (subor_music);  		}  		List<string> video = watching_videos.Except (videos_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_video in video) {  			spracuj_video (subor_video);  		}  		music_buffer = listening_music;  		videos_buffer = watching_videos;  		analyzator.WaitForExit ();  		analyzator.Close ();  		//Console.Out.Write("FINITO");  	}  	catch (Exception exception) {  		String path = AppDomain.CurrentDomain.BaseDirectory + "handle.exe";  		Error.Show (exception.ToString () + " \n " + path + File.Exists (path)' get_user_id ().ToString ());  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: while (true) {  	if (!should_log) {  		Thread.Sleep (50000);  		continue;  	}  	else {  		Thread.Sleep (30000);  	}  	try {  		List<String> watching_videos = new List<String> ();  		List<String> listening_music = new List<String> ();  		Process analyzator = new Process ();  		String path = AppDomain.CurrentDomain.BaseDirectory;  		analyzator.StartInfo = new System.Diagnostics.ProcessStartInfo (path);  		analyzator.StartInfo.WorkingDirectory = path;  		analyzator.StartInfo.FileName = "handle.exe";  		analyzator.StartInfo.Arguments = "-a";  		analyzator.StartInfo.CreateNoWindow = true;  		analyzator.StartInfo.UseShellExecute = false;  		analyzator.StartInfo.RedirectStandardOutput = true;  		myProcessArray.Clear ();  		int i = 0;  		Dictionary<string' Regex> programs = programs_regex_init ();  		string program;  		StringBuilder sb = new StringBuilder ();  		analyzator.Start ();  		foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  			//sb.AppendLine(line);  			String anal_result = anal_file (line.ToString ());  			if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  				string subor = line.Substring (line.IndexOf (":\\") - 1);  				subor = subor.Substring (0' subor.Length - 1);  				subor = fix_path (subor);  				if (subor == "") {  					continue;  				}  				ProcessData prc = getProcessOfFile (subor);  				if (prc == null) {  					continue;  				}  				switch (anal_result) {  				case "audio":  					try {  						if (!listening_music.Contains (subor))  							listening_music.Add (subor);  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						//pauseLog(300000);  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				case "video":  					try {  						if (!watching_videos.Contains (subor)) {  							//MessageBox.Show(watching_videos.Contains(subor).ToString());  							watching_videos.Add (subor);  						}  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				}  			}  			//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  			//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  		}  		List<string> music = listening_music.Except (music_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_music in music) {  			spracuj_audio (subor_music);  		}  		List<string> video = watching_videos.Except (videos_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_video in video) {  			spracuj_video (subor_video);  		}  		music_buffer = listening_music;  		videos_buffer = watching_videos;  		analyzator.WaitForExit ();  		analyzator.Close ();  		//Console.Out.Write("FINITO");  	}  	catch (Exception exception) {  		String path = AppDomain.CurrentDomain.BaseDirectory + "handle.exe";  		Error.Show (exception.ToString () + " \n " + path + File.Exists (path)' get_user_id ().ToString ());  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: while (true) {  	if (!should_log) {  		Thread.Sleep (50000);  		continue;  	}  	else {  		Thread.Sleep (30000);  	}  	try {  		List<String> watching_videos = new List<String> ();  		List<String> listening_music = new List<String> ();  		Process analyzator = new Process ();  		String path = AppDomain.CurrentDomain.BaseDirectory;  		analyzator.StartInfo = new System.Diagnostics.ProcessStartInfo (path);  		analyzator.StartInfo.WorkingDirectory = path;  		analyzator.StartInfo.FileName = "handle.exe";  		analyzator.StartInfo.Arguments = "-a";  		analyzator.StartInfo.CreateNoWindow = true;  		analyzator.StartInfo.UseShellExecute = false;  		analyzator.StartInfo.RedirectStandardOutput = true;  		myProcessArray.Clear ();  		int i = 0;  		Dictionary<string' Regex> programs = programs_regex_init ();  		string program;  		StringBuilder sb = new StringBuilder ();  		analyzator.Start ();  		foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  			//sb.AppendLine(line);  			String anal_result = anal_file (line.ToString ());  			if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  				string subor = line.Substring (line.IndexOf (":\\") - 1);  				subor = subor.Substring (0' subor.Length - 1);  				subor = fix_path (subor);  				if (subor == "") {  					continue;  				}  				ProcessData prc = getProcessOfFile (subor);  				if (prc == null) {  					continue;  				}  				switch (anal_result) {  				case "audio":  					try {  						if (!listening_music.Contains (subor))  							listening_music.Add (subor);  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						//pauseLog(300000);  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				case "video":  					try {  						if (!watching_videos.Contains (subor)) {  							//MessageBox.Show(watching_videos.Contains(subor).ToString());  							watching_videos.Add (subor);  						}  					}  					catch (System.Net.WebException ex) {  						pauseLog (300000);  					}  					catch (System.Exception ex) {  						Error.Show (ex' Form1.get_user_id ().ToString ());  					}  					break;  				}  			}  			//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  			//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  		}  		List<string> music = listening_music.Except (music_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_music in music) {  			spracuj_audio (subor_music);  		}  		List<string> video = watching_videos.Except (videos_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  		foreach (String subor_video in video) {  			spracuj_video (subor_video);  		}  		music_buffer = listening_music;  		videos_buffer = watching_videos;  		analyzator.WaitForExit ();  		analyzator.Close ();  		//Console.Out.Write("FINITO");  	}  	catch (Exception exception) {  		String path = AppDomain.CurrentDomain.BaseDirectory + "handle.exe";  		Error.Show (exception.ToString () + " \n " + path + File.Exists (path)' get_user_id ().ToString ());  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: if (!should_log) {  	Thread.Sleep (50000);  	continue;  }  else {  	Thread.Sleep (30000);  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: if (!should_log) {  	Thread.Sleep (50000);  	continue;  }  else {  	Thread.Sleep (30000);  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: Thread.Sleep (50000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: Thread.Sleep (30000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: try {  	List<String> watching_videos = new List<String> ();  	List<String> listening_music = new List<String> ();  	Process analyzator = new Process ();  	String path = AppDomain.CurrentDomain.BaseDirectory;  	analyzator.StartInfo = new System.Diagnostics.ProcessStartInfo (path);  	analyzator.StartInfo.WorkingDirectory = path;  	analyzator.StartInfo.FileName = "handle.exe";  	analyzator.StartInfo.Arguments = "-a";  	analyzator.StartInfo.CreateNoWindow = true;  	analyzator.StartInfo.UseShellExecute = false;  	analyzator.StartInfo.RedirectStandardOutput = true;  	myProcessArray.Clear ();  	int i = 0;  	Dictionary<string' Regex> programs = programs_regex_init ();  	string program;  	StringBuilder sb = new StringBuilder ();  	analyzator.Start ();  	foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  		//sb.AppendLine(line);  		String anal_result = anal_file (line.ToString ());  		if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  			string subor = line.Substring (line.IndexOf (":\\") - 1);  			subor = subor.Substring (0' subor.Length - 1);  			subor = fix_path (subor);  			if (subor == "") {  				continue;  			}  			ProcessData prc = getProcessOfFile (subor);  			if (prc == null) {  				continue;  			}  			switch (anal_result) {  			case "audio":  				try {  					if (!listening_music.Contains (subor))  						listening_music.Add (subor);  				}  				catch (System.Net.WebException ex) {  					pauseLog (300000);  				}  				catch (System.Exception ex) {  					//pauseLog(300000);  					Error.Show (ex' Form1.get_user_id ().ToString ());  				}  				break;  			case "video":  				try {  					if (!watching_videos.Contains (subor)) {  						//MessageBox.Show(watching_videos.Contains(subor).ToString());  						watching_videos.Add (subor);  					}  				}  				catch (System.Net.WebException ex) {  					pauseLog (300000);  				}  				catch (System.Exception ex) {  					Error.Show (ex' Form1.get_user_id ().ToString ());  				}  				break;  			}  		}  		//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  		//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  	}  	List<string> music = listening_music.Except (music_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  	foreach (String subor_music in music) {  		spracuj_audio (subor_music);  	}  	List<string> video = watching_videos.Except (videos_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  	foreach (String subor_video in video) {  		spracuj_video (subor_video);  	}  	music_buffer = listening_music;  	videos_buffer = watching_videos;  	analyzator.WaitForExit ();  	analyzator.Close ();  	//Console.Out.Write("FINITO");  }  catch (Exception exception) {  	String path = AppDomain.CurrentDomain.BaseDirectory + "handle.exe";  	Error.Show (exception.ToString () + " \n " + path + File.Exists (path)' get_user_id ().ToString ());  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: try {  	List<String> watching_videos = new List<String> ();  	List<String> listening_music = new List<String> ();  	Process analyzator = new Process ();  	String path = AppDomain.CurrentDomain.BaseDirectory;  	analyzator.StartInfo = new System.Diagnostics.ProcessStartInfo (path);  	analyzator.StartInfo.WorkingDirectory = path;  	analyzator.StartInfo.FileName = "handle.exe";  	analyzator.StartInfo.Arguments = "-a";  	analyzator.StartInfo.CreateNoWindow = true;  	analyzator.StartInfo.UseShellExecute = false;  	analyzator.StartInfo.RedirectStandardOutput = true;  	myProcessArray.Clear ();  	int i = 0;  	Dictionary<string' Regex> programs = programs_regex_init ();  	string program;  	StringBuilder sb = new StringBuilder ();  	analyzator.Start ();  	foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  		//sb.AppendLine(line);  		String anal_result = anal_file (line.ToString ());  		if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  			string subor = line.Substring (line.IndexOf (":\\") - 1);  			subor = subor.Substring (0' subor.Length - 1);  			subor = fix_path (subor);  			if (subor == "") {  				continue;  			}  			ProcessData prc = getProcessOfFile (subor);  			if (prc == null) {  				continue;  			}  			switch (anal_result) {  			case "audio":  				try {  					if (!listening_music.Contains (subor))  						listening_music.Add (subor);  				}  				catch (System.Net.WebException ex) {  					pauseLog (300000);  				}  				catch (System.Exception ex) {  					//pauseLog(300000);  					Error.Show (ex' Form1.get_user_id ().ToString ());  				}  				break;  			case "video":  				try {  					if (!watching_videos.Contains (subor)) {  						//MessageBox.Show(watching_videos.Contains(subor).ToString());  						watching_videos.Add (subor);  					}  				}  				catch (System.Net.WebException ex) {  					pauseLog (300000);  				}  				catch (System.Exception ex) {  					Error.Show (ex' Form1.get_user_id ().ToString ());  				}  				break;  			}  		}  		//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  		//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  	}  	List<string> music = listening_music.Except (music_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  	foreach (String subor_music in music) {  		spracuj_audio (subor_music);  	}  	List<string> video = watching_videos.Except (videos_buffer' StringComparer.OrdinalIgnoreCase).ToList<String> ();  	foreach (String subor_video in video) {  		spracuj_video (subor_video);  	}  	music_buffer = listening_music;  	videos_buffer = watching_videos;  	analyzator.WaitForExit ();  	analyzator.Close ();  	//Console.Out.Write("FINITO");  }  catch (Exception exception) {  	String path = AppDomain.CurrentDomain.BaseDirectory + "handle.exe";  	Error.Show (exception.ToString () + " \n " + path + File.Exists (path)' get_user_id ().ToString ());  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  	//sb.AppendLine(line);  	String anal_result = anal_file (line.ToString ());  	if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  		string subor = line.Substring (line.IndexOf (":\\") - 1);  		subor = subor.Substring (0' subor.Length - 1);  		subor = fix_path (subor);  		if (subor == "") {  			continue;  		}  		ProcessData prc = getProcessOfFile (subor);  		if (prc == null) {  			continue;  		}  		switch (anal_result) {  		case "audio":  			try {  				if (!listening_music.Contains (subor))  					listening_music.Add (subor);  			}  			catch (System.Net.WebException ex) {  				pauseLog (300000);  			}  			catch (System.Exception ex) {  				//pauseLog(300000);  				Error.Show (ex' Form1.get_user_id ().ToString ());  			}  			break;  		case "video":  			try {  				if (!watching_videos.Contains (subor)) {  					//MessageBox.Show(watching_videos.Contains(subor).ToString());  					watching_videos.Add (subor);  				}  			}  			catch (System.Net.WebException ex) {  				pauseLog (300000);  			}  			catch (System.Exception ex) {  				Error.Show (ex' Form1.get_user_id ().ToString ());  			}  			break;  		}  	}  	//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  	//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: foreach (string line in analyzator.StandardOutput.ReadToEnd ().Split ('\n')) {  	//sb.AppendLine(line);  	String anal_result = anal_file (line.ToString ());  	if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  		string subor = line.Substring (line.IndexOf (":\\") - 1);  		subor = subor.Substring (0' subor.Length - 1);  		subor = fix_path (subor);  		if (subor == "") {  			continue;  		}  		ProcessData prc = getProcessOfFile (subor);  		if (prc == null) {  			continue;  		}  		switch (anal_result) {  		case "audio":  			try {  				if (!listening_music.Contains (subor))  					listening_music.Add (subor);  			}  			catch (System.Net.WebException ex) {  				pauseLog (300000);  			}  			catch (System.Exception ex) {  				//pauseLog(300000);  				Error.Show (ex' Form1.get_user_id ().ToString ());  			}  			break;  		case "video":  			try {  				if (!watching_videos.Contains (subor)) {  					//MessageBox.Show(watching_videos.Contains(subor).ToString());  					watching_videos.Add (subor);  				}  			}  			catch (System.Net.WebException ex) {  				pauseLog (300000);  			}  			catch (System.Exception ex) {  				Error.Show (ex' Form1.get_user_id ().ToString ());  			}  			break;  		}  	}  	//Debug.WriteLine(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  	//Error.Show(line + "  " + line.IndexOf(".mp3") + "  " + line.Length);  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  	string subor = line.Substring (line.IndexOf (":\\") - 1);  	subor = subor.Substring (0' subor.Length - 1);  	subor = fix_path (subor);  	if (subor == "") {  		continue;  	}  	ProcessData prc = getProcessOfFile (subor);  	if (prc == null) {  		continue;  	}  	switch (anal_result) {  	case "audio":  		try {  			if (!listening_music.Contains (subor))  				listening_music.Add (subor);  		}  		catch (System.Net.WebException ex) {  			pauseLog (300000);  		}  		catch (System.Exception ex) {  			//pauseLog(300000);  			Error.Show (ex' Form1.get_user_id ().ToString ());  		}  		break;  	case "video":  		try {  			if (!watching_videos.Contains (subor)) {  				//MessageBox.Show(watching_videos.Contains(subor).ToString());  				watching_videos.Add (subor);  			}  		}  		catch (System.Net.WebException ex) {  			pauseLog (300000);  		}  		catch (System.Exception ex) {  			Error.Show (ex' Form1.get_user_id ().ToString ());  		}  		break;  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: if ((anal_result == "audio" || anal_result == "video") && line.IndexOf (":\\") > 1) {  	string subor = line.Substring (line.IndexOf (":\\") - 1);  	subor = subor.Substring (0' subor.Length - 1);  	subor = fix_path (subor);  	if (subor == "") {  		continue;  	}  	ProcessData prc = getProcessOfFile (subor);  	if (prc == null) {  		continue;  	}  	switch (anal_result) {  	case "audio":  		try {  			if (!listening_music.Contains (subor))  				listening_music.Add (subor);  		}  		catch (System.Net.WebException ex) {  			pauseLog (300000);  		}  		catch (System.Exception ex) {  			//pauseLog(300000);  			Error.Show (ex' Form1.get_user_id ().ToString ());  		}  		break;  	case "video":  		try {  			if (!watching_videos.Contains (subor)) {  				//MessageBox.Show(watching_videos.Contains(subor).ToString());  				watching_videos.Add (subor);  			}  		}  		catch (System.Net.WebException ex) {  			pauseLog (300000);  		}  		catch (System.Exception ex) {  			Error.Show (ex' Form1.get_user_id ().ToString ());  		}  		break;  	}  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: switch (anal_result) {  case "audio":  	try {  		if (!listening_music.Contains (subor))  			listening_music.Add (subor);  	}  	catch (System.Net.WebException ex) {  		pauseLog (300000);  	}  	catch (System.Exception ex) {  		//pauseLog(300000);  		Error.Show (ex' Form1.get_user_id ().ToString ());  	}  	break;  case "video":  	try {  		if (!watching_videos.Contains (subor)) {  			//MessageBox.Show(watching_videos.Contains(subor).ToString());  			watching_videos.Add (subor);  		}  	}  	catch (System.Net.WebException ex) {  		pauseLog (300000);  	}  	catch (System.Exception ex) {  		Error.Show (ex' Form1.get_user_id ().ToString ());  	}  	break;  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: switch (anal_result) {  case "audio":  	try {  		if (!listening_music.Contains (subor))  			listening_music.Add (subor);  	}  	catch (System.Net.WebException ex) {  		pauseLog (300000);  	}  	catch (System.Exception ex) {  		//pauseLog(300000);  		Error.Show (ex' Form1.get_user_id ().ToString ());  	}  	break;  case "video":  	try {  		if (!watching_videos.Contains (subor)) {  			//MessageBox.Show(watching_videos.Contains(subor).ToString());  			watching_videos.Add (subor);  		}  	}  	catch (System.Net.WebException ex) {  		pauseLog (300000);  	}  	catch (System.Exception ex) {  		Error.Show (ex' Form1.get_user_id ().ToString ());  	}  	break;  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: try {  	if (!listening_music.Contains (subor))  		listening_music.Add (subor);  }  catch (System.Net.WebException ex) {  	pauseLog (300000);  }  catch (System.Exception ex) {  	//pauseLog(300000);  	Error.Show (ex' Form1.get_user_id ().ToString ());  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: pauseLog (300000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: try {  	if (!watching_videos.Contains (subor)) {  		//MessageBox.Show(watching_videos.Contains(subor).ToString());  		watching_videos.Add (subor);  	}  }  catch (System.Net.WebException ex) {  	pauseLog (300000);  }  catch (System.Exception ex) {  	Error.Show (ex' Form1.get_user_id ().ToString ());  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following statement contains a magic number: pauseLog (300000);  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getMovieLength,The following statement contains a magic number: try {  	var mediaDet = (IMediaDet)new MediaDet ();  	DsError.ThrowExceptionForHR (mediaDet.put_Filename (file_name));  	// find the video stream in the file  	int index;  	var type = Guid.Empty;  	for (index = 0; index < 1000 && type != MediaType.Video; index++) {  		mediaDet.put_CurrentStream (index);  		mediaDet.get_StreamType (out type);  	}  	// retrieve some measurements from the video  	double frameRate;  	mediaDet.get_FrameRate (out frameRate);  	var mediaType = new AMMediaType ();  	mediaDet.get_StreamMediaType (mediaType);  	var videoInfo = (VideoInfoHeader)Marshal.PtrToStructure (mediaType.formatPtr' typeof(VideoInfoHeader));  	DsUtils.FreeAMMediaType (mediaType);  	var width = videoInfo.BmiHeader.Width;  	var height = videoInfo.BmiHeader.Height;  	double mediaLength;  	mediaDet.get_StreamLength (out mediaLength);  	var frameCount = (int)(frameRate * mediaLength);  	var duration = frameCount / frameRate;  	return int.Parse (Math.Round (duration).ToString ());  }  catch (System.Exception ex) {  	return 0;  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getMovieLength,The following statement contains a magic number: for (index = 0; index < 1000 && type != MediaType.Video; index++) {  	mediaDet.put_CurrentStream (index);  	mediaDet.get_StreamType (out type);  }  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,anal_file,The following statement contains a magic number: if (line.Length < 5)  	return "unknown";  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,anal_file,The following statement contains a magic number: if (line.Length < 5)  	return null;  
Magic Number,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,GetTopWindowProcessData,The following statement contains a magic number: try {  	IntPtr hWnd = GetForegroundWindow ();  	uint lpdwProcessId;  	GetWindowThreadProcessId (hWnd' out lpdwProcessId);  	IntPtr hProcess = OpenProcess (0x0410' false' lpdwProcessId);  	StringBuilder text = new StringBuilder (1000);  	//GetModuleBaseName(hProcess' IntPtr.Zero' text' text.Capacity);  	GetModuleFileNameEx (hProcess' IntPtr.Zero' text' text.Capacity);  	CloseHandle (hProcess);  	//Debug.WriteLine("end");  	return new ProcessData (text.ToString ()' (int)lpdwProcessId);  }  catch (System.Exception ex) {  	return new ProcessData ();  }  
Magic Number,Tabber,HotKeyEventArgs,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,HotKeyEventArgs,The following statement contains a magic number: Key = (Keys)((param & 0xffff0000) >> 16);  
Missing Default,Tabber,Form1,C:\repos\lubosch_Bakalarka\Serves skuska\Form1.cs,getFileProcesses,The following switch statement is missing a default case: switch (anal_result) {  case "audio":  	try {  		if (!listening_music.Contains (subor))  			listening_music.Add (subor);  	}  	catch (System.Net.WebException ex) {  		pauseLog (300000);  	}  	catch (System.Exception ex) {  		//pauseLog(300000);  		Error.Show (ex' Form1.get_user_id ().ToString ());  	}  	break;  case "video":  	try {  		if (!watching_videos.Contains (subor)) {  			//MessageBox.Show(watching_videos.Contains(subor).ToString());  			watching_videos.Add (subor);  		}  	}  	catch (System.Net.WebException ex) {  		pauseLog (300000);  	}  	catch (System.Exception ex) {  		Error.Show (ex' Form1.get_user_id ().ToString ());  	}  	break;  }  
