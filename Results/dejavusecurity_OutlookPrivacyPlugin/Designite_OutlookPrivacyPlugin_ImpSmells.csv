Implementation smell,Namespace,Class,File,Method,Description
Long Method,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The method has 105 lines of code.
Long Method,OutlookPrivacyPlugin,FormKeySelection,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormKeySelection.cs,InitializeComponent,The method has 120 lines of code.
Long Method,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The method has 307 lines of code.
Long Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The method has 104 lines of code.
Long Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The method has 205 lines of code.
Long Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,The method has 141 lines of code.
Complex Method,OutlookPrivacyPlugin,OppRibbon,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OppRibbon.cs,GetCustomImage,Cyclomatic complexity of the method is 17
Complex Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,Cyclomatic complexity of the method is 23
Complex Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,Cyclomatic complexity of the method is 33
Complex Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,Cyclomatic complexity of the method is 18
Complex Method,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,DecryptEmail,Cyclomatic complexity of the method is 16
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(FormAbout)); " is 130.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.AboutLabel.Font = new System.Drawing.Font ("Verdana"' 18F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 146.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.AboutLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152))))); " is 131.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.InitialByLabel.Font = new System.Drawing.Font ("Verdana"' 8F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 146.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.InitialByLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152))))); " is 135.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.ForkLabel.Font = new System.Drawing.Font ("Verdana"' 8F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 141.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.ForkLabel.LinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152))))); " is 130.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.ForkLabel.VisitedLinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152))))); " is 137.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.BuildLabel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 146.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.BuildLabel.Font = new System.Drawing.Font ("Verdana"' 8.25F' System.Drawing.FontStyle.Italic' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 147.
Long Statement,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The length of the statement  "	this.BuildLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152))))); " is 131.
Long Statement,OutlookPrivacyPlugin,FormKeySelection,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormKeySelection.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(FormKeySelection)); " is 137.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).Activate += new Outlook.ExplorerEvents_10_ActivateEventHandler (ExplorerWrapper_Activate); " is 134.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).Deactivate += new Outlook.ExplorerEvents_10_DeactivateEventHandler (ExplorerWrapper_Deactivate); " is 140.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).ViewSwitch += new Outlook.ExplorerEvents_10_ViewSwitchEventHandler (ExplorerWrapper_ViewSwitch); " is 140.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).Close += new Outlook.ExplorerEvents_10_CloseEventHandler (ExplorerWrapper_Close); " is 125.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).SelectionChange += new Outlook.ExplorerEvents_10_SelectionChangeEventHandler (ExplorerWrapper_SelectionChange); " is 155.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).Activate -= new Outlook.ExplorerEvents_10_ActivateEventHandler (ExplorerWrapper_Activate); " is 134.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).Deactivate -= new Outlook.ExplorerEvents_10_DeactivateEventHandler (ExplorerWrapper_Deactivate); " is 140.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).ViewSwitch -= new Outlook.ExplorerEvents_10_ViewSwitchEventHandler (ExplorerWrapper_ViewSwitch); " is 140.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).Close -= new Outlook.ExplorerEvents_10_CloseEventHandler (ExplorerWrapper_Close); " is 125.
Long Statement,OutlookPrivacyPlugin,ExplorerWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ExplorerEvents_10_Event)explorer).SelectionChange -= new Outlook.ExplorerEvents_10_SelectionChangeEventHandler (ExplorerWrapper_SelectionChange); " is 155.
Long Statement,OutlookPrivacyPlugin,InspectorWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.InspectorEvents_Event)inspector).Close += new Outlook.InspectorEvents_CloseEventHandler (InspectorWrapper_Close); " is 123.
Long Statement,OutlookPrivacyPlugin,InspectorWrapper,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.InspectorEvents_Event)inspector).Close -= new Outlook.InspectorEvents_CloseEventHandler (InspectorWrapper_Close); " is 123.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).Close += new Outlook.ItemEvents_10_CloseEventHandler (MailItemInspector_Close); " is 120.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).Write += new Outlook.ItemEvents_10_WriteEventHandler (MailItemInspector_Write); " is 120.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).Reply += new Outlook.ItemEvents_10_ReplyEventHandler (MailItemInspector_Reply); " is 120.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,ConnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).ReplyAll += new Outlook.ItemEvents_10_ReplyAllEventHandler (MailItemInspector_ReplyAll); " is 129.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).Close -= new Outlook.ItemEvents_10_CloseEventHandler (MailItemInspector_Close); " is 120.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).Write -= new Outlook.ItemEvents_10_WriteEventHandler (MailItemInspector_Write); " is 120.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).Reply -= new Outlook.ItemEvents_10_ReplyEventHandler (MailItemInspector_Reply); " is 120.
Long Statement,OutlookPrivacyPlugin,MailItemInspector,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookWrapper.cs,DisconnectEvents,The length of the statement  "	((Outlook.ItemEvents_10_Event)_mailItem).ReplyAll -= new Outlook.ItemEvents_10_ReplyAllEventHandler (MailItemInspector_ReplyAll); " is 129.
Long Statement,OutlookPrivacyPlugin,FormPassphrase,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormPassphrase.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(FormPassphrase)); " is 135.
Long Statement,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(FormSettings)); " is 133.
Long Statement,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The length of the statement  "	this.Errors.SetIconPadding (this.DefaultDomainTextBox' ((int)(resources.GetObject ("DefaultDomainTextBox.IconPadding")))); " is 122.
Long Statement,OutlookPrivacyPlugin,FormSelectLineWrap,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSelectLineWrap.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(FormSelectLineWrap)); " is 139.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,OutlookGnuPG_Startup,The length of the statement  "			var json = Encoding.UTF8.GetString (client.DownloadData (@"https://dejavusecurity.github.io/OutlookPrivacyPlugin/latest.json")); " is 128.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,OutlookGnuPG_Startup,The length of the statement  "			var key = Registry.CurrentUser.OpenSubKey (@"Software\OutlookPrivacyPlugin"' RegistryKeyPermissionCheck.ReadWriteSubTree); " is 122.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,OutlookGnuPG_Startup,The length of the statement  "				key = Registry.CurrentUser.CreateSubKey (@"Software\OutlookPrivacyPlugin"' RegistryKeyPermissionCheck.ReadWriteSubTree); " is 120.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,OutlookGnuPG_Startup,The length of the statement  "			MessageBox.Show (Localized.NewVersionAvailable' Localized.DialogTitle' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 121.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,ReadContentType,The length of the statement  "		contentType = mailItem.PropertyAccessor.GetProperty ("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/content-type/0x0000001F"); " is 160.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The length of the statement  "				//multipart/signed; micalg=pgp-sha1; protocol="application/pgp-signature"; boundary="Iq9CNK2GBN9g0PCsVJK4WdkEAR0887CbX"; charset="iso-8859-1" " is 141.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The length of the statement  "				body = encoding.GetString ((byte[])mailItem.PropertyAccessor.GetProperty ("http://schemas.microsoft.com/mapi/string/{4E3A7680-B77A-11D0-9DA5-00C04FD65685}/Internet Charset Body/0x00000102")); " is 191.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The length of the statement  "			clearsigUpper.Append (string.Format ("-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: {0}\r\nCharset: {1}\r\n\r\n"' sigHash' encoding.BodyName.ToUpper ())); " is 152.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The length of the statement  "			clearsigLower.Append (string.Format ("-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: {0}\r\nCharset: {1}\r\n\r\n"' sigHash' encoding.BodyName.ToUpper ())); " is 152.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The length of the statement  "			if (Crypto.VerifyClear (_encoding.GetBytes (clearsigUpper.ToString ())) || Crypto.VerifyClear (_encoding.GetBytes (clearsigLower.ToString ()))) { " is 145.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The length of the statement  "		DecryptAndVerifyHeaderMessage += string.Format (Localized.MsgInvalidSig' Context.SignedByUserId' Context.SignedByKeyId); " is 120.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetSMTPAddress,The length of the statement  "		if (mailItem.SendUsingAccount != null && mailItem.SendUsingAccount.AccountType != 0 && /* Verify not exchange account */mailItem.SendUsingAccount.CurrentUser != null && mailItem.SendUsingAccount.CurrentUser.Address != null) " is 223.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetSMTPAddress2,The length of the statement  "		if (sender.AddressEntryUserType == Outlook.OlAddressEntryUserType.olExchangeUserAddressEntry || sender.AddressEntryUserType == Outlook.OlAddressEntryUserType.olExchangeRemoteUserAddressEntry) { " is 193.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,The length of the statement  "				MessageBox.Show (Localized.ErrorInvalidRecipientKey' "Invalid Recipient KeyItem"' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 126.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,The length of the statement  "		MessageBox.Show (ex.Message + "\n" + ex.StackTrace' Localized.ErrorDialogTitle' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 124.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,VerifyEmail,The length of the statement  "		mail = encoding.GetString ((byte[])mailItem.PropertyAccessor.GetProperty ("http://schemas.microsoft.com/mapi/string/{4E3A7680-B77A-11D0-9DA5-00C04FD65685}/Internet Charset Body/0x00000102")); " is 191.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,VerifyEmail,The length of the statement  "		MessageBox.Show (Localized.ErrorMsgNotSigned' Localized.ErrorDialogTitle' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 124.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,VerifyEmail,The length of the statement  "			message = "** " + string.Format (Localized.MsgValidSig' crypto.Context.SignedByUserId' crypto.Context.SignedByKeyId) + "\n\n"; " is 126.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,VerifyEmail,The length of the statement  "			message = "** " + string.Format (Localized.MsgInvalidSig' crypto.Context.SignedByUserId' crypto.Context.SignedByKeyId) + "\n\n"; " is 128.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,DecryptEmail,The length of the statement  "		MessageBox.Show (Localized.ErrorMsgNotEncrypted' "Mail is not encrypted"' MessageBoxButtons.OK' MessageBoxIcon.Exclamation); " is 124.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,DecryptAndVerify,The length of the statement  "			DecryptAndVerifyHeaderMessage += string.Format (Localized.MsgInvalidSig' Context.SignedByUserId' Context.SignedByKeyId); " is 120.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The length of the statement  "			k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2"); " is 228.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Initialize,The length of the statement  "	this.Application = this.GetHostItem<Microsoft.Office.Interop.Outlook.Application> (typeof(Microsoft.Office.Interop.Outlook.Application)' "Application"); " is 152.
Long Statement,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,InitializeControls,The length of the statement  "	this.CustomTaskPanes = Globals.Factory.CreateCustomTaskPaneCollection (null' null' "CustomTaskPanes"' "CustomTaskPanes"' this); " is 127.
Complex Conditional,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The conditional expression  "match != null && (_autoDecrypt || _settings.AutoDecrypt) && match.Groups [1].Value == _pgpEncryptedHeader"  is complex.
Complex Conditional,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The conditional expression  "(v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126))"  is complex.
Complex Conditional,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetSMTPAddress,The conditional expression  "mailItem.SendUsingAccount != null && mailItem.SendUsingAccount.AccountType != 0 && /* Verify not exchange account */mailItem.SendUsingAccount.CurrentUser != null && mailItem.SendUsingAccount.CurrentUser.Address != null"  is complex.
Empty Catch Block,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Close,The method has an empty catch block.
Empty Catch Block,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,WriteErrorData,The method has an empty catch block.
Empty Catch Block,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,DecryptEmail,The method has an empty catch block.
Empty Catch Block,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,DecryptEmail,The method has an empty catch block.
Empty Catch Block,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,DecryptEmail,The method has an empty catch block.
Empty Catch Block,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,PasswordCallback,The method has an empty catch block.
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.Location = new System.Drawing.Point (13' 28);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.Location = new System.Drawing.Point (13' 28);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.Size = new System.Drawing.Size (357' 36);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.AboutLabel.Size = new System.Drawing.Size (357' 36);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.Location = new System.Drawing.Point (16' 267);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.Location = new System.Drawing.Point (16' 267);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.Size = new System.Drawing.Size (245' 17);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.Size = new System.Drawing.Size (245' 17);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.InitialByLabel.TabIndex = 7;  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.LinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.LinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.LinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.Location = new System.Drawing.Point (16' 86);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.Location = new System.Drawing.Point (16' 86);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.Size = new System.Drawing.Size (261' 17);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.Size = new System.Drawing.Size (261' 17);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.TabIndex = 8;  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.VisitedLinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.VisitedLinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ForkLabel.VisitedLinkColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.ForeColor = System.Drawing.Color.FromArgb (((int)(((byte)(147))))' ((int)(((byte)(149))))' ((int)(((byte)(152)))));  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.Location = new System.Drawing.Point (20' 64);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.Location = new System.Drawing.Point (20' 64);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.Margin = new System.Windows.Forms.Padding (4' 0' 4' 0);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.Size = new System.Drawing.Size (371' 22);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.Size = new System.Drawing.Size (371' 22);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.BuildLabel.TabIndex = 9;  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point (20' 106);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point (20' 106);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size (392' 158);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size (392' 158);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.TabIndex = 10;  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (428' 308);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (428' 308);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Margin = new System.Windows.Forms.Padding (4' 4' 4' 4);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding (12' 11' 12' 11);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding (12' 11' 12' 11);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding (12' 11' 12' 11);  
Magic Number,OutlookPrivacyPlugin,FormAbout,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormAbout.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding (12' 11' 12' 11);  
Magic Number,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The following statement contains a magic number: this.ComposeTableLayout.Controls.Add (this.Encrypt2SelfCheckBox' 1' 2);  
Magic Number,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The following statement contains a magic number: this.ComposeTableLayout.Controls.Add (this.Default2PlainTextCheckBox' 1' 3);  
Magic Number,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The following statement contains a magic number: this.ComposeTableLayout.Controls.Add (this.checkBoxCheckVersion' 1' 5);  
Magic Number,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The following statement contains a magic number: this.ComposeTableLayout.Controls.Add (this.checkBoxTrace' 1' 6);  
Magic Number,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The following statement contains a magic number: this.ReadTableLayout.Controls.Add (this.IgnoreIntegrityCheckBox' 1' 3);  
Magic Number,OutlookPrivacyPlugin,FormSettings,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\FormSettings.cs,InitializeComponent,The following statement contains a magic number: this.ReadTableLayout.Controls.Add (this.checkBoxSaveDecrypted' 1' 4);  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The following statement contains a magic number: if (mailItem.Sent == false) {  	_ribbon.SignButton.Checked = _settings.AutoSign || (bool)GetProperty (mailItem' "GnuPGSetting.Sign"' false);  	_ribbon.EncryptButton.Checked = _settings.AutoEncrypt || (bool)GetProperty (mailItem' "GnuPGSetting.Encrypt"' false);  	if (mailItem.Body.IndexOf ("\n** " + Localized.MsgDecryptValidSig) > -1) {  		_ribbon.SignButton.Checked = true;  		_ribbon.EncryptButton.Checked = true;  	} else if (mailItem.Body.IndexOf ("\n** " + Localized.MsgDecrypt) > -1) {  		_ribbon.EncryptButton.Checked = true;  	}  	SetProperty (mailItem' "GnuPGSetting.Sign"' _ribbon.SignButton.Checked);  	SetProperty (mailItem' "GnuPGSetting.Encrypt"' _ribbon.EncryptButton.Checked);  	_ribbon.InvalidateButtons ();  	if (_ribbon.EncryptButton.Checked || _ribbon.SignButton.Checked)  		mailItem.BodyFormat = Outlook.OlBodyFormat.olFormatPlain;  } else// Read mail   {  	SetProperty (mailItem' "GnuPGSetting.Sign"' false);  	SetProperty (mailItem' "GnuPGSetting.Encrypt"' false);  	// Default: disable read-buttons  	_ribbon.DecryptButton.Enabled = _ribbon.VerifyButton.Enabled = false;  	// Look for PGP headers  	Match match = null;  	if (mailItem.Body != null)  		match = Regex.Match (mailItem.Body' _pgpNoReplyHeaderPattern' RegexOptions.Multiline);  	if (match != null && (_autoDecrypt || _settings.AutoDecrypt) && match.Groups [1].Value == _pgpEncryptedHeader) {  		if (mailItem.BodyFormat != Outlook.OlBodyFormat.olFormatPlain) {  			var body = new StringBuilder (mailItem.Body);  			var indexes = new Stack<int> ();  			for (var cnt = 0; cnt < body.Length; cnt++) {  				if (body [cnt] > 127)  					indexes.Push (cnt);  			}  			while (true) {  				if (indexes.Count == 0)  					break;  				int index = indexes.Pop ();  				body.Remove (index' 1);  			}  			mailItem.Body = body.ToString ();  			//mailItem.Save();  		}  		_autoDecrypt = false;  		DecryptEmail (mailItem);  		// Update match again' in case decryption failed/cancelled.  		match = Regex.Match (mailItem.Body' _pgpNoReplyHeaderPattern' RegexOptions.Multiline);  		SetProperty (mailItem' "GnuPGSetting.Decrypted"' true);  	} else if (match != null && _settings.AutoVerify && match.Groups [1].Value == _pgpSignedHeader) {  		VerifyEmail (mailItem);  	} else {  		var foundPgpMime = false;  		var sigHash = "sha1";  		Outlook.Attachment encryptedMime = null;  		Outlook.Attachment sigMime = null;  		var contentType = ReadContentType (mailItem);  		logger.Trace ("MIME: Message content-type: " + (string)contentType);  		if (contentType.Contains ("application/pgp-signature")) {  			// PGP MIM Signed message it looks like  			//multipart/signed; micalg=pgp-sha1; protocol="application/pgp-signature"; boundary="Iq9CNK2GBN9g0PCsVJK4WdkEAR0887CbX"; charset="iso-8859-1"  			logger.Trace ("MIME: Found application/pgp-signature: " + contentType);  			var sigMatch = Regex.Match ((string)contentType' @"micalg=pgp-([^; ]*)");  			sigHash = sigMatch.Groups [1].Value;  			logger.Trace ("MIME: sigHash: " + sigHash);  		}  		// Look for PGP MIME  		foreach (Outlook.Attachment attachment in mailItem.Attachments) {  			var mimeEncoding = attachment.PropertyAccessor.GetProperty ("http://schemas.microsoft.com/mapi/proptag/0x370E001F");  			logger.Trace ("MIME: Attachment type: " + mimeEncoding);  			if (mimeEncoding == "application/pgp-encrypted") {  				logger.Trace ("MIME: Found application/pgp-encrypted.");  				foundPgpMime = true;  			} else if (mimeEncoding == "application/pgp-signature") {  				logger.Trace ("MIME: Found application/pgp-signature");  				sigMime = attachment;  			} else if (foundPgpMime && encryptedMime == null && mimeEncoding == "application/octet-stream") {  				// Should be first attachment *after* PGP_MIME version identification  				logger.Trace ("MIME: Found octet-stream following pgp-encrypted.");  				encryptedMime = attachment;  			}  		}  		if (encryptedMime != null || sigMime != null) {  			logger.Trace ("MIME: Calling HandlePgpMime");  			HandlePgpMime (mailItem' encryptedMime' sigMime' sigHash);  			if (encryptedMime != null)  				SetProperty (mailItem' "GnuPGSetting.Decrypted"' true);  		}  	}  	if (match != null) {  		_ribbon.VerifyButton.Enabled = (match.Groups [1].Value == _pgpSignedHeader);  		_ribbon.DecryptButton.Enabled = (match.Groups [1].Value == _pgpEncryptedHeader);  	}  	if (_ribbon.VerifyButton.Enabled || _ribbon.DecryptButton.Enabled) {  		if (_settings.SaveDecrypted)  			mailItem.Save ();  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The following statement contains a magic number: if (match != null && (_autoDecrypt || _settings.AutoDecrypt) && match.Groups [1].Value == _pgpEncryptedHeader) {  	if (mailItem.BodyFormat != Outlook.OlBodyFormat.olFormatPlain) {  		var body = new StringBuilder (mailItem.Body);  		var indexes = new Stack<int> ();  		for (var cnt = 0; cnt < body.Length; cnt++) {  			if (body [cnt] > 127)  				indexes.Push (cnt);  		}  		while (true) {  			if (indexes.Count == 0)  				break;  			int index = indexes.Pop ();  			body.Remove (index' 1);  		}  		mailItem.Body = body.ToString ();  		//mailItem.Save();  	}  	_autoDecrypt = false;  	DecryptEmail (mailItem);  	// Update match again' in case decryption failed/cancelled.  	match = Regex.Match (mailItem.Body' _pgpNoReplyHeaderPattern' RegexOptions.Multiline);  	SetProperty (mailItem' "GnuPGSetting.Decrypted"' true);  } else if (match != null && _settings.AutoVerify && match.Groups [1].Value == _pgpSignedHeader) {  	VerifyEmail (mailItem);  } else {  	var foundPgpMime = false;  	var sigHash = "sha1";  	Outlook.Attachment encryptedMime = null;  	Outlook.Attachment sigMime = null;  	var contentType = ReadContentType (mailItem);  	logger.Trace ("MIME: Message content-type: " + (string)contentType);  	if (contentType.Contains ("application/pgp-signature")) {  		// PGP MIM Signed message it looks like  		//multipart/signed; micalg=pgp-sha1; protocol="application/pgp-signature"; boundary="Iq9CNK2GBN9g0PCsVJK4WdkEAR0887CbX"; charset="iso-8859-1"  		logger.Trace ("MIME: Found application/pgp-signature: " + contentType);  		var sigMatch = Regex.Match ((string)contentType' @"micalg=pgp-([^; ]*)");  		sigHash = sigMatch.Groups [1].Value;  		logger.Trace ("MIME: sigHash: " + sigHash);  	}  	// Look for PGP MIME  	foreach (Outlook.Attachment attachment in mailItem.Attachments) {  		var mimeEncoding = attachment.PropertyAccessor.GetProperty ("http://schemas.microsoft.com/mapi/proptag/0x370E001F");  		logger.Trace ("MIME: Attachment type: " + mimeEncoding);  		if (mimeEncoding == "application/pgp-encrypted") {  			logger.Trace ("MIME: Found application/pgp-encrypted.");  			foundPgpMime = true;  		} else if (mimeEncoding == "application/pgp-signature") {  			logger.Trace ("MIME: Found application/pgp-signature");  			sigMime = attachment;  		} else if (foundPgpMime && encryptedMime == null && mimeEncoding == "application/octet-stream") {  			// Should be first attachment *after* PGP_MIME version identification  			logger.Trace ("MIME: Found octet-stream following pgp-encrypted.");  			encryptedMime = attachment;  		}  	}  	if (encryptedMime != null || sigMime != null) {  		logger.Trace ("MIME: Calling HandlePgpMime");  		HandlePgpMime (mailItem' encryptedMime' sigMime' sigHash);  		if (encryptedMime != null)  			SetProperty (mailItem' "GnuPGSetting.Decrypted"' true);  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The following statement contains a magic number: if (mailItem.BodyFormat != Outlook.OlBodyFormat.olFormatPlain) {  	var body = new StringBuilder (mailItem.Body);  	var indexes = new Stack<int> ();  	for (var cnt = 0; cnt < body.Length; cnt++) {  		if (body [cnt] > 127)  			indexes.Push (cnt);  	}  	while (true) {  		if (indexes.Count == 0)  			break;  		int index = indexes.Pop ();  		body.Remove (index' 1);  	}  	mailItem.Body = body.ToString ();  	//mailItem.Save();  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The following statement contains a magic number: for (var cnt = 0; cnt < body.Length; cnt++) {  	if (body [cnt] > 127)  		indexes.Push (cnt);  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Open,The following statement contains a magic number: if (body [cnt] > 127)  	indexes.Push (cnt);  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: foreach (char v in bytes) {  	// The following are not required to be encoded:  	// - Tab (ASCII 9)  	// - Space (ASCII 32)  	// - Characters 33 to 126' except for the equal sign (61).  	if (v == '\n' || v == '\r')  		builder.Append (v);  	else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  		builder.Append (v);  	else {  		builder.Append ('=');  		builder.Append (((int)v).ToString ("X2"));  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: foreach (char v in bytes) {  	// The following are not required to be encoded:  	// - Tab (ASCII 9)  	// - Space (ASCII 32)  	// - Characters 33 to 126' except for the equal sign (61).  	if (v == '\n' || v == '\r')  		builder.Append (v);  	else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  		builder.Append (v);  	else {  		builder.Append ('=');  		builder.Append (((int)v).ToString ("X2"));  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: foreach (char v in bytes) {  	// The following are not required to be encoded:  	// - Tab (ASCII 9)  	// - Space (ASCII 32)  	// - Characters 33 to 126' except for the equal sign (61).  	if (v == '\n' || v == '\r')  		builder.Append (v);  	else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  		builder.Append (v);  	else {  		builder.Append ('=');  		builder.Append (((int)v).ToString ("X2"));  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: foreach (char v in bytes) {  	// The following are not required to be encoded:  	// - Tab (ASCII 9)  	// - Space (ASCII 32)  	// - Characters 33 to 126' except for the equal sign (61).  	if (v == '\n' || v == '\r')  		builder.Append (v);  	else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  		builder.Append (v);  	else {  		builder.Append ('=');  		builder.Append (((int)v).ToString ("X2"));  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: foreach (char v in bytes) {  	// The following are not required to be encoded:  	// - Tab (ASCII 9)  	// - Space (ASCII 32)  	// - Characters 33 to 126' except for the equal sign (61).  	if (v == '\n' || v == '\r')  		builder.Append (v);  	else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  		builder.Append (v);  	else {  		builder.Append ('=');  		builder.Append (((int)v).ToString ("X2"));  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if (v == '\n' || v == '\r')  	builder.Append (v);  else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if (v == '\n' || v == '\r')  	builder.Append (v);  else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if (v == '\n' || v == '\r')  	builder.Append (v);  else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if (v == '\n' || v == '\r')  	builder.Append (v);  else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if (v == '\n' || v == '\r')  	builder.Append (v);  else if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,EncodeQuotedPrintable,The following statement contains a magic number: if ((v == 9) || ((v >= 32) && (v <= 60)) || ((v >= 62) && (v <= 126)))  	builder.Append (v);  else {  	builder.Append ('=');  	builder.Append (((int)v).ToString ("X2"));  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The following statement contains a magic number: if (isHtml) {  	var htmlBody = msg.HtmlBody;  	var related = msg.Body as MultipartRelated;  	var doc = new HtmlAgilityPack.HtmlDocument ();  	var savedImages = new List<MimePart> ();  	doc.LoadHtml (htmlBody);  	// Find any embedded images  	foreach (var img in doc.DocumentNode.SelectNodes ("//img[@src]")) {  		var src = img.Attributes ["src"];  		Uri uri;  		if (src == null || src.Value == null)  			continue;  		// parse the <img src=...> attribute value into a Uri  		if (Uri.IsWellFormedUriString (src.Value' UriKind.Absolute))  			uri = new Uri (src.Value' UriKind.Absolute);  		else  			uri = new Uri (src.Value' UriKind.Relative);  		// locate the index of the attachment within the multipart/related (if it exists)  		string imageCid = src.Value.Substring (4);  		var iter = new MimeIterator (msg);  		MimePart attachment = null;  		while (iter.MoveNext ()) {  			if (iter.Current.ContentId == imageCid) {  				attachment = iter.Current as MimePart;  				break;  			}  		}  		if (attachment == null)  			continue;  		string fileName;  		// save the attachment (if we haven't already saved it)  		if (!savedImages.Contains (attachment)) {  			fileName = attachment.FileName;  			if (string.IsNullOrEmpty (fileName))  				fileName = Guid.NewGuid ().ToString ();  			using (var stream = File.Create (fileName))  				attachment.ContentObject.DecodeTo (stream);  			try {  				var att = mailItem.Attachments.Add (fileName' Outlook.OlAttachmentType.olEmbeddeditem' null' "");  				att.PropertyAccessor.SetProperty ("http://schemas.microsoft.com/mapi/proptag/0x3712001E"' imageCid);  				savedImages.Add (attachment);  			} finally {  				// try not to leak temp files :)  				File.Delete (fileName);  			}  		}  	}  	mailItem.BodyFormat = Outlook.OlBodyFormat.olFormatHTML;  	mailItem.HTMLBody = AddMessageToHtmlBody (htmlBody' DecryptAndVerifyHeaderMessage);  } else {  	// NOTE: For some reason we cannot change the BodyFormat once it's set.  	//       So if we are set to HTML we need to wrap the plain text so it's  	//       displayed okay. Also of course prevent XSS.  	if (mailItem.BodyFormat == Outlook.OlBodyFormat.olFormatPlain) {  		mailItem.Body = DecryptAndVerifyHeaderMessage + msg.TextBody;  	} else {  		var sb = new StringBuilder (msg.TextBody.Length + 100);  		sb.Append ("<html><body><pre>");  		sb.Append (WebUtility.HtmlEncode (DecryptAndVerifyHeaderMessage));  		sb.Append (WebUtility.HtmlEncode (msg.TextBody));  		sb.Append ("</pre></body></html>");  		mailItem.HTMLBody = sb.ToString ();  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The following statement contains a magic number: if (isHtml) {  	var htmlBody = msg.HtmlBody;  	var related = msg.Body as MultipartRelated;  	var doc = new HtmlAgilityPack.HtmlDocument ();  	var savedImages = new List<MimePart> ();  	doc.LoadHtml (htmlBody);  	// Find any embedded images  	foreach (var img in doc.DocumentNode.SelectNodes ("//img[@src]")) {  		var src = img.Attributes ["src"];  		Uri uri;  		if (src == null || src.Value == null)  			continue;  		// parse the <img src=...> attribute value into a Uri  		if (Uri.IsWellFormedUriString (src.Value' UriKind.Absolute))  			uri = new Uri (src.Value' UriKind.Absolute);  		else  			uri = new Uri (src.Value' UriKind.Relative);  		// locate the index of the attachment within the multipart/related (if it exists)  		string imageCid = src.Value.Substring (4);  		var iter = new MimeIterator (msg);  		MimePart attachment = null;  		while (iter.MoveNext ()) {  			if (iter.Current.ContentId == imageCid) {  				attachment = iter.Current as MimePart;  				break;  			}  		}  		if (attachment == null)  			continue;  		string fileName;  		// save the attachment (if we haven't already saved it)  		if (!savedImages.Contains (attachment)) {  			fileName = attachment.FileName;  			if (string.IsNullOrEmpty (fileName))  				fileName = Guid.NewGuid ().ToString ();  			using (var stream = File.Create (fileName))  				attachment.ContentObject.DecodeTo (stream);  			try {  				var att = mailItem.Attachments.Add (fileName' Outlook.OlAttachmentType.olEmbeddeditem' null' "");  				att.PropertyAccessor.SetProperty ("http://schemas.microsoft.com/mapi/proptag/0x3712001E"' imageCid);  				savedImages.Add (attachment);  			} finally {  				// try not to leak temp files :)  				File.Delete (fileName);  			}  		}  	}  	mailItem.BodyFormat = Outlook.OlBodyFormat.olFormatHTML;  	mailItem.HTMLBody = AddMessageToHtmlBody (htmlBody' DecryptAndVerifyHeaderMessage);  } else {  	// NOTE: For some reason we cannot change the BodyFormat once it's set.  	//       So if we are set to HTML we need to wrap the plain text so it's  	//       displayed okay. Also of course prevent XSS.  	if (mailItem.BodyFormat == Outlook.OlBodyFormat.olFormatPlain) {  		mailItem.Body = DecryptAndVerifyHeaderMessage + msg.TextBody;  	} else {  		var sb = new StringBuilder (msg.TextBody.Length + 100);  		sb.Append ("<html><body><pre>");  		sb.Append (WebUtility.HtmlEncode (DecryptAndVerifyHeaderMessage));  		sb.Append (WebUtility.HtmlEncode (msg.TextBody));  		sb.Append ("</pre></body></html>");  		mailItem.HTMLBody = sb.ToString ();  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The following statement contains a magic number: foreach (var img in doc.DocumentNode.SelectNodes ("//img[@src]")) {  	var src = img.Attributes ["src"];  	Uri uri;  	if (src == null || src.Value == null)  		continue;  	// parse the <img src=...> attribute value into a Uri  	if (Uri.IsWellFormedUriString (src.Value' UriKind.Absolute))  		uri = new Uri (src.Value' UriKind.Absolute);  	else  		uri = new Uri (src.Value' UriKind.Relative);  	// locate the index of the attachment within the multipart/related (if it exists)  	string imageCid = src.Value.Substring (4);  	var iter = new MimeIterator (msg);  	MimePart attachment = null;  	while (iter.MoveNext ()) {  		if (iter.Current.ContentId == imageCid) {  			attachment = iter.Current as MimePart;  			break;  		}  	}  	if (attachment == null)  		continue;  	string fileName;  	// save the attachment (if we haven't already saved it)  	if (!savedImages.Contains (attachment)) {  		fileName = attachment.FileName;  		if (string.IsNullOrEmpty (fileName))  			fileName = Guid.NewGuid ().ToString ();  		using (var stream = File.Create (fileName))  			attachment.ContentObject.DecodeTo (stream);  		try {  			var att = mailItem.Attachments.Add (fileName' Outlook.OlAttachmentType.olEmbeddeditem' null' "");  			att.PropertyAccessor.SetProperty ("http://schemas.microsoft.com/mapi/proptag/0x3712001E"' imageCid);  			savedImages.Add (attachment);  		} finally {  			// try not to leak temp files :)  			File.Delete (fileName);  		}  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,HandlePgpMime,The following statement contains a magic number: if (mailItem.BodyFormat == Outlook.OlBodyFormat.olFormatPlain) {  	mailItem.Body = DecryptAndVerifyHeaderMessage + msg.TextBody;  } else {  	var sb = new StringBuilder (msg.TextBody.Length + 100);  	sb.Append ("<html><body><pre>");  	sb.Append (WebUtility.HtmlEncode (DecryptAndVerifyHeaderMessage));  	sb.Append (WebUtility.HtmlEncode (msg.TextBody));  	sb.Append ("</pre></body></html>");  	mailItem.HTMLBody = sb.ToString ();  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Close,The following statement contains a magic number: try {  	if (mailItem == null)  		return;  	// New mail (Compose)  	if (mailItem.Sent == false) {  		var toSave = false;  		var signProperpty = GetProperty (mailItem' "GnuPGSetting.Sign"' false);  		if (signProperpty == null || (bool)signProperpty != _ribbon.SignButton.Checked) {  			toSave = true;  		}  		var encryptProperpty = GetProperty (mailItem' "GnuPGSetting.Decrypted"' false);  		if (encryptProperpty == null || (bool)encryptProperpty != _ribbon.EncryptButton.Checked) {  			toSave = true;  		}  		SetProperty (mailItem' "GnuPGSetting.Sign"' false);  		SetProperty (mailItem' "GnuPGSetting.Encrypt"' false);  		if (toSave == true) {  			#if DISABLED  					BoolEventArgs ev = e as BoolEventArgs; 		DialogResult res = MessageBox.Show("Do you want to save changes?"' 										   "OutlookGnuPG"' 										   MessageBoxButtons.YesNoCancel' MessageBoxIcon.Exclamation); 		if (res == DialogResult.Yes) 		{ 		  // Must call mailItem.Write event handler (mailItem_Save) explicitely as it is not always called 		  // from the mailItem.Save() method. Mail is effectly saved only if a property changed. 		  mailItem_Save(sender' EventArgs.Empty); 		  mailItem.Save(); 		} 		if (res == DialogResult.Cancel) 		{ 		  ev.Value = true; 		} #else  			// Invalidate the mailItem to force Outlook to ask to save the mailItem' hence calling  			// the mailItem_Save() handler to record the buttons state.  			// Note: the reason (button state property change) to save the mailItem is not necessairy obvious  			// to the user' certainly if nothing has been updated/changed by the user. If specific notification  			// is required see DISABLED code above. Beware' it might open 2 dialog boxes: the add-in custom and  			// the regular Outlook save confirmation.  			mailItem.Subject = mailItem.Subject;  		}  		#endif  	} else {  		SetProperty (mailItem' "GnuPGSetting.Sign"' false);  		SetProperty (mailItem' "GnuPGSetting.Encrypt"' false);  		var signProperty = GetProperty (mailItem' "GnuPGSetting.Decrypted");  		SetProperty (mailItem' "GnuPGSetting.Decrypted"' false);  		if (signProperty != null && (bool)signProperty) {  			// NOTE: Cannot call mailItem.Close from Close event handler  			//       instead we will start a timer and call it after we  			//       return. There is a small race condition' but 250  			//       milliseconds should be enough even on slow machines.  			var timer = new Timer {  				Interval = 250  			};  			timer.Tick += new EventHandler ((o' e) => {  				timer.Stop ();  				mailItem.Close (_settings.SaveDecrypted ? Outlook.OlInspectorClose.olSave : Outlook.OlInspectorClose.olDiscard);  			});  			timer.Start ();  			Cancel = true;  		}  	}  } catch {  	// Ignore random COM errors  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Close,The following statement contains a magic number: if (mailItem.Sent == false) {  	var toSave = false;  	var signProperpty = GetProperty (mailItem' "GnuPGSetting.Sign"' false);  	if (signProperpty == null || (bool)signProperpty != _ribbon.SignButton.Checked) {  		toSave = true;  	}  	var encryptProperpty = GetProperty (mailItem' "GnuPGSetting.Decrypted"' false);  	if (encryptProperpty == null || (bool)encryptProperpty != _ribbon.EncryptButton.Checked) {  		toSave = true;  	}  	SetProperty (mailItem' "GnuPGSetting.Sign"' false);  	SetProperty (mailItem' "GnuPGSetting.Encrypt"' false);  	if (toSave == true) {  		#if DISABLED  				BoolEventArgs ev = e as BoolEventArgs; 		DialogResult res = MessageBox.Show("Do you want to save changes?"' 										   "OutlookGnuPG"' 										   MessageBoxButtons.YesNoCancel' MessageBoxIcon.Exclamation); 		if (res == DialogResult.Yes) 		{ 		  // Must call mailItem.Write event handler (mailItem_Save) explicitely as it is not always called 		  // from the mailItem.Save() method. Mail is effectly saved only if a property changed. 		  mailItem_Save(sender' EventArgs.Empty); 		  mailItem.Save(); 		} 		if (res == DialogResult.Cancel) 		{ 		  ev.Value = true; 		} #else  		// Invalidate the mailItem to force Outlook to ask to save the mailItem' hence calling  		// the mailItem_Save() handler to record the buttons state.  		// Note: the reason (button state property change) to save the mailItem is not necessairy obvious  		// to the user' certainly if nothing has been updated/changed by the user. If specific notification  		// is required see DISABLED code above. Beware' it might open 2 dialog boxes: the add-in custom and  		// the regular Outlook save confirmation.  		mailItem.Subject = mailItem.Subject;  	}  	#endif  } else {  	SetProperty (mailItem' "GnuPGSetting.Sign"' false);  	SetProperty (mailItem' "GnuPGSetting.Encrypt"' false);  	var signProperty = GetProperty (mailItem' "GnuPGSetting.Decrypted");  	SetProperty (mailItem' "GnuPGSetting.Decrypted"' false);  	if (signProperty != null && (bool)signProperty) {  		// NOTE: Cannot call mailItem.Close from Close event handler  		//       instead we will start a timer and call it after we  		//       return. There is a small race condition' but 250  		//       milliseconds should be enough even on slow machines.  		var timer = new Timer {  			Interval = 250  		};  		timer.Tick += new EventHandler ((o' e) => {  			timer.Stop ();  			mailItem.Close (_settings.SaveDecrypted ? Outlook.OlInspectorClose.olSave : Outlook.OlInspectorClose.olDiscard);  		});  		timer.Start ();  		Cancel = true;  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,mailItem_Close,The following statement contains a magic number: if (signProperty != null && (bool)signProperty) {  	// NOTE: Cannot call mailItem.Close from Close event handler  	//       instead we will start a timer and call it after we  	//       return. There is a small race condition' but 250  	//       milliseconds should be enough even on slow machines.  	var timer = new Timer {  		Interval = 250  	};  	timer.Tick += new EventHandler ((o' e) => {  		timer.Stop ();  		mailItem.Close (_settings.SaveDecrypted ? Outlook.OlInspectorClose.olSave : Outlook.OlInspectorClose.olDiscard);  	});  	timer.Start ();  	Cancel = true;  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,The following statement contains a magic number: try {  	if (mailType != Outlook.OlBodyFormat.olFormatPlain) {  		MessageBox.Show (Localized.ErrorInvalidFormat' "Invalid Mail Format"' MessageBoxButtons.OK' MessageBoxIcon.Error);  		Cancel = true;  		// Prevent sending the mail  		return;  	}  	IList<string> recipients = new List<string> ();  	if (needToEncrypt) {  		// Popup UI to select the encryption targets   		var mailRecipients = (from Outlook.Recipient mailRecipient in mailItem.Recipients  		select GetSmtpAddressForRecipient (mailRecipient)).ToList ();  		var recipientDialog = new FormKeySelection (mailRecipients' GetKeysForEncryption' needToEncrypt' needToSign);  		recipientDialog.TopMost = true;  		var recipientResult = recipientDialog.DialogResult;  		if (recipientDialog.DialogResult == DialogResult.Ignore)  			recipientResult = recipientDialog.ShowDialog ();  		if (recipientResult != DialogResult.OK) {  			// The user closed the recipient dialog' prevent sending the mail  			Cancel = true;  			return;  		}  		needToEncrypt = recipientDialog.Encrypt;  		needToSign = recipientDialog.Sign;  		foreach (var r in recipientDialog.SelectedKeys)  			recipients.Add (r.Key);  		if (needToEncrypt && recipients.Count == 0) {  			MessageBox.Show (Localized.ErrorInvalidRecipientKey' "Invalid Recipient KeyItem"' MessageBoxButtons.OK' MessageBoxIcon.Error);  			Cancel = true;  			// Prevent sending the mail  			return;  		}  		if (_settings.Encrypt2Self)  			recipients.Add (GetSMTPAddress (mailItem));  	}  	var attachments = new List<Attachment> ();  	// Sign and encrypt the plaintext mail  	if ((needToSign) && (needToEncrypt)) {  		mail = SignAndEncryptEmail (mail' GetSMTPAddress (mailItem)' recipients);  		if (mail == null)  			return;  		var mailAttachments = mailItem.Attachments.Cast<Outlook.Attachment> ().ToList ();  		foreach (var attachment in mailAttachments) {  			var a = new Attachment () {  				TempFile = Path.Combine (Path.GetTempPath ()' attachment.FileName) + ".pgp"'  				FileName = attachment.FileName'  				DisplayName = attachment.DisplayName'  				AttachmentType = attachment.Type'  			};  			attachment.SaveAsFile (a.TempFile);  			attachment.Delete ();  			// Encrypt file  			var cleartext = File.ReadAllBytes (a.TempFile);  			var cyphertext = SignAndEncryptAttachment (cleartext' GetSMTPAddress (mailItem)' recipients);  			File.WriteAllText (a.TempFile' cyphertext);  			a.Encrypted = true;  			attachments.Add (a);  		}  	} else if (needToSign) {  		// Sign the plaintext mail if needed  		// 1. Verify text lines are not too long  		var mailLines = mail.Split ('\n');  		var longLines = mailLines.Any (line => line.Length > 70);  		var wrapLines = false;  		if (longLines) {  			var dialog = new FormSelectLineWrap ();  			var result = dialog.ShowDialog ();  			if (result == DialogResult.Cancel)  				return;  			wrapLines = dialog.radioButtonWrap.Checked;  			if (dialog.radioButtonMime.Checked) {  				// todo  			}  			if (dialog.radioButtonEdit.Checked)  				return;  		}  		mail = SignEmail (mail' GetSMTPAddress (mailItem)' wrapLines);  		if (mail == null)  			return;  	} else if (needToEncrypt) {  		// Encrypt the plaintext mail if needed  		mail = EncryptEmail (mail' recipients);  		if (mail == null)  			return;  		var mailAttachments = mailItem.Attachments.Cast<Outlook.Attachment> ().ToList ();  		foreach (var attachment in mailAttachments) {  			var a = new Attachment () {  				TempFile = Path.Combine (Path.GetTempPath ()' attachment.FileName) + ".pgp"'  				FileName = attachment.FileName'  				DisplayName = attachment.DisplayName'  				AttachmentType = attachment.Type  			};  			attachment.SaveAsFile (a.TempFile);  			attachment.Delete ();  			// Encrypt file  			var cleartext = File.ReadAllBytes (a.TempFile);  			var cyphertext = EncryptEmail (cleartext' recipients);  			File.WriteAllText (a.TempFile' cyphertext);  			a.Encrypted = true;  			attachments.Add (a);  		}  	}  	foreach (var a in attachments) {  		mailItem.Attachments.Add (a.TempFile' a.AttachmentType' 1' a.DisplayName);  	}  } catch (Exception ex) {  	if (ex.Message.ToLower ().StartsWith ("checksum")) {  		ClearLastPassword ();  		MessageBox.Show (Localized.ErrorBadPassphrase' Localized.ErrorDialogTitle' MessageBoxButtons.OK' MessageBoxIcon.Error);  		return;  	}  	WriteErrorData ("Application_ItemSend"' ex);  	MessageBox.Show (ex.Message + "\n" + ex.StackTrace' Localized.ErrorDialogTitle' MessageBoxButtons.OK' MessageBoxIcon.Error);  	// Cancel sending  	return;  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,The following statement contains a magic number: if ((needToSign) && (needToEncrypt)) {  	mail = SignAndEncryptEmail (mail' GetSMTPAddress (mailItem)' recipients);  	if (mail == null)  		return;  	var mailAttachments = mailItem.Attachments.Cast<Outlook.Attachment> ().ToList ();  	foreach (var attachment in mailAttachments) {  		var a = new Attachment () {  			TempFile = Path.Combine (Path.GetTempPath ()' attachment.FileName) + ".pgp"'  			FileName = attachment.FileName'  			DisplayName = attachment.DisplayName'  			AttachmentType = attachment.Type'  		};  		attachment.SaveAsFile (a.TempFile);  		attachment.Delete ();  		// Encrypt file  		var cleartext = File.ReadAllBytes (a.TempFile);  		var cyphertext = SignAndEncryptAttachment (cleartext' GetSMTPAddress (mailItem)' recipients);  		File.WriteAllText (a.TempFile' cyphertext);  		a.Encrypted = true;  		attachments.Add (a);  	}  } else if (needToSign) {  	// Sign the plaintext mail if needed  	// 1. Verify text lines are not too long  	var mailLines = mail.Split ('\n');  	var longLines = mailLines.Any (line => line.Length > 70);  	var wrapLines = false;  	if (longLines) {  		var dialog = new FormSelectLineWrap ();  		var result = dialog.ShowDialog ();  		if (result == DialogResult.Cancel)  			return;  		wrapLines = dialog.radioButtonWrap.Checked;  		if (dialog.radioButtonMime.Checked) {  			// todo  		}  		if (dialog.radioButtonEdit.Checked)  			return;  	}  	mail = SignEmail (mail' GetSMTPAddress (mailItem)' wrapLines);  	if (mail == null)  		return;  } else if (needToEncrypt) {  	// Encrypt the plaintext mail if needed  	mail = EncryptEmail (mail' recipients);  	if (mail == null)  		return;  	var mailAttachments = mailItem.Attachments.Cast<Outlook.Attachment> ().ToList ();  	foreach (var attachment in mailAttachments) {  		var a = new Attachment () {  			TempFile = Path.Combine (Path.GetTempPath ()' attachment.FileName) + ".pgp"'  			FileName = attachment.FileName'  			DisplayName = attachment.DisplayName'  			AttachmentType = attachment.Type  		};  		attachment.SaveAsFile (a.TempFile);  		attachment.Delete ();  		// Encrypt file  		var cleartext = File.ReadAllBytes (a.TempFile);  		var cyphertext = EncryptEmail (cleartext' recipients);  		File.WriteAllText (a.TempFile' cyphertext);  		a.Encrypted = true;  		attachments.Add (a);  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,Application_ItemSend,The following statement contains a magic number: if (needToSign) {  	// Sign the plaintext mail if needed  	// 1. Verify text lines are not too long  	var mailLines = mail.Split ('\n');  	var longLines = mailLines.Any (line => line.Length > 70);  	var wrapLines = false;  	if (longLines) {  		var dialog = new FormSelectLineWrap ();  		var result = dialog.ShowDialog ();  		if (result == DialogResult.Cancel)  			return;  		wrapLines = dialog.radioButtonWrap.Checked;  		if (dialog.radioButtonMime.Checked) {  			// todo  		}  		if (dialog.radioButtonEdit.Checked)  			return;  	}  	mail = SignEmail (mail' GetSMTPAddress (mailItem)' wrapLines);  	if (mail == null)  		return;  } else if (needToEncrypt) {  	// Encrypt the plaintext mail if needed  	mail = EncryptEmail (mail' recipients);  	if (mail == null)  		return;  	var mailAttachments = mailItem.Attachments.Cast<Outlook.Attachment> ().ToList ();  	foreach (var attachment in mailAttachments) {  		var a = new Attachment () {  			TempFile = Path.Combine (Path.GetTempPath ()' attachment.FileName) + ".pgp"'  			FileName = attachment.FileName'  			DisplayName = attachment.DisplayName'  			AttachmentType = attachment.Type  		};  		attachment.SaveAsFile (a.TempFile);  		attachment.Delete ();  		// Encrypt file  		var cleartext = File.ReadAllBytes (a.TempFile);  		var cyphertext = EncryptEmail (cleartext' recipients);  		File.WriteAllText (a.TempFile' cyphertext);  		a.Encrypted = true;  		attachments.Add (a);  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: foreach (PgpPublicKey key in crypto.GetPublicKeyUserIdsForEncryption ()) {  	foreach (string user in key.GetUserIds ()) {  		var match = Regex.Match (user' @"<(.*)>");  		if (!match.Success)  			continue;  		var k = new KeyItem ();  		k.Key = match.Groups [1].Value;  		k.KeyDisplay = user;  		var fingerprint = key.GetFingerprint ();  		k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  		if (key.GetValidSeconds () != 0)  			k.Expiry = key.CreationTime.AddSeconds (key.GetValidSeconds ()).ToShortDateString ();  		keys.Add (k);  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: foreach (PgpPublicKey key in crypto.GetPublicKeyUserIdsForEncryption ()) {  	foreach (string user in key.GetUserIds ()) {  		var match = Regex.Match (user' @"<(.*)>");  		if (!match.Success)  			continue;  		var k = new KeyItem ();  		k.Key = match.Groups [1].Value;  		k.KeyDisplay = user;  		var fingerprint = key.GetFingerprint ();  		k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  		if (key.GetValidSeconds () != 0)  			k.Expiry = key.CreationTime.AddSeconds (key.GetValidSeconds ()).ToShortDateString ();  		keys.Add (k);  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: foreach (PgpPublicKey key in crypto.GetPublicKeyUserIdsForEncryption ()) {  	foreach (string user in key.GetUserIds ()) {  		var match = Regex.Match (user' @"<(.*)>");  		if (!match.Success)  			continue;  		var k = new KeyItem ();  		k.Key = match.Groups [1].Value;  		k.KeyDisplay = user;  		var fingerprint = key.GetFingerprint ();  		k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  		if (key.GetValidSeconds () != 0)  			k.Expiry = key.CreationTime.AddSeconds (key.GetValidSeconds ()).ToShortDateString ();  		keys.Add (k);  	}  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: foreach (string user in key.GetUserIds ()) {  	var match = Regex.Match (user' @"<(.*)>");  	if (!match.Success)  		continue;  	var k = new KeyItem ();  	k.Key = match.Groups [1].Value;  	k.KeyDisplay = user;  	var fingerprint = key.GetFingerprint ();  	k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  	if (key.GetValidSeconds () != 0)  		k.Expiry = key.CreationTime.AddSeconds (key.GetValidSeconds ()).ToShortDateString ();  	keys.Add (k);  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: foreach (string user in key.GetUserIds ()) {  	var match = Regex.Match (user' @"<(.*)>");  	if (!match.Success)  		continue;  	var k = new KeyItem ();  	k.Key = match.Groups [1].Value;  	k.KeyDisplay = user;  	var fingerprint = key.GetFingerprint ();  	k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  	if (key.GetValidSeconds () != 0)  		k.Expiry = key.CreationTime.AddSeconds (key.GetValidSeconds ()).ToShortDateString ();  	keys.Add (k);  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: foreach (string user in key.GetUserIds ()) {  	var match = Regex.Match (user' @"<(.*)>");  	if (!match.Success)  		continue;  	var k = new KeyItem ();  	k.Key = match.Groups [1].Value;  	k.KeyDisplay = user;  	var fingerprint = key.GetFingerprint ();  	k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  	if (key.GetValidSeconds () != 0)  		k.Expiry = key.CreationTime.AddSeconds (key.GetValidSeconds ()).ToShortDateString ();  	keys.Add (k);  }  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  
Magic Number,OutlookPrivacyPlugin,OutlookPrivacyPlugin,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\OutlookPrivacyPlugin\OutlookPrivacyPlugin.cs,GetKeysForEncryption,The following statement contains a magic number: k.KeyId = fingerprint [fingerprint.Length - 4].ToString ("X2") + fingerprint [fingerprint.Length - 3].ToString ("X2") + fingerprint [fingerprint.Length - 2].ToString ("X2") + fingerprint [fingerprint.Length - 1].ToString ("X2");  
