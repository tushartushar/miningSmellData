Implementation smell,Namespace,Class,File,Method,Description
Long Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDecryptedStream,The method has 108 lines of code.
Long Method,MimeKit.Encodings,YDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YDecoder.cs,ScanYBeginMarker,The method has 192 lines of code.
Long Method,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The method has 120 lines of code.
Long Method,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The method has 143 lines of code.
Long Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The method has 106 lines of code.
Long Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,FoldTokens,The method has 101 lines of code.
Long Method,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The method has 105 lines of code.
Long Method,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,StepHeaders,The method has 141 lines of code.
Long Method,MimeKit,MimeTypes,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeTypes.cs,MimeTypes,The method has 555 lines of code.
Long Method,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParse,The method has 101 lines of code.
Complex Method,MimeKit.Cryptography,DefaultSecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\DefaultSecureMimeContext.cs,Import,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Decrypt,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Decrypt,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,MultipartSigned,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartSigned.cs,PrepareEntityForSigning,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,GetCreateCertificatesTableCommand,Cyclomatic complexity of the method is 16
Complex Method,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,GetCreateCrlsTableCommand,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDigestAlgorithmName,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDigestAlgorithm,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetPublicKey,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetSigningKey,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetHashAlgorithm,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDigestAlgorithm,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetPublicKeyAlgorithm,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDigitalSignatures,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetSymmetricKeyAlgorithm,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,SignAndEncrypt,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDecryptedStream,Cyclomatic complexity of the method is 24
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,GetDigestAlgorithmName,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,GetDigestAlgorithm,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,GetDigestOid,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,AddSecureMimeCapabilities,Cyclomatic complexity of the method is 15
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,TryGetEncryptionAlgorithm,Cyclomatic complexity of the method is 15
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,GetDigitalSignatures,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Envelope,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Cryptography,SqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqlCertificateDatabase.cs,GetSelectCommand,Cyclomatic complexity of the method is 15
Complex Method,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,GetCreateCertificatesTableCommand,Cyclomatic complexity of the method is 16
Complex Method,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,GetCreateCrlsTableCommand,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,WindowsSecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\WindowsSecureMimeContext.cs,GetCmsSignerCertificate,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,GetColumnNames,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,GetValue,Cyclomatic complexity of the method is 15
Complex Method,MimeKit.Cryptography,X509CertificateExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateExtensions.cs,GetKeyUsageFlags,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Cryptography,X509CertificateStore,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateStore.cs,Import,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Cryptography,X509CertificateStore,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateStore.cs,Export,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,Decode,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Encodings,QuotedPrintableDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableDecoder.cs,Decode,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Encodings,QuotedPrintableEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableEncoder.cs,Encode,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,ScanBeginMarker,Cyclomatic complexity of the method is 27
Complex Method,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Encodings,YDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YDecoder.cs,ScanYBeginMarker,Cyclomatic complexity of the method is 58
Complex Method,MimeKit.Encodings,YDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YDecoder.cs,Decode,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.IO,BoundStream,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\BoundStream.cs,Seek,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.IO,ChainedStream,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\ChainedStream.cs,Seek,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.IO,FilteredStream,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\FilteredStream.cs,Read,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.IO,MemoryBlockStream,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\MemoryBlockStream.cs,Seek,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.IO.Filters,ArmoredFromFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\ArmoredFromFilter.cs,Filter,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,GetBestEncoding,Cyclomatic complexity of the method is 16
Complex Method,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,Scan,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,Cyclomatic complexity of the method is 22
Complex Method,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractRecipientTable,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractMapiProperties,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadTextValue,Cyclomatic complexity of the method is 8
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetPropertyValueType,Cyclomatic complexity of the method is 16
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetAttributeValueType,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadPropertyValue,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValue,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsBoolean,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsDouble,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsFloat,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsInt16,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsInt32,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsInt64,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsString,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,SetComplianceError,Cyclomatic complexity of the method is 18
Complex Method,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,SetFlags,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,Cyclomatic complexity of the method is 12
Complex Method,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseCodePage,Cyclomatic complexity of the method is 20
Complex Method,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetTimeZone,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,Cyclomatic complexity of the method is 21
Complex Method,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,Cyclomatic complexity of the method is 11
Complex Method,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,Unquote,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TryGetEncodedWordToken,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,Cyclomatic complexity of the method is 17
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,Cyclomatic complexity of the method is 16
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,FoldTokens,Cyclomatic complexity of the method is 24
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,GetRfc822Words,Cyclomatic complexity of the method is 14
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,ShouldMergeWords,Cyclomatic complexity of the method is 13
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,Merge,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,Encode,Cyclomatic complexity of the method is 9
Complex Method,MimeKit.Utils,StringBuilderExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\StringBuilderExtensions.cs,AppendFolded,Cyclomatic complexity of the method is 10
Complex Method,MimeKit.Utils,StringBuilderExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\StringBuilderExtensions.cs,AppendCStringByte,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,BodyBuilder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\BodyBuilder.cs,ToMessageBody,Cyclomatic complexity of the method is 10
Complex Method,MimeKit,ContentDisposition,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentDisposition.cs,TryParse,Cyclomatic complexity of the method is 11
Complex Method,MimeKit,ContentType,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentType.cs,ContentType,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,ContentType,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentType.cs,TryParse,Cyclomatic complexity of the method is 17
Complex Method,MimeKit,GroupAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\GroupAddress.cs,Encode,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,Header,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeReceivedHeader,Cyclomatic complexity of the method is 14
Complex Method,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,Fold,Cyclomatic complexity of the method is 10
Complex Method,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParseAddrspec,Cyclomatic complexity of the method is 11
Complex Method,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParseMailbox,Cyclomatic complexity of the method is 14
Complex Method,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,Cyclomatic complexity of the method is 23
Complex Method,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,InternetAddressList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddressList.cs,TryParse,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,MailboxAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MailboxAddress.cs,Encode,Cyclomatic complexity of the method is 13
Complex Method,MimeKit,MessagePartial,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MessagePartial.cs,Split,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,MessagePartial,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MessagePartial.cs,Join,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,MimeEntity,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeEntity.cs,OnHeadersChanged,Cyclomatic complexity of the method is 17
Complex Method,MimeKit,MimeIterator,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeIterator.cs,MoveNext,Cyclomatic complexity of the method is 10
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,MimeMessage,Cyclomatic complexity of the method is 17
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,TryGetMessageBody,Cyclomatic complexity of the method is 10
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,EnumerateMimeParts,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,WriteTo,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,GetMessageRecipients,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,ReloadHeader,Cyclomatic complexity of the method is 29
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,HeadersChanged,Cyclomatic complexity of the method is 18
Complex Method,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,CreateFromMailMessage,Cyclomatic complexity of the method is 25
Complex Method,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ReadAhead,Cyclomatic complexity of the method is 8
Complex Method,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,Step,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ConstructMessagePart,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ParseMessage,Cyclomatic complexity of the method is 13
Complex Method,MimeKit,MimePart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimePart.cs,MimePart,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,MimePart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimePart.cs,WriteTo,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,MimePart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimePart.cs,OnHeadersChanged,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,Multipart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Multipart.cs,FoldPreambleOrEpilogue,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,Multipart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Multipart.cs,WriteTo,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,MultipartRelated,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MultipartRelated.cs,IndexOf,Cyclomatic complexity of the method is 12
Complex Method,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetEncodeMethod,Cyclomatic complexity of the method is 9
Complex Method,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParseNameValuePair,Cyclomatic complexity of the method is 29
Complex Method,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParse,Cyclomatic complexity of the method is 12
Complex Method,MimeKit,ParserOptions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParserOptions.cs,CreateEntity,Cyclomatic complexity of the method is 18
Complex Method,MimeKit,TextPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\TextPart.cs,TextPart,Cyclomatic complexity of the method is 9
Long Parameter List,MimeKit.Cryptography,ApplicationPkcs7Mime,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\ApplicationPkcs7Mime.cs,SignAndEncrypt,The method has 5 parameters. Parameters: ctx' signer' digestAlgo' recipients' entity
Long Parameter List,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Create,The method has 5 parameters. Parameters: ctx' signer' digestAlgo' recipients' entity
Long Parameter List,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Create,The method has 6 parameters. Parameters: ctx' signer' digestAlgo' cipherAlgo' recipients' entity
Long Parameter List,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Create,The method has 5 parameters. Parameters: ctx' signer' digestAlgo' recipients' entity
Long Parameter List,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Create,The method has 5 parameters. Parameters: signer' digestAlgo' cipherAlgo' recipients' entity
Long Parameter List,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,SignAndEncrypt,The method has 5 parameters. Parameters: signer' digestAlgo' cipherAlgo' recipients' content
Long Parameter List,MimeKit.Cryptography,SecureMailboxAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMailboxAddress.cs,SecureMailboxAddress,The method has 5 parameters. Parameters: encoding' name' route' address' fingerprint
Long Parameter List,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,BuildCertPath,The method has 5 parameters. Parameters: anchors' certificates' crls' certificate' signingTime
Long Parameter List,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The method has 5 parameters. Parameters: input' length' outbuf' output' uuptr
Long Parameter List,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The method has 5 parameters. Parameters: input' length' outbuf' output' uuptr
Long Parameter List,MimeKit.IO.Filters,ArmoredFromFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\ArmoredFromFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,Filter,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,Flush,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,CharsetFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\CharsetFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,DecoderFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\DecoderFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,Dos2UnixFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\Dos2UnixFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,EncoderFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\EncoderFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,IMimeFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\IMimeFilter.cs,Filter,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,IMimeFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\IMimeFilter.cs,Flush,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,MimeFilterBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\MimeFilterBase.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,MimeFilterBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\MimeFilterBase.cs,Filter,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,MimeFilterBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\MimeFilterBase.cs,Flush,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,PassThroughFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\PassThroughFilter.cs,Filter,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,PassThroughFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\PassThroughFilter.cs,Flush,The method has 5 parameters. Parameters: input' startIndex' length' outputIndex' outputLength
Long Parameter List,MimeKit.IO.Filters,TrailingWhitespaceFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\TrailingWhitespaceFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.IO.Filters,Unix2DosFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\Unix2DosFilter.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The method has 6 parameters. Parameters: input' startIndex' length' outputIndex' outputLength' flush
Long Parameter List,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The method has 5 parameters. Parameters: options' input' startIndex' length' charCount
Long Parameter List,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The method has 5 parameters. Parameters: encoding' input' startIndex' length' charCount
Long Parameter List,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The method has 6 parameters. Parameters: options' codepage' input' startIndex' length' charCount
Long Parameter List,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetTimeOfDay,The method has 5 parameters. Parameters: token' text' hour' minute' second
Long Parameter List,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseDotAtom,The method has 7 parameters. Parameters: text' index' endIndex' sentinels' throwOnError' tokenType' dotatom
Long Parameter List,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseDomainLiteral,The method has 5 parameters. Parameters: text' index' endIndex' throwOnError' domain
Long Parameter List,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseDomain,The method has 6 parameters. Parameters: text' index' endIndex' sentinels' throwOnError' domain
Long Parameter List,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,DecodeTokens,The method has 5 parameters. Parameters: options' tokens' input' inbuf' length
Long Parameter List,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,DecodePhrase,The method has 5 parameters. Parameters: options' phrase' startIndex' count' codepage
Long Parameter List,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,AppendEncodedWord,The method has 6 parameters. Parameters: str' charset' text' startIndex' length' mode
Long Parameter List,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,ShouldMergeWords,The method has 5 parameters. Parameters: options' charset' words' word' i
Long Parameter List,MimeKit.Utils,Token,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,Token,The method has 5 parameters. Parameters: charset' culture' encoding' startIndex' length
Long Parameter List,MimeKit,ContentDisposition,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentDisposition.cs,TryParse,The method has 6 parameters. Parameters: options' text' index' endIndex' throwOnError' disposition
Long Parameter List,MimeKit,ContentDisposition,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentDisposition.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' disposition
Long Parameter List,MimeKit,ContentType,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentType.cs,TryParse,The method has 6 parameters. Parameters: options' text' index' endIndex' throwOnError' contentType
Long Parameter List,MimeKit,ContentType,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentType.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' type
Long Parameter List,MimeKit,DomainList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\DomainList.cs,TryParse,The method has 5 parameters. Parameters: text' index' endIndex' throwOnError' route
Long Parameter List,MimeKit,GroupAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\GroupAddress.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' group
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,Header,The method has 5 parameters. Parameters: options' id' name' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeAddressHeader,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeMessageIdHeader,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeReceivedHeader,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeReferencesHeader,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeContentDisposition,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeContentType,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeUnstructuredHeader,The method has 5 parameters. Parameters: options' format' charset' field' value
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,TryParse,The method has 5 parameters. Parameters: options' input' length' strict' header
Long Parameter List,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' header
Long Parameter List,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParseLocalPart,The method has 5 parameters. Parameters: text' index' endIndex' throwOnError' localpart
Long Parameter List,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParseAddrspec,The method has 6 parameters. Parameters: text' index' endIndex' sentinel' throwOnError' addrspec
Long Parameter List,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParseMailbox,The method has 9 parameters. Parameters: options' text' startIndex' index' endIndex' name' codepage' throwOnError' address
Long Parameter List,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParseGroup,The method has 9 parameters. Parameters: options' text' startIndex' index' endIndex' name' codepage' throwOnError' address
Long Parameter List,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The method has 6 parameters. Parameters: options' text' index' endIndex' throwOnError' address
Long Parameter List,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' address
Long Parameter List,MimeKit,InternetAddressList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddressList.cs,TryParse,The method has 7 parameters. Parameters: options' text' index' endIndex' isGroup' throwOnError' addresses
Long Parameter List,MimeKit,InternetAddressList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddressList.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' addresses
Long Parameter List,MimeKit,MailboxAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MailboxAddress.cs,TryParse,The method has 5 parameters. Parameters: options' buffer' startIndex' length' mailbox
Long Parameter List,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetNextValue,The method has 10 parameters. Parameters: options' charset' encoder' hex' chars' index' bytes' encoded' maxLength' value
Long Parameter List,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParseNameValuePair,The method has 6 parameters. Parameters: options' text' index' endIndex' throwOnError' pair
Long Parameter List,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,DecodeRfc2184,The method has 6 parameters. Parameters: decoder' hex' text' startIndex' count' flush
Long Parameter List,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParse,The method has 6 parameters. Parameters: options' text' index' endIndex' throwOnError' paramList
Long Identifier,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,,The length of the parameter DefaultEncryptionAlgorithmRank is 30.
Long Identifier,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,,The length of the parameter sqliteConnectionStringBuilderClass is 34.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter ContentConfidentialityAlgorithmId is 33.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter NonReceiptNotificationRequested is 31.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginallyIntendedRecipAddrtypeA is 32.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginallyIntendedRecipAddrtypeW is 32.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginallyIntendedRecipEmailAddressA is 36.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginallyIntendedRecipEmailAddressW is 36.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginallyIntendedRecipEntryId is 30.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginallyIntendedRecipientName is 31.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginalSentRepresentingAddrtypeA is 33.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginalSentRepresentingAddrtypeW is 33.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginalSentRepresentingEmailAddressA is 37.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginalSentRepresentingEmailAddressW is 37.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginalSentRepresentingEntryId is 31.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginalSentRepresentingSearchKey is 33.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginatorAndDlExpansionHistory is 31.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginatorDeliveryReportRequested is 33.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginatorNonDeliveryReportRequested is 36.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter OriginatorRequestedAlternateRecipient is 37.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter PhysicalDeliveryBureauFaxDelivery is 33.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter PhysicalForwardingAddressRequested is 34.
Long Identifier,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,,The length of the parameter RecipientReassignmentProhibited is 31.
Long Statement,MimeKit.Cryptography,CryptographyContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\CryptographyContext.cs,Create,The length of the statement  "						throw new NotSupportedException ("You need to subclass MimeKit.Cryptography.SecureMimeContext and then register it with MimeKit.Cryptography.CryptographyContext.Register()."); " is 175.
Long Statement,MimeKit.Cryptography,CryptographyContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\CryptographyContext.cs,Create,The length of the statement  "					throw new NotSupportedException ("You need to subclass MimeKit.Cryptography.GnuPGContext and then register it with MimeKit.Cryptography.CryptographyContext.Register()."); " is 170.
Long Statement,MimeKit.Cryptography,DefaultSecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\DefaultSecureMimeContext.cs,GetCmsSigner,The length of the statement  "				if (record.KeyUsage != X509KeyUsageFlags.None && (record.KeyUsage & SecureMimeContext.DigitalSignatureKeyUsageFlags) == 0) " is 122.
Long Statement,MimeKit.Cryptography,SqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqlCertificateDatabase.cs,CreateIndex,The length of the statement  "			var query = string.Format ("CREATE INDEX IF NOT EXISTS {0} ON {1}({2})"' indexName' tableName' string.Join ("' "' columnNames)); " is 128.
Long Statement,MimeKit.Cryptography,SqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqlCertificateDatabase.cs,GetSelectCommand,The length of the statement  "			command.CommandText = query + "WHERE ISSUERNAME = @ISSUERNAME AND SERIALNUMBER = @SERIALNUMBER AND FINGERPRINT = @FINGERPRINT LIMIT 1"; " is 135.
Long Statement,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,CreateConnection,The length of the statement  "			var connectionString = (string) sqliteConnectionStringBuilderClass.GetProperty ("ConnectionString").GetValue (builder' null); " is 125.
Long Statement,MimeKit.Cryptography,WindowsSecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\WindowsSecureMimeContext.cs,GetCmsSignerCertificate,The length of the statement  "					if (usage != null && (usage.KeyUsages & (RealX509KeyUsageFlags.DigitalSignature | RealX509KeyUsageFlags.NonRepudiation)) == 0) " is 126.
Long Statement,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,Find,The length of the statement  "			using (var command = GetSelectCommand (selector' trustedOnly' false' fields | X509CertificateRecordFields.Certificate)) { " is 121.
Long Statement,MimeKit.IO.Filters,CharsetFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\CharsetFilter.cs,Filter,The length of the statement  "					decoder.Convert (input' inputIndex' inputLeft' chars' charIndex' charsLeft' flush' out nread' out nwritten' out decoded); " is 121.
Long Statement,MimeKit.IO.Filters,CharsetFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\CharsetFilter.cs,Filter,The length of the statement  "					encoder.Convert (chars' charIndex' charsLeft' OutputBuffer' outputOffset' outputLeft' flush' out nread' out nwritten' out encoded); " is 131.
Long Statement,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,SkipQuoted,The length of the statement  "					throw new ParseException (string.Format ("Incomplete quoted-string token at offset {0}"' startIndex)' startIndex' index); " is 121.
Long Statement,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseDomainLiteral,The length of the statement  "						throw new ParseException (string.Format ("Incomplete domain literal token at offset {0}"' startIndex)' startIndex' index); " is 122.
Long Statement,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The length of the statement  "				return TryParseGroup (options' text' startIndex' ref index' endIndex' MimeUtils.Unquote (name)' codepage' throwOnError' out address); " is 133.
Long Statement,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The length of the statement  "				return TryParseMailbox (options' text' startIndex' ref index' endIndex' MimeUtils.Unquote (name)' codepage' throwOnError' out address); " is 135.
Long Statement,MimeKit,MessageIdList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MessageIdList.cs,ValidateMessageId,The length of the statement  "			if (!InternetAddress.TryParse (ParserOptions.Default' buffer' ref index' buffer.Length' false' out addr) || !(addr is MailboxAddress)) " is 134.
Long Statement,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,IsMboxMarker,The length of the statement  "			return *inptr++ == (byte) 'F' && *inptr++ == (byte) 'r' && *inptr++ == (byte) 'o' && *inptr++ == (byte) 'm' && *inptr == (byte) ' '; " is 132.
Long Statement,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ParseAndAppendHeader,The length of the statement  "					Debug.WriteLine (string.Format ("Invalid header at offset {0}: {1}"' headerOffset' ConvertToCString (headerBuffer' 0' headerIndex))); " is 133.
Long Statement,MimeKit,ParserOptions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParserOptions.cs,RegisterMimeType,The length of the statement  "				throw new ArgumentException ("The specified type must have a constructor that takes a MimeEntityConstructorInfo argument."' "type"); " is 132.
Complex Conditional,MimeKit.Encodings,YEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YEncoder.cs,Encode,The conditional expression  "c == 0 || c == (byte) '\t' || c == (byte) '\r' || c == (byte) '\n' || c == (byte) '=' || c == (byte) '.'"  is complex.
Complex Conditional,MimeKit.IO,BoundStream,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\BoundStream.cs,Seek,The conditional expression  "(EndBoundary != -1 && real < EndBoundary) || (eos && real < StartBoundary + position)"  is complex.
Complex Conditional,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The conditional expression  "(i >= 33 && i <= 60) || (i >= 62 && i <= 126) || i == 32"  is complex.
Complex Conditional,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The conditional expression  "(i >= '0' && i <= '9') || (i >= 'a' && i <= 'z') || (i >= 'A' && i <= 'Z')"  is complex.
Complex Conditional,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The conditional expression  "(i >= '0' && i <= '9') || (i >= 'a' && i <= 'f') || (i >= 'A' && i <= 'F')"  is complex.
Complex Conditional,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The conditional expression  "codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15"  is complex.
Complex Conditional,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TryGetEncodedWordToken,The conditional expression  "*inptr++ != '=' || *inptr++ != '?' || *inend++ != '?' || *inend++ != '='"  is complex.
Complex Conditional,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The conditional expression  "inptr + 3 >= inend || *inptr != '?' || !IsBbQq (*(inptr + 1)) || *(inptr + 2) != '?'"  is complex.
Complex Conditional,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The conditional expression  "inptr + 3 >= inend || *inptr != '?' || !IsBbQq (*(inptr + 1)) || *(inptr + 2) != '?'"  is complex.
Complex Conditional,MimeKit,InternetAddressList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddressList.cs,TryParse,The conditional expression  "index < endIndex && text[index] != (byte) ''' && (!isGroup || text[index] != (byte) ';')"  is complex.
Complex Conditional,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParseNameValuePair,The conditional expression  "index < endIndex && text[index] != (byte) ';' && text[index] != (byte) '\r' && text[index] != (byte) '\n'"  is complex.
Empty Catch Block,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,NpgsqlCertificateDatabase,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,NpgsqlCertificateDatabase,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,NpgsqlCertificateDatabase,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,SqliteCertificateDatabase,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,SqliteCertificateDatabase,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,SqliteCertificateDatabase,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,DecodeEncryptionAlgorithms,The method has an empty catch block.
Empty Catch Block,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,DecodeEncryptionAlgorithms,The method has an empty catch block.
Empty Catch Block,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The method has an empty catch block.
Empty Catch Block,MimeKit,ContentObject,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentObject.cs,WriteTo,The method has an empty catch block.
Empty Catch Block,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,ToString,The method has an empty catch block.
Magic Number,MimeKit.Cryptography,DefaultSecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\DefaultSecureMimeContext.cs,GetTrustedAnchors,The following statement contains a magic number: var keyUsage = new bool[9];
Magic Number,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Decrypt,The following statement contains a magic number: Count < 2
Magic Number,MimeKit.Cryptography,MultipartEncrypted,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartEncrypted.cs,Decrypt,The following statement contains a magic number: Count < 2
Magic Number,MimeKit.Cryptography,MultipartSigned,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartSigned.cs,Verify,The following statement contains a magic number: Count < 2
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,Supports,The following statement contains a magic number: type.Length != 2 || type[0] != "application"
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,Supports,The following statement contains a magic number: type[1] = type[1].Substring (2);
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetFingerprint,The following statement contains a magic number: length < 16
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,Sign,The following statement contains a magic number: var buf = new byte[4096];
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,GetDigitalSignatures,The following statement contains a magic number: var buf = new byte[4096];
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,Compress,The following statement contains a magic number: content.CopyTo (literal' 4096);
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,Encrypt,The following statement contains a magic number: compressed.CopyTo (encrypted' 4096);
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,SignAndEncrypt,The following statement contains a magic number: var buf = new byte[4096];
Magic Number,MimeKit.Cryptography,OpenPgpContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\OpenPgpContext.cs,SignAndEncrypt,The following statement contains a magic number: compressed.CopyTo (encrypted' 4096);
Magic Number,MimeKit.Cryptography,SecureMailboxAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMailboxAddress.cs,ValidateFingerprint,The following statement contains a magic number: fingerprint[i] > 128 || !((byte) fingerprint[i]).IsXDigit ()
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Supports,The following statement contains a magic number: type.Length != 2 || type[0] != "application"
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Supports,The following statement contains a magic number: type[1] = type[1].Substring (2);
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,AddSecureMimeCapabilities,The following statement contains a magic number: switch (algorithm) {  				case EncryptionAlgorithm.Camellia256:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia256Cbc);  					break;  				case EncryptionAlgorithm.Camellia192:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia192Cbc);  					break;  				case EncryptionAlgorithm.Camellia128:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia128Cbc);  					break;  				case EncryptionAlgorithm.Aes256:  					capabilities.AddCapability (SmimeCapabilities.Aes256Cbc);  					break;  				case EncryptionAlgorithm.Aes192:  					capabilities.AddCapability (SmimeCapabilities.Aes192Cbc);  					break;  				case EncryptionAlgorithm.Aes128:  					capabilities.AddCapability (SmimeCapabilities.Aes128Cbc);  					break;  				case EncryptionAlgorithm.Idea:  					capabilities.AddCapability (SmimeCapabilities.IdeaCbc);  					break;  				case EncryptionAlgorithm.Cast5:  					capabilities.AddCapability (SmimeCapabilities.Cast5Cbc);  					break;  				case EncryptionAlgorithm.TripleDes:  					capabilities.AddCapability (SmimeCapabilities.DesEde3Cbc);  					break;  				case EncryptionAlgorithm.RC2128:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 128);  					break;  				case EncryptionAlgorithm.RC264:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 64);  					break;  				case EncryptionAlgorithm.RC240:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 40);  					break;  				case EncryptionAlgorithm.Des:  					capabilities.AddCapability (SmimeCapabilities.DesCbc);  					break;  				}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,AddSecureMimeCapabilities,The following statement contains a magic number: switch (algorithm) {  				case EncryptionAlgorithm.Camellia256:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia256Cbc);  					break;  				case EncryptionAlgorithm.Camellia192:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia192Cbc);  					break;  				case EncryptionAlgorithm.Camellia128:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia128Cbc);  					break;  				case EncryptionAlgorithm.Aes256:  					capabilities.AddCapability (SmimeCapabilities.Aes256Cbc);  					break;  				case EncryptionAlgorithm.Aes192:  					capabilities.AddCapability (SmimeCapabilities.Aes192Cbc);  					break;  				case EncryptionAlgorithm.Aes128:  					capabilities.AddCapability (SmimeCapabilities.Aes128Cbc);  					break;  				case EncryptionAlgorithm.Idea:  					capabilities.AddCapability (SmimeCapabilities.IdeaCbc);  					break;  				case EncryptionAlgorithm.Cast5:  					capabilities.AddCapability (SmimeCapabilities.Cast5Cbc);  					break;  				case EncryptionAlgorithm.TripleDes:  					capabilities.AddCapability (SmimeCapabilities.DesEde3Cbc);  					break;  				case EncryptionAlgorithm.RC2128:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 128);  					break;  				case EncryptionAlgorithm.RC264:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 64);  					break;  				case EncryptionAlgorithm.RC240:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 40);  					break;  				case EncryptionAlgorithm.Des:  					capabilities.AddCapability (SmimeCapabilities.DesCbc);  					break;  				}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,AddSecureMimeCapabilities,The following statement contains a magic number: switch (algorithm) {  				case EncryptionAlgorithm.Camellia256:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia256Cbc);  					break;  				case EncryptionAlgorithm.Camellia192:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia192Cbc);  					break;  				case EncryptionAlgorithm.Camellia128:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia128Cbc);  					break;  				case EncryptionAlgorithm.Aes256:  					capabilities.AddCapability (SmimeCapabilities.Aes256Cbc);  					break;  				case EncryptionAlgorithm.Aes192:  					capabilities.AddCapability (SmimeCapabilities.Aes192Cbc);  					break;  				case EncryptionAlgorithm.Aes128:  					capabilities.AddCapability (SmimeCapabilities.Aes128Cbc);  					break;  				case EncryptionAlgorithm.Idea:  					capabilities.AddCapability (SmimeCapabilities.IdeaCbc);  					break;  				case EncryptionAlgorithm.Cast5:  					capabilities.AddCapability (SmimeCapabilities.Cast5Cbc);  					break;  				case EncryptionAlgorithm.TripleDes:  					capabilities.AddCapability (SmimeCapabilities.DesEde3Cbc);  					break;  				case EncryptionAlgorithm.RC2128:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 128);  					break;  				case EncryptionAlgorithm.RC264:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 64);  					break;  				case EncryptionAlgorithm.RC240:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 40);  					break;  				case EncryptionAlgorithm.Des:  					capabilities.AddCapability (SmimeCapabilities.DesCbc);  					break;  				}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Sign,The following statement contains a magic number: content.CopyTo (stream' 4096);
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,TryGetEncryptionAlgorithm,The following statement contains a magic number: switch (bits) {  				case 128: algorithm = EncryptionAlgorithm.RC2128; return true;  				case 64: algorithm = EncryptionAlgorithm.RC264; return true;  				case 40: algorithm = EncryptionAlgorithm.RC240; return true;  				}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,TryGetEncryptionAlgorithm,The following statement contains a magic number: switch (bits) {  				case 128: algorithm = EncryptionAlgorithm.RC2128; return true;  				case 64: algorithm = EncryptionAlgorithm.RC264; return true;  				case 40: algorithm = EncryptionAlgorithm.RC240; return true;  				}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,TryGetEncryptionAlgorithm,The following statement contains a magic number: switch (bits) {  				case 128: algorithm = EncryptionAlgorithm.RC2128; return true;  				case 64: algorithm = EncryptionAlgorithm.RC264; return true;  				case 40: algorithm = EncryptionAlgorithm.RC240; return true;  				}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Envelope,The following statement contains a magic number: switch (GetPreferredEncryptionAlgorithm (recipients)) {  			case EncryptionAlgorithm.Camellia256:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia256Cbc);  				break;  			case EncryptionAlgorithm.Camellia192:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia192Cbc);  				break;  			case EncryptionAlgorithm.Camellia128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia128Cbc);  				break;  			case EncryptionAlgorithm.Aes256:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes256Cbc);  				break;  			case EncryptionAlgorithm.Aes192:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes192Cbc);  				break;  			case EncryptionAlgorithm.Aes128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes128Cbc);  				break;  			case EncryptionAlgorithm.Cast5:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Cast5Cbc);  				break;  			case EncryptionAlgorithm.Idea:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.IdeaCbc);  				break;  			case EncryptionAlgorithm.RC2128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 128);  				break;  			case EncryptionAlgorithm.RC264:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 64);  				break;  			case EncryptionAlgorithm.RC240:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 40);  				break;  			default:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.DesEde3Cbc);  				break;  			}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Envelope,The following statement contains a magic number: switch (GetPreferredEncryptionAlgorithm (recipients)) {  			case EncryptionAlgorithm.Camellia256:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia256Cbc);  				break;  			case EncryptionAlgorithm.Camellia192:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia192Cbc);  				break;  			case EncryptionAlgorithm.Camellia128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia128Cbc);  				break;  			case EncryptionAlgorithm.Aes256:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes256Cbc);  				break;  			case EncryptionAlgorithm.Aes192:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes192Cbc);  				break;  			case EncryptionAlgorithm.Aes128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes128Cbc);  				break;  			case EncryptionAlgorithm.Cast5:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Cast5Cbc);  				break;  			case EncryptionAlgorithm.Idea:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.IdeaCbc);  				break;  			case EncryptionAlgorithm.RC2128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 128);  				break;  			case EncryptionAlgorithm.RC264:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 64);  				break;  			case EncryptionAlgorithm.RC240:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 40);  				break;  			default:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.DesEde3Cbc);  				break;  			}
Magic Number,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,Envelope,The following statement contains a magic number: switch (GetPreferredEncryptionAlgorithm (recipients)) {  			case EncryptionAlgorithm.Camellia256:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia256Cbc);  				break;  			case EncryptionAlgorithm.Camellia192:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia192Cbc);  				break;  			case EncryptionAlgorithm.Camellia128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Camellia128Cbc);  				break;  			case EncryptionAlgorithm.Aes256:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes256Cbc);  				break;  			case EncryptionAlgorithm.Aes192:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes192Cbc);  				break;  			case EncryptionAlgorithm.Aes128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Aes128Cbc);  				break;  			case EncryptionAlgorithm.Cast5:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.Cast5Cbc);  				break;  			case EncryptionAlgorithm.Idea:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.IdeaCbc);  				break;  			case EncryptionAlgorithm.RC2128:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 128);  				break;  			case EncryptionAlgorithm.RC264:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 64);  				break;  			case EncryptionAlgorithm.RC240:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.RC2Cbc' 40);  				break;  			default:  				envelopedData = cms.Generate (input' CmsEnvelopedGenerator.DesEde3Cbc);  				break;  			}
Magic Number,MimeKit.Cryptography,SqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqlCertificateDatabase.cs,GetSelectCommand,The following statement contains a magic number: secure.Fingerprint.Length < 40
Magic Number,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,SqliteCertificateDatabase,The following statement contains a magic number: platform == PlatformID.Unix || platform == PlatformID.MacOSX || IntPtr.Size == 4
Magic Number,MimeKit.Cryptography,WindowsSecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\WindowsSecureMimeContext.cs,ReadAllBytes,The following statement contains a magic number: stream.CopyTo (memory' 4096);
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,Find,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,FindCertificates,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,FindPrivateKeys,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,Find,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,Find,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,Find,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,Find,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,GetCrlStore,The following statement contains a magic number: var buffer = new byte[4096];
Magic Number,MimeKit.Cryptography,X509CertificateExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateExtensions.cs,GetFingerprint,The following statement contains a magic number: var data = new byte[20];
Magic Number,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,EstimateOutputLength,The following statement contains a magic number: return inputLength + 3;
Magic Number,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,Decode,The following statement contains a magic number: saved = (saved << 6) | c;
Magic Number,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) ((saved >> 16) & 0xFF);
Magic Number,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) ((saved >> 8) & 0xFF);
Magic Number,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,Decode,The following statement contains a magic number: bytes == 4
Magic Number,MimeKit.Encodings,Base64Decoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Decoder.cs,Decode,The following statement contains a magic number: inptr > input && eq < 2
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,EstimateOutputLength,The following statement contains a magic number: return ((inputLength + 2) / 3) * 4;
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,EstimateOutputLength,The following statement contains a magic number: return ((inputLength + 2) / 3) * 4;
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,EstimateOutputLength,The following statement contains a magic number: return ((inputLength + 2) / 3) * 4;
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,EstimateOutputLength,The following statement contains a magic number: return (((inputLength + 2) / MaxInputPerLine) * MaxLineLength) + MaxLineLength;
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: byte* inend = inptr + length - 2;
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: c2 = saved < 2 ? *inptr++ : saved2;
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: *outptr++ = base64_alphabet[c1 >> 2];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: *outptr++ = base64_alphabet[(c2 >> 4) | ((c1 & 0x3) << 4)];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: *outptr++ = base64_alphabet[(c2 >> 4) | ((c1 & 0x3) << 4)];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: *outptr++ = base64_alphabet[((c2 & 0x0f) << 2) | (c3 >> 6)];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: *outptr++ = base64_alphabet[((c2 & 0x0f) << 2) | (c3 >> 6)];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: remaining = 2 - (int) (inptr - inend);
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: length + saved > 2
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Encode,The following statement contains a magic number: remaining == 2
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Flush,The following statement contains a magic number: *outptr++ = base64_alphabet[c1 >> 2];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Flush,The following statement contains a magic number: *outptr++ = base64_alphabet[c2 >> 4 | ((c1 & 0x3) << 4)];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Flush,The following statement contains a magic number: *outptr++ = base64_alphabet[c2 >> 4 | ((c1 & 0x3) << 4)];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Flush,The following statement contains a magic number: *outptr++ = base64_alphabet[(c2 & 0x0f) << 2];
Magic Number,MimeKit.Encodings,Base64Encoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\Base64Encoder.cs,Flush,The following statement contains a magic number: saved == 2
Magic Number,MimeKit.Encodings,HexDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\HexDecoder.cs,EstimateOutputLength,The following statement contains a magic number: return inputLength + 3;
Magic Number,MimeKit.Encodings,HexDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\HexDecoder.cs,Decode,The following statement contains a magic number: switch (state) {  				case HexDecoderState.PassThrough:  					while (inptr < inend) {  						c = *inptr++;    						if (c == '%') {  							state = HexDecoderState.Percent;  							break;  						}    						*outptr++ = c;  					}  					break;  				case HexDecoderState.Percent:  					c = *inptr++;  					state = HexDecoderState.DecodeByte;  					saved = c;  					break;  				case HexDecoderState.DecodeByte:  					c = *inptr++;  					if (c.IsXDigit () && saved.IsXDigit ()) {  						saved = saved.ToXDigit ();  						c = c.ToXDigit ();    						*outptr++ = (byte) ((saved << 4) | c);  					} else {  						// invalid encoded sequence - pass it through undecoded  						*outptr++ = (byte) '%';  						*outptr++ = saved;  						*outptr++ = c;  					}    					state = HexDecoderState.PassThrough;  					break;  				}
Magic Number,MimeKit.Encodings,HexEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\HexEncoder.cs,EstimateOutputLength,The following statement contains a magic number: return inputLength * 3;
Magic Number,MimeKit.Encodings,QEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QEncoder.cs,EstimateOutputLength,The following statement contains a magic number: return inputLength * 3;
Magic Number,MimeKit.Encodings,QuotedPrintableDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableDecoder.cs,EstimateOutputLength,The following statement contains a magic number: return inputLength + 3;
Magic Number,MimeKit.Encodings,QuotedPrintableDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableDecoder.cs,Decode,The following statement contains a magic number: switch (state) {  				case QpDecoderState.PassThrough:  					while (inptr < inend) {  						c = *inptr++;    						if (c == '=') {  							state = QpDecoderState.EqualSign;  							break;  						} else if (rfc2047 && c == '_') {  							*outptr++ = (byte) ' ';  						} else {  							*outptr++ = c;  						}  					}  					break;  				case QpDecoderState.EqualSign:  					c = *inptr++;  					if (c == '\n') {  						// this is a soft break ("=\n")  						state = QpDecoderState.PassThrough;  					} else {  						state = QpDecoderState.DecodeByte;  						saved = c;  					}  					break;  				case QpDecoderState.DecodeByte:  					c = *inptr++;  					if (c.IsXDigit () && saved.IsXDigit ()) {  						saved = saved.ToXDigit ();  						c = c.ToXDigit ();    						*outptr++ = (byte) ((saved << 4) | c);  					} else if (saved == '\r' && c == '\n') {  						// end-of-line  					} else {  						// invalid encoded sequence - pass it through undecoded  						*outptr++ = (byte) '=';  						*outptr++ = saved;  						*outptr++ = c;  					}    					state = QpDecoderState.PassThrough;  					break;  				}
Magic Number,MimeKit.Encodings,QuotedPrintableEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableEncoder.cs,Encode,The following statement contains a magic number: *outptr++ = hex_alphabet[(saved >> 4) & 0x0f];
Magic Number,MimeKit.Encodings,QuotedPrintableEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableEncoder.cs,Encode,The following statement contains a magic number: currentLineLength += 3;
Magic Number,MimeKit.Encodings,QuotedPrintableEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableEncoder.cs,Flush,The following statement contains a magic number: *outptr++ = hex_alphabet[(saved >> 4) & 0xf];
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,EstimateOutputLength,The following statement contains a magic number: return inputLength + 3;
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: saved = (saved << 8) | c;
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: byte b0 = (byte) ((saved >> 24) & 0xFF);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: byte b1 = (byte) ((saved >> 16) & 0xFF);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: byte b2 = (byte) ((saved >> 8) & 0xFF);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) (uudecode_rank[b0] << 2 | uudecode_rank[b1] >> 4);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) (uudecode_rank[b0] << 2 | uudecode_rank[b1] >> 4);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) (uudecode_rank[b1] << 4 | uudecode_rank[b2] >> 2);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) (uudecode_rank[b1] << 4 | uudecode_rank[b2] >> 2);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: *outptr++ = (byte) (uudecode_rank[b2] << 6 | uudecode_rank[b3]);
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: uulen -= 3;
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: uulen >= 3
Magic Number,MimeKit.Encodings,UUDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUDecoder.cs,Decode,The following statement contains a magic number: nsaved == 4
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,EstimateOutputLength,The following statement contains a magic number: return (((inputLength + 2) / MaxInputPerLine) * MaxOutputPerLine) + MaxOutputPerLine + 2;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,EstimateOutputLength,The following statement contains a magic number: return (((inputLength + 2) / MaxInputPerLine) * MaxOutputPerLine) + MaxOutputPerLine + 2;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: bufptr = uuptr + ((uulen / 3) * 4);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: bufptr = uuptr + ((uulen / 3) * 4);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: (length + uulen) < 45
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: b0 = (byte) ((saved >> 8) & 0xFF);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode ((b0 >> 2) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b0 << 4) | ((b1 >> 4) & 0x0F)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b0 << 4) | ((b1 >> 4) & 0x0F)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b1 << 2) | ((b2 >> 6) & 0x03)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b1 << 2) | ((b2 >> 6) & 0x03)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: uulen += 3;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: nsaved == 2
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode ((b0 >> 2) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b0 << 4) | ((b1 >> 4) & 0x0F)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b0 << 4) | ((b1 >> 4) & 0x0F)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b1 << 2) | ((b2 >> 6) & 0x03)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: *bufptr++ = Encode (((b1 << 2) | ((b2 >> 6) & 0x03)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: uulen += 3;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: uulen < 45 && (inptr + 3) <= inend
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: uulen < 45 && (inptr + 3) <= inend
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: outptr += ((uulen / 3) * 4) + 1;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: outptr += ((uulen / 3) * 4) + 1;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: (inptr + 45) <= inend
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Encode,The following statement contains a magic number: uulen >= 45
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: byte* bufptr = uuptr + ((uulen / 3) * 4);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: byte* bufptr = uuptr + ((uulen / 3) * 4);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: saved <<= 8;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: nsaved < 3
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: b0 = (byte) ((saved >> 16) & 0xFF);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: b1 = (byte) ((saved >> 8) & 0xFF);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: *bufptr++ = Encode ((b0 >> 2) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: *bufptr++ = Encode (((b0 << 4) | ((b1 >> 4) & 0x0F)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: *bufptr++ = Encode (((b0 << 4) | ((b1 >> 4) & 0x0F)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: *bufptr++ = Encode (((b1 << 2) | ((b2 >> 6) & 0x03)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: *bufptr++ = Encode (((b1 << 2) | ((b2 >> 6) & 0x03)) & 0x3F);
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: uulen += 3;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: nsaved == 3
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: int n = (uulen / 3) * 4;
Magic Number,MimeKit.Encodings,UUEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\UUEncoder.cs,Flush,The following statement contains a magic number: int n = (uulen / 3) * 4;
Magic Number,MimeKit.Encodings,YDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YDecoder.cs,Decode,The following statement contains a magic number: octet -= 64;
Magic Number,MimeKit.Encodings,YDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YDecoder.cs,Decode,The following statement contains a magic number: octet -= 42;
Magic Number,MimeKit.Encodings,YEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YEncoder.cs,YEncoder,The following statement contains a magic number: maxLineLength < 0 || maxLineLength > 254
Magic Number,MimeKit.Encodings,YEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YEncoder.cs,EstimateOutputLength,The following statement contains a magic number: return (inputLength * 2) + (inputLength / lineLength) + 1;
Magic Number,MimeKit.Encodings,YEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YEncoder.cs,Encode,The following statement contains a magic number: c += (byte) 42;
Magic Number,MimeKit.Encodings,YEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YEncoder.cs,Encode,The following statement contains a magic number: *outptr++ = (byte) (c + 64);
Magic Number,MimeKit.Encodings,YEncoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\YEncoder.cs,Encode,The following statement contains a magic number: octets += 2;
Magic Number,MimeKit.IO.Filters,ArmoredFromFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\ArmoredFromFilter.cs,Filter,The following statement contains a magic number: left < 5
Magic Number,MimeKit.IO.Filters,ArmoredFromFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\ArmoredFromFilter.cs,Filter,The following statement contains a magic number: int need = (endIndex - startIndex) + fromOffsets.Count * 2;
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,GetBestEncoding,The following statement contains a magic number: maxLineLength < 72 || maxLineLength > 998
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,GetBestEncoding,The following statement contains a magic number: maxLineLength < 72 || maxLineLength > 998
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,GetBestEncoding,The following statement contains a magic number: switch (constraint) {  			case EncodingConstraint.SevenBit:  				if (count0 > 0)  					return ContentEncoding.Base64;    				if (count8 > 0) {  					if (count8 >= (int) (total * (17.0 / 100.0)))  						return ContentEncoding.Base64;    					return ContentEncoding.QuotedPrintable;  				}    				if (maxline > maxLineLength)  					return ContentEncoding.QuotedPrintable;    				break;  			case EncodingConstraint.EightBit:  				if (count0 > 0)  					return ContentEncoding.Base64;    				if (maxline > maxLineLength)  					return ContentEncoding.QuotedPrintable;    				if (count8 > 0)  					return ContentEncoding.EightBit;    				break;  			case EncodingConstraint.None:  				if (count0 > 0)  					return ContentEncoding.Binary;    				if (maxline > maxLineLength)  					return ContentEncoding.QuotedPrintable;    				if (count8 > 0)  					return ContentEncoding.EightBit;    				break;  			default:  				throw new ArgumentOutOfRangeException ("constraint");  			}
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,GetBestEncoding,The following statement contains a magic number: switch (constraint) {  			case EncodingConstraint.SevenBit:  				if (count0 > 0)  					return ContentEncoding.Base64;    				if (count8 > 0) {  					if (count8 >= (int) (total * (17.0 / 100.0)))  						return ContentEncoding.Base64;    					return ContentEncoding.QuotedPrintable;  				}    				if (maxline > maxLineLength)  					return ContentEncoding.QuotedPrintable;    				break;  			case EncodingConstraint.EightBit:  				if (count0 > 0)  					return ContentEncoding.Base64;    				if (maxline > maxLineLength)  					return ContentEncoding.QuotedPrintable;    				if (count8 > 0)  					return ContentEncoding.EightBit;    				break;  			case EncodingConstraint.None:  				if (count0 > 0)  					return ContentEncoding.Binary;    				if (maxline > maxLineLength)  					return ContentEncoding.QuotedPrintable;    				if (count8 > 0)  					return ContentEncoding.EightBit;    				break;  			default:  				throw new ArgumentOutOfRangeException ("constraint");  			}
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,IsMboxMarker,The following statement contains a magic number: return *(buf + 4) == (byte) ' ';
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,Scan,The following statement contains a magic number: !hasMarker && markerLength > 0 && markerLength < 5
Magic Number,MimeKit.IO.Filters,BestEncodingFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\BestEncodingFilter.cs,Scan,The following statement contains a magic number: !hasMarker && markerLength == 5 && IsMboxMarker (marker)
Magic Number,MimeKit.IO.Filters,CharsetFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\CharsetFilter.cs,Filter,The following statement contains a magic number: EnsureOutputSize (outputOffset + TargetEncoding.GetMaxByteCount (charsLeft) + 4' true);
Magic Number,MimeKit.IO.Filters,MimeFilterBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\MimeFilterBase.cs,GetIdealBufferSize,The following statement contains a magic number: return (need + 63) & ~63;
Magic Number,MimeKit.IO.Filters,MimeFilterBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\MimeFilterBase.cs,GetIdealBufferSize,The following statement contains a magic number: return (need + 63) & ~63;
Magic Number,MimeKit.IO.Filters,Unix2DosFilter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\IO\Filters\Unix2DosFilter.cs,Filter,The following statement contains a magic number: EnsureOutputSize (length * 2' false);
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: int nread = (saved >> 24) & 0xFF;
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: nread == 4
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following statement contains a magic number: saved |= nread << 24;
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: compressedSize -= 12;
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: EnsureOutputSize (Math.Max (estimatedSize' 4096)' false);
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following statement contains a magic number: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractRecipientTable,The following statement contains a magic number: switch (prop.PropertyTag.Id) {  					case TnefPropertyId.RecipientType:  						int recipientType = prop.ReadValueAsInt32 ();  						switch (recipientType) {  						case 1: list = message.To; break;  						case 2: list = message.Cc; break;  						case 3: list = message.Bcc; break;  						}  						break;  					case TnefPropertyId.TransmitableDisplayName:  						if (string.IsNullOrEmpty (name))  							name = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.DisplayName:  						name = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.EmailAddress:  						if (string.IsNullOrEmpty (addr))  							addr = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.SmtpAddress:  						// The SmtpAddress' if it exists' should take precedence over the EmailAddress  						// (since the SmtpAddress is meant to be used in the RCPT TO command).  						addr = prop.ReadValueAsString ();  						break;  					}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractRecipientTable,The following statement contains a magic number: switch (prop.PropertyTag.Id) {  					case TnefPropertyId.RecipientType:  						int recipientType = prop.ReadValueAsInt32 ();  						switch (recipientType) {  						case 1: list = message.To; break;  						case 2: list = message.Cc; break;  						case 3: list = message.Bcc; break;  						}  						break;  					case TnefPropertyId.TransmitableDisplayName:  						if (string.IsNullOrEmpty (name))  							name = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.DisplayName:  						name = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.EmailAddress:  						if (string.IsNullOrEmpty (addr))  							addr = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.SmtpAddress:  						// The SmtpAddress' if it exists' should take precedence over the EmailAddress  						// (since the SmtpAddress is meant to be used in the RCPT TO command).  						addr = prop.ReadValueAsString ();  						break;  					}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractMapiProperties,The following statement contains a magic number: switch (prop.PropertyTag.Id) {  				case TnefPropertyId.InternetMessageId:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode) {  						message.MessageId = prop.ReadValueAsString ();  					}  					break;  				case TnefPropertyId.Subject:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode) {  						message.Subject = prop.ReadValueAsString ();  					}  					break;  				case TnefPropertyId.RtfCompressed:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Binary) {  						var rtf = new TextPart ("rtf");  						rtf.ContentType.Name = "body.rtf";    						var converter = new RtfCompressedToRtf ();  						var content = new MemoryBlockStream ();    						using (var filtered = new FilteredStream (content)) {  							filtered.Add (converter);    							using (var compressed = prop.GetRawValueReadStream ()) {  								compressed.CopyTo (filtered' 4096);  								filtered.Flush ();  							}  						}    						rtf.ContentObject = new ContentObject (content);  						content.Position = 0;    						builder.Attachments.Add (rtf);  					}  					break;  				case TnefPropertyId.BodyHtml:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Binary) {  						var html = new TextPart ("html");  						html.ContentType.Name = "body.html";  						html.Text = prop.ReadValueAsString ();    						builder.Attachments.Add (html);  					}  					break;  				case TnefPropertyId.Body:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Binary) {  						var plain = new TextPart ("plain");  						plain.ContentType.Name = "body.txt";  						plain.Text = prop.ReadValueAsString ();    						builder.Attachments.Add (plain);  					}  					break;  				}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The following statement contains a magic number: switch (reader.AttributeTag) {  				case TnefAttributeTag.AttachRenderData:  					attachMethod = TnefAttachMethod.ByValue;  					attachment = new MimePart ();  					break;  				case TnefAttributeTag.Attachment:  					if (attachment == null)  						break;    					while (prop.ReadNextProperty ()) {  						switch (prop.PropertyTag.Id) {  						case TnefPropertyId.AttachLongFilename:  							attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachFilename:  							if (attachment.FileName == null)  								attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachContentLocation:  							text = prop.ReadValueAsString ();  							if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  								attachment.ContentLocation = new Uri (text' UriKind.Absolute);  							else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  								attachment.ContentLocation = new Uri (text' UriKind.Relative);  							break;  						case TnefPropertyId.AttachContentBase:  							text = prop.ReadValueAsString ();  							attachment.ContentBase = new Uri (text' UriKind.Absolute);  							break;  						case TnefPropertyId.AttachContentId:  							attachment.ContentId = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachDisposition:  							text = prop.ReadValueAsString ();  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition (text);  							else  								attachment.ContentDisposition.Disposition = text;  							break;  						case TnefPropertyId.AttachData:  							var stream = prop.GetRawValueReadStream ();  							var content = new MemoryStream ();  							var guid = new byte[16];    							if (attachMethod == TnefAttachMethod.EmbeddedMessage) {  								var tnef = new TnefPart ();    								foreach (var param in attachment.ContentType.Parameters)  									tnef.ContentType.Parameters[param.Name] = param.Value;    								if (attachment.ContentDisposition != null)  									tnef.ContentDisposition = attachment.ContentDisposition;    								attachment = tnef;  							}    							// read the GUID  							stream.Read (guid' 0' 16);    							// the rest is content  							using (var filtered = new FilteredStream (content)) {  								filtered.Add (filter);  								stream.CopyTo (filtered' 4096);  								filtered.Flush ();  							}    							content.Position = 0;    							attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.SevenBit);  							attachment.ContentObject = new ContentObject (content);  							filter.Reset ();    							builder.Attachments.Add (attachment);  							break;  						case TnefPropertyId.AttachMethod:  							attachMethod = (TnefAttachMethod) prop.ReadValueAsInt32 ();  							break;  						case TnefPropertyId.AttachMimeTag:  							mimeType = prop.ReadValueAsString ().Split ('/');  							if (mimeType.Length == 2) {  								attachment.ContentType.MediaType = mimeType[0].Trim ();  								attachment.ContentType.MediaSubtype = mimeType[1].Trim ();  							}  							break;  						case TnefPropertyId.AttachFlags:  							flags = (TnefAttachFlags) prop.ReadValueAsInt32 ();  							if ((flags & TnefAttachFlags.RenderedInBody) != 0) {  								if (attachment.ContentDisposition == null)  									attachment.ContentDisposition = new ContentDisposition (ContentDisposition.Inline);  								else  									attachment.ContentDisposition.Disposition = ContentDisposition.Inline;  							}  							break;  						case TnefPropertyId.AttachSize:  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition ();    							attachment.ContentDisposition.Size = prop.ReadValueAsInt64 ();  							break;  						case TnefPropertyId.DisplayName:  							attachment.ContentType.Name = prop.ReadValueAsString ();  							break;  						}  					}  					break;  				case TnefAttributeTag.AttachCreateDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.CreationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachModifyDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.ModificationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachTitle:  					if (attachment != null && string.IsNullOrEmpty (attachment.FileName))  						attachment.FileName = prop.ReadValueAsString ();  					break;  				case TnefAttributeTag.AttachMetaFile:  					if (attachment == null)  						break;    					// TODO: what to do with the meta data?  					break;  				case TnefAttributeTag.AttachData:  					if (attachment == null || attachMethod != TnefAttachMethod.ByValue)  						break;    					attachData = prop.ReadValueAsBytes ();  					filter.Flush (attachData' 0' attachData.Length' out outIndex' out outLength);  					attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.EightBit);  					attachment.ContentObject = new ContentObject (new MemoryStream (attachData' false));  					filter.Reset ();    					builder.Attachments.Add (attachment);  					break;  				}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The following statement contains a magic number: switch (reader.AttributeTag) {  				case TnefAttributeTag.AttachRenderData:  					attachMethod = TnefAttachMethod.ByValue;  					attachment = new MimePart ();  					break;  				case TnefAttributeTag.Attachment:  					if (attachment == null)  						break;    					while (prop.ReadNextProperty ()) {  						switch (prop.PropertyTag.Id) {  						case TnefPropertyId.AttachLongFilename:  							attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachFilename:  							if (attachment.FileName == null)  								attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachContentLocation:  							text = prop.ReadValueAsString ();  							if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  								attachment.ContentLocation = new Uri (text' UriKind.Absolute);  							else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  								attachment.ContentLocation = new Uri (text' UriKind.Relative);  							break;  						case TnefPropertyId.AttachContentBase:  							text = prop.ReadValueAsString ();  							attachment.ContentBase = new Uri (text' UriKind.Absolute);  							break;  						case TnefPropertyId.AttachContentId:  							attachment.ContentId = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachDisposition:  							text = prop.ReadValueAsString ();  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition (text);  							else  								attachment.ContentDisposition.Disposition = text;  							break;  						case TnefPropertyId.AttachData:  							var stream = prop.GetRawValueReadStream ();  							var content = new MemoryStream ();  							var guid = new byte[16];    							if (attachMethod == TnefAttachMethod.EmbeddedMessage) {  								var tnef = new TnefPart ();    								foreach (var param in attachment.ContentType.Parameters)  									tnef.ContentType.Parameters[param.Name] = param.Value;    								if (attachment.ContentDisposition != null)  									tnef.ContentDisposition = attachment.ContentDisposition;    								attachment = tnef;  							}    							// read the GUID  							stream.Read (guid' 0' 16);    							// the rest is content  							using (var filtered = new FilteredStream (content)) {  								filtered.Add (filter);  								stream.CopyTo (filtered' 4096);  								filtered.Flush ();  							}    							content.Position = 0;    							attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.SevenBit);  							attachment.ContentObject = new ContentObject (content);  							filter.Reset ();    							builder.Attachments.Add (attachment);  							break;  						case TnefPropertyId.AttachMethod:  							attachMethod = (TnefAttachMethod) prop.ReadValueAsInt32 ();  							break;  						case TnefPropertyId.AttachMimeTag:  							mimeType = prop.ReadValueAsString ().Split ('/');  							if (mimeType.Length == 2) {  								attachment.ContentType.MediaType = mimeType[0].Trim ();  								attachment.ContentType.MediaSubtype = mimeType[1].Trim ();  							}  							break;  						case TnefPropertyId.AttachFlags:  							flags = (TnefAttachFlags) prop.ReadValueAsInt32 ();  							if ((flags & TnefAttachFlags.RenderedInBody) != 0) {  								if (attachment.ContentDisposition == null)  									attachment.ContentDisposition = new ContentDisposition (ContentDisposition.Inline);  								else  									attachment.ContentDisposition.Disposition = ContentDisposition.Inline;  							}  							break;  						case TnefPropertyId.AttachSize:  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition ();    							attachment.ContentDisposition.Size = prop.ReadValueAsInt64 ();  							break;  						case TnefPropertyId.DisplayName:  							attachment.ContentType.Name = prop.ReadValueAsString ();  							break;  						}  					}  					break;  				case TnefAttributeTag.AttachCreateDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.CreationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachModifyDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.ModificationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachTitle:  					if (attachment != null && string.IsNullOrEmpty (attachment.FileName))  						attachment.FileName = prop.ReadValueAsString ();  					break;  				case TnefAttributeTag.AttachMetaFile:  					if (attachment == null)  						break;    					// TODO: what to do with the meta data?  					break;  				case TnefAttributeTag.AttachData:  					if (attachment == null || attachMethod != TnefAttachMethod.ByValue)  						break;    					attachData = prop.ReadValueAsBytes ();  					filter.Flush (attachData' 0' attachData.Length' out outIndex' out outLength);  					attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.EightBit);  					attachment.ContentObject = new ContentObject (new MemoryStream (attachData' false));  					filter.Reset ();    					builder.Attachments.Add (attachment);  					break;  				}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The following statement contains a magic number: switch (reader.AttributeTag) {  				case TnefAttributeTag.AttachRenderData:  					attachMethod = TnefAttachMethod.ByValue;  					attachment = new MimePart ();  					break;  				case TnefAttributeTag.Attachment:  					if (attachment == null)  						break;    					while (prop.ReadNextProperty ()) {  						switch (prop.PropertyTag.Id) {  						case TnefPropertyId.AttachLongFilename:  							attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachFilename:  							if (attachment.FileName == null)  								attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachContentLocation:  							text = prop.ReadValueAsString ();  							if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  								attachment.ContentLocation = new Uri (text' UriKind.Absolute);  							else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  								attachment.ContentLocation = new Uri (text' UriKind.Relative);  							break;  						case TnefPropertyId.AttachContentBase:  							text = prop.ReadValueAsString ();  							attachment.ContentBase = new Uri (text' UriKind.Absolute);  							break;  						case TnefPropertyId.AttachContentId:  							attachment.ContentId = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachDisposition:  							text = prop.ReadValueAsString ();  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition (text);  							else  								attachment.ContentDisposition.Disposition = text;  							break;  						case TnefPropertyId.AttachData:  							var stream = prop.GetRawValueReadStream ();  							var content = new MemoryStream ();  							var guid = new byte[16];    							if (attachMethod == TnefAttachMethod.EmbeddedMessage) {  								var tnef = new TnefPart ();    								foreach (var param in attachment.ContentType.Parameters)  									tnef.ContentType.Parameters[param.Name] = param.Value;    								if (attachment.ContentDisposition != null)  									tnef.ContentDisposition = attachment.ContentDisposition;    								attachment = tnef;  							}    							// read the GUID  							stream.Read (guid' 0' 16);    							// the rest is content  							using (var filtered = new FilteredStream (content)) {  								filtered.Add (filter);  								stream.CopyTo (filtered' 4096);  								filtered.Flush ();  							}    							content.Position = 0;    							attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.SevenBit);  							attachment.ContentObject = new ContentObject (content);  							filter.Reset ();    							builder.Attachments.Add (attachment);  							break;  						case TnefPropertyId.AttachMethod:  							attachMethod = (TnefAttachMethod) prop.ReadValueAsInt32 ();  							break;  						case TnefPropertyId.AttachMimeTag:  							mimeType = prop.ReadValueAsString ().Split ('/');  							if (mimeType.Length == 2) {  								attachment.ContentType.MediaType = mimeType[0].Trim ();  								attachment.ContentType.MediaSubtype = mimeType[1].Trim ();  							}  							break;  						case TnefPropertyId.AttachFlags:  							flags = (TnefAttachFlags) prop.ReadValueAsInt32 ();  							if ((flags & TnefAttachFlags.RenderedInBody) != 0) {  								if (attachment.ContentDisposition == null)  									attachment.ContentDisposition = new ContentDisposition (ContentDisposition.Inline);  								else  									attachment.ContentDisposition.Disposition = ContentDisposition.Inline;  							}  							break;  						case TnefPropertyId.AttachSize:  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition ();    							attachment.ContentDisposition.Size = prop.ReadValueAsInt64 ();  							break;  						case TnefPropertyId.DisplayName:  							attachment.ContentType.Name = prop.ReadValueAsString ();  							break;  						}  					}  					break;  				case TnefAttributeTag.AttachCreateDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.CreationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachModifyDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.ModificationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachTitle:  					if (attachment != null && string.IsNullOrEmpty (attachment.FileName))  						attachment.FileName = prop.ReadValueAsString ();  					break;  				case TnefAttributeTag.AttachMetaFile:  					if (attachment == null)  						break;    					// TODO: what to do with the meta data?  					break;  				case TnefAttributeTag.AttachData:  					if (attachment == null || attachMethod != TnefAttachMethod.ByValue)  						break;    					attachData = prop.ReadValueAsBytes ();  					filter.Flush (attachData' 0' attachData.Length' out outIndex' out outLength);  					attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.EightBit);  					attachment.ContentObject = new ContentObject (new MemoryStream (attachData' false));  					filter.Reset ();    					builder.Attachments.Add (attachment);  					break;  				}
Magic Number,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The following statement contains a magic number: switch (reader.AttributeTag) {  				case TnefAttributeTag.AttachRenderData:  					attachMethod = TnefAttachMethod.ByValue;  					attachment = new MimePart ();  					break;  				case TnefAttributeTag.Attachment:  					if (attachment == null)  						break;    					while (prop.ReadNextProperty ()) {  						switch (prop.PropertyTag.Id) {  						case TnefPropertyId.AttachLongFilename:  							attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachFilename:  							if (attachment.FileName == null)  								attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachContentLocation:  							text = prop.ReadValueAsString ();  							if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  								attachment.ContentLocation = new Uri (text' UriKind.Absolute);  							else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  								attachment.ContentLocation = new Uri (text' UriKind.Relative);  							break;  						case TnefPropertyId.AttachContentBase:  							text = prop.ReadValueAsString ();  							attachment.ContentBase = new Uri (text' UriKind.Absolute);  							break;  						case TnefPropertyId.AttachContentId:  							attachment.ContentId = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachDisposition:  							text = prop.ReadValueAsString ();  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition (text);  							else  								attachment.ContentDisposition.Disposition = text;  							break;  						case TnefPropertyId.AttachData:  							var stream = prop.GetRawValueReadStream ();  							var content = new MemoryStream ();  							var guid = new byte[16];    							if (attachMethod == TnefAttachMethod.EmbeddedMessage) {  								var tnef = new TnefPart ();    								foreach (var param in attachment.ContentType.Parameters)  									tnef.ContentType.Parameters[param.Name] = param.Value;    								if (attachment.ContentDisposition != null)  									tnef.ContentDisposition = attachment.ContentDisposition;    								attachment = tnef;  							}    							// read the GUID  							stream.Read (guid' 0' 16);    							// the rest is content  							using (var filtered = new FilteredStream (content)) {  								filtered.Add (filter);  								stream.CopyTo (filtered' 4096);  								filtered.Flush ();  							}    							content.Position = 0;    							attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.SevenBit);  							attachment.ContentObject = new ContentObject (content);  							filter.Reset ();    							builder.Attachments.Add (attachment);  							break;  						case TnefPropertyId.AttachMethod:  							attachMethod = (TnefAttachMethod) prop.ReadValueAsInt32 ();  							break;  						case TnefPropertyId.AttachMimeTag:  							mimeType = prop.ReadValueAsString ().Split ('/');  							if (mimeType.Length == 2) {  								attachment.ContentType.MediaType = mimeType[0].Trim ();  								attachment.ContentType.MediaSubtype = mimeType[1].Trim ();  							}  							break;  						case TnefPropertyId.AttachFlags:  							flags = (TnefAttachFlags) prop.ReadValueAsInt32 ();  							if ((flags & TnefAttachFlags.RenderedInBody) != 0) {  								if (attachment.ContentDisposition == null)  									attachment.ContentDisposition = new ContentDisposition (ContentDisposition.Inline);  								else  									attachment.ContentDisposition.Disposition = ContentDisposition.Inline;  							}  							break;  						case TnefPropertyId.AttachSize:  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition ();    							attachment.ContentDisposition.Size = prop.ReadValueAsInt64 ();  							break;  						case TnefPropertyId.DisplayName:  							attachment.ContentType.Name = prop.ReadValueAsString ();  							break;  						}  					}  					break;  				case TnefAttributeTag.AttachCreateDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.CreationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachModifyDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.ModificationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachTitle:  					if (attachment != null && string.IsNullOrEmpty (attachment.FileName))  						attachment.FileName = prop.ReadValueAsString ();  					break;  				case TnefAttributeTag.AttachMetaFile:  					if (attachment == null)  						break;    					// TODO: what to do with the meta data?  					break;  				case TnefAttributeTag.AttachData:  					if (attachment == null || attachMethod != TnefAttachMethod.ByValue)  						break;    					attachData = prop.ReadValueAsBytes ();  					filter.Flush (attachData' 0' attachData.Length' out outIndex' out outLength);  					attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.EightBit);  					attachment.ContentObject = new ContentObject (new MemoryStream (attachData' false));  					filter.Reset ();    					builder.Attachments.Add (attachment);  					break;  				}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetEmbeddedMessageReader,The following statement contains a magic number: var guid = new byte[16];
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetEmbeddedMessageReader,The following statement contains a magic number: stream.Read (guid' 0' 16);
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadDateTime,The following statement contains a magic number: var date = new DateTime (1601' 1' 1);
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadDateTime,The following statement contains a magic number: date = date.AddMilliseconds (fileTime /= 10000);
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetPaddedLength,The following statement contains a magic number: return (length + 3) & ~3;
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetPaddedLength,The following statement contains a magic number: return (length + 3) & ~3;
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadByteArray,The following statement contains a magic number: int padding = 4 - (length % 4);
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadByteArray,The following statement contains a magic number: int padding = 4 - (length % 4);
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadByteArray,The following statement contains a magic number: (length % 4) != 0
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadUnicodeString,The following statement contains a magic number: length -= 2;
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadUnicodeString,The following statement contains a magic number: length > 1 && bytes[length - 1] == 0 && bytes[length - 2] == 0
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadUnicodeString,The following statement contains a magic number: length < 2
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetMessageEncoding,The following statement contains a magic number: codepage != 0 && codepage != 1252
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,LoadPropertyName,The following statement contains a magic number: var guid = new Guid (ReadBytes (16));
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,TryGetPropertyValueLength,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  			case TnefPropertyType.Unspecified:  			case TnefPropertyType.Null:  				length = 0;  				break;  			case TnefPropertyType.Boolean:  			case TnefPropertyType.Error:  			case TnefPropertyType.Long:  			case TnefPropertyType.R4:  			case TnefPropertyType.I2:  				length = 4;  				break;  			case TnefPropertyType.Currency:  			case TnefPropertyType.Double:  			case TnefPropertyType.I8:  				length = 8;  				break;  			case TnefPropertyType.ClassId:  				length = 16;  				break;  			case TnefPropertyType.Unicode:  			case TnefPropertyType.String8:  			case TnefPropertyType.Binary:  			case TnefPropertyType.Object:  				length = 4 + GetPaddedLength (PeekInt32 ());  				break;  			case TnefPropertyType.AppTime:  			case TnefPropertyType.SysTime:  				length = 8;  				break;  			default:  				reader.SetComplianceError (TnefComplianceStatus.UnsupportedPropertyType);  				length = 0;    				return false;  			}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,TryGetPropertyValueLength,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  			case TnefPropertyType.Unspecified:  			case TnefPropertyType.Null:  				length = 0;  				break;  			case TnefPropertyType.Boolean:  			case TnefPropertyType.Error:  			case TnefPropertyType.Long:  			case TnefPropertyType.R4:  			case TnefPropertyType.I2:  				length = 4;  				break;  			case TnefPropertyType.Currency:  			case TnefPropertyType.Double:  			case TnefPropertyType.I8:  				length = 8;  				break;  			case TnefPropertyType.ClassId:  				length = 16;  				break;  			case TnefPropertyType.Unicode:  			case TnefPropertyType.String8:  			case TnefPropertyType.Binary:  			case TnefPropertyType.Object:  				length = 4 + GetPaddedLength (PeekInt32 ());  				break;  			case TnefPropertyType.AppTime:  			case TnefPropertyType.SysTime:  				length = 8;  				break;  			default:  				reader.SetComplianceError (TnefComplianceStatus.UnsupportedPropertyType);  				length = 0;    				return false;  			}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,TryGetPropertyValueLength,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  			case TnefPropertyType.Unspecified:  			case TnefPropertyType.Null:  				length = 0;  				break;  			case TnefPropertyType.Boolean:  			case TnefPropertyType.Error:  			case TnefPropertyType.Long:  			case TnefPropertyType.R4:  			case TnefPropertyType.I2:  				length = 4;  				break;  			case TnefPropertyType.Currency:  			case TnefPropertyType.Double:  			case TnefPropertyType.I8:  				length = 8;  				break;  			case TnefPropertyType.ClassId:  				length = 16;  				break;  			case TnefPropertyType.Unicode:  			case TnefPropertyType.String8:  			case TnefPropertyType.Binary:  			case TnefPropertyType.Object:  				length = 4 + GetPaddedLength (PeekInt32 ());  				break;  			case TnefPropertyType.AppTime:  			case TnefPropertyType.SysTime:  				length = 8;  				break;  			default:  				reader.SetComplianceError (TnefComplianceStatus.UnsupportedPropertyType);  				length = 0;    				return false;  			}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,TryGetPropertyValueLength,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  			case TnefPropertyType.Unspecified:  			case TnefPropertyType.Null:  				length = 0;  				break;  			case TnefPropertyType.Boolean:  			case TnefPropertyType.Error:  			case TnefPropertyType.Long:  			case TnefPropertyType.R4:  			case TnefPropertyType.I2:  				length = 4;  				break;  			case TnefPropertyType.Currency:  			case TnefPropertyType.Double:  			case TnefPropertyType.I8:  				length = 8;  				break;  			case TnefPropertyType.ClassId:  				length = 16;  				break;  			case TnefPropertyType.Unicode:  			case TnefPropertyType.String8:  			case TnefPropertyType.Binary:  			case TnefPropertyType.Object:  				length = 4 + GetPaddedLength (PeekInt32 ());  				break;  			case TnefPropertyType.AppTime:  			case TnefPropertyType.SysTime:  				length = 8;  				break;  			default:  				reader.SetComplianceError (TnefComplianceStatus.UnsupportedPropertyType);  				length = 0;    				return false;  			}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,TryGetPropertyValueLength,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  			case TnefPropertyType.Unspecified:  			case TnefPropertyType.Null:  				length = 0;  				break;  			case TnefPropertyType.Boolean:  			case TnefPropertyType.Error:  			case TnefPropertyType.Long:  			case TnefPropertyType.R4:  			case TnefPropertyType.I2:  				length = 4;  				break;  			case TnefPropertyType.Currency:  			case TnefPropertyType.Double:  			case TnefPropertyType.I8:  				length = 8;  				break;  			case TnefPropertyType.ClassId:  				length = 16;  				break;  			case TnefPropertyType.Unicode:  			case TnefPropertyType.String8:  			case TnefPropertyType.Binary:  			case TnefPropertyType.Object:  				length = 4 + GetPaddedLength (PeekInt32 ());  				break;  			case TnefPropertyType.AppTime:  			case TnefPropertyType.SysTime:  				length = 8;  				break;  			default:  				reader.SetComplianceError (TnefComplianceStatus.UnsupportedPropertyType);  				length = 0;    				return false;  			}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadPropertyValue,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  			case TnefPropertyType.Null:  				value = null;  				break;  			case TnefPropertyType.I2:  				// 2 bytes for the short followed by 2 bytes of padding  				value = (short) (ReadInt32 () & 0xFFFF);  				break;  			case TnefPropertyType.Boolean:  				value = (ReadInt32 () & 0xFF) != 0;  				break;  			case TnefPropertyType.Currency:  			case TnefPropertyType.I8:  				value = ReadInt64 ();  				break;  			case TnefPropertyType.Error:  			case TnefPropertyType.Long:  				value = ReadInt32 ();  				break;  			case TnefPropertyType.Double:  				value = ReadDouble ();  				break;  			case TnefPropertyType.R4:  				value = ReadSingle ();  				break;  			case TnefPropertyType.AppTime:  			case TnefPropertyType.SysTime:  				value = ReadDateTime ();  				break;  			case TnefPropertyType.Unicode:  				value = ReadUnicodeString ();  				break;  			case TnefPropertyType.String8:  				value = ReadString ();  				break;  			case TnefPropertyType.Binary:  				value = ReadByteArray ();  				break;  			case TnefPropertyType.ClassId:  				value = new Guid (ReadBytes (16));  				break;  			case TnefPropertyType.Object:  				value = ReadByteArray ();  				break;  			default:  				reader.SetComplianceError (TnefComplianceStatus.UnsupportedPropertyType);  				value = null;  				break;  			}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsBytes,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  				case TnefPropertyType.Unicode:  				case TnefPropertyType.String8:  				case TnefPropertyType.Binary:  				case TnefPropertyType.Object:  					bytes = ReadByteArray ();  					break;  				case TnefPropertyType.ClassId:  					bytes = ReadBytes (16);  					break;  				default:  					throw new InvalidOperationException ();  				}
Magic Number,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValueAsGuid,The following statement contains a magic number: switch (propertyTag.ValueTnefType) {  				case TnefPropertyType.ClassId:  					guid = new Guid (ReadBytes (16));  					break;  				default:  					throw new InvalidOperationException ();  				}
Magic Number,MimeKit.Tnef,TnefPropertyTag,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyTag.cs,TnefPropertyTag,The following statement contains a magic number: type = (TnefPropertyType) ((tag >> 16) & 0xFFFF);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,Load32BitValue,The following statement contains a magic number: dest[2] = src[startIndex + 2];
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,Load32BitValue,The following statement contains a magic number: dest[2] = src[startIndex + 2];
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,Load32BitValue,The following statement contains a magic number: dest[3] = src[startIndex + 3];
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,Load32BitValue,The following statement contains a magic number: dest[3] = src[startIndex + 3];
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,Load64BitValue,The following statement contains a magic number: i < 8
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt16,The following statement contains a magic number: ReadAhead (2) < 2
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt16,The following statement contains a magic number: ReadAhead (2) < 2
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt16,The following statement contains a magic number: UpdateChecksum (input' inputIndex' 2);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt16,The following statement contains a magic number: return (short) (input[inputIndex++] | (input[inputIndex++] << 8));
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt32,The following statement contains a magic number: ReadAhead (4) < 4
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt32,The following statement contains a magic number: ReadAhead (4) < 4
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt32,The following statement contains a magic number: UpdateChecksum (input' inputIndex' 4);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt32,The following statement contains a magic number: return input[inputIndex++] | (input[inputIndex++] << 8) |  				(input[inputIndex++] << 16) | (input[inputIndex++] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt32,The following statement contains a magic number: return input[inputIndex++] | (input[inputIndex++] << 8) |  				(input[inputIndex++] << 16) | (input[inputIndex++] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt32,The following statement contains a magic number: return input[inputIndex++] | (input[inputIndex++] << 8) |  				(input[inputIndex++] << 16) | (input[inputIndex++] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: ReadAhead (4) < 4
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: ReadAhead (4) < 4
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: return input[inputIndex] | (input[inputIndex + 1] << 8) |  				(input[inputIndex + 2] << 16) | (input[inputIndex + 3] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: return input[inputIndex] | (input[inputIndex + 1] << 8) |  				(input[inputIndex + 2] << 16) | (input[inputIndex + 3] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: return input[inputIndex] | (input[inputIndex + 1] << 8) |  				(input[inputIndex + 2] << 16) | (input[inputIndex + 3] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: return input[inputIndex] | (input[inputIndex + 1] << 8) |  				(input[inputIndex + 2] << 16) | (input[inputIndex + 3] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,PeekInt32,The following statement contains a magic number: return input[inputIndex] | (input[inputIndex + 1] << 8) |  				(input[inputIndex + 2] << 16) | (input[inputIndex + 3] << 24);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt64,The following statement contains a magic number: ReadAhead (8) < 8
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt64,The following statement contains a magic number: ReadAhead (8) < 8
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt64,The following statement contains a magic number: UpdateChecksum (input' inputIndex' 8);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadInt64,The following statement contains a magic number: inputIndex += 8;
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadSingle,The following statement contains a magic number: ReadAhead (4) < 4
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadSingle,The following statement contains a magic number: ReadAhead (4) < 4
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadSingle,The following statement contains a magic number: UpdateChecksum (input' inputIndex' 4);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadSingle,The following statement contains a magic number: inputIndex += 4;
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadDouble,The following statement contains a magic number: ReadAhead (8) < 8
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadDouble,The following statement contains a magic number: ReadAhead (8) < 8
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadDouble,The following statement contains a magic number: UpdateChecksum (input' inputIndex' 8);
Magic Number,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,ReadDouble,The following statement contains a magic number: inputIndex += 8;
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,SetFlags,The following statement contains a magic number: i < 128
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,SetFlags,The following statement contains a magic number: i < 256
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: i < 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: i > 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: (i >= 33 && i <= 60) || (i >= 62 && i <= 126) || i == 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: (i >= 33 && i <= 60) || (i >= 62 && i <= 126) || i == 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: (i >= 33 && i <= 60) || (i >= 62 && i <= 126) || i == 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: (i >= 33 && i <= 60) || (i >= 62 && i <= 126) || i == 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: (i >= 33 && i <= 60) || (i >= 62 && i <= 126) || i == 32
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: i < 127
Magic Number,MimeKit.Utils,ByteExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ByteExtensions.cs,ByteExtensions,The following statement contains a magic number: i < 256
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (65001' -1' "utf-8"' "utf8");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (20127' -1' "ansi_x3.4-1968");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (28591' -1' "ansi_x3.110-1983"' "latin1");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (10000' -1' "macintosh");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (10079' -1' "x-mac-icelandic");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (51949' -1'  				"ks_c_5601-1987"'  				"ksc-5601-1987"'  				"ksc-5601_1987"'  				"ksc-5601"'  				"5601"'  				"ks_c_5861-1992"'  				"ksc-5861-1992"'  				"ksc-5861_1992"'  				"euckr-0"'  				"euc-kr");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (950' -1' "big5"' "big5-0"' "big5-hkscs"' "big5.eten-0"' "big5hkscs-0");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: gb2312 = AddAliases (936' -1' "gb2312"' "gb-2312"' "gb2312-0"' "gb2312-80"' "gb2312.1980-0");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (51936' gb2312' "euc-cn"' "gbk-0"' "x-gbk"' "gbk");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (52936' gb2312' "hz-gb-2312"' "hz-gb2312");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (54936' -1' "gb18030-0"' "gb18030");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (51932' -1' "eucjp-0"' "euc-jp"' "ujis-0"' "ujis");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,CharsetUtils,The following statement contains a magic number: AddAliases (932' -1' "jisx0208.1983-0"' "jisx0212.1990-0"' "pck");
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,GetMimeCharset,The following statement contains a magic number: switch (encoding.CodePage) {  			case 949: // ks_c_5601-1987  				return "euc-kr";  			default:  				return encoding.HeaderName.ToLowerInvariant ();  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: charset.Length < 6
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: return 1201;
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: iso == 10646
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: dash + 2 > charset.Length
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseIsoCodePage,The following statement contains a magic number: switch (iso) {  			case 8859:  				if (!int.TryParse (suffix' out codepage))  					return -1;    				if (codepage <= 0 || (codepage > 9 && codepage < 13) || codepage > 15)  					return -1;    				codepage += 28590;  				break;  			case 2022:  				switch (suffix.ToLowerInvariant ()) {  				case "jp":  					codepage = 50220;  					break;  				case "kr":  					codepage = 50225;  					break;  				default:  					return -1;  				}  				break;  			default:  				return -1;  			}
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseCodePage,The following statement contains a magic number: i = 7;
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseCodePage,The following statement contains a magic number: i += 2;
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ParseCodePage,The following statement contains a magic number: i + 2 < charset.Length && charset[i] == 'c' && charset[i + 1] == 'p'
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The following statement contains a magic number: codepages = new [] { 65001' userCharset.CodePage' 28591 };
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The following statement contains a magic number: codepages = new [] { 65001' userCharset.CodePage' 28591 };
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The following statement contains a magic number: userCharset != null && userCharset.CodePage != 65001 && userCharset.CodePage != 28591
Magic Number,MimeKit.Utils,CharsetUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\CharsetUtils.cs,ConvertToUnicode,The following statement contains a magic number: userCharset != null && userCharset.CodePage != 65001 && userCharset.CodePage != 28591
Magic Number,MimeKit.Utils,Crc32,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Crc32.cs,Update,The following statement contains a magic number: crc = (int) Crc32Table[(crc ^ (int) buffer[i]) & 0xFF] ^ ((crc >> 8) & 0x00FFFFFF);
Magic Number,MimeKit.Utils,Crc32,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Crc32.cs,Update,The following statement contains a magic number: crc = (int) Crc32Table[(crc ^ (int) value) & 0xFF] ^ ((crc >> 8) & 0x00FFFFFF);
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: timezones = new Dictionary<string' int> {  				{ "UT"'       0 }' { "UTC"'      0 }' { "GMT"'      0 }'  				{ "EDT"'   -400 }' { "EST"'   -500 }'  				{ "CDT"'   -500 }' { "CST"'   -600 }'  				{ "MDT"'   -600 }' { "MST"'   -700 }'  				{ "PDT"'   -700 }' { "PST"'   -800 }'  				// Note: rfc822 got the signs backwards for the military  				// timezones so some sending clients may mistakenly use the  				// wrong values.  				{ "A"'      100 }' { "B"'      200 }' { "C"'      300 }'  				{ "D"'      400 }' { "E"'      500 }' { "F"'      600 }'  				{ "G"'      700 }' { "H"'      800 }' { "I"'      900 }'  				{ "K"'     1000 }' { "L"'     1100 }' { "M"'     1200 }'  				{ "N"'     -100 }' { "O"'     -200 }' { "P"'     -300 }'  				{ "Q"'     -400 }' { "R"'     -500 }' { "S"'     -600 }'  				{ "T"'     -700 }' { "U"'     -800 }' { "V"'     -900 }'  				{ "W"'    -1000 }' { "X"'    -1100 }' { "Y"'    -1200 }'  				{ "Z"'        0 }'  			};
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: datetok = new DateTokenFlags[256];
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: var any = new char[2];
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,DateUtils,The following statement contains a magic number: c < 256
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetWeekday,The following statement contains a magic number: !token.IsWeekday || token.Length < 3
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetWeekday,The following statement contains a magic number: name = name.Substring (0' 3);
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetWeekday,The following statement contains a magic number: name.Length > 3
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetDayOfMonth,The following statement contains a magic number: day <= 0 || day > 31
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetMonth,The following statement contains a magic number: !token.IsMonth || token.Length < 3
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetMonth,The following statement contains a magic number: name = name.Substring (0' 3);
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetMonth,The following statement contains a magic number: name.Length > 3
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetYear,The following statement contains a magic number: year += (year < 70) ? 2000 : 1900;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetYear,The following statement contains a magic number: year += (year < 70) ? 2000 : 1900;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetYear,The following statement contains a magic number: year += (year < 70) ? 2000 : 1900;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetYear,The following statement contains a magic number: year < 100
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetYear,The following statement contains a magic number: return year >= 1969;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetTimeOfDay,The following statement contains a magic number: !ParseUtils.TryParseInt32 (text' ref index' endIndex' out hour) || hour > 23
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetTimeOfDay,The following statement contains a magic number: !ParseUtils.TryParseInt32 (text' ref index' endIndex' out minute) || minute > 59
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryGetTimeOfDay,The following statement contains a magic number: !ParseUtils.TryParseInt32 (text' ref index' endIndex' out second) || second > 59
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: tokens.Count < 5
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: tokens.Count < 6
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: tzone += 2400;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: tzone < -1400
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: tzone -= 2400;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: tzone > 1400
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: int minutes = tzone % 100;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseStandardDateFormat,The following statement contains a magic number: int hours = tzone / 100;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: tokens[i].Length == 4
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: tokens[i].Length > 2
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: month == null && value > 0 && value <= 12
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: day == null && value > 0 && value <= 31
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: year = 1900 + value;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: year == null && value >= 69
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: int minutes = tzone.Value % 100;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,TryParseUnknownDateFormat,The following statement contains a magic number: int hours = tzone.Value / 100;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: minute += second / 60;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: second = second % 60;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: hour += minute / 60;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: minute = minute % 60;
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: offset = new TimeSpan (timezone / 100' timezone % 100' 0);
Magic Number,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following statement contains a magic number: offset = new TimeSpan (timezone / 100' timezone % 100' 0);
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: var block = new byte[8];
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: id.Append (base36[(int) (value % 36)]);
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: value /= 36;
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: value = (value << 8) | (ulong) block[i];
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: i < 8
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: id.Append (base36[(int) (value % 36)]);
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,GenerateMessageId,The following statement contains a magic number: value /= 36;
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,The following statement contains a magic number: switch (values.Count) {  			case 4: version = new Version (values[0]' values[1]' values[2]' values[3]); break;  			case 3: version = new Version (values[0]' values[1]' values[2]); break;  			case 2: version = new Version (values[0]' values[1]); break;  			default: return false;  			}
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,The following statement contains a magic number: switch (values.Count) {  			case 4: version = new Version (values[0]' values[1]' values[2]' values[3]); break;  			case 3: version = new Version (values[0]' values[1]' values[2]); break;  			case 2: version = new Version (values[0]' values[1]); break;  			default: return false;  			}
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,The following statement contains a magic number: switch (values.Count) {  			case 4: version = new Version (values[0]' values[1]' values[2]' values[3]); break;  			case 3: version = new Version (values[0]' values[1]' values[2]); break;  			case 2: version = new Version (values[0]' values[1]); break;  			default: return false;  			}
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,The following statement contains a magic number: switch (values.Count) {  			case 4: version = new Version (values[0]' values[1]' values[2]' values[3]); break;  			case 3: version = new Version (values[0]' values[1]' values[2]); break;  			case 2: version = new Version (values[0]' values[1]); break;  			default: return false;  			}
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,The following statement contains a magic number: switch (values.Count) {  			case 4: version = new Version (values[0]' values[1]' values[2]' values[3]); break;  			case 3: version = new Version (values[0]' values[1]' values[2]); break;  			case 2: version = new Version (values[0]' values[1]); break;  			default: return false;  			}
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,TryParse,The following statement contains a magic number: switch (values.Count) {  			case 4: version = new Version (values[0]' values[1]' values[2]' values[3]); break;  			case 3: version = new Version (values[0]' values[1]' values[2]); break;  			case 2: version = new Version (values[0]' values[1]); break;  			default: return false;  			}
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,Quote,The following statement contains a magic number: var quoted = new StringBuilder (text.Length + 2' (text.Length * 2) + 2);
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,Quote,The following statement contains a magic number: var quoted = new StringBuilder (text.Length + 2' (text.Length * 2) + 2);
Magic Number,MimeKit.Utils,MimeUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\MimeUtils.cs,Quote,The following statement contains a magic number: var quoted = new StringBuilder (text.Length + 2' (text.Length * 2) + 2);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,EnsureBufferSize,The following statement contains a magic number: int ideal = (size + 63) & ~63;
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,EnsureBufferSize,The following statement contains a magic number: int ideal = (size + 63) & ~63;
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,Add,The following statement contains a magic number: EnsureBufferSize (cursor + 2);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,Add,The following statement contains a magic number: buffer[++cursor] = (ushort) ((1 << 8) | item);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,CopyTo,The following statement contains a magic number: count = (buffer[i] >> 8) & 0xFF;
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,Remove,The following statement contains a magic number: count = ((buffer[i] >> 8) & 0xFF);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,Remove,The following statement contains a magic number: buffer[i] = (ushort) (((count - 1) << 8) | item);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,IndexOf,The following statement contains a magic number: offset += ((buffer[i] >> 8) & 0xFF);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,RemoveAt,The following statement contains a magic number: count = ((buffer[i] >> 8) & 0xFF);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,RemoveAt,The following statement contains a magic number: buffer[i] = (ushort) (((count - 1) << 8) | c);
Magic Number,MimeKit.Utils,PackedByteArray,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\PackedByteArray.cs,GetEnumerator,The following statement contains a magic number: count = (buffer[i] >> 8) & 0xFF;
Magic Number,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseInt32,The following statement contains a magic number: value > int.MaxValue / 10
Magic Number,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseInt32,The following statement contains a magic number: value == int.MaxValue / 10 && digit > int.MaxValue % 10
Magic Number,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseInt32,The following statement contains a magic number: value == int.MaxValue / 10 && digit > int.MaxValue % 10
Magic Number,MimeKit.Utils,ParseUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\ParseUtils.cs,TryParseInt32,The following statement contains a magic number: value = (value * 10) + digit;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,IsAscii,The following statement contains a magic number: return c < 128;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TryGetEncodedWordToken,The following statement contains a magic number: length < 7
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TryGetEncodedWordToken,The following statement contains a magic number: byte* inend = word + length - 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TryGetEncodedWordToken,The following statement contains a magic number: inend -= 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr += 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr + 3 >= inend || *inptr != '?' || !IsBbQq (*(inptr + 1)) || *(inptr + 2) != '?'
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr + 3 >= inend || *inptr != '?' || !IsBbQq (*(inptr + 1)) || *(inptr + 2) != '?'
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr += 3;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr + 2 < inend && !(*inptr == '?' && *(inptr + 1) == '=')
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr = word + 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr + 2 > inend || *inptr != '?' || *(inptr + 1) != '='
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr += 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizePhrase,The following statement contains a magic number: inptr + 2 < inend && *inptr == '=' && *(inptr + 1) == '?'
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr += 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr + 3 >= inend || *inptr != '?' || !IsBbQq (*(inptr + 1)) || *(inptr + 2) != '?'
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr + 3 >= inend || *inptr != '?' || !IsBbQq (*(inptr + 1)) || *(inptr + 2) != '?'
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr += 3;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr + 2 < inend && !(*inptr == '?' && *(inptr + 1) == '=')
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr = word + 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr + 2 > inend || *inptr != '?' || *(inptr + 1) != '='
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr += 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,TokenizeText,The following statement contains a magic number: inptr + 2 < inend && *inptr == '=' && *(inptr + 1) == '?'
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,FoldTokens,The following statement contains a magic number: var output = new StringBuilder (input.Length + 2);
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,FoldTokens,The following statement contains a magic number: int lineLength = field.Length + 2;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,GetBestContentEncoding,The following statement contains a magic number: text[i] > 127
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,GetBestContentEncoding,The following statement contains a magic number: (double) count < (length * 0.17)
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,EstimateEncodedWordLength,The following statement contains a magic number: int length = charset.Length + 7;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,EstimateEncodedWordLength,The following statement contains a magic number: return length + (byteCount - encodeCount) + (encodeCount * 3);
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,EstimateEncodedWordLength,The following statement contains a magic number: (double) encodeCount < (byteCount * 0.17)
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,EstimateEncodedWordLength,The following statement contains a magic number: return length + ((byteCount + 2) / 3) * 4;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,EstimateEncodedWordLength,The following statement contains a magic number: return length + ((byteCount + 2) / 3) * 4;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,EstimateEncodedWordLength,The following statement contains a magic number: return length + ((byteCount + 2) / 3) * 4;
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,ExceedsMaxLineLength,The following statement contains a magic number: switch (word.Type) {  			case WordType.EncodedWord:  				switch (word.Encoding) {  				case 1:  					length = EstimateEncodedWordLength ("iso-8859-1"' word.ByteCount' word.EncodeCount);  					break;  				case 0:  					length = EstimateEncodedWordLength ("us-ascii"' word.ByteCount' word.EncodeCount);  					break;  				default:  					length = EstimateEncodedWordLength (charset' word.ByteCount' word.EncodeCount);  					break;  				}  				break;  			case WordType.QuotedString:  				length = word.ByteCount + word.QuotedPairs + 2;  				break;  			default:  				length = word.ByteCount;  				break;  			}
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,GetRfc822Words,The following statement contains a magic number: var chars = new char[2];
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,GetRfc822Words,The following statement contains a magic number: c < 256 && IsBlank (c)
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,ShouldMergeWords,The following statement contains a magic number: switch (word.Type) {  			case WordType.Atom:  				if (next.Type == WordType.EncodedWord)  					return false;    				return length + 1 < options.MaxLineLength;  			case WordType.QuotedString:  				if (next.Type == WordType.EncodedWord)  					return false;    				return length + quoted + 3 < options.MaxLineLength;  			case WordType.EncodedWord:  				if (next.Type == WordType.Atom) {  					// whether we merge or not is dependent upon:  					// 1. the number of atoms in a row after 'word'  					// 2. if there is another encoded-word after  					//    the string of atoms.  					bool merge = false;  					int natoms = 0;    					for (int j = i + 1; j < words.Count && natoms < 3; j++) {  						if (words[j].Type != WordType.Atom) {  							merge = true;  							break;  						}    						natoms++;  					}    					// if all the words after the encoded-word are atoms' don't merge  					if (!merge)  						return false;  				}    				// avoid merging with qstrings  				if (next.Type == WordType.QuotedString)  					return false;    				switch (Math.Max (word.Encoding' next.Encoding)) {  				case 1:  					length = EstimateEncodedWordLength ("iso-8859-1"' length' encoded);  					break;  				case 0:  					length = EstimateEncodedWordLength ("us-ascii"' length' encoded);  					break;  				default:  					length = EstimateEncodedWordLength (charset' length' encoded);  					break;  				}    				return length + 1 < options.MaxLineLength;  			default:  				return false;  			}
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,ShouldMergeWords,The following statement contains a magic number: switch (word.Type) {  			case WordType.Atom:  				if (next.Type == WordType.EncodedWord)  					return false;    				return length + 1 < options.MaxLineLength;  			case WordType.QuotedString:  				if (next.Type == WordType.EncodedWord)  					return false;    				return length + quoted + 3 < options.MaxLineLength;  			case WordType.EncodedWord:  				if (next.Type == WordType.Atom) {  					// whether we merge or not is dependent upon:  					// 1. the number of atoms in a row after 'word'  					// 2. if there is another encoded-word after  					//    the string of atoms.  					bool merge = false;  					int natoms = 0;    					for (int j = i + 1; j < words.Count && natoms < 3; j++) {  						if (words[j].Type != WordType.Atom) {  							merge = true;  							break;  						}    						natoms++;  					}    					// if all the words after the encoded-word are atoms' don't merge  					if (!merge)  						return false;  				}    				// avoid merging with qstrings  				if (next.Type == WordType.QuotedString)  					return false;    				switch (Math.Max (word.Encoding' next.Encoding)) {  				case 1:  					length = EstimateEncodedWordLength ("iso-8859-1"' length' encoded);  					break;  				case 0:  					length = EstimateEncodedWordLength ("us-ascii"' length' encoded);  					break;  				default:  					length = EstimateEncodedWordLength (charset' length' encoded);  					break;  				}    				return length + 1 < options.MaxLineLength;  			default:  				return false;  			}
Magic Number,MimeKit.Utils,Rfc2047,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\Rfc2047.cs,Merge,The following statement contains a magic number: words.Count < 2
Magic Number,MimeKit.Utils,StringBuilderExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\StringBuilderExtensions.cs,AppendCStringByte,The following statement contains a magic number: switch (c) {  			case 0x00: text.Append ("\\0"); break;  			case 0x07: text.Append ("\\a"); break;  			case 0x08: text.Append ("\\b"); break;  			case 0x09: text.Append ("\\t"); break;  			case 0x0A: text.Append ("\\n"); break;  			case 0x0B: text.Append ("\\v"); break;  			case 0x0D: text.Append ("\\r"); break;  			default:  				if (c < 020 || c > 0x7e) {  					text.AppendFormat ("\\x{0:x2}"' c);  				} else {  					text.Append ((char) c);  				}  				break;  			}
Magic Number,MimeKit,AttachmentCollection,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\AttachmentCollection.cs,LoadContent,The following statement contains a magic number: var buf = new byte[4096];
Magic Number,MimeKit,ContentObject,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentObject.cs,WriteTo,The following statement contains a magic number: var buf = new byte[4096];
Magic Number,MimeKit,ContentType,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentType.cs,ContentType,The following statement contains a magic number: mediaType[i] >= 127 || !IsAsciiAtom ((byte) mediaType[i])
Magic Number,MimeKit,ContentType,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ContentType.cs,ContentType,The following statement contains a magic number: mediaSubtype[i] >= 127 || !IsToken ((byte) mediaSubtype[i])
Magic Number,MimeKit,GroupAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\GroupAddress.cs,Encode,The following statement contains a magic number: lineLength += 2;
Magic Number,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,Header,The following statement contains a magic number: field[i] >= 127 || !IsAsciiAtom ((byte) field[i])
Magic Number,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,Header,The following statement contains a magic number: field[i] >= 127 || !IsAsciiAtom ((byte) field[i])
Magic Number,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeAddressHeader,The following statement contains a magic number: int lineLength = field.Length + 2;
Magic Number,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeReferencesHeader,The following statement contains a magic number: count > 0 && lineLength + reference.Length + 3 > format.MaxLineLength
Magic Number,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,EncodeReferencesHeader,The following statement contains a magic number: lineLength += reference.Length + 2;
Magic Number,MimeKit,Header,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Header.cs,Fold,The following statement contains a magic number: int lineLength = field.Length + 2;
Magic Number,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The following statement contains a magic number: codepage = 65001;
Magic Number,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The following statement contains a magic number: codepage = 65001;
Magic Number,MimeKit,MailboxAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MailboxAddress.cs,Encode,The following statement contains a magic number: lineLength = 2;
Magic Number,MimeKit,MailboxAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MailboxAddress.cs,Encode,The following statement contains a magic number: (lineLength + route.Length + Address.Length + 3) > options.MaxLineLength
Magic Number,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,SerializeAddressList,The following statement contains a magic number: int lineLength = field.Length + 2;
Magic Number,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,ReferencesChanged,The following statement contains a magic number: i > 0 && lineLength + references[i].Length + 2 >= options.MaxLineLength
Magic Number,MimeKit,Boundary,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,Boundary,The following statement contains a magic number: Length = Marker.Length - 2;
Magic Number,MimeKit,Boundary,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,CreateMboxBoundary,The following statement contains a magic number: boundary.MaxLength = 5;
Magic Number,MimeKit,Boundary,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,CreateMboxBoundary,The following statement contains a magic number: boundary.Length = 5;
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,NextAllocSize,The following statement contains a magic number: return (need + 63) & ~63;
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,NextAllocSize,The following statement contains a magic number: return (need + 63) & ~63;
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,StepMboxMarker,The following statement contains a magic number: length >= 5 && IsMboxMarker (start)
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,StepHeaders,The following statement contains a magic number: format == MimeFormat.Mbox && length == 4 && IsMboxMarker (start)
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,StepHeaders,The following statement contains a magic number: length != 4 || !IsMboxMarker (start)
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,IsPossibleBoundary,The following statement contains a magic number: length < 2
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,IsPossibleBoundary,The following statement contains a magic number: format == MimeFormat.Mbox && length >= 5 && IsMboxMarker (text)
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,GetMaxBoundaryLength,The following statement contains a magic number: return bounds.Count > 0 ? bounds[0].MaxLength + 2 : 0;
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ScanContent,The following statement contains a magic number: ReadAhead (atleast' 2) <= 0
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ScanContent,The following statement contains a magic number: int alignment = (startIndex + 3) & ~3;
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ScanContent,The following statement contains a magic number: int alignment = (startIndex + 3) & ~3;
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ScanContent,The following statement contains a magic number: content.SetLength (content.Length - 2);
Magic Number,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ScanContent,The following statement contains a magic number: input[inputIndex - 2] == (byte) '\r'
Magic Number,MimeKit,MimePart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimePart.cs,GetBestEncoding,The following statement contains a magic number: return GetBestEncoding (constraint' 78' cancellationToken);
Magic Number,MimeKit,Multipart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Multipart.cs,GenerateBoundary,The following statement contains a magic number: var digest = new byte[16];
Magic Number,MimeKit,Multipart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Multipart.cs,GenerateBoundary,The following statement contains a magic number: var buf = new byte[24];
Magic Number,MimeKit,Multipart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Multipart.cs,WriteTo,The following statement contains a magic number: cancellable.Write (boundary' 0' boundary.Length - 2' cancellationToken);
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,Parameter,The following statement contains a magic number: name[i] > 127 || !IsAttr ((byte) name[i])
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetEncodeMethod,The following statement contains a magic number: value[i] < 128
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetEncodeMethod,The following statement contains a magic number: value[i] < 128
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetEncodeMethod,The following statement contains a magic number: value[i] >= 127 || value[i].IsCtrl ()
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetBestEncoding,The following statement contains a magic number: value[i] < 127
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetBestEncoding,The following statement contains a magic number: switch (encoding) {  			case 0: return Encoding.ASCII;  			case 1: return Encoding.GetEncoding (28591); // iso-8859-1  			default: return defaultEncoding;  			}
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetNextValue,The following statement contains a magic number: int charsetLength = index == 0 ? charset.Length + 2 : 0;
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetNextValue,The following statement contains a magic number: n > 3 && (charsetLength + n) > maxLength
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,Encode,The following statement contains a magic number: int maxLength = options.MaxLineLength - (Name.Length + 6);
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,Encode,The following statement contains a magic number: var bytes = new byte[Math.Max (maxLength' 6)];
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,Encode,The following statement contains a magic number: var hexbuf = new byte[bytes.Length * 3 + 3];
Magic Number,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,Encode,The following statement contains a magic number: var hexbuf = new byte[bytes.Length * 3 + 3];
Magic Number,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParse,The following statement contains a magic number: length -= 2;
Magic Number,MimeKit,ParameterList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParameterList.cs,TryParse,The following statement contains a magic number: length >= 2 && text[startIndex] == (byte) '"' && text[startIndex + length - 1] == (byte) '"'
Magic Number,MimeKit,StreamExtensions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\StreamExtensions.cs,CopyTo,The following statement contains a magic number: CopyTo (source' destination' 4096);
Duplicate Code,MimeKit,InternetAddress,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\InternetAddress.cs,TryParse,The method contains a code clone-set at the following line numbers (starting from the method definition): ((49' 74)' (117' 142))
Missing Default,MimeKit.Cryptography,MultipartSigned,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\MultipartSigned.cs,PrepareEntityForSigning,The following switch statement is missing a default case: switch (part.ContentTransferEncoding) {  				case ContentEncoding.SevenBit:  					// need to make sure that "From "-lines are properly armored and wrapped at 78 bytes  					part.ContentTransferEncoding = part.GetBestEncoding (EncodingConstraint.SevenBit' 78);  					break;  				case ContentEncoding.EightBit:  					part.ContentTransferEncoding = ContentEncoding.QuotedPrintable;  					break;  				case ContentEncoding.Binary:  					part.ContentTransferEncoding = ContentEncoding.Base64;  					break;  				}
Missing Default,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,GetCreateCertificatesTableCommand,The following switch statement is missing a default case: switch (columns[i]) {  				case "ID": statement.Append ("serial PRIMARY KEY"); break;  				case "BASICCONSTRAINTS": statement.Append ("integer NOT NULL"); break;  				case "TRUSTED":  statement.Append ("boolean NOT NULL"); break;  				case "KEYUSAGE": statement.Append ("integer NOT NULL"); break;  				case "NOTBEFORE": statement.Append ("timestamp NOT NULL"); break;  				case "NOTAFTER": statement.Append ("timestamp NOT NULL"); break;  				case "ISSUERNAME": statement.Append ("text NOT NULL"); break;  				case "SERIALNUMBER": statement.Append ("text NOT NULL"); break;  				case "SUBJECTEMAIL": statement.Append ("text "); break;  				case "FINGERPRINT": statement.Append ("text NOT NULL"); break;  				case "ALGORITHMS": statement.Append ("text"); break;  				case "ALGORITHMSUPDATED": statement.Append ("timestamp NOT NULL"); break;  				case "CERTIFICATE": statement.Append ("bytea UNIQUE NOT NULL"); break;  				case "PRIVATEKEY": statement.Append ("bytea"); break;  				}
Missing Default,MimeKit.Cryptography,NpgsqlCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\NpgsqlCertificateDatabase.cs,GetCreateCrlsTableCommand,The following switch statement is missing a default case: switch (columns[i]) {  				case "ID": statement.Append ("serial PRIMARY KEY"); break;  				case "DELTA" : statement.Append ("integer NOT NULL"); break;  				case "ISSUERNAME": statement.Append ("text NOT NULL"); break;  				case "THISUPDATE": statement.Append ("integer NOT NULL"); break;  				case "NEXTUPDATE": statement.Append ("integer NOT NULL"); break;  				case "CRL": statement.Append ("bytea NOT NULL"); break;  				}
Missing Default,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,AddSecureMimeCapabilities,The following switch statement is missing a default case: switch (algorithm) {  				case EncryptionAlgorithm.Camellia256:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia256Cbc);  					break;  				case EncryptionAlgorithm.Camellia192:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia192Cbc);  					break;  				case EncryptionAlgorithm.Camellia128:  					capabilities.AddCapability (NttObjectIdentifiers.IdCamellia128Cbc);  					break;  				case EncryptionAlgorithm.Aes256:  					capabilities.AddCapability (SmimeCapabilities.Aes256Cbc);  					break;  				case EncryptionAlgorithm.Aes192:  					capabilities.AddCapability (SmimeCapabilities.Aes192Cbc);  					break;  				case EncryptionAlgorithm.Aes128:  					capabilities.AddCapability (SmimeCapabilities.Aes128Cbc);  					break;  				case EncryptionAlgorithm.Idea:  					capabilities.AddCapability (SmimeCapabilities.IdeaCbc);  					break;  				case EncryptionAlgorithm.Cast5:  					capabilities.AddCapability (SmimeCapabilities.Cast5Cbc);  					break;  				case EncryptionAlgorithm.TripleDes:  					capabilities.AddCapability (SmimeCapabilities.DesEde3Cbc);  					break;  				case EncryptionAlgorithm.RC2128:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 128);  					break;  				case EncryptionAlgorithm.RC264:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 64);  					break;  				case EncryptionAlgorithm.RC240:  					capabilities.AddCapability (SmimeCapabilities.RC2Cbc' 40);  					break;  				case EncryptionAlgorithm.Des:  					capabilities.AddCapability (SmimeCapabilities.DesCbc);  					break;  				}
Missing Default,MimeKit.Cryptography,SecureMimeContext,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SecureMimeContext.cs,TryGetEncryptionAlgorithm,The following switch statement is missing a default case: switch (bits) {  				case 128: algorithm = EncryptionAlgorithm.RC2128; return true;  				case 64: algorithm = EncryptionAlgorithm.RC264; return true;  				case 40: algorithm = EncryptionAlgorithm.RC240; return true;  				}
Missing Default,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,GetCreateCertificatesTableCommand,The following switch statement is missing a default case: switch (columns[i]) {  				case "ID": statement.Append ("INTEGER PRIMARY KEY AUTOINCREMENT"); break;  				case "BASICCONSTRAINTS": statement.Append ("INTEGER NOT NULL"); break;  				case "TRUSTED":  statement.Append ("INTEGER NOT NULL"); break;  				case "KEYUSAGE": statement.Append ("INTEGER NOT NULL"); break;  				case "NOTBEFORE": statement.Append ("INTEGER NOT NULL"); break;  				case "NOTAFTER": statement.Append ("INTEGER NOT NULL"); break;  				case "ISSUERNAME": statement.Append ("TEXT NOT NULL"); break;  				case "SERIALNUMBER": statement.Append ("TEXT NOT NULL"); break;  				case "SUBJECTEMAIL": statement.Append ("TEXT"); break;  				case "FINGERPRINT": statement.Append ("TEXT NOT NULL"); break;  				case "ALGORITHMS": statement.Append ("TEXT"); break;  				case "ALGORITHMSUPDATED": statement.Append ("INTEGER NOT NULL"); break;  				case "CERTIFICATE": statement.Append ("BLOB UNIQUE NOT NULL"); break;  				case "PRIVATEKEY": statement.Append ("BLOB"); break;  				}
Missing Default,MimeKit.Cryptography,SqliteCertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\SqliteCertificateDatabase.cs,GetCreateCrlsTableCommand,The following switch statement is missing a default case: switch (columns[i]) {  				case "ID": statement.Append ("INTEGER PRIMARY KEY AUTOINCREMENT"); break;  				case "DELTA" : statement.Append ("INTEGER NOT NULL"); break;  				case "ISSUERNAME": statement.Append ("TEXT NOT NULL"); break;  				case "THISUPDATE": statement.Append ("INTEGER NOT NULL"); break;  				case "NEXTUPDATE": statement.Append ("INTEGER NOT NULL"); break;  				case "CRL": statement.Append ("BLOB NOT NULL"); break;  				}
Missing Default,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,LoadCertificateRecord,The following switch statement is missing a default case: switch (reader.GetName (i).ToUpperInvariant ()) {  				case "CERTIFICATE":  					record.Certificate = DecodeCertificate (reader' parser' i' ref buffer);  					break;  				case "PRIVATEKEY":  					record.PrivateKey = DecodePrivateKey (reader' i' ref buffer);  					break;  				case "ALGORITHMS":  					record.Algorithms = DecodeEncryptionAlgorithms (reader' i);  					break;  				case "ALGORITHMSUPDATED":  					record.AlgorithmsUpdated = reader.GetDateTime (i);  					break;  				case "TRUSTED":  					record.IsTrusted = reader.GetBoolean (i);  					break;  				case "ID":  					record.Id = reader.GetInt32 (i);  					break;  				}
Missing Default,MimeKit.Cryptography,X509CertificateDatabase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Cryptography\X509CertificateDatabase.cs,LoadCrlRecord,The following switch statement is missing a default case: switch (reader.GetName (i).ToUpperInvariant ()) {  				case "CRL":  					record.Crl = DecodeX509Crl (reader' parser' i' ref buffer);  					break;  				case "THISUPDATE":  					record.ThisUpdate = reader.GetDateTime (i);  					break;  				case "NEXTUPDATE":  					record.NextUpdate = reader.GetDateTime (i);  					break;  				case "DELTA":  					record.IsDelta = reader.GetBoolean (i);  					break;  				case "ID":  					record.Id = reader.GetInt32 (i);  					break;  				}
Missing Default,MimeKit.Encodings,HexDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\HexDecoder.cs,Decode,The following switch statement is missing a default case: switch (state) {  				case HexDecoderState.PassThrough:  					while (inptr < inend) {  						c = *inptr++;    						if (c == '%') {  							state = HexDecoderState.Percent;  							break;  						}    						*outptr++ = c;  					}  					break;  				case HexDecoderState.Percent:  					c = *inptr++;  					state = HexDecoderState.DecodeByte;  					saved = c;  					break;  				case HexDecoderState.DecodeByte:  					c = *inptr++;  					if (c.IsXDigit () && saved.IsXDigit ()) {  						saved = saved.ToXDigit ();  						c = c.ToXDigit ();    						*outptr++ = (byte) ((saved << 4) | c);  					} else {  						// invalid encoded sequence - pass it through undecoded  						*outptr++ = (byte) '%';  						*outptr++ = saved;  						*outptr++ = c;  					}    					state = HexDecoderState.PassThrough;  					break;  				}
Missing Default,MimeKit.Encodings,QuotedPrintableDecoder,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Encodings\QuotedPrintableDecoder.cs,Decode,The following switch statement is missing a default case: switch (state) {  				case QpDecoderState.PassThrough:  					while (inptr < inend) {  						c = *inptr++;    						if (c == '=') {  							state = QpDecoderState.EqualSign;  							break;  						} else if (rfc2047 && c == '_') {  							*outptr++ = (byte) ' ';  						} else {  							*outptr++ = c;  						}  					}  					break;  				case QpDecoderState.EqualSign:  					c = *inptr++;  					if (c == '\n') {  						// this is a soft break ("=\n")  						state = QpDecoderState.PassThrough;  					} else {  						state = QpDecoderState.DecodeByte;  						saved = c;  					}  					break;  				case QpDecoderState.DecodeByte:  					c = *inptr++;  					if (c.IsXDigit () && saved.IsXDigit ()) {  						saved = saved.ToXDigit ();  						c = c.ToXDigit ();    						*outptr++ = (byte) ((saved << 4) | c);  					} else if (saved == '\r' && c == '\n') {  						// end-of-line  					} else {  						// invalid encoded sequence - pass it through undecoded  						*outptr++ = (byte) '=';  						*outptr++ = saved;  						*outptr++ = c;  					}    					state = QpDecoderState.PassThrough;  					break;  				}
Missing Default,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,TryReadInt32,The following switch statement is missing a default case: switch (nread) {  			case 0:  				saved = buffer[index++];  				nread++;    				if (index == endIndex)  					break;    				goto case 1;  			case 1:  				saved |= (buffer[index++] << 8);  				nread++;    				if (index == endIndex)  					break;    				goto case 2;  			case 2:  				saved |= (buffer[index++] << 16);  				nread++;    				if (index == endIndex)  					break;    				goto case 3;  			case 3:  				saved |= (buffer[index++] << 24);  				nread++;  				break;  			}
Missing Default,MimeKit.Tnef,RtfCompressedToRtf,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\RtfCompressedToRtf.cs,Filter,The following switch statement is missing a default case: switch (state) {  				case FilterState.BeginControlRun:  					flags = value;  					flagCount = 1;    					if ((flags & 0x1) != 0)  						state = FilterState.ReadControlOffset;  					else  						state = FilterState.ReadLiteral;  					break;  				case FilterState.ReadLiteral:  					EnsureOutputSize (outputLength + 1' true);  					OutputBuffer[outputLength++] = value;  					dict[dictWriteOffset++] = value;    					dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  					dictWriteOffset = (short) (dictWriteOffset % 4096);    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.ReadControlOffset:  					state = FilterState.ProcessControl;  					dictReadOffset = value;  					break;  				case FilterState.ProcessControl:  					dictReadOffset = (short) ((dictReadOffset << 4) | (value >> 4));  					int controlLength = (value & 0x0F) + 2;    					if (dictReadOffset == dictWriteOffset) {  						state = FilterState.Complete;  						break;  					}    					EnsureOutputSize (outputLength + controlLength' true);    					int controlEnd = dictReadOffset + controlLength;    					while (dictReadOffset < controlEnd) {  						value = dict[dictReadOffset++ % 4096];  						OutputBuffer[outputLength++] = value;  						dict[dictWriteOffset++] = value;    						dictEndOffset = Math.Max (dictWriteOffset' dictEndOffset);  						dictWriteOffset = (short) (dictWriteOffset % 4096);  					}    					if ((flagCount++ % 8) != 0) {  						flags = (byte) (flags >> 1);    						if ((flags & 0x1) != 0)  							state = FilterState.ReadControlOffset;  						else  							state = FilterState.ReadLiteral;  					} else {  						state = FilterState.BeginControlRun;  					}  					break;  				case FilterState.Complete:  					break;  				}
Missing Default,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractRecipientTable,The following switch statement is missing a default case: switch (prop.PropertyTag.Id) {  					case TnefPropertyId.RecipientType:  						int recipientType = prop.ReadValueAsInt32 ();  						switch (recipientType) {  						case 1: list = message.To; break;  						case 2: list = message.Cc; break;  						case 3: list = message.Bcc; break;  						}  						break;  					case TnefPropertyId.TransmitableDisplayName:  						if (string.IsNullOrEmpty (name))  							name = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.DisplayName:  						name = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.EmailAddress:  						if (string.IsNullOrEmpty (addr))  							addr = prop.ReadValueAsString ();  						break;  					case TnefPropertyId.SmtpAddress:  						// The SmtpAddress' if it exists' should take precedence over the EmailAddress  						// (since the SmtpAddress is meant to be used in the RCPT TO command).  						addr = prop.ReadValueAsString ();  						break;  					}
Missing Default,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractRecipientTable,The following switch statement is missing a default case: switch (recipientType) {  						case 1: list = message.To; break;  						case 2: list = message.Cc; break;  						case 3: list = message.Bcc; break;  						}
Missing Default,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractMapiProperties,The following switch statement is missing a default case: switch (prop.PropertyTag.Id) {  				case TnefPropertyId.InternetMessageId:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode) {  						message.MessageId = prop.ReadValueAsString ();  					}  					break;  				case TnefPropertyId.Subject:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode) {  						message.Subject = prop.ReadValueAsString ();  					}  					break;  				case TnefPropertyId.RtfCompressed:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Binary) {  						var rtf = new TextPart ("rtf");  						rtf.ContentType.Name = "body.rtf";    						var converter = new RtfCompressedToRtf ();  						var content = new MemoryBlockStream ();    						using (var filtered = new FilteredStream (content)) {  							filtered.Add (converter);    							using (var compressed = prop.GetRawValueReadStream ()) {  								compressed.CopyTo (filtered' 4096);  								filtered.Flush ();  							}  						}    						rtf.ContentObject = new ContentObject (content);  						content.Position = 0;    						builder.Attachments.Add (rtf);  					}  					break;  				case TnefPropertyId.BodyHtml:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Binary) {  						var html = new TextPart ("html");  						html.ContentType.Name = "body.html";  						html.Text = prop.ReadValueAsString ();    						builder.Attachments.Add (html);  					}  					break;  				case TnefPropertyId.Body:  					if (prop.PropertyTag.ValueTnefType == TnefPropertyType.String8 ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Unicode ||  						prop.PropertyTag.ValueTnefType == TnefPropertyType.Binary) {  						var plain = new TextPart ("plain");  						plain.ContentType.Name = "body.txt";  						plain.Text = prop.ReadValueAsString ();    						builder.Attachments.Add (plain);  					}  					break;  				}
Missing Default,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The following switch statement is missing a default case: switch (reader.AttributeTag) {  				case TnefAttributeTag.AttachRenderData:  					attachMethod = TnefAttachMethod.ByValue;  					attachment = new MimePart ();  					break;  				case TnefAttributeTag.Attachment:  					if (attachment == null)  						break;    					while (prop.ReadNextProperty ()) {  						switch (prop.PropertyTag.Id) {  						case TnefPropertyId.AttachLongFilename:  							attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachFilename:  							if (attachment.FileName == null)  								attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachContentLocation:  							text = prop.ReadValueAsString ();  							if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  								attachment.ContentLocation = new Uri (text' UriKind.Absolute);  							else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  								attachment.ContentLocation = new Uri (text' UriKind.Relative);  							break;  						case TnefPropertyId.AttachContentBase:  							text = prop.ReadValueAsString ();  							attachment.ContentBase = new Uri (text' UriKind.Absolute);  							break;  						case TnefPropertyId.AttachContentId:  							attachment.ContentId = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachDisposition:  							text = prop.ReadValueAsString ();  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition (text);  							else  								attachment.ContentDisposition.Disposition = text;  							break;  						case TnefPropertyId.AttachData:  							var stream = prop.GetRawValueReadStream ();  							var content = new MemoryStream ();  							var guid = new byte[16];    							if (attachMethod == TnefAttachMethod.EmbeddedMessage) {  								var tnef = new TnefPart ();    								foreach (var param in attachment.ContentType.Parameters)  									tnef.ContentType.Parameters[param.Name] = param.Value;    								if (attachment.ContentDisposition != null)  									tnef.ContentDisposition = attachment.ContentDisposition;    								attachment = tnef;  							}    							// read the GUID  							stream.Read (guid' 0' 16);    							// the rest is content  							using (var filtered = new FilteredStream (content)) {  								filtered.Add (filter);  								stream.CopyTo (filtered' 4096);  								filtered.Flush ();  							}    							content.Position = 0;    							attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.SevenBit);  							attachment.ContentObject = new ContentObject (content);  							filter.Reset ();    							builder.Attachments.Add (attachment);  							break;  						case TnefPropertyId.AttachMethod:  							attachMethod = (TnefAttachMethod) prop.ReadValueAsInt32 ();  							break;  						case TnefPropertyId.AttachMimeTag:  							mimeType = prop.ReadValueAsString ().Split ('/');  							if (mimeType.Length == 2) {  								attachment.ContentType.MediaType = mimeType[0].Trim ();  								attachment.ContentType.MediaSubtype = mimeType[1].Trim ();  							}  							break;  						case TnefPropertyId.AttachFlags:  							flags = (TnefAttachFlags) prop.ReadValueAsInt32 ();  							if ((flags & TnefAttachFlags.RenderedInBody) != 0) {  								if (attachment.ContentDisposition == null)  									attachment.ContentDisposition = new ContentDisposition (ContentDisposition.Inline);  								else  									attachment.ContentDisposition.Disposition = ContentDisposition.Inline;  							}  							break;  						case TnefPropertyId.AttachSize:  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition ();    							attachment.ContentDisposition.Size = prop.ReadValueAsInt64 ();  							break;  						case TnefPropertyId.DisplayName:  							attachment.ContentType.Name = prop.ReadValueAsString ();  							break;  						}  					}  					break;  				case TnefAttributeTag.AttachCreateDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.CreationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachModifyDate:  					if (attachment != null) {  						if (attachment.ContentDisposition == null)  							attachment.ContentDisposition = new ContentDisposition ();    						attachment.ContentDisposition.ModificationDate = prop.ReadValueAsDateTime ();  					}  					break;  				case TnefAttributeTag.AttachTitle:  					if (attachment != null && string.IsNullOrEmpty (attachment.FileName))  						attachment.FileName = prop.ReadValueAsString ();  					break;  				case TnefAttributeTag.AttachMetaFile:  					if (attachment == null)  						break;    					// TODO: what to do with the meta data?  					break;  				case TnefAttributeTag.AttachData:  					if (attachment == null || attachMethod != TnefAttachMethod.ByValue)  						break;    					attachData = prop.ReadValueAsBytes ();  					filter.Flush (attachData' 0' attachData.Length' out outIndex' out outLength);  					attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.EightBit);  					attachment.ContentObject = new ContentObject (new MemoryStream (attachData' false));  					filter.Reset ();    					builder.Attachments.Add (attachment);  					break;  				}
Missing Default,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractAttachments,The following switch statement is missing a default case: switch (prop.PropertyTag.Id) {  						case TnefPropertyId.AttachLongFilename:  							attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachFilename:  							if (attachment.FileName == null)  								attachment.FileName = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachContentLocation:  							text = prop.ReadValueAsString ();  							if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  								attachment.ContentLocation = new Uri (text' UriKind.Absolute);  							else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  								attachment.ContentLocation = new Uri (text' UriKind.Relative);  							break;  						case TnefPropertyId.AttachContentBase:  							text = prop.ReadValueAsString ();  							attachment.ContentBase = new Uri (text' UriKind.Absolute);  							break;  						case TnefPropertyId.AttachContentId:  							attachment.ContentId = prop.ReadValueAsString ();  							break;  						case TnefPropertyId.AttachDisposition:  							text = prop.ReadValueAsString ();  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition (text);  							else  								attachment.ContentDisposition.Disposition = text;  							break;  						case TnefPropertyId.AttachData:  							var stream = prop.GetRawValueReadStream ();  							var content = new MemoryStream ();  							var guid = new byte[16];    							if (attachMethod == TnefAttachMethod.EmbeddedMessage) {  								var tnef = new TnefPart ();    								foreach (var param in attachment.ContentType.Parameters)  									tnef.ContentType.Parameters[param.Name] = param.Value;    								if (attachment.ContentDisposition != null)  									tnef.ContentDisposition = attachment.ContentDisposition;    								attachment = tnef;  							}    							// read the GUID  							stream.Read (guid' 0' 16);    							// the rest is content  							using (var filtered = new FilteredStream (content)) {  								filtered.Add (filter);  								stream.CopyTo (filtered' 4096);  								filtered.Flush ();  							}    							content.Position = 0;    							attachment.ContentTransferEncoding = filter.GetBestEncoding (EncodingConstraint.SevenBit);  							attachment.ContentObject = new ContentObject (content);  							filter.Reset ();    							builder.Attachments.Add (attachment);  							break;  						case TnefPropertyId.AttachMethod:  							attachMethod = (TnefAttachMethod) prop.ReadValueAsInt32 ();  							break;  						case TnefPropertyId.AttachMimeTag:  							mimeType = prop.ReadValueAsString ().Split ('/');  							if (mimeType.Length == 2) {  								attachment.ContentType.MediaType = mimeType[0].Trim ();  								attachment.ContentType.MediaSubtype = mimeType[1].Trim ();  							}  							break;  						case TnefPropertyId.AttachFlags:  							flags = (TnefAttachFlags) prop.ReadValueAsInt32 ();  							if ((flags & TnefAttachFlags.RenderedInBody) != 0) {  								if (attachment.ContentDisposition == null)  									attachment.ContentDisposition = new ContentDisposition (ContentDisposition.Inline);  								else  									attachment.ContentDisposition.Disposition = ContentDisposition.Inline;  							}  							break;  						case TnefPropertyId.AttachSize:  							if (attachment.ContentDisposition == null)  								attachment.ContentDisposition = new ContentDisposition ();    							attachment.ContentDisposition.Size = prop.ReadValueAsInt64 ();  							break;  						case TnefPropertyId.DisplayName:  							attachment.ContentType.Name = prop.ReadValueAsString ();  							break;  						}
Missing Default,MimeKit.Tnef,TnefPart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPart.cs,ExtractTnefMessage,The following switch statement is missing a default case: switch (reader.AttributeTag) {  				case TnefAttributeTag.RecipientTable:  					ExtractRecipientTable (reader' message);  					break;  				case TnefAttributeTag.MapiProperties:  					ExtractMapiProperties (reader' message' builder);  					break;  				case TnefAttributeTag.DateSent:  					message.Date = prop.ReadValueAsDateTime ();  					break;  				case TnefAttributeTag.Body:  					builder.TextBody = prop.ReadValueAsString ();  					break;  				}
Missing Default,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,GetRawValueReadStream,The following switch statement is missing a default case: switch (propertyTag.ValueTnefType) {  				case TnefPropertyType.Unicode:  				case TnefPropertyType.String8:  				case TnefPropertyType.Binary:  				case TnefPropertyType.Object:  					ReadInt32 ();  					break;  				}
Missing Default,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadNextProperty,The following switch statement is missing a default case: switch (id) {  				case TnefPropertyId.AttachMethod:  					AttachMethod = (TnefAttachMethod) PeekInt32 ();  					break;  				}
Missing Default,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadRawValue,The following switch statement is missing a default case: switch (propertyTag.ValueTnefType) {  				case TnefPropertyType.Unicode:  				case TnefPropertyType.String8:  				case TnefPropertyType.Binary:  				case TnefPropertyType.Object:  					ReadInt32 ();  					break;  				}
Missing Default,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadTextValue,The following switch statement is missing a default case: switch (propertyTag.ValueTnefType) {  				case TnefPropertyType.Unicode:  					ReadInt32 ();  					decoder = (Decoder) Encoding.Unicode.GetDecoder ();  					break;  				case TnefPropertyType.String8:  				case TnefPropertyType.Binary:  				case TnefPropertyType.Object:  					ReadInt32 ();  					decoder = (Decoder) GetMessageEncoding ().GetDecoder ();  					break;  				}
Missing Default,MimeKit.Tnef,TnefPropertyReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefPropertyReader.cs,ReadValue,The following switch statement is missing a default case: switch (reader.AttributeType) {  			case TnefAttributeType.Triples: value = ReadAttrBytes (); break;  			case TnefAttributeType.String: value = ReadAttrString (); break;  			case TnefAttributeType.Text:   value = ReadAttrString (); break;  			case TnefAttributeType.Date:   value = ReadAttrDateTime (); break;  			case TnefAttributeType.Short:  value = ReadInt16 (); break;  			case TnefAttributeType.Long:   value = ReadInt32 (); break;  			case TnefAttributeType.Byte:   value = ReadAttrBytes (); break;  			case TnefAttributeType.Word:   value = ReadInt16 (); break;  			case TnefAttributeType.DWord:  value = ReadInt32 (); break;  			}
Missing Default,MimeKit.Tnef,TnefReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Tnef\TnefReader.cs,SetComplianceError,The following switch statement is missing a default case: switch (error) {  			case TnefComplianceStatus.AttributeOverflow:        message = "Too many attributes."; break;  			case TnefComplianceStatus.InvalidAttribute:         message = "Invalid attribute."; break;  			case TnefComplianceStatus.InvalidAttributeChecksum: message = "Invalid attribute checksum."; break;  			case TnefComplianceStatus.InvalidAttributeLength:   message = "Invalid attribute length."; break;  			case TnefComplianceStatus.InvalidAttributeLevel:    message = "Invalid attribute level."; break;  			case TnefComplianceStatus.InvalidAttributeValue:    message = "Invalid attribute value."; break;  			case TnefComplianceStatus.InvalidDate:              message = "Invalid date."; break;  			case TnefComplianceStatus.InvalidMessageClass:      message = "Invalid message class."; break;  			case TnefComplianceStatus.InvalidMessageCodepage:   message = "Invalid message codepage."; break;  			case TnefComplianceStatus.InvalidPropertyLength:    message = "Invalid property length."; break;  			case TnefComplianceStatus.InvalidRowCount:          message = "Invalid row count."; break;  			case TnefComplianceStatus.InvalidTnefSignature:     message = "Invalid TNEF signature."; break;  			case TnefComplianceStatus.InvalidTnefVersion:       message = "Invalid TNEF version."; break;  			case TnefComplianceStatus.NestingTooDeep:           message = "Nesting too deep."; break;  			case TnefComplianceStatus.StreamTruncated:          message = "Truncated TNEF stream."; break;  			case TnefComplianceStatus.UnsupportedPropertyType:  message = "Unsupported property type."; break;  			}
Missing Default,MimeKit.Utils,DateUtils,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Utils\DateUtils.cs,Parse,The following switch statement is missing a default case: switch (format[i]) {  				case 'y': year = (year * 10) + digit; break;  				case 'M': month = (month * 10) + digit; break;  				case 'd': day = (day * 10) + digit; break;  				case 'H': hour = (hour * 10) + digit; break;  				case 'm': minute = (minute * 10) + digit; break;  				case 's': second = (second * 10) + digit; break;  				}
Missing Default,MimeKit,MimeEntity,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeEntity.cs,OnHeadersChanged,The following switch statement is missing a default case: switch (header.Id) {  				case HeaderId.ContentDisposition:  					if (disposition != null)  						disposition.Changed -= ContentDispositionChanged;    					if (ContentDisposition.TryParse (Headers.Options' header.RawValue' out disposition))  						disposition.Changed += ContentDispositionChanged;  					break;  				case HeaderId.ContentLocation:  					text = header.Value.Trim ();    					if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  						location = new Uri (text' UriKind.Absolute);  					else if (Uri.IsWellFormedUriString (text' UriKind.Relative))  						location = new Uri (text' UriKind.Relative);  					else  						location = null;  					break;  				case HeaderId.ContentBase:  					text = header.Value.Trim ();    					if (Uri.IsWellFormedUriString (text' UriKind.Absolute))  						baseUri = new Uri (text' UriKind.Absolute);  					else  						baseUri = null;  					break;  				case HeaderId.ContentId:  					contentId = MimeUtils.EnumerateReferences (header.RawValue' 0' header.RawValue.Length).FirstOrDefault ();  					break;  				}
Missing Default,MimeKit,MimeEntity,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeEntity.cs,OnHeadersChanged,The following switch statement is missing a default case: switch (header.Id) {  				case HeaderId.ContentDisposition:  					if (disposition != null)  						disposition.Changed -= ContentDispositionChanged;    					disposition = null;  					break;  				case HeaderId.ContentLocation:  					location = null;  					break;  				case HeaderId.ContentBase:  					baseUri = null;  					break;  				case HeaderId.ContentId:  					contentId = null;  					break;  				}
Missing Default,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,ReloadHeader,The following switch statement is missing a default case: switch (id) {  			case HeaderId.ResentMessageId:  				resentMessageId = null;  				break;  			case HeaderId.ResentSender:  				resentSender = null;  				break;  			case HeaderId.ResentDate:  				resentDate = DateTimeOffset.MinValue;  				break;  			case HeaderId.References:  				references.Changed -= ReferencesChanged;  				references.Clear ();  				references.Changed += ReferencesChanged;  				break;  			case HeaderId.InReplyTo:  				inreplyto = null;  				break;  			case HeaderId.MessageId:  				messageId = null;  				break;  			case HeaderId.Sender:  				sender = null;  				break;  			case HeaderId.Date:  				date = DateTimeOffset.MinValue;  				break;  			}
Missing Default,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,ReloadHeader,The following switch statement is missing a default case: switch (id) {  				case HeaderId.MimeVersion:  					if (MimeUtils.TryParse (rawValue' 0' rawValue.Length' out version))  						return;  					break;  				case HeaderId.References:  					references.Changed -= ReferencesChanged;  					foreach (var msgid in MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length))  						references.Add (msgid);  					references.Changed += ReferencesChanged;  					break;  				case HeaderId.InReplyTo:  					inreplyto = MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length).FirstOrDefault ();  					break;  				case HeaderId.ResentMessageId:  					resentMessageId = MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length).FirstOrDefault ();  					if (resentMessageId != null)  						return;  					break;  				case HeaderId.MessageId:  					messageId = MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length).FirstOrDefault ();  					if (messageId != null)  						return;  					break;  				case HeaderId.ResentSender:  					if (InternetAddress.TryParse (Headers.Options' rawValue' ref index' rawValue.Length' false' out address))  						resentSender = address as MailboxAddress;  					if (resentSender != null)  						return;  					break;  				case HeaderId.Sender:  					if (InternetAddress.TryParse (Headers.Options' rawValue' ref index' rawValue.Length' false' out address))  						sender = address as MailboxAddress;  					if (sender != null)  						return;  					break;  				case HeaderId.ResentDate:  					if (DateUtils.TryParse (rawValue' 0' rawValue.Length' out resentDate))  						return;  					break;  				case HeaderId.Date:  					if (DateUtils.TryParse (rawValue' 0' rawValue.Length' out date))  						return;  					break;  				}
Missing Default,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,HeadersChanged,The following switch statement is missing a default case: switch (e.Header.Id) {  				case HeaderId.MimeVersion:  					MimeUtils.TryParse (rawValue' 0' rawValue.Length' out version);  					break;  				case HeaderId.References:  					references.Changed -= ReferencesChanged;  					foreach (var msgid in MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length))  						references.Add (msgid);  					references.Changed += ReferencesChanged;  					break;  				case HeaderId.InReplyTo:  					inreplyto = MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length).FirstOrDefault ();  					break;  				case HeaderId.ResentMessageId:  					resentMessageId = MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length).FirstOrDefault ();  					break;  				case HeaderId.MessageId:  					messageId = MimeUtils.EnumerateReferences (rawValue' 0' rawValue.Length).FirstOrDefault ();  					break;  				case HeaderId.ResentSender:  					if (InternetAddress.TryParse (Headers.Options' rawValue' ref index' rawValue.Length' false' out address))  						resentSender = address as MailboxAddress;  					break;  				case HeaderId.Sender:  					if (InternetAddress.TryParse (Headers.Options' rawValue' ref index' rawValue.Length' false' out address))  						sender = address as MailboxAddress;  					break;  				case HeaderId.ResentDate:  					DateUtils.TryParse (rawValue' 0' rawValue.Length' out resentDate);  					break;  				case HeaderId.Date:  					DateUtils.TryParse (rawValue' 0' rawValue.Length' out date);  					break;  				}
Missing Default,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,GetMimePart,The following switch statement is missing a default case: switch (item.TransferEncoding) {  			case System.Net.Mime.TransferEncoding.QuotedPrintable:  				part.ContentTransferEncoding = ContentEncoding.QuotedPrintable;  				break;  			case System.Net.Mime.TransferEncoding.Base64:  				part.ContentTransferEncoding = ContentEncoding.Base64;  				break;  			case System.Net.Mime.TransferEncoding.SevenBit:  				part.ContentTransferEncoding = ContentEncoding.SevenBit;  				break;  			}
Missing Default,MimeKit,MimeMessage,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeMessage.cs,CreateFromMailMessage,The following switch statement is missing a default case: switch (message.Priority) {  			case MailPriority.High:  				msg.Headers.Replace (HeaderId.Priority' "urgent");  				msg.Headers.Replace (HeaderId.Importance' "high");  				msg.Headers.Replace ("X-Priority"' "1");  				break;  			case MailPriority.Low:  				msg.Headers.Replace (HeaderId.Priority' "non-urgent");  				msg.Headers.Replace (HeaderId.Importance' "low");  				msg.Headers.Replace ("X-Priority"' "5");  				break;  			}
Missing Default,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ConstructMessagePart,The following switch statement is missing a default case: switch (found) {  				case BoundaryType.ImmediateEndBoundary:  				case BoundaryType.ImmediateBoundary:  				case BoundaryType.ParentBoundary:  					return found;  				case BoundaryType.ParentEndBoundary:  					// ignore "From " boundaries' broken mailers tend to include these...  					if (!IsMboxMarker (start))  						return found;  					break;  				}
Missing Default,MimeKit,MimeParser,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimeParser.cs,ParseMessage,The following switch statement is missing a default case: switch (Step (inbuf)) {  				case MimeParserState.Error:  					throw new FormatException ("Failed to find mbox From marker.");  				case MimeParserState.Eos:  					throw new FormatException ("End of stream.");  				}
Missing Default,MimeKit,MimePart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimePart.cs,OnHeadersChanged,The following switch statement is missing a default case: switch (header.Id) {  				case HeaderId.ContentTransferEncoding:  					MimeUtils.TryParse (header.Value' out encoding);  					break;  				case HeaderId.ContentDuration:  					if (int.TryParse (header.Value' out value))  						duration = value;  					else  						duration = null;  					break;  				case HeaderId.ContentMd5:  					md5sum = header.Value.Trim ();  					break;  				}
Missing Default,MimeKit,MimePart,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\MimePart.cs,OnHeadersChanged,The following switch statement is missing a default case: switch (header.Id) {  				case HeaderId.ContentTransferEncoding:  					encoding = ContentEncoding.Default;  					break;  				case HeaderId.ContentDuration:  					duration = null;  					break;  				case HeaderId.ContentMd5:  					md5sum = null;  					break;  				}
Missing Default,MimeKit,Parameter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\Parameter.cs,GetNextValue,The following switch statement is missing a default case: switch (GetEncodeMethod (options' chars' index' length)) {  				case EncodeMethod.Quote:  					value = MimeUtils.Quote (new string (chars' index' length));  					index += length;  					return false;  				case EncodeMethod.None:  					value = new string (chars' index' length);  					index += length;  					return false;  				}
Missing Default,MimeKit,ParserOptions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParserOptions.cs,CreateEntity,The following switch statement is missing a default case: switch (subtype) {  				case "disposition-notification":  					return new MessageDispositionNotification (entity);  				case "partial":  					if (!IsEncoded (headers))  						return new MessagePartial (entity);  					break;  				case "external-body":  				case "rfc2822":  				case "rfc822":  				case "news":  					if (!IsEncoded (headers))  						return new MessagePart (entity);  					break;  				}
Missing Default,MimeKit,ParserOptions,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\MimeKit\ParserOptions.cs,CreateEntity,The following switch statement is missing a default case: switch (subtype) {  				case "x-pkcs7-signature":  				case "pkcs7-signature":  					return new ApplicationPkcs7Signature (entity);  				case "x-pgp-encrypted":  				case "pgp-encrypted":  					return new ApplicationPgpEncrypted (entity);  				case "x-pgp-signature":  				case "pgp-signature":  					return new ApplicationPgpSignature (entity);  				case "x-pkcs7-mime":  				case "pkcs7-mime":  					return new ApplicationPkcs7Mime (entity);  				case "vnd.ms-tnef":  				case "ms-tnef":  					return new TnefPart (entity);  				}
