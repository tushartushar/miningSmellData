Implementation smell,Namespace,Class,File,Method,Description
Long Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,HandlePgpEncryptedDataList,The method has 117 lines of code.
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetPublicKeyUserIdsForEncryption,Cyclomatic complexity of the method is 10
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetPublicKeyUserIdsForSign,Cyclomatic complexity of the method is 9
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetSecretKeyUserIds,Cyclomatic complexity of the method is 9
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetPublicKeyRing,Cyclomatic complexity of the method is 8
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetPublicKeyForEncryption,Cyclomatic complexity of the method is 9
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetMasterPublicKey,Cyclomatic complexity of the method is 10
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetSecretKeyForEncryption,Cyclomatic complexity of the method is 9
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetSecretKeyForSigning,Cyclomatic complexity of the method is 9
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetMasterSecretKey,Cyclomatic complexity of the method is 9
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,Sign,Cyclomatic complexity of the method is 14
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,Cyclomatic complexity of the method is 19
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,Encrypt,Cyclomatic complexity of the method is 16
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignAndEncrypt,Cyclomatic complexity of the method is 20
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,VerifyClear,Cyclomatic complexity of the method is 19
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,DecryptAndVerify,Cyclomatic complexity of the method is 12
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,DecryptHandlePgpObject,Cyclomatic complexity of the method is 25
Complex Method,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,HandlePgpEncryptedDataList,Cyclomatic complexity of the method is 20
Complex Method,Deja.Crypto.BcPgp,CryptoContext,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\CryptoContext.cs,CryptoContext,Cyclomatic complexity of the method is 9
Long Parameter List,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The method has 5 parameters.
Long Parameter List,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignAndEncrypt,The method has 5 parameters.
Long Parameter List,Deja.Crypto.BcPgp,CryptoContext,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\CryptoContext.cs,CryptoContext,The method has 5 parameters.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,Sign,The length of the statement  "	signatureData.InitSign (PgpSignature.BinaryDocument' senderKey.ExtractPrivateKey (Context.PasswordCallback (senderMasterKey' senderKey))); " is 138.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The length of the statement  "	var signatureData = new PgpSignatureGenerator (senderKey.PublicKey.Algorithm' GetHashAlgTagFromString (Context.Digest)); " is 120.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The length of the statement  "	signatureData.InitSign (PgpSignature.CanonicalTextDocument' senderKey.ExtractPrivateKey (Context.PasswordCallback (senderMasterKey' senderKey))); " is 145.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,Encrypt,The length of the statement  "					using (var literalOut = literalData.Open (compressedOut' PgpLiteralData.Binary' "email"' data.Length' DateTime.UtcNow)) { " is 121.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignAndEncrypt,The length of the statement  "	var signatureData = new PgpSignatureGenerator (senderSignKey.PublicKey.Algorithm' GetHashAlgTagFromString (Context.Digest)); " is 124.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignAndEncrypt,The length of the statement  "	signatureData.InitSign (isBinary ? PgpSignature.BinaryDocument : PgpSignature.CanonicalTextDocument' senderSignKey.ExtractPrivateKey (Context.PasswordCallback (senderMasterSignkey' senderSignKey))); " is 198.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignAndEncrypt,The length of the statement  "					using (var literalOut = literalData.Open (compressedOut' isBinary ? PgpLiteralData.Binary : PgpLiteralData.Text' ""' data.Length' DateTime.UtcNow)) { " is 149.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,HandlePgpEncryptedDataList,The length of the statement  "	var hiddenRecipientData = dataList.GetEncryptedDataObjects ().Cast<PgpPublicKeyEncryptedData> ().FirstOrDefault (key => key.KeyId == 0); " is 136.
Long Statement,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,HandlePgpEncryptedDataList,The length of the statement  "	var knownKeyData = dataList.GetEncryptedDataObjects ().Cast<PgpPublicKeyEncryptedData> ().FirstOrDefault (key => GetSecretKey (key.KeyId) != null); " is 147.
Empty Catch Block,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,HandlePgpEncryptedDataList,The method has an empty catch block.
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: if (wrapLines && mailLines.Any (line => line.Length > 70)) {  	var lines = new List<string> (mailLines);  	for (var i = 0; i < lines.Count; i++) {  		var line = lines [i];  		if (line.Length <= 70)  			continue;  		var newLine = line.Substring (70);  		line = line.Substring (0' 70);  		lines [i] = line;  		lines.Insert (i + 1' newLine);  	}  	var sb = new StringBuilder (data.Length + 20);  	foreach (var line in lines)  		sb.AppendLine (line.TrimEnd ('\r'' '\n'));  	data = sb.ToString ();  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: if (wrapLines && mailLines.Any (line => line.Length > 70)) {  	var lines = new List<string> (mailLines);  	for (var i = 0; i < lines.Count; i++) {  		var line = lines [i];  		if (line.Length <= 70)  			continue;  		var newLine = line.Substring (70);  		line = line.Substring (0' 70);  		lines [i] = line;  		lines.Insert (i + 1' newLine);  	}  	var sb = new StringBuilder (data.Length + 20);  	foreach (var line in lines)  		sb.AppendLine (line.TrimEnd ('\r'' '\n'));  	data = sb.ToString ();  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: if (wrapLines && mailLines.Any (line => line.Length > 70)) {  	var lines = new List<string> (mailLines);  	for (var i = 0; i < lines.Count; i++) {  		var line = lines [i];  		if (line.Length <= 70)  			continue;  		var newLine = line.Substring (70);  		line = line.Substring (0' 70);  		lines [i] = line;  		lines.Insert (i + 1' newLine);  	}  	var sb = new StringBuilder (data.Length + 20);  	foreach (var line in lines)  		sb.AppendLine (line.TrimEnd ('\r'' '\n'));  	data = sb.ToString ();  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: if (wrapLines && mailLines.Any (line => line.Length > 70)) {  	var lines = new List<string> (mailLines);  	for (var i = 0; i < lines.Count; i++) {  		var line = lines [i];  		if (line.Length <= 70)  			continue;  		var newLine = line.Substring (70);  		line = line.Substring (0' 70);  		lines [i] = line;  		lines.Insert (i + 1' newLine);  	}  	var sb = new StringBuilder (data.Length + 20);  	foreach (var line in lines)  		sb.AppendLine (line.TrimEnd ('\r'' '\n'));  	data = sb.ToString ();  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: if (wrapLines && mailLines.Any (line => line.Length > 70)) {  	var lines = new List<string> (mailLines);  	for (var i = 0; i < lines.Count; i++) {  		var line = lines [i];  		if (line.Length <= 70)  			continue;  		var newLine = line.Substring (70);  		line = line.Substring (0' 70);  		lines [i] = line;  		lines.Insert (i + 1' newLine);  	}  	var sb = new StringBuilder (data.Length + 20);  	foreach (var line in lines)  		sb.AppendLine (line.TrimEnd ('\r'' '\n'));  	data = sb.ToString ();  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: for (var i = 0; i < lines.Count; i++) {  	var line = lines [i];  	if (line.Length <= 70)  		continue;  	var newLine = line.Substring (70);  	line = line.Substring (0' 70);  	lines [i] = line;  	lines.Insert (i + 1' newLine);  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: for (var i = 0; i < lines.Count; i++) {  	var line = lines [i];  	if (line.Length <= 70)  		continue;  	var newLine = line.Substring (70);  	line = line.Substring (0' 70);  	lines [i] = line;  	lines.Insert (i + 1' newLine);  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: for (var i = 0; i < lines.Count; i++) {  	var line = lines [i];  	if (line.Length <= 70)  		continue;  	var newLine = line.Substring (70);  	line = line.Substring (0' 70);  	lines [i] = line;  	lines.Insert (i + 1' newLine);  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: if (line.Length <= 70)  	continue;  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,SignClear,The following statement contains a magic number: line = line.Substring (0' 70);  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,VerifyClear,The following statement contains a magic number: using (var dataIn = new MemoryStream (data))  	using (var armoredIn = new ArmoredInputStream (dataIn)) {  		if (!armoredIn.IsClearText ())  			throw new CryptoException ("Error' message is not armored clear-text.");  		var headers = armoredIn.GetArmorHeaders ();  		if (headers != null) {  			foreach (var header in headers) {  				if (Regex.IsMatch (header' @"Charset: ([^\s]*)")) {  					var encodingType = Regex.Match (header' @"Charset: ([^\s]*)").Groups [1].Value;  					encoding = Encoding.GetEncoding (encodingType);  				}  			}  		}  		using (var clearOut = new MemoryStream ()) {  			using (var clearIn = new MemoryStream ()) {  				int ch = 0;  				while ((ch = armoredIn.ReadByte ()) >= 0 && armoredIn.IsClearText ())  					clearIn.WriteByte ((byte)ch);  				clearIn.Position = 0;  				using (var stringIn = new StringReader (encoding.GetString (clearIn.ToArray ()))) {  					do {  						var line = stringIn.ReadLine ();  						if (line == null)  							break;  						line = line.TrimEnd (null).TrimEnd (new char[] {  							' ''  							'\t''  							'\n''  							'\r'  						}).TrimEnd (null) + "\r\n";  						var buff = encoding.GetBytes (line);  						clearOut.Write (buff' 0' buff.Length);  					} while (true);  				}  			}  			clearOut.Position = 0;  			var factory = new PgpObjectFactory (armoredIn);  			var signatureList = (PgpSignatureList)factory.NextPgpObject ();  			if (signatureList == null)  				return false;  			var signature = signatureList [0];  			Context.IsEncrypted = false;  			Context.IsSigned = true;  			Context.SignedBy = GetMasterPublicKey (signature.KeyId);  			if (Context.SignedBy == null)  				throw new PublicKeyNotFoundException ("Public key not found for key id \"" + signature.KeyId + "\".");  			signature.InitVerify (GetPublicKey (signature.KeyId));  			signature.Update (clearOut.ToArray ()' 0' (int)(clearOut.Length - 2));  			Context.SignatureValidated = signature.Verify ();  			return Context.SignatureValidated;  		}  	}  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,VerifyClear,The following statement contains a magic number: using (var armoredIn = new ArmoredInputStream (dataIn)) {  	if (!armoredIn.IsClearText ())  		throw new CryptoException ("Error' message is not armored clear-text.");  	var headers = armoredIn.GetArmorHeaders ();  	if (headers != null) {  		foreach (var header in headers) {  			if (Regex.IsMatch (header' @"Charset: ([^\s]*)")) {  				var encodingType = Regex.Match (header' @"Charset: ([^\s]*)").Groups [1].Value;  				encoding = Encoding.GetEncoding (encodingType);  			}  		}  	}  	using (var clearOut = new MemoryStream ()) {  		using (var clearIn = new MemoryStream ()) {  			int ch = 0;  			while ((ch = armoredIn.ReadByte ()) >= 0 && armoredIn.IsClearText ())  				clearIn.WriteByte ((byte)ch);  			clearIn.Position = 0;  			using (var stringIn = new StringReader (encoding.GetString (clearIn.ToArray ()))) {  				do {  					var line = stringIn.ReadLine ();  					if (line == null)  						break;  					line = line.TrimEnd (null).TrimEnd (new char[] {  						' ''  						'\t''  						'\n''  						'\r'  					}).TrimEnd (null) + "\r\n";  					var buff = encoding.GetBytes (line);  					clearOut.Write (buff' 0' buff.Length);  				} while (true);  			}  		}  		clearOut.Position = 0;  		var factory = new PgpObjectFactory (armoredIn);  		var signatureList = (PgpSignatureList)factory.NextPgpObject ();  		if (signatureList == null)  			return false;  		var signature = signatureList [0];  		Context.IsEncrypted = false;  		Context.IsSigned = true;  		Context.SignedBy = GetMasterPublicKey (signature.KeyId);  		if (Context.SignedBy == null)  			throw new PublicKeyNotFoundException ("Public key not found for key id \"" + signature.KeyId + "\".");  		signature.InitVerify (GetPublicKey (signature.KeyId));  		signature.Update (clearOut.ToArray ()' 0' (int)(clearOut.Length - 2));  		Context.SignatureValidated = signature.Verify ();  		return Context.SignatureValidated;  	}  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,VerifyClear,The following statement contains a magic number: using (var clearOut = new MemoryStream ()) {  	using (var clearIn = new MemoryStream ()) {  		int ch = 0;  		while ((ch = armoredIn.ReadByte ()) >= 0 && armoredIn.IsClearText ())  			clearIn.WriteByte ((byte)ch);  		clearIn.Position = 0;  		using (var stringIn = new StringReader (encoding.GetString (clearIn.ToArray ()))) {  			do {  				var line = stringIn.ReadLine ();  				if (line == null)  					break;  				line = line.TrimEnd (null).TrimEnd (new char[] {  					' ''  					'\t''  					'\n''  					'\r'  				}).TrimEnd (null) + "\r\n";  				var buff = encoding.GetBytes (line);  				clearOut.Write (buff' 0' buff.Length);  			} while (true);  		}  	}  	clearOut.Position = 0;  	var factory = new PgpObjectFactory (armoredIn);  	var signatureList = (PgpSignatureList)factory.NextPgpObject ();  	if (signatureList == null)  		return false;  	var signature = signatureList [0];  	Context.IsEncrypted = false;  	Context.IsSigned = true;  	Context.SignedBy = GetMasterPublicKey (signature.KeyId);  	if (Context.SignedBy == null)  		throw new PublicKeyNotFoundException ("Public key not found for key id \"" + signature.KeyId + "\".");  	signature.InitVerify (GetPublicKey (signature.KeyId));  	signature.Update (clearOut.ToArray ()' 0' (int)(clearOut.Length - 2));  	Context.SignatureValidated = signature.Verify ();  	return Context.SignatureValidated;  }  
Magic Number,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,VerifyClear,The following statement contains a magic number: signature.Update (clearOut.ToArray ()' 0' (int)(clearOut.Length - 2));  
Duplicate Code,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,HandlePgpEncryptedDataList,The method contains a code clone-set at the following line numbers (starting from the method definition): ((33' 57)' (82' 106))
Missing Default,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,IsSigningAlg,The following switch statement is missing a default case: switch (alg) {  case PublicKeyAlgorithmTag.Dsa:  case PublicKeyAlgorithmTag.RsaSign:  case PublicKeyAlgorithmTag.ECDsa:  	return true;  }  
Missing Default,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,IsEncryptionAlg,The following switch statement is missing a default case: switch (alg) {  case PublicKeyAlgorithmTag.DiffieHellman:  case PublicKeyAlgorithmTag.EC:  case PublicKeyAlgorithmTag.ElGamalEncrypt:  case PublicKeyAlgorithmTag.RsaEncrypt:  	return true;  }  
Missing Default,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetSymAlgTagFromString,The following switch statement is missing a default case: switch (alg.ToLower ()) {  case "cast5":  	return SymmetricKeyAlgorithmTag.Cast5;  case "aes-128":  	return SymmetricKeyAlgorithmTag.Aes128;  case "aes-192":  	return SymmetricKeyAlgorithmTag.Aes192;  case "aes-256":  	return SymmetricKeyAlgorithmTag.Aes256;  }  
Missing Default,Deja.Crypto.BcPgp,PgpCrypto,F:\newReposMay17\dejavusecurity_OutlookPrivacyPlugin\Deja.Crypto\BcPgp\PgpCrypto.cs,GetHashAlgTagFromString,The following switch statement is missing a default case: switch (alg.ToLower ()) {  case "sha-1":  	return HashAlgorithmTag.Sha1;  case "sha-224":  	return HashAlgorithmTag.Sha224;  case "sha-256":  	return HashAlgorithmTag.Sha256;  case "sha-384":  	return HashAlgorithmTag.Sha384;  case "sha-512":  	return HashAlgorithmTag.Sha512;  }  
