Implementation smell,Namespace,Class,File,Method,Description
Long Method,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The method has 115 lines of code.
Long Method,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,DuplicateErrorsTest,The method has 108 lines of code.
Long Method,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The method has 121 lines of code.
Long Method,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The method has 103 lines of code.
Long Method,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The method has 103 lines of code.
Long Method,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteEscapedJavaScriptStringOld,The method has 100 lines of code.
Long Method,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,Serialize,The method has 130 lines of code.
Long Method,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The method has 139 lines of code.
Complex Method,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteEscapedJavaScriptStringOld,Cyclomatic complexity of the method is 25
Complex Method,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObjectComparedToXml,Cyclomatic complexity of the method is 8
Complex Method,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,Serialize,Cyclomatic complexity of the method is 15
Complex Method,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,DeserializeJsonNetManual,Cyclomatic complexity of the method is 12
Complex Method,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,Deserialize,Cyclomatic complexity of the method is 10
Long Parameter List,Newtonsoft.Json.Tests.TestObjects,Event,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Event.cs,Event,The method has 7 parameters. Parameters: sublocation' userId' type' summary' details' stackTrace' tag
Long Identifier,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JTokenWriter,The length of the parameter ignoreAttributeOnClassTestClass is 31.
Long Identifier,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor,The length of the parameter withoutParameterisedConstructor is 31.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The length of the statement  "            Assert.AreEqual("8C-00-00-00-12-30-00-FF-FF-FF-FF-FF-FF-FF-7F-12-31-00-FF-FF-FF-FF-FF-FF-FF-7F-10-32-00-FF-FF-FF-7F-10-33-00-FF-FF-FF-7F-10-34-00-FF-00-00-00-10-35-00-7F-00-00-00-02-36-00-02-00-00-00-61-00-01-37-00-00-00-00-00-00-00-F0-45-01-38-00-FF-FF-FF-FF-FF-FF-EF-7F-01-39-00-00-00-00-E0-FF-FF-EF-47-08-31-30-00-01-05-31-31-00-05-00-00-00-00-00-01-02-03-04-09-31-32-00-40-C5-E2-BA-E3-00-00-00-09-31-33-00-40-C5-E2-BA-E3-00-00-00-00"' bson); " is 445.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteBytes,The length of the statement  "            string expected = "2B-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-05-32-00-0C-00-00-00-00-48-65-6C-6C-6F-20-77-6F-72-6C-64-21-00"; " is 149.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteNestedArray,The length of the statement  "            string expected = "87-00-00-00-05-5F-69-64-00-0C-00-00-00-00-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00"; " is 425.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteLargeStrings,The length of the statement  "            Assert.AreEqual("4E-02-00-00-02-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-22-01-00-00-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-00"' bson); " is 1795.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The length of the statement  "            GoogleMapGeocoderStructure bsonGoogleMapGeocoder = (GoogleMapGeocoderStructure)serializer.Deserialize(reader' typeof(GoogleMapGeocoderStructure)); " is 146.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The length of the statement  "            Assert.AreEqual("Santa Clara"' placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.SubAdministrativeAreaName); " is 132.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The length of the statement  "            Assert.AreEqual("Mountain View"' placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.LocalityName); " is 130.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The length of the statement  "            Assert.AreEqual("1600 Amphitheatre Pkwy"' placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.Thoroughfare.ThoroughfareName); " is 156.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The length of the statement  "            Assert.AreEqual("94043"' placemark.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.PostalCode.PostalCodeNumber); " is 137.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadGuid_Text,The length of the statement  "            byte[] data = HexToBytes("31-00-00-00-02-30-00-25-00-00-00-64-38-32-31-65-65-64-37-2D-34-62-35-63-2D-34-33-63-39-2D-38-61-63-32-2D-36-39-32-38-65-35-37-39-62-37-30-35-00-00"); " is 175.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The length of the statement  "            byte[] data = HexToBytes("8C-00-00-00-12-30-00-FF-FF-FF-FF-FF-FF-FF-7F-12-31-00-FF-FF-FF-FF-FF-FF-FF-7F-10-32-00-FF-FF-FF-7F-10-33-00-FF-FF-FF-7F-10-34-00-FF-00-00-00-10-35-00-7F-00-00-00-02-36-00-02-00-00-00-61-00-01-37-00-00-00-00-00-00-00-F0-45-01-38-00-FF-FF-FF-FF-FF-FF-EF-7F-01-39-00-00-00-00-E0-FF-FF-EF-47-08-31-30-00-01-05-31-31-00-05-00-00-00-02-00-01-02-03-04-09-31-32-00-40-C5-E2-BA-E3-00-00-00-09-31-33-00-40-C5-E2-BA-E3-00-00-00-00"); " is 448.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadObjectBsonFromSite,The length of the statement  "            byte[] data = HexToBytes("20-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-02-32-00-02-00-00-00-63-00-00"); " is 124.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadArrayBsonFromSite,The length of the statement  "            byte[] data = HexToBytes("20-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-02-32-00-02-00-00-00-63-00-00"); " is 124.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadAsInt32BadString,The length of the statement  "                byte[] data = HexToBytes("20-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-02-32-00-02-00-00-00-63-00-00"); " is 124.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadBytes,The length of the statement  "            byte[] data = HexToBytes("2B-00-00-00-02-30-00-02-00-00-00-61-00-02-31-00-02-00-00-00-62-00-05-32-00-0C-00-00-00-02-48-65-6C-6C-6F-20-77-6F-72-6C-64-21-00"); " is 157.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadNestedArray,The length of the statement  "            string hexdoc = "82-00-00-00-07-5F-69-64-00-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00"; " is 408.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadNestedArrayIntoLinq,The length of the statement  "            string hexdoc = "87-00-00-00-05-5F-69-64-00-0C-00-00-00-00-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00"; " is 423.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,OidAndBytesAreEqual,The length of the statement  "                "82-00-00-00-07-5F-69-64-00-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00"); " is 393.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,OidAndBytesAreEqual,The length of the statement  "                "87-00-00-00-05-5F-69-64-00-0C-00-00-00-02-4A-78-93-79-17-22-00-00-00-00-61-CF-04-61-00-5D-00-00-00-01-30-00-00-00-00-00-00-00-F0-3F-01-31-00-00-00-00-00-00-00-00-40-01-32-00-00-00-00-00-00-00-08-40-01-33-00-00-00-00-00-00-00-10-40-01-34-00-00-00-00-00-00-00-14-50-01-35-00-00-00-00-00-00-00-18-40-01-36-00-00-00-00-00-00-00-1C-40-01-37-00-00-00-00-00-00-00-20-40-00-02-62-00-05-00-00-00-74-65-73-74-00-00"); " is 408.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadCodeWScope,The length of the statement  "            string hexdoc = "75-00-00-00-0F-63-6F-64-65-57-69-74-68-53-63-6F-70-65-00-61-00-00-00-35-00-00-00-66-6F-72-20-28-69-6E-74-20-69-20-3D-20-30-3B-20-69-20-3C-20-31-30-30-30-3B-20-69-2B-2B-29-0D-0A-7B-0D-0A-20-20-61-6C-65-72-74-28-61-72-67-31-29-3B-0D-0A-7D-00-24-00-00-00-02-61-72-67-31-00-15-00-00-00-4A-73-6F-6E-2E-4E-45-54-20-69-73-20-61-77-65-73-6F-6D-65-2E-00-00-00"; " is 369.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadLargeStrings,The length of the statement  "                "4E-02-00-00-02-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-22-01-00-00-30-2D-31-2D-32-2D-33-2D-34-2D-35-2D-36-2D-37-2D-38-2D-39-2D-31-30-2D-31-31-2D-31-32-2D-31-33-2D-31-34-2D-31-35-2D-31-36-2D-31-37-2D-31-38-2D-31-39-2D-32-30-2D-32-31-2D-32-32-2D-32-33-2D-32-34-2D-32-35-2D-32-36-2D-32-37-2D-32-38-2D-32-39-2D-33-30-2D-33-31-2D-33-32-2D-33-33-2D-33-34-2D-33-35-2D-33-36-2D-33-37-2D-33-38-2D-33-39-2D-34-30-2D-34-31-2D-34-32-2D-34-33-2D-34-34-2D-34-35-2D-34-36-2D-34-37-2D-34-38-2D-34-39-2D-35-30-2D-35-31-2D-35-32-2D-35-33-2D-35-34-2D-35-35-2D-35-36-2D-35-37-2D-35-38-2D-35-39-2D-36-30-2D-36-31-2D-36-32-2D-36-33-2D-36-34-2D-36-35-2D-36-36-2D-36-37-2D-36-38-2D-36-39-2D-37-30-2D-37-31-2D-37-32-2D-37-33-2D-37-34-2D-37-35-2D-37-36-2D-37-37-2D-37-38-2D-37-39-2D-38-30-2D-38-31-2D-38-32-2D-38-33-2D-38-34-2D-38-35-2D-38-36-2D-38-37-2D-38-38-2D-38-39-2D-39-30-2D-39-31-2D-39-32-2D-39-33-2D-39-34-2D-39-35-2D-39-36-2D-39-37-2D-39-38-2D-39-39-00-00"; " is 1772.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,WriteAndReadEmptyListsAndDictionaries,The length of the statement  "            Assert.AreEqual("20-00-00-00-03-41-72-67-75-6D-65-6E-74-73-00-05-00-00-00-00-04-4C-69-73-74-00-05-00-00-00-00-00"' bson); " is 121.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,CanRoundTripStackOverflowData,The length of the statement  """AboutMe"": ""<p>I'm the Director for Research and Development for <a href=\""http://www.prophoenix.com\"" rel=\""nofollow\"">ProPhoenix</a>' a public safety software company.  This position allows me to investigate new and existing technologies and incorporate them into our product line' with the end goal being to help public safety agencies to do their jobs more effeciently and safely.</p>\r\n\r\n<p>I'm an advocate for PowerShell' as I believe it encourages administrative best practices and allows developers to provide additional access to their applications' without needing to explicity write code for each administrative feature.  Part of my advocacy for PowerShell includes <a href=\""http://blog.usepowershell.com\"" rel=\""nofollow\"">my blog</a>' appearances on various podcasts' and acting as a Community Director for <a href=\""http://powershellcommunity.org\"" rel=\""nofollow\"">PowerShellCommunity.Org</a></p>\r\n\r\n<p>I’m also a co-host of Mind of Root (a weekly audio podcast about systems administration' tech news' and topics).</p>\r\n""' " is 1064.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,CanRoundTripStackOverflowData,The length of the statement  "            Assert.AreEqual("<p>I'm the Director for Research and Development for <a href=\"http://www.prophoenix.com\" rel=\"nofollow\">ProPhoenix</a>' a public safety software company.  This position allows me to investigate new and existing technologies and incorporate them into our product line' with the end goal being to help public safety agencies to do their jobs more effeciently and safely.</p>\r\n\r\n<p>I'm an advocate for PowerShell' as I believe it encourages administrative best practices and allows developers to provide additional access to their applications' without needing to explicity write code for each administrative feature.  Part of my advocacy for PowerShell includes <a href=\"http://blog.usepowershell.com\" rel=\"nofollow\">my blog</a>' appearances on various podcasts' and acting as a Community Director for <a href=\"http://powershellcommunity.org\" rel=\"nofollow\">PowerShellCommunity.Org</a></p>\r\n\r\n<p>I’m also a co-host of Mind of Root (a weekly audio podcast about systems administration' tech news' and topics).</p>\r\n"' reader.Value); " is 1068.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,MultibyteCharacterPropertyNamesAndStrings,The length of the statement  "  ""ΕΝΤΟΛΗ ΧΧΧ ΧΧΧΧΧΧΧΧΧ ΤΑ ΠΡΩΤΑΣΦΑΛΙΣΤΗΡΙΑ ΠΟΥ ΔΕΝ ΕΧΟΥΝ ΥΠΟΛΟΙΠΟ ΝΑ ΤΑ ΣΤΕΛΝΟΥΜΕ ΑΠΕΥΘΕΙΑΣ ΣΤΟΥΣ ΠΕΛΑΤΕΣ"": ""ΕΝΤΟΛΗ ΧΧΧ ΧΧΧΧΧΧΧΧΧ ΤΑ ΠΡΩΤΑΣΦΑΛΙΣΤΗΡΙΑ ΠΟΥ ΔΕΝ ΕΧΟΥΝ ΥΠΟΛΟΙΠΟ ΝΑ ΤΑ ΣΤΕΛΝΟΥΜΕ ΑΠΕΥΘΕΙΑΣ ΣΤΟΥΣ ΠΕΛΑΤΕΣ"" " is 216.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,MultibyteCharacterPropertyNamesAndStrings,The length of the statement  "            Assert.AreEqual("ΕΝΤΟΛΗ ΧΧΧ ΧΧΧΧΧΧΧΧΧ ΤΑ ΠΡΩΤΑΣΦΑΛΙΣΤΗΡΙΑ ΠΟΥ ΔΕΝ ΕΧΟΥΝ ΥΠΟΛΟΙΠΟ ΝΑ ΤΑ ΣΤΕΛΝΟΥΜΕ ΑΠΕΥΘΕΙΑΣ ΣΤΟΥΣ ΠΕΛΑΤΕΣ"' reader.Value); " is 137.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,MultibyteCharacterPropertyNamesAndStrings,The length of the statement  "            Assert.AreEqual("ΕΝΤΟΛΗ ΧΧΧ ΧΧΧΧΧΧΧΧΧ ΤΑ ΠΡΩΤΑΣΦΑΛΙΣΤΗΡΙΑ ΠΟΥ ΔΕΝ ΕΧΟΥΝ ΥΠΟΛΟΙΠΟ ΝΑ ΤΑ ΣΤΕΛΝΟΥΜΕ ΑΠΕΥΘΕΙΑΣ ΣΤΟΥΣ ΠΕΛΑΤΕΣ"' reader.Value); " is 137.
Long Statement,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeRegexNonConverterBson,The length of the statement  "            string hex = "46-00-00-00-03-52-65-67-65-78-00-3A-00-00-00-02-70-61-74-74-65-72-6E-00-05-00-00-00-28-68-69-29-00-10-6F-70-74-69-6F-6E-73-00-05-00-00-00-12-6D-61-74-63-68-54-69-6D-65-6F-75-74-00-F0-D8-FF-FF-FF-FF-FF-FF-00-00"; " is 225.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,CreateUnion,The length of the statement  "                unionCase.FieldReader = FSharpFunc<object' object[]>.ToConverter(FSharpValue.PreComputeUnionReader(unionCaseInfo' null)); " is 121.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,CreateUnion,The length of the statement  "                unionCase.Constructor = FSharpFunc<object[]' object>.ToConverter(FSharpValue.PreComputeUnionConstructor(unionCaseInfo' null)); " is 126.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeBasicUnion_NoMatch,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@"{""Case"":""abcdefg""'""Fields"":[]}")' "No union type found with the name 'abcdefg'. Path 'Case'' line 1' position 17."); " is 221.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeBasicUnion_MismatchedFieldCount,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@"{""Case"":""AUD""'""Fields"":[1]}")' "The number of field values does not match the number of properties definied by union 'AUD'. Path ''' line 1' position 27."); " is 261.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeBasicUnion_NoCaseName,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@"{""Fields"":[1]}")' "No 'Case' property with union name found. Path ''' line 1' position 14."); " is 194.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeBasicUnion_UnexpectedEnd,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@"{""Case"":")' "Unexpected end when reading union. Path 'Case'' line 1' position 8."); " is 184.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeBasicUnion_FieldsObject,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@"{""Case"":""AUD""'""Fields"":{}}")' "Union fields must been an array. Path 'Fields'' line 1' position 24."); " is 207.
Long Statement,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeBasicUnion_UnexpectedProperty,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@"{""Case123"":""AUD""}")' "Unexpected property 'Case123' found when reading union. Path 'Case123'' line 1' position 11."); " is 220.
Long Statement,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,SerializeUsingInternalConverter,The length of the statement  "            JsonObjectContract contract = (JsonObjectContract) contractResolver.ResolveContract(typeof (KeyValuePair<string' int>)); " is 120.
Long Statement,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,DeserializeUnexpectedEnd,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<KeyValuePair<string' int>>(@"{""Key"": ""123""'")' "Unexpected end when reading KeyValuePair. Path 'Key'' line 1' position 14."); " is 216.
Long Statement,Newtonsoft.Json.Tests.Converters,RegexConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\RegexConverterTests.cs,ConvertRegexWithAllOptionsBson,The length of the statement  "            Assert.AreEqual(RegexOptions.IgnoreCase | RegexOptions.Singleline | RegexOptions.Multiline | RegexOptions.ExplicitCapture' c.Regex.Options); " is 140.
Long Statement,Newtonsoft.Json.Tests.Converters,RegexConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\RegexConverterTests.cs,ConvertEmptyRegexJson,The length of the statement  "            string json = JsonConvert.SerializeObject(new RegexTestClass { Regex = regex }' Formatting.Indented' new RegexConverter()); " is 123.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,SerializeEnumClassWithCamelCase,The length of the statement  "            string json = JsonConvert.SerializeObject(enumClass' Formatting.Indented' new StringEnumConverter { CamelCaseText = true }); " is 124.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DeserializeNegativeEnum,The length of the statement  "            NegativeEnumClass negativeEnumClass = JsonConvert.DeserializeObject<NegativeEnumClass>(json' new StringEnumConverter()); " is 120.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,CamelCaseTextFlagEnumDeserialization,The length of the statement  "            EnumContainer<FlagsTestEnum> c = JsonConvert.DeserializeObject<EnumContainer<FlagsTestEnum>>(json' new StringEnumConverter { CamelCaseText = true }); " is 149.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DeserializeInvalidString,The length of the statement  "            }' @"Error converting value ""Three"" to type 'Newtonsoft.Json.Tests.Converters.StringEnumConverterTests+MyEnum'. Path 'Value'' line 1' position 19."); " is 151.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DeserializeIntegerButNotAllowed,The length of the statement  "                Assert.AreEqual("Error converting value 123 to type 'Newtonsoft.Json.Tests.Converters.StringEnumConverterTests+MyEnum'. Path 'Value'' line 1' position 15."' ex.Message); " is 169.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The length of the statement  "            string json1 = JsonConvert.SerializeObject(lfoo' Formatting.Indented' new StringEnumConverter { CamelCaseText = true }); " is 120.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The length of the statement  "            string json2 = JsonConvert.SerializeObject(lbar' Formatting.Indented' new StringEnumConverter { CamelCaseText = true }); " is 120.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DuplicateNameEnumTest,The length of the statement  "                @"Error converting value ""foo_bar"" to type 'Newtonsoft.Json.Tests.Converters.DuplicateNameEnum'. Path ''' line 1' position 9."); " is 130.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DataContractSerializerDuplicateNameEnumTest,The length of the statement  "                string xml = @"<DuplicateEnumNameTestClass xmlns=""http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Converters"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance""> " is 180.
Long Statement,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DataContractSerializerDuplicateNameEnumTest,The length of the statement  "            }' "Type 'Newtonsoft.Json.Tests.Converters.DuplicateNameEnum' contains two members 'foo_bar' 'and 'FooBar' with the same name 'foo_bar'. Multiple members with the same name in one type are not supported. Consider changing one of the member names using EnumMemberAttribute attribute."); " is 285.
Long Statement,Newtonsoft.Json.Tests.Converters,VersionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\VersionConverterTests.cs,DeserializeVersionClass,The length of the statement  "            string json = string.Format(@"{{""StringProperty1"": ""StringProperty1""' ""Version1"": ""{0}""' ""Version2"": ""{1}""' ""StringProperty2"": ""StringProperty2""}}"' version1' version2); " is 185.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,GetUtcOffsetText,The length of the statement  "            return utcOffset.Hours.ToString("+00;-00"' CultureInfo.InvariantCulture) + ":" + utcOffset.Minutes.ToString("00;00"' CultureInfo.InvariantCulture); " is 147.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The length of the statement  "            IsoDateTimeConverter converter = new IsoDateTimeConverter() { DateTimeFormat = "F"' Culture = CultureInfo.InvariantCulture }; " is 125.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The length of the statement  "            IsoDateTimeConverter converter = new IsoDateTimeConverter() { DateTimeFormat = "F"' Culture = CultureInfo.GetCultureInfo("en-NZ") }; " is 132.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The length of the statement  "            string json = JsonConvert.SerializeObject(c' new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal }); " is 125.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The length of the statement  "            Assert.AreEqual(@"{""PreField"":""Pre""'""DateTimeField"":""2008-12-12T12:12:12Z""'""DateTimeOffsetField"":""2008-12-12T12:12:12+00:00""'""PostField"":""Post""}"' json); " is 169.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The length of the statement  "            Assert.AreEqual(@"{""PreField"":""Pre""'""DateTimeField"":""2008-01-01T01:01:01Z""'""DateTimeOffsetField"":""2008-01-01T01:01:01+00:00""'""PostField"":""Post""}"' json); " is 169.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The length of the statement  "            string json = JsonConvert.SerializeObject(c' new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal }); " is 125.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The length of the statement  "            Assert.AreEqual(@"{""PreField"":""Pre""'""DateTimeField"":""2008-12-12T12:12:12Z""'""DateTimeOffsetField"":""2008-12-12T12:12:12+00:00""'""PostField"":""Post""}"' json); " is 169.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The length of the statement  "            Assert.AreEqual(@"{""PreField"":""Pre""'""DateTimeField"":null'""DateTimeOffsetField"":null'""PostField"":""Post""}"' json); " is 124.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,DeserializeNullToNonNullable,The length of the statement  "                    JsonConvert.DeserializeObject<DateTimeTestClass>(@"{""PreField"":""Pre""'""DateTimeField"":null'""DateTimeOffsetField"":null'""PostField"":""Post""}"' new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal }); " is 231.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeShouldChangeNonUTCDates,The length of the statement  "            string json = JsonConvert.SerializeObject(c' new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal }); //note that this fails without the Utc converter... " is 177.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeShouldChangeNonUTCDates,The length of the statement  "            string json2 = JsonConvert.SerializeObject(c' new IsoDateTimeConverter() { DateTimeStyles = DateTimeStyles.AssumeUniversal }); " is 126.
Long Statement,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The length of the statement  "            Assert.AreEqual(@"{""Name"":""Keith""'""BirthDate"":""1980-03-08T00:00:00""'""LastModified"":""2009-04-12T20:44:55""}"' jsonText); " is 130.
Long Statement,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The length of the statement  "            Assert.AreEqual(@"{""PreField"":null'""DateTimeField"":new Date(976918263055)'""DateTimeOffsetField"":new Date(976918263055)'""PostField"":null}"' result); " is 155.
Long Statement,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeNullToNonNullable,The length of the statement  "                    JsonConvert.DeserializeObject<DateTimeTestClass>(@"{""PreField"":""Pre""'""DateTimeField"":null'""DateTimeOffsetField"":null'""PostField"":""Post""}"' new JavaScriptDateTimeConverter()); " is 186.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,StringGreaterThanMaximumLength,The length of the statement  "            Assert.AreEqual("String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 10. Line 1' position 46."' validationEventArgs.Message); " is 153.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,StringDoesNotMatchPattern,The length of the statement  "            Assert.AreEqual("String 'The quick brown fox jumps over the lazy dog.' does not match regex pattern 'foo'. Line 1' position 46."' validationEventArgs.Message); " is 159.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ArrayCountLessThanMinimumItems,The length of the statement  "            Assert.AreEqual("Array item count 1 is less than minimum count of 2. Line 1' position 6."' validationEventArgs.Message); " is 120.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,MissingRequiredProperties,The length of the statement  "            Assert.AreEqual("Required properties are missing from object: hobbies' age. Line 1' position 16."' validationEventArgs.Message); " is 128.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,DisableAdditionalProperties,The length of the statement  "            Assert.AreEqual("Property 'additionalProperty1' has not been defined and the schema does not allow additional properties. Line 1' position 38."' validationEventArgs.Message); " is 174.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,DisableAdditionalProperties,The length of the statement  "            Assert.AreEqual("Property 'additionalProperty2' has not been defined and the schema does not allow additional properties. Line 1' position 65."' validationEventArgs.Message); " is 174.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendsStringGreaterThanMaximumLength,The length of the statement  "            Assert.AreEqual("String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 9. Line 1' position 46."' errors[0]); " is 134.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendsDisallowAdditionProperties,The length of the statement  "            Assert.AreEqual("Property 'additional' has not been defined and the schema does not allow additional properties. Line 1' position 62."' validationEventArgs.Message); " is 165.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendsDisallowAdditionProperties,The length of the statement  "            Assert.AreEqual("Property 'additional2' has not been defined and the schema does not allow additional properties. Line 1' position 84."' validationEventArgs.Message); " is 166.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendsMissingRequiredProperties,The length of the statement  "            Assert.AreEqual("Required properties are missing from object: secondproperty' firstproperty. Line 1' position 2."' errors[0]); " is 126.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,NoAdditionalItems,The length of the statement  "            Assert.AreEqual("Index 3 has not been defined and the schema does not allow additional items. Line 1' position 13."' validationEventArgs.Message); " is 146.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,PatternPropertiesNoAdditionalProperties,The length of the statement  "            Assert.AreEqual("Property 'hey' has not been defined and the schema does not allow additional properties. Line 5' position 9."' validationEventArgs.Message); " is 157.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual("secondproperty - String 'secasecasecasecaseca' exceeds maximum length of 10. Line 3' position 42."' errors[0]); " is 128.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual("thirdproperty.thirdproperty_firstproperty - String 'aaa' is less than minimum length of 7. Line 5' position 40."' errors[1]); " is 142.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual("thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi'. Line 5' position 40."' errors[2]); " is 143.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual("thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi2u'. Line 5' position 40."' errors[3]); " is 145.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual("thirdproperty.additional - String 'three' is less than minimum length of 6. Line 6' position 25."' errors[4]); " is 127.
Long Statement,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsBytes,The length of the statement  "            JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@"""" + Convert.ToBase64String(data) + @""""))) " is 128.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The length of the statement  "                string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings " is 133.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,EscapeJavaScriptString,The length of the statement  "                "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&\u0027()*+'-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"; " is 287.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,EscapeJavaScriptString,The length of the statement  "                @"""\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\""#$%&'()*+'-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"""; " is 278.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ToStringInvalid,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { JsonConvert.ToString(new Version(1' 0)); }' "Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation."); " is 201.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ObjectToString,The length of the statement  "            Assert.AreEqual(@"""\/Date(0)\/"""' JsonConvert.ToString((DateTime)value' DateFormatHandling.MicrosoftDateFormat' DateTimeZoneHandling.RoundtripKind)); " is 151.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ObjectToString,The length of the statement  "            Assert.AreEqual(@"""\/Date(0+0000)\/"""' JsonConvert.ToString((DateTimeOffset)value' DateFormatHandling.MicrosoftDateFormat)); " is 126.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("9999-12-31T23:59:59.9999999" + GetOffset(DateTime.MaxValue' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 133.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(253402300799999" + GetOffset(DateTime.MaxValue' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 143.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2000-01-01T01:01:01" + GetOffset(year2000local' DateFormatHandling.IsoDateFormat)' result.IsoDateRoundtrip); " is 125.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2000-01-01T01:01:01" + GetOffset(year2000local' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 121.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateRoundtrip); " is 192.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 188.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateUnspecified); " is 194.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2000-01-01T01:01:01.999" + GetOffset(millisecondsLocal' DateFormatHandling.IsoDateFormat)' result.IsoDateRoundtrip); " is 133.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2000-01-01T01:01:01.999" + GetOffset(millisecondsLocal' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 129.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateRoundtrip); " is 200.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 196.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateUnspecified); " is 202.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + @")\/"' result.MsDateUtc); " is 123.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2012-03-03T16:03:02.6822481" + GetOffset(ticksLocal' DateFormatHandling.IsoDateFormat)' result.IsoDateRoundtrip); " is 130.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2012-03-03T16:03:02.6822481" + GetOffset(ticksLocal' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 126.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateRoundtrip); " is 186.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 182.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateUnspecified); " is 188.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("2000-01-01T01:01:01" + GetOffset(year2000Unspecified' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 127.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateRoundtrip); " is 204.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 200.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateUnspecified); " is 206.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified.ToLocalTime()) + @")\/"' result.MsDateUtc); " is 139.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(946688461000" + GetOffset(year2000Utc' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 134.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(year2000Utc' DateTimeKind.Unspecified)) + GetOffset(year2000Utc' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateUnspecified); " is 238.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(0" + GetOffset(unixEpoc' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 120.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(" + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(unixEpoc' DateTimeKind.Unspecified)) + GetOffset(unixEpoc' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateUnspecified); " is 232.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("0001-01-01T00:00:00" + GetOffset(DateTime.MinValue' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 125.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(-62135596800000" + GetOffset(DateTime.MinValue' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 143.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual("0001-01-01T00:00:00" + GetOffset(default(DateTime)' DateFormatHandling.IsoDateFormat)' result.IsoDateLocal); " is 125.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            Assert.AreEqual(@"\/Date(-62135596800000" + GetOffset(default(DateTime)' DateFormatHandling.MicrosoftDateFormat) + @")\/"' result.MsDateLocal); " is 143.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            result = TestDateTime("DateTimeOffset TimeSpan 1 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(1))); " is 120.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            result = TestDateTime("DateTimeOffset TimeSpan 1.5 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(1.5))); " is 124.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The length of the statement  "            result = TestDateTime("DateTimeOffset TimeSpan 13 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))); " is 122.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,TestDateTime,The length of the statement  "            result.IsoDateRoundtrip = TestDateTimeFormat(value' DateFormatHandling.IsoDateFormat' DateTimeZoneHandling.RoundtripKind); " is 122.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,TestDateTime,The length of the statement  "                result.IsoDateUnspecified = TestDateTimeFormat(value' DateFormatHandling.IsoDateFormat' DateTimeZoneHandling.Unspecified); " is 122.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,TestDateTime,The length of the statement  "            result.MsDateRoundtrip = TestDateTimeFormat(value' DateFormatHandling.MicrosoftDateFormat' DateTimeZoneHandling.RoundtripKind); " is 127.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,TestDateTime,The length of the statement  "                result.MsDateUnspecified = TestDateTimeFormat(value' DateFormatHandling.MicrosoftDateFormat' DateTimeZoneHandling.Unspecified); " is 127.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ParametersPassedToJsonConverterConstructor,The length of the statement  "            Assert.AreEqual("{\"One\":\"Uno-1-Red\"'\"Two\":\"Dos-2-Green\"'\"Three\":\"Tres-1337-Yellow\"'\"Four\":\"Black\"}"' json); " is 123.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The length of the statement  "                Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }' " is 130.
Long Statement,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The length of the statement  "            Assert.AreEqual("{\"Positions\":[57.72'60.44'63.44'66.81'70.45]'\"Loads\":[23284.0'23225.0'23062.0'22846.0'22594.0]'\"Gain\":12345.679}"' json); " is 144.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadIntegerWithError,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32()' "JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId'' line 2' position 53."); " is 209.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadIntegerWithErrorInArray,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32()' "JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path '[0]'' line 2' position 42."); " is 205.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadIntegerWithErrorInArray,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32()' "Input string '3.3' is not a valid integer. Path '[1]'' line 3' position 6."); " is 158.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadIntegerWithErrorInArray,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32()' "Error reading integer. Unexpected token: Undefined. Path '[2]'' line 4' position 3."); " is 167.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadIntegerWithErrorInArray,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32()' "Input string '0f' is not a valid integer. Path '[3]'' line 5' position 5."); " is 157.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadInvalidNonBase10Number,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected character encountered while parsing number: q. Path ''' line 1' position 2."); " is 160.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadInvalidNonBase10Number,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }' "Unexpected character encountered while parsing number: q. Path ''' line 1' position 2."); " is 169.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadInvalidNonBase10Number,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }' "Unexpected character encountered while parsing number: q. Path ''' line 1' position 2."); " is 167.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ThrowErrorWhenParsingUnquoteStringThatStartsWithNE,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected content while parsing JSON. Path 'u'' line 1' position 27."); " is 143.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnescapeDoubleQuotes,The length of the statement  "            string json = @"{""recipe_id"":""12""'""recipe_name"":""Apocalypse Leather Armors""'""recipe_text"":""#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \""Enhanced Leather Armor Boots\"" \""85644\"" )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \""Hacker Tool\"" \""87814\""\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \""Clanalizer\"" \""208313\""\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \""Hacked Leather Armor Boots\"" \""245979\"" )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \""Apocalypse Leather Armor Boots\"" \""245966\"" )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \""Apocalypse Leather Armor Boots\"" \""245967\""\r\n#L \""Apocalypse Leather Armor Gloves\"" \""245969\""\r\n#L \""Apocalypse Leather Armor Helmet\"" \""245975\""\r\n#L \""Apocalypse Leather Armor Pants\"" \""245971\""\r\n#L \""Apocalypse Leather Armor Sleeves\"" \""245973\""\r\n#L \""Apocalypse Leather Body Armor\"" \""245965\""\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n""'""recipe_author"":null}"; " is 1686.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnescapeDoubleQuotes,The length of the statement  "            Assert.AreEqual("#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \"Enhanced Leather Armor Boots\" \"85644\" )\r\n<img src=rdb://13264>\r\n\r\n#L \"Hacker Tool\" \"87814\"\r\n<img src=rdb://99282>\r\n\r\n#L \"Clanalizer\" \"208313\"\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \"Hacked Leather Armor Boots\" \"245979\" )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \"Apocalypse Leather Armor Boots\" \"245966\" )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \"Apocalypse Leather Armor Boots\" \"245967\"\r\n#L \"Apocalypse Leather Armor Gloves\" \"245969\"\r\n#L \"Apocalypse Leather Armor Helmet\" \"245975\"\r\n#L \"Apocalypse Leather Armor Pants\" \"245971\"\r\n#L \"Apocalypse Leather Armor Sleeves\" \"245973\"\r\n#L \"Apocalypse Leather Body Armor\" \"245965\"\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n"' reader.Value); " is 1536.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseAdditionalContent_Text,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Additional text encountered after finished reading JSON content: c. Path ''' line 5' position 2."); " is 170.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnexpectedEndOfString,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unterminated string. Expected delimiter: '. Path ''' line 1' position 3."); " is 146.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnexpectedEndOfHex,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected end while parsing unicode character. Path ''' line 1' position 4."); " is 150.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnexpectedEndOfControlCharacter,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unterminated string. Expected delimiter: '. Path ''' line 1' position 3."); " is 146.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBytesWithBadCharacter,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }' "Error reading bytes. Unexpected token: Boolean. Path ''' line 1' position 4."); " is 157.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBytesWithUnexpectedEnd,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }' "Unterminated string. Expected delimiter: '. Path ''' line 1' position 17."); " is 154.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnexpectedEndWhenParsingUnquotedProperty,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected end while parsing unquoted property name. Path ''' line 1' position 4."); " is 155.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The length of the statement  "            string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + " " + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed; " is 218.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBytesFollowingNumberInObject,The length of the statement  "            JsonReader reader = new JsonTextReader(new StringReader(@"{num:1'data:'" + Convert.ToBase64String(helloWorldData) + @"'}")); " is 124.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIntegers,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32()' "JSON integer 9223372036854775807 is too large or small for an Int32. Path ''' line 1' position 19."); " is 174.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIntegers,The length of the statement  "            reader = new JsonTextReader(new StringReader("9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd")); " is 135.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIntegers,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32()' "Unexpected character encountered while parsing number: s. Path ''' line 1' position 77."); " is 163.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIntegers,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32()' "Input string '1E-06' is not a valid integer. Path ''' line 1' position 5."); " is 149.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIntegers,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32()' "Input string '1.1' is not a valid integer. Path ''' line 1' position 3."); " is 147.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIntegers,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32()' "Input string '-' is not a valid integer. Path ''' line 1' position 1."); " is 145.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The length of the statement  "            reader = new JsonTextReader(new StringReader("9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd")); " is 135.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal()' "Unexpected character encountered while parsing number: s. Path ''' line 1' position 77."); " is 165.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The length of the statement  "            reader = new JsonTextReader(new StringReader("9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd")); " is 135.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.Read()' "Unexpected character encountered while parsing number: s. Path ''' line 1' position 77."); " is 156.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal()' "Input string '-' is not a valid decimal. Path ''' line 1' position 1."); " is 147.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDoubles,The length of the statement  "            reader = new JsonTextReader(new StringReader("9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd")); " is 135.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDoubles,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.Read()' "Unexpected character encountered while parsing number: s. Path ''' line 1' position 77."); " is 156.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDoubles,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => reader.Read()' "Input string '-' is not a valid number. Path ''' line 1' position 1."); " is 137.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The length of the statement  "                @"[0.0'0.0'0.1'1.0'1.000001'1E-06'4.94065645841247E-324'Infinity'-Infinity'NaN'1.7976931348623157E+308'-1.7976931348623157E+308'Infinity'-Infinity'NaN'0e-10'0.25e-5'0.3e10]"; " is 174.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MissingColon,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' @"Invalid character after parsing property name. Expected ':' but got: "". Path 'A'' line 3' position 9."); " is 177.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBadCharInArray,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected character encountered while parsing value: }. Path ''' line 1' position 1."); " is 159.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsBytesNoContentWrappedObject,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }' "Unexpected end when reading bytes. Path ''' line 1' position 1."); " is 144.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDecimalBadContent,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }' "Error reading decimal. Unexpected token: StartConstructor. Path ''' line 1' position 9."); " is 170.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsBytesBadContent,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }' "Error reading bytes. Unexpected token: StartConstructor. Path ''' line 1' position 9."); " is 166.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetBadContent,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }' "Error reading date. Unexpected token: StartConstructor. Path ''' line 1' position 9."); " is 174.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsBytesIntegerArrayWithNoEnd,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }' "Unexpected end when reading bytes. Path '[0]'' line 1' position 2."); " is 147.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsBytesArrayWithBadContent,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }' "Unexpected token when reading bytes: Float. Path '[0]'' line 1' position 4."); " is 156.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetBadString,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }' "Could not convert string to DateTimeOffset: blablahbla. Path 'Offset'' line 1' position 22."); " is 181.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetWithMinutes,The length of the statement  "            Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31)))' reader.Value); " is 131.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetIsoDate,The length of the statement  "            Assert.AreEqual(new DateTimeOffset(new DateTime(2011' 8' 1' 21' 25' 0' DateTimeKind.Utc)' TimeSpan.Zero)' reader.Value); " is 120.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsIntDecimal,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }' "Input string '1.1' is not a valid integer. Path 'Name'' line 1' position 12."); " is 157.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MatchWithInsufficentCharacters,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Error parsing null value. Path ''' line 0' position 0."); " is 128.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MatchWithWrongCharacters,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Error parsing null value. Path ''' line 0' position 0."); " is 128.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MatchWithNoTrailingSeparator,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Error parsing null value. Path ''' line 1' position 4."); " is 128.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnclosedComment,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected end while parsing comment. Path ''' line 1' position 6."); " is 140.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,BadCommentStart,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Error parsing comment. Expected: *' got s. Path ''' line 1' position 1."); " is 145.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseConstructorWithUnexpectedEnd,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected end while parsing constructor. Path ''' line 1' position 7."); " is 144.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseConstructorWithUnexpectedCharacter,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected character while parsing constructor: !. Path ''' line 1' position 9."); " is 153.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseIncompleteCommentSeparator,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Error parsing boolean value. Path ''' line 1' position 4."); " is 131.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseConstructorWithBadCharacter,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }' "Unexpected character while parsing constructor: '. Path ''' line 1' position 8."); " is 168.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseContentDelimitedByNonStandardWhitespace,The length of the statement  "            string json = "\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0'\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0"; " is 159.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ErrorReadingComment,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Unexpected end while parsing comment. Path ''' line 1' position 1."); " is 140.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,UnexpectedEndTokenWhenParsingOddEndToken,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }' "Additional text encountered after finished reading JSON content: }. Path ''' line 1' position 2."); " is 170.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The length of the statement  "            Assert.AreEqual("602214180000000000000000"' d.ToString("0.#############################################################################")); " is 139.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepth,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }' "The reader's MaxDepth of 1 has been exceeded. Path '[0]'' line 1' position 2."); " is 166.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }' "The reader's MaxDepth of 1 has been exceeded. Path '[0]'' line 1' position 2."); " is 166.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }' "The reader's MaxDepth of 1 has been exceeded. Path '[1]'' line 1' position 9."); " is 166.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingFromSlowStream,The length of the statement  "            string json = "[false' true' true' false' 'test!'' 1.11' 0e-10' 0E-10' 0.25e-5' 0.3e10' 6.0221418e23' 'Purple\\r \\n monkey\\'s:\\tdishwasher']"; " is 145.
Long Statement,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,EscapedPathInExceptionMessage,The length of the statement  "                "Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source'' line 6' position 21."); " is 158.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,ValueFormatting,The length of the statement  "            string expected = @"[""@""'""\r\n\t\f\b?{\\r\\n\""'""'true'10'10.99'0.99'1E-18'0.000000000000000001'null'null'""This is a string.""'null'undefined]"; " is 149.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NullableValueFormatting,The length of the statement  "            expected = @"[null'""c""'null'true'null'1'null'1'null'1'null'1'null'1'null'1'null'1'null'1'null'1.1'null'1.1'null'1.1'null'""1970-01-01T00:00:00Z""'null'""1970-01-01T00:00:00+00:00""]"; " is 185.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NullableValueFormatting,The length of the statement  "      expected = @"[null'""c""'null'true'null'1'null'1'null'1'null'1'null'1'null'1'null'1'null'1'null'1.1'null'1.1'null'1.1'null'""1970-01-01T00:00:00Z""]"; " is 150.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteValueObjectWithUnsupportedValue,The length of the statement  "            }' @"Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''."); " is 120.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,StringEscaping,The length of the statement  "            string expected = @"[""\""These pretzels are making me thirsty!\""""'""Jeff's house was burninated.""'""1. You don't talk about fight club.\r\n2. You don't talk about fight club.""'""35% of\t statistics\n are made\r up.""]"; " is 224.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteFloatingPointNumber,The length of the statement  "            Assert.AreEqual(@"[0.0'0.0'0.1'1.0'1.000001'1E-06'4.94065645841247E-324'Infinity'-Infinity'NaN'1.7976931348623157E+308'-1.7976931348623157E+308'Infinity'-Infinity'NaN]"' sb.ToString()); " is 185.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,HtmlStringEscapeHandling,The length of the statement  "            Assert.AreEqual(@"""\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e"""' json); " is 123.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,CompareNewStringEscapingWithOld,The length of the statement  "                JavaScriptUtils.WriteEscapedJavaScriptString(swNew' c.ToString()' '"'' true' JavaScriptUtils.DoubleQuoteCharEscapeFlags' StringEscapeHandling.Default' ref buffer); " is 163.
Long Statement,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,CompareNewStringEscapingWithOld,The length of the statement  "                    throw new Exception("Difference for char '{0}' (value {1}). Old text: {2}' New text: {3}".FormatWith(CultureInfo.InvariantCulture' c' (int)c' oldText' newText)); " is 161.
Long Statement,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The length of the statement  "            string text = @"The general form of an HTML element is therefore: <tag attribute1=""value1"" attribute2=""value2"">content</tag>. " is 129.
Long Statement,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The length of the statement  "Note that the end tag's name is preceded by a slash character' ""/""' and that in empty elements the end tag is neither required nor allowed. " is 141.
Long Statement,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The length of the statement  "Note that the end tag's name is preceded by a slash character' ""/""' and that in empty elements the end tag is neither required nor allowed. " is 141.
Long Statement,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The length of the statement  "Note that the end tag's name is preceded by a slash character' ""/""' and that in empty elements the end tag is neither required nor allowed. " is 141.
Long Statement,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The length of the statement  "                        JavaScriptUtils.WriteEscapedJavaScriptString(w' text' '"'' true' JavaScriptUtils.DoubleQuoteCharEscapeFlags' StringEscapeHandling.Default' ref buffer); " is 151.
Long Statement,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,GetOffset,The length of the statement  "            int pos = DateTimeUtils.WriteDateTimeOffset(chars' 0' DateTime.SpecifyKind(d' DateTimeKind.Local).GetUtcOffset()' dateFormatHandling); " is 134.
Long Statement,Newtonsoft.Json.Tests,ExceptionAssert,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,Throws,The length of the statement  "                        throw new Exception("Unexpected exception message." + Environment.NewLine + "Expected one of: " + string.Join(Environment.NewLine' possibleMessages) + Environment.NewLine + "Got: " + ex.Message + Environment.NewLine + Environment.NewLine + ex); " is 244.
Long Statement,Newtonsoft.Json.Tests,ExceptionAssert,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,Throws,The length of the statement  "                throw new Exception(string.Format("Exception of type {0} expected; got exception of type {1}."' typeof(TException).Name' ex.GetType().Name)' ex); " is 145.
Long Statement,Newtonsoft.Json.Tests.Linq,JPropertyTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JPropertyTests.cs,IListClear,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { l.Clear(); }' "Cannot add or remove items from Newtonsoft.Json.Linq.JProperty."); " is 127.
Long Statement,Newtonsoft.Json.Tests.Linq,JPropertyTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JPropertyTests.cs,IListAdd,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { l.Add(null); }' "Newtonsoft.Json.Linq.JProperty cannot have multiple values."); " is 125.
Long Statement,Newtonsoft.Json.Tests.Linq,JPropertyTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JPropertyTests.cs,IListRemove,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { l.Remove(p.Value); }' "Cannot add or remove items from Newtonsoft.Json.Linq.JProperty."); " is 135.
Long Statement,Newtonsoft.Json.Tests.Linq,JPropertyTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JPropertyTests.cs,IListRemoveAt,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { l.RemoveAt(0); }' "Cannot add or remove items from Newtonsoft.Json.Linq.JProperty."); " is 131.
Long Statement,Newtonsoft.Json.Tests.Linq,JPropertyTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JPropertyTests.cs,IListGenericAdd,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { t.Add(1); }' "Newtonsoft.Json.Linq.JProperty cannot have multiple values."); " is 122.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDateTimeOffsetBadString,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }' "Could not convert string to DateTimeOffset: blablahbla. Path 'Offset'' line 1' position 22."); " is 181.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDateTimeOffsetBoolean,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }' "Error reading date. Unexpected token: Boolean. Path 'Offset'' line 1' position 14."); " is 172.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsInt32BadString,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }' "Could not convert string to integer: hi. Path 'Name'' line 1' position 12."); " is 155.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsInt32Boolean,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }' "Error reading integer. Unexpected token: Boolean. Path 'Name'' line 1' position 12."); " is 164.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDecimalBadString,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }' "Could not convert string to decimal: blah. Path 'Name'' line 1' position 14."); " is 159.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDecimalBoolean,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }' "Error reading decimal. Unexpected token: Boolean. Path 'Name'' line 1' position 12."); " is 166.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToNullArrayShouldThrow,The length of the statement  "            ExceptionAssert.Throws<ArgumentNullException>(() => { ((ICollection<JToken>)j).CopyTo(null' 0); }' @"Value cannot be null. " is 122.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToNegativeArrayIndexShouldThrow,The length of the statement  "            ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => { ((ICollection<JToken>)j).CopyTo(new JToken[1]' -1); }' @"arrayIndex is less than 0. " is 143.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { ((ICollection<JToken>)j).CopyTo(new JToken[1]' 1); }' @"arrayIndex is equal to or greater than the length of array."); " is 168.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { ((ICollection<JToken>)j).CopyTo(new JToken[3]' 1); }' @"The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array."); " is 242.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,RemoveAtOutOfRangeIndexShouldError,The length of the statement  "            ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => { j.RemoveAt(0); }' @"Index is equal to or greater than Count. " is 120.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertNegativeIndexShouldThrow,The length of the statement  "            ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => { j.Insert(-1' new JValue(1)); }' @"Index was out of range. Must be non-negative and less than the size of the collection. " is 180.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertOutOfRangeIndexShouldThrow,The length of the statement  "            ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => { j.Insert(2' new JValue(1)); }' @"Index must be within the bounds of the List. " is 137.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Parse_ShouldThrowOnUnexpectedToken,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { JArray.Parse(json); }' "Error reading JArray from JsonReader. Current JsonReader item is not an array: StartObject. Path ''' line 1' position 1."); " is 199.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ParseIncomplete,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { JArray.Parse("[1"); }' "Unexpected end of content while loading JArray. Path '[0]'' line 1' position 2."); " is 158.
Long Statement,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ParseAdditionalContent,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { JArray.Parse(json); }' "Additional text encountered after finished reading JSON content: '. Path ''' line 5' position 2."); " is 175.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionRemove,The length of the statement  "            Assert.AreEqual(false' ((ICollection<KeyValuePair<string' JToken>>)o).Remove(new KeyValuePair<string' JToken>("PropertyNameValue1"' new JValue(1)))); " is 149.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionRemove,The length of the statement  "            Assert.AreEqual(false' ((ICollection<KeyValuePair<string' JToken>>)o).Remove(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(2)))); " is 148.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionRemove,The length of the statement  "            Assert.AreEqual(false' ((ICollection<KeyValuePair<string' JToken>>)o).Remove(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(1)))); " is 148.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionRemove,The length of the statement  "            Assert.AreEqual(true' ((ICollection<KeyValuePair<string' JToken>>)o).Remove(new KeyValuePair<string' JToken>("PropertyNameValue"' v))); " is 135.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DuplicatePropertyNameShouldThrow,The length of the statement  "            }' "Can not add property PropertyNameValue to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object."); " is 132.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionAdd,The length of the statement  "            ((ICollection<KeyValuePair<string' JToken>>)o).Add(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(1))); " is 121.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionContains,The length of the statement  "            bool contains = ((ICollection<KeyValuePair<string' JToken>>)o).Contains(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(1))); " is 142.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionContains,The length of the statement  "            contains = ((ICollection<KeyValuePair<string' JToken>>)o).Contains(new KeyValuePair<string' JToken>("PropertyNameValue"' v)); " is 125.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionContains,The length of the statement  "            contains = ((ICollection<KeyValuePair<string' JToken>>)o).Contains(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(2))); " is 137.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionContains,The length of the statement  "            contains = ((ICollection<KeyValuePair<string' JToken>>)o).Contains(new KeyValuePair<string' JToken>("PropertyNameValue1"' new JValue(1))); " is 138.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The length of the statement  "            }' @"The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array."); " is 141.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,Parse_ShouldThrowOnUnexpectedToken,The length of the statement  "            }' "Error reading JObject from JsonReader. Current JsonReader item is not an object: StartArray. Path ''' line 1' position 1."); " is 128.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,IListAddPropertyWithExistingName,The length of the statement  "            }' "Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object."); " is 120.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,IListSetItemAlreadyExists,The length of the statement  "            }' "Can not add property Test3 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object."); " is 120.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericListJTokenAddPropertyWithExistingName,The length of the statement  "            }' "Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object."); " is 120.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericListJTokenSetItemAlreadyExists,The length of the statement  "            }' "Can not add property Test3 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object."); " is 120.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GetGeocodeAddress,The length of the statement  "            string searchAddress = (string)o["Placemark"][0]["AddressDetails"]["Country"]["AdministrativeArea"]["SubAdministrativeArea"]["Locality"]["Thoroughfare"]["ThoroughfareName"]; " is 173.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ParseIncomplete,The length of the statement  "            ExceptionAssert.Throws<Exception>(() => { JObject.Parse("{ foo:"); }' "Unexpected end of content while loading JObject. Path 'foo'' line 1' position 6."); " is 154.
Long Statement,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,FromObjectInsideConverterWithCustomSerializer,The length of the statement  "            Assert.AreEqual(@"{""foo"":""bar""'""name"":""Daniel Wertheim""'""birthDate"":""0001-01-01T00:00:00""'""lastModified"":""0001-01-01T00:00:00""}"' json); " is 152.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc))); " is 157.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))); " is 166.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)))); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual("46efe013-b56a-4e83-99e4-4dce7678a5bc"' (string)(new JValue(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC")))); " is 128.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC")' (Guid)(new JValue("46EFE013-B56A-4E83-99E4-4DCE7678A5BC"))); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC")' (Guid)(new JValue(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC")))); " is 136.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(Convert.ToBase64String(Encoding.UTF8.GetBytes("hi"))' (string)(new JValue(Encoding.UTF8.GetBytes("hi")))); " is 122.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            CollectionAssert.AreEquivalent((byte[])Encoding.UTF8.GetBytes("hi")' (byte[])(new JValue(Convert.ToBase64String(Encoding.UTF8.GetBytes("hi"))))); " is 145.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC")' (Guid)(new JValue(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC").ToByteArray()))); " is 150.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC")' (Guid?)(new JValue(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC").ToByteArray()))); " is 151.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The length of the statement  "            Assert.AreEqual(long.MaxValue' (long)(new JValue(new BigInteger(new byte[] { 255' 255' 255' 255' 255' 255' 255' 127 })))); " is 122.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(true); }' "Can not convert Boolean to DateTime."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1); }' "Can not convert Integer to DateTime."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1); }' "Can not convert Float to DateTime."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1m); }' "Can not convert Float to DateTime."); " is 127.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(TimeSpan.Zero); }' "Can not convert TimeSpan to DateTime."); " is 139.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(new Uri("http://www.google.com")); }' "Can not convert Uri to DateTime."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)JValue.CreateNull(); }' "Can not convert Null to DateTime."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(Guid.NewGuid()); }' "Can not convert Guid to DateTime."); " is 136.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(TimeSpan.Zero); }' "Can not convert TimeSpan to Uri."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(Guid.NewGuid()); }' "Can not convert Guid to Uri."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTime.Now); }' "Can not convert Date to Uri."); " is 124.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(DateTimeOffset.Now); }' "Can not convert Date to Uri."); " is 130.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(true); }' "Can not convert Boolean to TimeSpan."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1); }' "Can not convert Integer to TimeSpan."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1); }' "Can not convert Float to TimeSpan."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1m); }' "Can not convert Float to TimeSpan."); " is 127.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)JValue.CreateNull(); }' "Can not convert Null to TimeSpan."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(Guid.NewGuid()); }' "Can not convert Guid to TimeSpan."); " is 136.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTime.Now); }' "Can not convert Date to TimeSpan."); " is 134.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(DateTimeOffset.Now); }' "Can not convert Date to TimeSpan."); " is 140.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(new Uri("http://www.google.com")); }' "Can not convert Uri to TimeSpan."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(true); }' "Can not convert Boolean to Guid."); " is 121.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)JValue.CreateNull(); }' "Can not convert Null to Guid."); " is 121.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTime.Now); }' "Can not convert Date to Guid."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(DateTimeOffset.Now); }' "Can not convert Date to Guid."); " is 132.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(TimeSpan.FromMinutes(1)); }' "Can not convert TimeSpan to Guid."); " is 141.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(new Uri("http://www.google.com")); }' "Can not convert Uri to Guid."); " is 145.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTimeOffset)new JValue(true); }' "Can not convert Boolean to DateTimeOffset."); " is 141.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(new Uri("http://www.google.com"))).ToObject<BigInteger>(); }' "Can not convert Uri to BigInteger."); " is 170.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (JValue.CreateNull()).ToObject<BigInteger>(); }' "Can not convert Null to BigInteger."); " is 146.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger>(); }' "Can not convert Guid to BigInteger."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue(Guid.NewGuid())).ToObject<BigInteger?>(); }' "Can not convert Guid to BigInteger."); " is 154.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte?)new JValue(DateTime.Now); }' "Can not convert Date to SByte."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (sbyte)new JValue(DateTime.Now); }' "Can not convert Date to SByte."); " is 128.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue("Ordinal1")).ToObject<StringComparison>(); }' "Could not convert 'Ordinal1' to StringComparison."); " is 169.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => { var i = (new JValue("Ordinal1")).ToObject<StringComparison?>(); }' "Could not convert 'Ordinal1' to StringComparison."); " is 170.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToObject,The length of the statement  "            Assert.AreEqual(new Guid("A34B2080-B5F0-488E-834D-45D44ECB9E5C")' (new JValue(new Guid("A34B2080-B5F0-488E-834D-45D44ECB9E5C")).ToObject(typeof(Guid)))); " is 153.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToObject,The length of the statement  "            Assert.AreEqual(new Guid("A34B2080-B5F0-488E-834D-45D44ECB9E5C")' (new JValue(new Guid("A34B2080-B5F0-488E-834D-45D44ECB9E5C")).ToObject(typeof(Guid?)))); " is 154.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToObject,The length of the statement  "            Assert.AreEqual(new Uri("http://www.google.com/")' (new JValue(new Uri("http://www.google.com/")).ToObject(typeof(Uri)))); " is 122.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The length of the statement  "            Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))); " is 175.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The length of the statement  "            Assert.IsTrue(JToken.DeepEquals(new JValue(new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC"))' (JValue)new Guid("46EFE013-B56A-4E83-99E4-4DCE7678A5BC"))); " is 153.
Long Statement,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The length of the statement  "            Assert.IsTrue(JToken.DeepEquals(new JValue(new Uri("http://www.google.com"))' (JValue)new Uri("http://www.google.com"))); " is 121.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ChangeValue,The length of the statement  "            BigInteger i = BigInteger.Parse("123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990"); " is 156.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The length of the statement  "            v = new JValue(BigInteger.Parse("123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990")); " is 157.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The length of the statement  "            Assert.AreEqual("123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990"' v.ToString(null' CultureInfo.InvariantCulture)); " is 188.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ReadDatesAsDateTimeOffsetViaJsonConvert,The length of the statement  "            var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat' DateParseHandling = DateParseHandling.DateTimeOffset' DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }; " is 229.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToType,The length of the statement  "            Assert.AreEqual(Int32.MaxValue' Convert.ChangeType(new JValue(Int32.MaxValue)' typeof(Int32)' CultureInfo.InvariantCulture)); " is 125.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The length of the statement  "            Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04)))); " is 136.
Long Statement,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The length of the statement  "            DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30))); " is 128.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,StartingEndArrayAndReadFrom,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => JToken.ReadFrom(jsonReader)' @"Error reading JToken from JsonReader. Unexpected token: EndArray. Path ''' line 1' position 2."); " is 178.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The length of the statement  """http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY=""'  " is 265.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The length of the statement  """http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB""'  " is 159.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The length of the statement  """http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY=""'  " is 265.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The length of the statement  "            List<string> expectedUrls = new List<string>() { "http://www.google.com/"' "http://news.google.com/"' "http://groups.google.com/"' "http://maps.google.com/" }; " is 159.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,JTokenToStringTypes,The length of the statement  "            string json = @"{""Color"":2'""Establised"":new Date(1264118400000)'""Width"":1.1'""Employees"":999'""RoomsPerFloor"":[1'2'3'4'5'6'7'8'9]'""Open"":false'""Symbol"":""@""'""Mottos"":[""Hello World""'""öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~""'null'"" ""]'""Cost"":100980.1'""Escape"":""\r\n\t\f\b?{\\r\\n\""'""'""product"":[{""Name"":""Rocket""'""ExpiryDate"":new Date(949532490000)'""Price"":0}'{""Name"":""Alien""'""ExpiryDate"":new Date(-62135596800000)'""Price"":0}]}"; " is 471.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,BasicQuerying,The length of the statement  "            CollectionAssert.AreEqual(new string[] { "Json.NET 1.3 + New license + Now on CodePlex"' "LINQ to JSON beta" }' o["channel"]["item"].Children().Values<string>("title").ToArray()); " is 179.
Long Statement,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ExceptionFromOverloadWithJValue,The length of the statement  "            }' "The best overloaded method match for 'System.Collections.Generic.IDictionary<string'string>.Add(string' string)' has some invalid arguments"); " is 146.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArrayWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("BlahBlah"' true); }' @"Property 'BlahBlah' not valid on JArray."); " is 127.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateNoResultsWithMultipleArrayIndexes,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("[9'10]"' true); }' @"Index 9 outside the bounds of JArray."); " is 122.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateConstructorOutOfBoundsIndxerWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { c.SelectToken("[1]"' true); }' @"Index 1 outside the bounds of JConstructor."); " is 125.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMissingPropertyWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { o.SelectToken("Missing"' true); }' "Property 'Missing' does not exist on JObject."); " is 130.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMissingPropertyIndexWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { o.SelectToken("['Missing'''Missing2']"' true); }' "Property 'Missing' does not exist on JObject."); " is 145.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultiPropertyIndexOnArrayWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("['Missing'''Missing2']"' true); }' "Properties 'Missing'' 'Missing2' not valid on JArray."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("[99:]"' true); }' "Array slice of 99 to * returned no results."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("[1:-19]"' true); }' "Array slice of 1 to -19 returned no results."); " is 129.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("[:-19]"' true); }' "Array slice of * to -19 returned no results."); " is 128.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("[:]"' true); }' "Array slice of * to * returned no results."); " is 123.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayOutOfBoundsIndxerWithError,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { a.SelectToken("[1000].Ha"' true); }' "Index 1000 outside the bounds of JArray."); " is 127.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithUnknownEscape,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { new JPath(@"Blah[ ?( @.name=='h\i' ) ]"); }' @"Unknown escape chracter: \i"); " is 123.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,BadOr1,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => new JPath("[?(@.name||)]")' "Unexpected character while parsing path query: )"); " is 124.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,BaddOr2,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => new JPath("[?(@.name|)]")' "Unexpected character while parsing path query: |"); " is 123.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,BaddOr3,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => new JPath("[?(@.name|")' "Unexpected character while parsing path query: |"); " is 121.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,NoAtAfterOr,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => new JPath("[?(@.name||s")' "Unexpected character while parsing path query: s"); " is 123.
Long Statement,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,BadCharactersInIndexer,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => { new JPath("Blah[[0]].Two.Three[1].Four"); }' @"Unexpected character while parsing path indexer: ["); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,FailWithPrivateConstructorPlusParametizedAndDefault,The length of the statement  "                PrivateConstructorWithPublicParametizedConstructorTestClass c = JsonConvert.DeserializeObject<PrivateConstructorWithPublicParametizedConstructorTestClass>(json); " is 161.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,SuccessWithPrivateConstructorPlusParametizedAndAllowNonPublic,The length of the statement  "            PrivateConstructorWithPublicParametizedConstructorTestClass c = JsonConvert.DeserializeObject<PrivateConstructorWithPublicParametizedConstructorTestClass>(json' " is 160.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,SuccessWithPublicParametizedConstructorWhenParamaterIsNotAProperty,The length of the statement  "            PublicParametizedConstructorWithNonPropertyParameterTestClass c = JsonConvert.DeserializeObject<PublicParametizedConstructorWithNonPropertyParameterTestClass>(json); " is 165.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,SuccessWithPublicParametizedConstructorWhenParamaterRequiresAConverter,The length of the statement  "            PublicParametizedConstructorRequiringConverterTestClass c = JsonConvert.DeserializeObject<PublicParametizedConstructorRequiringConverterTestClass>(json' new NameContainerConverter()); " is 183.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,SuccessWithPublicParametizedConstructorWhenParamaterRequiresAConverterWithParameterAttribute,The length of the statement  "            PublicParametizedConstructorRequiringConverterWithParameterAttributeTestClass c = JsonConvert.DeserializeObject<PublicParametizedConstructorRequiringConverterWithParameterAttributeTestClass>(json); " is 197.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,SuccessWithPublicParametizedConstructorWhenParamaterRequiresAConverterWithPropertyAttribute,The length of the statement  "            PublicParametizedConstructorRequiringConverterWithPropertyAttributeTestClass c = JsonConvert.DeserializeObject<PublicParametizedConstructorRequiringConverterWithPropertyAttributeTestClass>(json); " is 195.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,SuccessWithPublicParametizedConstructorWhenParamaterNameConflictsWithPropertyName,The length of the statement  "            PublicParametizedConstructorWithPropertyNameConflict c = JsonConvert.DeserializeObject<PublicParametizedConstructorWithPropertyNameConflict>(json); " is 147.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,PublicParametizedConstructorWithPropertyNameConflictWithAttribute,The length of the statement  "            PublicParametizedConstructorWithPropertyNameConflictWithAttribute c = JsonConvert.DeserializeObject<PublicParametizedConstructorWithPropertyNameConflictWithAttribute>(json); " is 173.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,ConstructorParametersRespectDefaultValueTest_Attrbutes,The length of the statement  "            var testObject = JsonConvert.DeserializeObject<ConstructorParametersRespectDefaultValueAttributes>("{'Parameter2':'value!'}"' new JsonSerializerSettings() " is 154.
Long Statement,Newtonsoft.Json.Tests.Serialization,ConstructorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ConstructorHandlingTests.cs,ConstructorParametersRespectDefaultValueTest,The length of the statement  "            var testObject = JsonConvert.DeserializeObject<ConstructorParametersRespectDefaultValue>("{}"' new JsonSerializerSettings() { ContractResolver = ConstructorParameterDefaultStringValueContractResolver.Instance }); " is 212.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractTestClass,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractTestClass>(@"{Value:'Value!'}"' new JsonSerializerSettings " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractTestClass,The length of the statement  "            })' "Could not create an instance of type Newtonsoft.Json.Tests.Serialization.AbstractTestClass. Type is an interface or abstract class and cannot be instantiated. Path 'Value'' line 1' position 7."); " is 200.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractListTestClass,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@"[1'2]"' new JsonSerializerSettings " is 151.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractListTestClass,The length of the statement  "            })' "Could not create an instance of type Newtonsoft.Json.Tests.Serialization.AbstractListTestClass`1[System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path ''' line 1' position 1."); " is 215.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractDictionaryTestClass,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string' int>>(@"{key1:1'key2:2}"' new JsonSerializerSettings " is 175.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractDictionaryTestClass,The length of the statement  "            })' "Could not create an instance of type Newtonsoft.Json.Tests.Serialization.AbstractDictionaryTestClass`2[System.String'System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path 'key1'' line 1' position 6."); " is 239.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractDictionaryTestClass,The length of the statement  "            var d = JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string' int>>(@"{key1:1'key2:2}"' new JsonSerializerSettings " is 126.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,ParametrizedCreator,The length of the statement  "            var contract = (JsonObjectContract)resolver.ResolveContract(typeof(PublicParametizedConstructorWithPropertyNameConflictWithAttribute)); " is 135.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,ParametrizedCreator,The length of the statement  "            Assert.AreEqual(contract.ParametrizedConstructor' typeof(PublicParametizedConstructorWithPropertyNameConflictWithAttribute).GetConstructor(new[] { typeof(string) })); " is 166.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,OverrideCreator,The length of the statement  "            Assert.AreEqual(contract.OverrideConstructor' typeof(MultipleParamatrizedConstructorsJsonConstructor).GetConstructor(new[] { typeof(string)' typeof(int) })); " is 157.
Long Statement,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,CustomOverrideCreator,The length of the statement  "            var o = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>("{Value:'value!'' Age:1}"' new JsonSerializerSettings " is 140.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,PopulateWithJsonIgnoreAttribute,The length of the statement  "            MyClass result = JsonConvert.DeserializeObject<MyClass>(json' new JsonSerializerSettings() { DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate }); " is 158.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeDefaultValueAttributeTest,The length of the statement  "            json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue' TestProperty1 = "NotDefault" }' " is 130.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeDefaultValueAttributeTest,The length of the statement  "            json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21' TestProperty1 = "NotDefault" }' " is 120.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeDefaultValueAttributeTest,The length of the statement  "            json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21' TestProperty1 = "TestProperty1Value" }' " is 128.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,DeserializeDefaultValueAttributeTest,The length of the statement  "            DefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<DefaultValueAttributeTestClass>(json' new JsonSerializerSettings " is 129.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,DeserializeIgnoreAndPopulate,The length of the statement  "            DefaultHandler c2 = JsonConvert.DeserializeObject<DefaultHandler>("{'field1':-1''field2':'default'}"' new JsonSerializerSettings " is 128.
Long Statement,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,IgnoreNumberTypeDifferencesWithDefaultValue,The length of the statement  "            string json = JsonConvert.SerializeObject(user' Formatting.None' new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore' NullValueHandling = NullValueHandling.Ignore }); " is 194.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializeNoReadPublicExtensionData,The length of the statement  "            PublicNoReadExtensionDataAttributeTestClass c = JsonConvert.DeserializeObject<PublicNoReadExtensionDataAttributeTestClass>(@"{""Name"":""Name!""'""Test"":1}"); " is 159.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializePublicExtensionDataTypeNamdHandling,The length of the statement  "            PublicExtensionDataAttributeTestClass c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json' new JsonSerializerSettings " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor,The length of the statement  "            PublicExtensionDataAttributeTestClassWithNonDefaultConstructor c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClassWithNonDefaultConstructor>(json' new JsonSerializerSettings " is 194.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,SerializePublicExtensionDataTypeNamdHandling,The length of the statement  "  ""$type"": ""Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+PublicExtensionDataAttributeTestClass' Newtonsoft.Json.Tests""' " is 131.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializeExtensionData_NoSetterAndWithExtensionData,The length of the statement  "                Assert.AreEqual("Error setting value in extension data for type 'Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+DocNoSetter'. Path 'Property1'' line 1' position 39."' ex.Message); " is 187.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializeExtensionData_NoSetterAndWithExtensionData,The length of the statement  "                Assert.AreEqual("Cannot set value onto extension data member 'Content'. The extension data collection is null and it cannot be set."' ex.InnerException.Message); " is 161.
Long Statement,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,SerializeExtensionData_NoGetter,The length of the statement  "                "Invalid extension data attribute on 'Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+DocNoGetter'. Member 'Content' must have a getter."); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Map,The length of the statement  "            FSharpMap<string' int> m1 = MapModule.OfSeq(new List<Tuple<string' int>> { Tuple.Create("one"' 1)' Tuple.Create("II"' 2)' Tuple.Create("3"' 3) }); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNameValueCollection,The length of the statement  "                "Cannot create and populate list type System.Collections.Specialized.NameValueCollection. Path 'Collection'' line 1' position 13."); " is 132.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeIEnumerableFromConstructor_Failure,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)' "Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+EnumerableClassFailure`1[System.String]. Path ''' line 1' position 1."); " is 303.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializePrivateListCtor,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>("[1'2]")' "Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+PrivateDefaultCtorList`1[System.Int32]. Path ''' line 1' position 1."); " is 310.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNonIsoDateDictionaryKey,The length of the statement  "            Dictionary<DateTime' string> d = JsonConvert.DeserializeObject<Dictionary<DateTime' string>>(@"{""04/28/2013 00:00:00"":""test""}"); " is 132.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The length of the statement  "            List<KeyValuePair<string' WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string' WagePerson>>>(json); " is 124.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeKeyValuePairArray,The length of the statement  "            string json = @"[ { ""Value"": [ ""1""' ""2"" ]' ""Key"": ""aaa""' ""BadContent"": [ 0 ] }' { ""Value"": [ ""3""' ""4"" ]' ""Key"": ""bbb"" } ]"; " is 145.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeKeyValuePairArray,The length of the statement  "            IList<KeyValuePair<string' IList<string>>> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string' IList<string>>>>(json); " is 132.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The length of the statement  "            string json = @"[ { ""Value"": [ ""1""' ""2"" ]' ""Key"": ""aaa""' ""BadContent"": [ 0 ] }' null' { ""Value"": [ ""3""' ""4"" ]' ""Key"": ""bbb"" } ]"; " is 151.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The length of the statement  "            IList<KeyValuePair<string' IList<string>>?> values = JsonConvert.DeserializeObject<IList<KeyValuePair<string' IList<string>>?>>(json); " is 134.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullToNonNullableKeyValuePairArray,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string' IList<string>>>>(json); }' "Cannot convert null value to KeyValuePair. Path '[0]'' line 1' position 6."); " is 221.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The length of the statement  "            aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } }; " is 149.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The length of the statement  "            Assert.AreEqual(@"{""Before"":""Before!""'""Coordinates"":[[[1'1'1]'[1'1'2]]'[[1'2'1]'[1'2'2]]'[[2'1'1]'[2'1'2]]'[[2'2'1]'[2'2'2]]]'""After"":""After!""}"' json); " is 162.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The length of the statement  "            aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } }; " is 149.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray2D_WithTooManyItems,The length of the statement  "            ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json)' "Cannot deserialize non-cubical array as multidimensional array."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray2D_WithTooFewItems,The length of the statement  "            ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array2D>(json)' "Cannot deserialize non-cubical array as multidimensional array."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D,The length of the statement  "            string json = @"{""Before"":""Before!""'""Coordinates"":[[[1'1'1]'[1'1'2]]'[[1'2'1]'[1'2'2]]'[[2'1'1]'[2'1'2]]'[[2'2'1]'[2'2'2]]]'""After"":""After!""}"; " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D_WithTooManyItems,The length of the statement  "            string json = @"{""Before"":""Before!""'""Coordinates"":[[[1'1'1]'[1'1'2'1]]'[[1'2'1]'[1'2'2]]'[[2'1'1]'[2'1'2]]'[[2'2'1]'[2'2'2]]]'""After"":""After!""}"; " is 155.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D_WithTooManyItems,The length of the statement  "            ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json)' "Cannot deserialize non-cubical array as multidimensional array."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D_WithBadItems,The length of the statement  "            string json = @"{""Before"":""Before!""'""Coordinates"":[[[1'1'1]'[1'1'2]]'[[1'2'1]'[1'2'2]]'[[2'1'1]'[2'1'2]]'[[2'2'1]'{}]]'""After"":""After!""}"; " is 148.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D_WithBadItems,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json)' "Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]'' line 1' position 99."); " is 226.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D_WithTooFewItems,The length of the statement  "            string json = @"{""Before"":""Before!""'""Coordinates"":[[[1'1'1]'[1'1]]'[[1'2'1]'[1'2'2]]'[[2'1'1]'[2'1'2]]'[[2'2'1]'[2'2'2]]]'""After"":""After!""}"; " is 151.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D_WithTooFewItems,The length of the statement  "            ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json)' "Cannot deserialize non-cubical array as multidimensional array."); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeTypeName3DArray,The length of the statement  "  ""$type"": ""System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.TestObjects.Event1[']' Newtonsoft.Json.Tests]]' mscorlib""' " is 129.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,PrimitiveValuesInObjectArray,The length of the statement  "            string json = @"{""action"":""Router""'""method"":""Navigate""'""data"":[""dashboard""'null]'""type"":""rpc""'""tid"":2}"; " is 122.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ComplexValuesInObjectArray,The length of the statement  "            string json = @"{""action"":""Router""'""method"":""Navigate""'""data"":[""dashboard""'[""id""' 1' ""teststring""' ""test""]'{""one"":1}]'""type"":""rpc""'""tid"":2}"; " is 167.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,CustomCollectionSerialization,The length of the statement  "            Assert.AreEqual(@"[{""Name"":""Test1""'""ExpiryDate"":""2000-01-01T00:00:00Z""'""Price"":0.0'""Sizes"":null}'{""Name"":""Test2""'""ExpiryDate"":""2000-01-01T00:00:00Z""'""Price"":0.0'""Sizes"":null}'{""Name"":""Test3""'""ExpiryDate"":""2000-01-01T00:00:00Z""'""Price"":0.0'""Sizes"":null}]"' " is 291.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,CustomCollectionSerialization,The length of the statement  "            ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString()))' typeof(ProductCollection)); " is 179.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeArraysWithPreserveObjectReferences,The length of the statement  "            }' @"Cannot preserve reference to array or readonly list' or list created from a non-default constructor: System.String[][]. Path '$values'' line 3' position 15."); " is 164.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid,The length of the statement  "            var deserializedObject = (Dictionary<string' Guid>)JsonConvert.DeserializeObject(serializedString' jsonSerializerSettings); " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The length of the statement  "            PreserveReferencesHandlingTests.CircularList circularList = JsonConvert.DeserializeObject<PreserveReferencesHandlingTests.CircularList>(json' " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeTypeNameOnly,The length of the statement  "            }' "Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type'' line 3' position 56."); " is 127.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,SerializeRefNull,The length of the statement  "            Dictionary<string' object> result = JsonConvert.DeserializeObject<Dictionary<string' object>>(json' new JsonSerializerSettings " is 126.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeEmployeeReference,The length of the statement  "            List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json' new JsonSerializerSettings " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeFromJToken,The length of the statement  "            List<EmployeeReference> employees = t1.ToObject<List<EmployeeReference>>(JsonSerializer.Create(new JsonSerializerSettings " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,MetadataPropertyHandlingIgnore,The length of the statement  "            MetadataPropertyDisabledTestClass c2 = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json' new JsonSerializerSettings " is 136.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,MetadataPropertyHandlingIgnore_EmptyObject,The length of the statement  "            MetadataPropertyDisabledTestClass c = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json' new JsonSerializerSettings " is 135.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,PrimitiveType_MetadataPropertyIgnore_WithType,The length of the statement  "            }' @"Cannot deserialize the current JSON object (e.g. {""name"":""value""}) into type 'System.Double' because the type requires a JSON primitive value (e.g. string' number' boolean' null) to deserialize correctly. " is 213.
Long Statement,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,PrimitiveType_MetadataPropertyIgnore_WithType,The length of the statement  "To fix this error either change the JSON to a JSON primitive value (e.g. string' number' boolean' null) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer' not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object. " is 399.
Long Statement,Newtonsoft.Json.Tests.Serialization,ReferenceLoopHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ReferenceLoopHandlingTests.cs,IgnoreObjectReferenceLoopWithPropertyOverride,The length of the statement  "            ReferenceLoopHandlingObjectContainerAttributeWithPropertyOverride o = new ReferenceLoopHandlingObjectContainerAttributeWithPropertyOverride(); " is 142.
Long Statement,Newtonsoft.Json.Tests.Serialization,ReferenceLoopHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ReferenceLoopHandlingTests.cs,EqualityComparer,The length of the statement  "                "Self referencing loop detected for property 'Manager' with type 'Newtonsoft.Json.Tests.Serialization.AccountWithEquals'. Path ''."); " is 133.
Long Statement,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,ShouldSerializeInheritedClassTest,The length of the statement  "            //Console.WriteLine(s.Serialize(new {html = @"<script>hi</script>; & ! ^ * ( ) ! @ # $ % ^ ' "" - ' . / ; : [ { } ] ; ' - _ = + ? ` ~ \ |"})); " is 142.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The length of the statement  "            // 2012-11-11T12:08:42.785 Info Started serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path 'StartDate'. " is 156.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The length of the statement  "            // 2012-11-11T12:08:42.791 Info Finished serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path 'StartDate'. " is 157.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The length of the statement  "            // 2012-11-11T12:08:42.785 Info Started serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path 'StartDate'. " is 156.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The length of the statement  "            // 2012-11-11T12:08:42.791 Info Finished serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path 'StartDate'. " is 157.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The length of the statement  "            Assert.AreEqual("Started serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''."' traceWriter.TraceRecords[0].Message); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The length of the statement  "            Assert.AreEqual("Started serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'."' traceWriter.TraceRecords[1].Message); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The length of the statement  "            Assert.AreEqual("Finished serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'."' traceWriter.TraceRecords[2].Message); " is 142.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The length of the statement  "            Assert.AreEqual("Started serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path 'StringDictionary'."' traceWriter.TraceRecords[7].Message); " is 171.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The length of the statement  "            Assert.AreEqual("Finished serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path 'StringDictionary'."' traceWriter.TraceRecords[8].Message); " is 172.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The length of the statement  "            Assert.AreEqual("Finished serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''."' traceWriter.TraceRecords[9].Message); " is 139.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList'' line 2' position 13."' traceWriter.TraceRecords[0].Message); " is 168.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'' line 2' position 15."' traceWriter.TraceRecords[1].Message); " is 165.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'")); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.AreEqual("Started deserializing System.String[]. Path 'StringArray'' line 6' position 19."' traceWriter.TraceRecords[3].Message); " is 136.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing System.String[]. Path 'StringArray'")); " is 124.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path 'Version.Major'' line 11' position 13."' traceWriter.TraceRecords[5].Message); " is 191.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary.1'' line 19' position 9."' traceWriter.TraceRecords[8].Message); " is 197.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith("Finished deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary'")); " is 183.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''")); " is 150.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList'' line 2' position 13."' traceWriter.TraceRecords[0].Message); " is 168.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'' line 2' position 15."' traceWriter.TraceRecords[1].Message); " is 165.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'")); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.AreEqual("Started deserializing System.String[]. Path 'StringArray'' line 6' position 19."' traceWriter.TraceRecords[3].Message); " is 136.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing System.String[]. Path 'StringArray'")); " is 124.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path 'Version.Major'' line 11' position 13."' traceWriter.TraceRecords[5].Message); " is 191.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary.1'' line 19' position 9."' traceWriter.TraceRecords[8].Message); " is 197.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith("Finished deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary'")); " is 183.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''")); " is 150.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializing,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.Serialization.IntegerTestClass. Path 'Integer'' line 1' position 11."' traceWriter.TraceRecords[0].Message); " is 169.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializing,The length of the statement  "            Assert.AreEqual("Error deserializing Newtonsoft.Json.Tests.Serialization.IntegerTestClass. Could not convert string to integer: hi. Path 'Integer'' line 1' position 15."' traceWriter.TraceRecords[1].Message); " is 208.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializingNested,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path 'IntList'' line 1' position 11."' traceWriter.TraceRecords[0].Message); " is 168.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializingNested,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'' line 1' position 12."' traceWriter.TraceRecords[1].Message); " is 165.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializingNested,The length of the statement  "            Assert.AreEqual("Error deserializing System.Collections.Generic.IList`1[System.Int32]. Could not convert string to integer: two. Path 'IntList[1]'' line 1' position 20."' traceWriter.TraceRecords[2].Message); " is 208.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeDictionarysWithPreserveObjectReferences,The length of the statement  "            PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary(); " is 129.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeDictionarysWithPreserveObjectReferences,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == "Writing object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path ''.")); " is 198.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeDictionarysWithPreserveObjectReferences,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == "Writing object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other'.")); " is 203.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeDictionarysWithPreserveObjectReferences,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == "Writing object reference to Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self'.")); " is 205.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeDictionarysWithPreserveObjectReferences,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == "Read object reference Id '1' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other'' line 3' position 11.")); " is 221.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeDictionarysWithPreserveObjectReferences,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message == "Read object reference Id '2' for Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'other.blah'' line 5' position 12.")); " is 226.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeDictionarysWithPreserveObjectReferences,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords.Any(r => r.Message.StartsWith("Resolved object reference '1' to Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+CircularDictionary. Path 'self'"))); " is 207.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Started serializing System.Collections.Generic.List`1[System.Object]. Path ''."' traceWriter.TraceRecords[0].Message); " is 135.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Writing type name 'System.Collections.Generic.List`1[[System.Object' mscorlib]]' mscorlib' for System.Collections.Generic.List`1[System.Object]. Path ''."' traceWriter.TraceRecords[1].Message); " is 210.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Started serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values'."' traceWriter.TraceRecords[2].Message); " is 162.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Writing type name 'System.Collections.Generic.Dictionary`2[[System.String' mscorlib]'[System.String' mscorlib]]' mscorlib' for System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0]'."' traceWriter.TraceRecords[3].Message); " is 272.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Finished serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0]'."' traceWriter.TraceRecords[4].Message); " is 166.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Writing type name 'System.Version' mscorlib' for System.Version. Path '$values[1]'."' traceWriter.TraceRecords[6].Message); " is 140.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The length of the statement  "            Assert.AreEqual("Finished serializing System.Collections.Generic.List`1[System.Object]. Path ''."' traceWriter.TraceRecords[8].Message); " is 136.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The length of the statement  "            Assert.AreEqual("Started serializing System.Collections.Generic.List`1[System.DateTime]. Path ''."' traceWriter.TraceRecords[0].Message); " is 137.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The length of the statement  "            Assert.AreEqual("Started serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path ''."' traceWriter.TraceRecords[1].Message); " is 172.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The length of the statement  "            Assert.AreEqual("Finished serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'."' traceWriter.TraceRecords[2].Message); " is 176.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The length of the statement  "            Assert.AreEqual("Finished serializing System.Collections.Generic.List`1[System.DateTime]. Path ''."' traceWriter.TraceRecords[3].Message); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeConverter,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.List`1[System.DateTime]. Path ''' line 1' position 1."' traceWriter.TraceRecords[0].Message); " is 159.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeConverter,The length of the statement  "            Assert.AreEqual("Started deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'' line 1' position 10."' traceWriter.TraceRecords[1].Message); " is 198.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeConverter,The length of the statement  "            Assert.AreEqual("Finished deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'' line 1' position 23."' traceWriter.TraceRecords[2].Message); " is 199.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeConverter,The length of the statement  "            Assert.AreEqual("Finished deserializing System.Collections.Generic.List`1[System.DateTime]. Path ''' line 1' position 24."' traceWriter.TraceRecords[3].Message); " is 161.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.AreEqual("Resolved type 'System.Collections.Generic.List`1[[System.Object' mscorlib]]' mscorlib' to System.Collections.Generic.List`1[System.Object]. Path '$type'' line 2' position 84."' traceWriter.TraceRecords[0].Message); " is 231.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.List`1[System.Object]. Path '$values'' line 3' position 15."' traceWriter.TraceRecords[1].Message); " is 165.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.AreEqual("Resolved type 'System.Collections.Generic.Dictionary`2[[System.String' mscorlib]'[System.String' mscorlib]]' mscorlib' to System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0].$type'' line 5' position 120."' traceWriter.TraceRecords[2].Message); " is 295.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.AreEqual("Started deserializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0].key!'' line 6' position 14."' traceWriter.TraceRecords[3].Message); " is 193.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0]'")); " is 176.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.AreEqual("Resolved type 'System.Version' mscorlib' to System.Version. Path '$values[1].$type'' line 9' position 42."' traceWriter.TraceRecords[5].Message); " is 162.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path '$values[1].Major'' line 10' position 15."' traceWriter.TraceRecords[6].Message); " is 194.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith("Started deserializing System.Version. Path '$values[1]'")); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[8].Message.StartsWith("Finished deserializing System.Version. Path '$values[1]'")); " is 122.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith("Finished deserializing System.Collections.Generic.List`1[System.Object]. Path '$values'")); " is 153.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMember,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path 'MissingMemberProperty'' line 1' position 25."' traceWriter.TraceRecords[0].Message); " is 171.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMember,The length of the statement  "            Assert.AreEqual("Could not find member 'MissingMemberProperty' on Newtonsoft.Json.Tests.TestObjects.Person. Path 'MissingMemberProperty'' line 1' position 25."' traceWriter.TraceRecords[1].Message); " is 198.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMember,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path ''")); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMemberConstructor,The length of the statement  "            Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path 'Major'' line 2' position 11."' traceWriter.TraceRecords[0].Message); " is 182.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMemberConstructor,The length of the statement  "            Assert.AreEqual("Could not find member 'MissingMemberProperty' on System.Version. Path 'MissingMemberProperty'' line 8' position 32."' traceWriter.TraceRecords[1].Message); " is 172.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,PublicParametizedConstructorWithPropertyNameConflictWithAttribute,The length of the statement  "            PublicParametizedConstructorWithPropertyNameConflictWithAttribute c = JsonConvert.DeserializeObject<PublicParametizedConstructorWithPropertyNameConflictWithAttribute>(json' new JsonSerializerSettings " is 199.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,PublicParametizedConstructorWithPropertyNameConflictWithAttribute,The length of the statement  "            Assert.AreEqual("Deserializing Newtonsoft.Json.Tests.TestObjects.PublicParametizedConstructorWithPropertyNameConflictWithAttribute using creator with parameters: name. Path 'name'' line 1' position 6."' traceWriter.TraceRecords[0].Message); " is 240.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ShouldSerializeTestClass,The length of the statement  "            Assert.AreEqual("ShouldSerialize result for property 'Name' on Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass: True. Path ''."' traceWriter.TraceRecords[1].Message); " is 179.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ShouldSerializeTestClass,The length of the statement  "            Assert.AreEqual("ShouldSerialize result for property 'Name' on Newtonsoft.Json.Tests.Serialization.ShouldSerializeTestClass: False. Path ''."' traceWriter.TraceRecords[1].Message); " is 180.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            string json = JsonConvert.SerializeObject(c' Formatting.Indented' new JsonSerializerSettings { TraceWriter = traceWriter }); " is 124.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("Started serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''."' traceWriter.TraceRecords[0].Message); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified result for property 'Name' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path ''."' traceWriter.TraceRecords[1].Message); " is 170.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified result for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'."' traceWriter.TraceRecords[2].Message); " is 175.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified result for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'."' traceWriter.TraceRecords[3].Message); " is 175.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified result for property 'FavoriteNumber' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'."' traceWriter.TraceRecords[4].Message); " is 183.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("Finished serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''."' traceWriter.TraceRecords[5].Message); " is 142.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json' new JsonSerializerSettings { TraceWriter = traceWriter }); " is 148.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path 'Age'' line 2' position 9."' traceWriter.TraceRecords[0].Message); " is 166.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[1].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''")); " is 152.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json' new JsonSerializerSettings { TraceWriter = traceWriter }); " is 129.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("Started deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path 'Name'' line 2' position 10."' traceWriter.TraceRecords[0].Message); " is 168.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified for property 'Name' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Name'' line 2' position 18."' traceWriter.TraceRecords[1].Message); " is 193.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Weight'' line 4' position 14."' traceWriter.TraceRecords[2].Message); " is 197.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.AreEqual("IsSpecified for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Height'' line 5' position 14."' traceWriter.TraceRecords[3].Message); " is 197.
Long Statement,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The length of the statement  "            Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''")); " is 152.
Long Statement,Newtonsoft.Json.Tests.Serialization,WebApiIntegrationTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\WebApiIntegrationTests.cs,SerializeSerializableType,The length of the statement  "            string dtExpected = @"{""internalField"":""internal""'""privateField"":""private""'""protectedField"":""protected""'""protectedInternalField"":""protected internal""'""publicField"":""public""}"; " is 195.
Long Statement,Newtonsoft.Json.Tests.Serialization,WebApiIntegrationTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\WebApiIntegrationTests.cs,SerializeSerializableType,The length of the statement  "            string expected = "{\"publicField\":\"public\"'\"internalField\":\"internal\"'\"protectedInternalField\":\"protected internal\"'\"protectedField\":\"protected\"'\"privateField\":\"private\"}"; " is 192.
Long Statement,Newtonsoft.Json.Tests.Serialization,NullValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\NullValueHandlingTests.cs,DeserializeNullIntoDateTime,The length of the statement  "            DateTimeTestClass c = JsonConvert.DeserializeObject<DateTimeTestClass>(@"{DateTimeField:null}"' new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }); " is 173.
Long Statement,Newtonsoft.Json.Tests.Serialization,NullValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\NullValueHandlingTests.cs,DeserializeEmptyStringIntoDateTimeWithEmptyStringDefaultValue,The length of the statement  "            DateTimeTestClass c = JsonConvert.DeserializeObject<DateTimeTestClass>(@"{DateTimeField:""""}"' new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }); " is 173.
Long Statement,Newtonsoft.Json.Tests.Serialization,NullValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\NullValueHandlingTests.cs,NullValueHandlingSerialization,The length of the statement  "            Assert.AreEqual(@"{""Color"":4'""Establised"":""2010-01-22T01:01:01Z""'""Width"":1.1'""Employees"":999'""RoomsPerFloor"":[1'2'3'4'5'6'7'8'9]'""Open"":false'""Symbol"":""@""'""Mottos"":[""Hello World""'""öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~""'null'"" ""]'""Cost"":100980.1'""Escape"":""\r\n\t\f\b?{\\r\\n\""'""'""product"":[{""Name"":""Rocket""'""ExpiryDate"":""2000-02-02T23:01:30Z""'""Price"":0.0}'{""Name"":""Alien""'""ExpiryDate"":""2000-01-01T00:00:00Z""'""Price"":0.0}]}"' sw.GetStringBuilder().ToString()); " is 514.
Long Statement,Newtonsoft.Json.Tests.Serialization,NullValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\NullValueHandlingTests.cs,NullValueHandlingSerialization,The length of the statement  "            Store s3 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@"{""Escape"":null}"))' typeof(Store)); " is 120.
Long Statement,Newtonsoft.Json.Tests.Serialization,NullValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\NullValueHandlingTests.cs,NullValueHandlingSerialization,The length of the statement  "            Store s4 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@"{""Color"":2'""Establised"":""\/Date(1264071600000+1300)\/""'""Width"":1.1'""Employees"":999'""RoomsPerFloor"":[1'2'3'4'5'6'7'8'9]'""Open"":false'""Symbol"":""@""'""Mottos"":[""Hello World""'""öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~""'null'"" ""]'""Cost"":100980.1'""Escape"":""\r\n\t\f\b?{\\r\\n\""'""'""product"":[{""Name"":""Rocket""'""ExpiryDate"":""\/Date(949485690000+1300)\/""'""Price"":0}'{""Name"":""Alien""'""ExpiryDate"":""\/Date(946638000000)\/""'""Price"":0.0}]}"))' typeof(Store)); " is 577.
Long Statement,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserialize,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { ProductShort deserializedProductShort = (ProductShort)JsonConvert.DeserializeObject(output' typeof(ProductShort)' new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error }); }' @"Could not find member 'Price' on object of type 'ProductShort'. Path 'Price'' line 4' position 11."); " is 364.
Long Statement,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemeber,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<DoubleClass>(json' new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error }); }' "Could not find member 'Missing' on object of type 'DoubleClass'. Path 'Missing'' line 1' position 11."); " is 301.
Long Statement,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateWithBadJson,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject("1"' new Person()); }' "Unexpected initial token 'Integer' when populating object. Expected JSON object or array. Path ''' line 1' position 1."); " is 231.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorDeserializingListHandled,The length of the statement  "            Assert.IsTrue (possibleMsgs.Any (m => m == c.Messages[0])' "Expected One of: " + Environment.NewLine + string.Join (Environment.NewLine' possibleMsgs) + Environment.NewLine + "Was: " + Environment.NewLine + c.Messages[0]); " is 222.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The length of the statement  "            Assert.AreEqual("[2] - 2 - Unexpected token parsing date. Expected String' got StartArray. Path '[2]'' line 4' position 10."' errors[1]); " is 137.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializeNestedUnhandled,The length of the statement  "            Assert.AreEqual(@"[0][0] - 0 - Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]'' line 1' position 16."' errors[0]); " is 132.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,MultipleRequiredPropertyErrors,The length of the statement  "            Assert.IsTrue(errors[0].StartsWith(" - Required1 - Required property 'Required1' not found in JSON. Path ''' line 1' position 2.")); " is 132.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,MultipleRequiredPropertyErrors,The length of the statement  "            Assert.IsTrue(errors[1].StartsWith(" - Required2 - Required property 'Required2' not found in JSON. Path ''' line 1' position 2.")); " is 132.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandlingInObject,The length of the statement  "            Assert.AreEqual("Unexpected character encountered while parsing value: x. Path 'badarray[0]'' line 1' position 15."' errors[0]); " is 128.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandlingInObject,The length of the statement  "            Assert.AreEqual("Unexpected character encountered while parsing value: x. Path 'badarray[0]'' line 1' position 15."' errors[1]); " is 128.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandlingInObject,The length of the statement  "            Assert.AreEqual("Unexpected character encountered while parsing value: x. Path 'badarray[0]'' line 1' position 15."' errors[3]); " is 128.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContent,The length of the statement  "            Assert.AreEqual(@"Unterminated string. Expected delimiter: "". Path 'events[1].code'' line 1' position 45."' errors[0]); " is 120.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContentDictionary,The length of the statement  "                JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings { MaxDepth = maxDepth' MetadataPropertyHandling = MetadataPropertyHandling.Default }); " is 167.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,WriteEndOnPropertyState,The length of the statement  "            Dictionary<string' IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key' group => @group.Cast<IErrorPerson2>()); " is 174.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,WriteEndOnPropertyState2,The length of the statement  "            Dictionary<string' IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key' group => @group.Cast<IErrorPerson2>()); " is 174.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,NoObjectWithAttribute,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader); }' @"Unterminated string. Expected delimiter: "". Path ''' line 1' position 3."); " is 196.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEvents,The length of the statement  "            SerializationEventTestObject[] objs = new[] { new SerializationEventTestObject()' new DerivedSerializationEventTestObject() }; " is 126.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEvents,The length of the statement  "                string expectedError = String.Format("Error message for member Member6 = Error getting value from 'Member6' on '{0}'."' obj.GetType().FullName); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEvents,The length of the statement  "                expectedError = String.Format("Error message for member Member6 = Error setting value to 'Member6' on '{0}'."' obj.GetType()); " is 126.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectWithConstructorEvents,The length of the statement  "            SerializationEventTestObjectWithConstructor obj = new SerializationEventTestObjectWithConstructor(11' "Hello World!"' null); " is 124.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEventsDocumentationExample,The length of the statement  "            Assert.AreEqual("Error message for member Member6 = Error getting value from 'Member6' on 'Newtonsoft.Json.Tests.TestObjects.SerializationEventTestObject'."' obj.Member5); " is 171.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,WhenSerializationErrorDetectedBySerializer_ThenCallbackIsCalled,The length of the statement  "            Debug.Assert(resolver.OnError == typeof(FooEvent).GetMethod("OnError"' BindingFlags.Instance | BindingFlags.NonPublic)); " is 120.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DerivedDerivedSerializationEvents_DataContractSerializer,The length of the statement  "            string xml = @"<DerivedDerivedSerializationEventOrderTestObject xmlns=""http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance""/>"; " is 207.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DerivedDerivedSerializationEvents_DataContractSerializer,The length of the statement  "            DerivedDerivedSerializationEventOrderTestObject c = (DerivedDerivedSerializationEventOrderTestObject)ss.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(xml))); " is 162.
Long Statement,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,NoStreamingContextParameter,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(d' Formatting.Indented)' "Serialization Callback 'Void Deserialized()' in type 'Newtonsoft.Json.Tests.Serialization.Contract' must have a single parameter of type 'System.Runtime.Serialization.StreamingContext'."); " is 286.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,SerializeReferenceInConvert,The length of the statement  "    ""$type"": ""System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+ContentA' Newtonsoft.Json.Tests]]' mscorlib""' " is 162.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,SerializeReferenceInConvert,The length of the statement  "    ""$type"": ""System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests+ContentA' Newtonsoft.Json.Tests]]' mscorlib""' " is 162.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,SerializeCircularListsError,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(circularList' Formatting.Indented); }' "Self referencing loop detected with type '" + classRef + "'. Path '[2][0]'."); " is 205.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeArraysWithPreserveObjectReferences,The length of the statement  "            }' @"Cannot preserve reference to array or readonly list' or list created from a non-default constructor: System.String[][]. Path '$values'' line 3' position 15."); " is 164.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,SerializeCircularDictionarysError,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(circularDictionary' Formatting.Indented); }' @"Self referencing loop detected with type '" + classRef + "'. Path ''."); " is 206.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInDictionary,The length of the statement  "            Dictionary<string' EmployeeReference> employees = JsonConvert.DeserializeObject<Dictionary<string' EmployeeReference>>(json); " is 125.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ReferencedComponentDictionary,The length of the statement  "            ReferencedDictionary<TestComponentSimple> d = JsonConvert.DeserializeObject<ReferencedDictionary<TestComponentSimple>>(json); " is 125.
Long Statement,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DuplicateId,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<PropertyItemIsReferenceObject>(json' new JsonSerializerSettings " is 150.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredPropertyConstructorTest,The length of the statement  "            RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@"{""Name"":""Name!""}"); " is 135.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NeverResolveIgnoredPropertyTypes,The length of the statement  "            IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson' new JsonSerializerSettings " is 133.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeMetadataType,The length of the statement  "            CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>("{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}"); " is 145.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ChildDataContractTestWithHidden,The length of the statement  "            Assert.AreEqual(@"{""NewMember"":""NewMember!""'""virtualMember"":""VirtualMember!""'""nonVirtualMember"":""NonVirtualMember!""}"' result); " is 139.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJavaScriptDate,The length of the statement  "            Dictionary<string' object> deserializedDictionary = (Dictionary<string' object>)JsonConvert.DeserializeObject(jsonText' typeof(Dictionary<string' object>)); " is 156.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TestMethodExecutorObject,The length of the statement  "            MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output' typeof(MethodExecutorObject)) as MethodExecutorObject; " is 131.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedHashtableDeserialization,The length of the statement  "            string value = @"{""Name"":""Orange""' ""Hash"":{""ExpiryDate"":""01/24/2010 12:00:00""'""UntypedArray"":[""01/24/2010 12:00:00""]}}"; " is 134.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonIgnoreAttributeTest,The length of the statement  "            JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@"{""Field"":99'""Property"":-1'""IgnoredField"":-1'""IgnoredObject"":[1'2'3'4'5]}"); " is 178.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GoogleSearchAPI,The length of the statement  """http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY=""'  " is 265.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GoogleSearchAPI,The length of the statement  """http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB""'  " is 159.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GoogleSearchAPI,The length of the statement  """http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY=""'  " is 265.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TorrentDeserializeTest,The length of the statement  "       [""192D99A5C943555CB7F00A852821CF6D6DB3008A""'201'""filename.avi""'178311826'1000'178311826'72815250'408'1603'7'121430'""NameOfLabelPrevioslyDefined""'3'6'0'8'128954'-1'0]' " is 172.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,BadJsonPropertyClassSerialize,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }' @"A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name."); " is 283.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,InvalidBackslash,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }' @"Bad JSON escape sequence: \j. Path ''' line 1' position 7."); " is 169.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The length of the statement  "            string result = JsonConvert.SerializeObject(testDates' new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat }); " is 147.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The length of the statement  "            Assert.AreEqual(@"[""0100-01-01T01:01:01+00:00""'""2000-01-01T01:01:01+00:00""'""2000-01-01T01:01:01+13:00""'""2000-01-01T01:01:01-03:30""]"' result); " is 150.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The length of the statement  "            string result = JsonConvert.SerializeObject(testDates' new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat }); " is 147.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The length of the statement  "            Assert.AreEqual(@"[""\/Date(-59011455539000+0000)\/""'""\/Date(946688461000+0000)\/""'""\/Date(946641661000+1300)\/""'""\/Date(946701061000-0330)\/""]"' result); " is 161.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousObjectSerialization,The length of the statement  "            Assert.AreEqual(@"{""StringValue"":""I am a string""'""IntValue"":2147483647'""NestedAnonymous"":{""NestedValue"":255}'""NestedArray"":[1'2]'""Product"":{""Name"":""TestProduct""'""ExpiryDate"":""2000-01-01T00:00:00Z""'""Price"":0.0'""Sizes"":null}}"' json); " is 258.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonIgnoreAttributeOnClassTest,The length of the statement  "            JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@"{""TheField"":99'""Property"":-1'""IgnoredField"":-1}"); " is 165.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializerShouldUseClassConverterOverArgumentConverter,The length of the statement  "            ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json' new ArgumentConverterPrecedenceClassConverter()); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializerShouldUseMemberConverterOverClassAndArgumentConverter,The length of the statement  "            Assert.AreEqual(@"{""DefaultConverter"":[""Class""'""DefaultConverterValue""]'""MemberConverter"":[""Member""'""MemberConverterValue""]}"' json); " is 145.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializerShouldUseMemberConverterOverClassAndArgumentConverter,The length of the statement  "            ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json' new ArgumentConverterPrecedenceClassConverter()); " is 149.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,IncompatibleJsonAttributeShouldThrow,The length of the statement  "            }' "Unexpected value when converting date. Expected DateTime or DateTimeOffset' got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass."); " is 152.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeJsonRaw,The length of the statement  "            Assert.AreEqual(@"{""first_name"":""FirstNameValue""'""RawContent"":[1'2'3'4'5]'""last_name"":""LastNameValue""}"' json); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableMember,The length of the statement  "            Assert.AreEqual(@"{""Id"":""ad6205e8-0df4-465d-aea6-8ba18e93a7e7""'""FName"":""FirstValue""'""LName"":""LastValue""'""RoleId"":5'""NullableRoleId"":6'""NullRoleId"":null'""Active"":true}"' json); " is 195.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeInterfaceProperty,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest' typeof(InterfacePropertyTestClass)); }' @"Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name'' line 1' position 14."); " is 394.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The length of the statement  "            GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PopulateDefaultValueWhenUsingConstructor,The length of the statement  "            ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json' new JsonSerializerSettings " is 157.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeJsonPropertyWithHandlingValues,The length of the statement  "            json = JsonConvert.SerializeObject(o' Formatting.Indented' new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }); " is 136.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonPropertyWithHandlingValues_ReferenceLoopError,The length of the statement  "                JsonConvert.SerializeObject(o' Formatting.Indented' new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore }); " is 137.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonPropertyWithHandlingValues_ReferenceLoopError,The length of the statement  "            }' "Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type '" + classRef + "'. Path ''."); " is 126.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments,The length of the statement  "            string json = @"{""sublocation"":""AlertEmailSender.Program.Main""'""userId"":0'""type"":0'""summary"":""Loading settings variables""'""details"":null'""stackTrace"":""   at System.Environment.GetStackTrace(Exception e' Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25""'""tag"":null'""time"":""\/Date(1249591032026-0400)\/""}"; " is 572.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }' @"Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor' one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation'' line 1' position 15."); " is 390.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoObject,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }' @"Cannot deserialize the current JSON array (e.g. [1'2'3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {""name"":""value""}) to deserialize correctly. " is 312.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoObject,The length of the statement  "To fix this error either change the JSON to a JSON object (e.g. {""name"":""value""}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection' IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array. " is 356.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoDictionary,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string' string>>(json); }' @"Cannot deserialize the current JSON array (e.g. [1'2'3]) into type 'System.Collections.Generic.Dictionary`2[System.String'System.String]' because the type requires a JSON object (e.g. {""name"":""value""}) to deserialize correctly. " is 360.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoDictionary,The length of the statement  "To fix this error either change the JSON to a JSON object (e.g. {""name"":""value""}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection' IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array. " is 356.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoSerializable,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }' @"Cannot deserialize the current JSON array (e.g. [1'2'3]) into type 'System.Exception' because the type requires a JSON object (e.g. {""name"":""value""}) to deserialize correctly. " is 291.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoSerializable,The length of the statement  "To fix this error either change the JSON to a JSON object (e.g. {""name"":""value""}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection' IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array. " is 356.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoDouble,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }' @"Cannot deserialize the current JSON array (e.g. [1'2'3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string' number' boolean' null) to deserialize correctly. " is 303.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeArrayIntoDouble,The length of the statement  "To fix this error either change the JSON to a JSON primitive value (e.g. string' number' boolean' null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection' IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array. " is 374.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeConstructorIntoObject,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }' @"Error converting value ""Constructor"" to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path ''' line 1' position 16."); " is 232.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeConstructorIntoObjectNested,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }' @"Error converting value ""Constructor"" to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]'' line 1' position 17."); " is 241.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeObjectIntoArray,The length of the statement  "                Assert.IsTrue(ex.Message.StartsWith(@"Cannot deserialize the current JSON object (e.g. {""name"":""value""}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1'2'3]) to deserialize correctly." + Environment.NewLine + " is 301.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotDeserializeObjectIntoArray,The length of the statement  "                                                    @"To fix this error either change the JSON to a JSON array (e.g. [1'2'3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer' not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object." + Environment.NewLine + " is 394.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotPopulateArrayIntoObject,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json' new Person()); }' @"Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path ''' line 1' position 1."); " is 224.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CannotPopulateObjectIntoArray,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json' new List<Person>()); }' @"Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path ''' line 1' position 2."); " is 266.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePersonKeyedDictionary,The length of the statement  "                Assert.IsTrue(ex.Message.StartsWith("Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'")); " is 301.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePopulateDictionaryAndList,The length of the statement  "            ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@"{'Dictionary':{appended:'appended''existing:'new'}}"); " is 129.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json' new JsonSerializerSettings " is 155.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences,The length of the statement  "            })' "Cannot preserve reference to readonly dictionary' or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1'' line 1' position 16."); " is 236.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDateTimeOffsetAndDateTime,The length of the statement  "                @"{""DateTimeOffsetValue"":""2012-02-25T19:55:50.6095676+00:00""' ""DateTimeValue"":""2012-02-25T19:55:50.6095676+00:00""}"; " is 124.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDateTimeOffsetAndDateTime,The length of the statement  "            DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText' new JsonSerializerSettings " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeNonIDictionary,The length of the statement  "            ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetField("AA_field1"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(0' ReflectionUtils.GetMemberValue(typeof(AA).GetField("AA_field2"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property1"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property2"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property3"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property4"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(0' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property5"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(0' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property6"' BindingFlags.Instance | BindingFlags.NonPublic)' myA)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(AA).GetField("AA_field1"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(0' ReflectionUtils.GetMemberValue(typeof(AA).GetField("AA_field2"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 138.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property1"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property2"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property3"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property4"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(0' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property5"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(0' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property6"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property3"' BindingFlags.Instance | BindingFlags.Public)' myB)); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property4"' BindingFlags.Instance | BindingFlags.NonPublic)' myB)); " is 144.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property6"' BindingFlags.Instance | BindingFlags.Public)' myB)); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property7"' BindingFlags.Instance | BindingFlags.Public)' myB)); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The length of the statement  "            Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property8"' BindingFlags.Instance | BindingFlags.Public)' myB)); " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRefAdditionalContent,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string' object>>(json); }' "Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id'' line 6' position 11."); " is 279.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeIgnoredPropertyInConstructor,The length of the statement  "            string json = @"{""First"":""First""'""Second"":2'""Ignored"":{""Name"":""James""}'""AdditionalContent"":{""LOL"":true}}"; " is 122.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,StringDictionaryTest,The length of the statement  "                ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }' "Cannot create and populate list type " + classRef + ". Path 'StringDictionaryProperty'' line 2' position 32."); " is 238.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePropertyNullableDateTimeOffsetExactIso,The length of the statement  "            NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>("{\"DateTimeOffsetField\":\"2000-01-01T00:00:00+06:00\"}"); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePropertyNullableDateTimeOffsetExactMsAjax,The length of the statement  "            NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>("{\"DateTimeOffsetField\":\"\\/Date(946663200000+0600)\\/\"}"); " is 150.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeMinValueDecimal,The length of the statement  "            var obj = JsonConvert.DeserializeObject<DecimalTest>(json' new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default }); " is 151.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonPublicConstructorWithJsonConstructorTest,The length of the statement  "            NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>("{}"); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PublicConstructorOverridenByJsonConstructorTest,The length of the statement  "            PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>("{Value:'value!'}"); " is 143.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,MultipleParamatrizedConstructorsJsonConstructorTest,The length of the statement  "            MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>("{Value:'value!'' Age:1}"); " is 158.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullDateTimeValueTest,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject("null"' typeof(DateTime)); }' "Error converting value {null} to type 'System.DateTime'. Path ''' line 1' position 4."); " is 208.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ChildDataContractTestWithDataContractSerializer,The length of the statement  "            Assert.AreEqual(@"<JsonSerializerTest.ChildDataContract xmlns=""http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization"" xmlns:i=""http://www.w3.org/2001/XMLSchema-instance""><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=""true""/></JsonSerializerTest.ChildDataContract>"' xml); " is 369.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonDefaultConstructorWithReadOnlyCollectionPropertyTest,The length of the statement  "            NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty("blah"); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonDefaultConstructorWithReadOnlyCollectionPropertyTest,The length of the statement  "            NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonDefaultConstructorWithReadOnlyDictionaryPropertyTest,The length of the statement  "            NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty("blah"); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonDefaultConstructorWithReadOnlyDictionaryPropertyTest,The length of the statement  "            NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json); " is 146.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PrivateMembersClassWithAttributesTest,The length of the statement  "            PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes("privateString!"' "internalString!"' "readonlyString!"); " is 133.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGenericEnumerableProperty,The length of the statement  "            BusRun r = JsonConvert.DeserializeObject<BusRun>("{\"Departures\":[\"\\/Date(1309874148734-0400)\\/\"'\"\\/Date(1309874148739-0400)\\/\"'null]'\"WheelchairAccessible\":true}"); " is 176.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullInt,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }' "Error converting value {null} to type 'System.Int32'. Path '[3]'' line 5' position 7."); " is 219.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeIConvertible,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)' "Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer'' line 2' position 15."); " is 232.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeObjectDictionary,The length of the statement  "            var dict = serializer.Deserialize<Dictionary<string' string>>(new JsonTextReader(new StringReader("{'k1':''''k2':'v2'}"))); " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDictionaryStringStringAndStringObject,The length of the statement  "            var dict = serializer.Deserialize<Dictionary<string' string>>(new JsonTextReader(new StringReader("{'k1':''''k2':'v2'}"))); " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDoubleFromEmptyString,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(""); }' "No JSON content found and type 'System.Double' is not nullable. Path ''' line 0' position 0."); " is 201.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeEnumFromEmptyString,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(""); }' "No JSON content found and type 'System.StringComparison' is not nullable. Path ''' line 0' position 0."); " is 221.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeInt32FromEmptyString,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(""); }' "No JSON content found and type 'System.Int32' is not nullable. Path ''' line 0' position 0."); " is 197.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The length of the statement  "                    @"{""PreField"":""Pre""'""DateTimeField"":""2008-12-12T12:12:12Z""'""DateTimeOffsetField"":""2008-12-12T12:12:12Z""'""PostField"":""Post""}"' " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The length of the statement  "                    @"{""PreField"":""Pre""'""DateTimeField"":""2008-01-01T01:01:01Z""'""DateTimeOffsetField"":""2008-01-01T01:01:01Z""'""PostField"":""Post""}"' " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The length of the statement  "                    @"{""PreField"":""Pre""'""DateTimeField"":""2008-12-12T12:12:12Z""'""DateTimeOffsetField"":""2008-12-12T12:12:12Z""'""PostField"":""Post""}"' " is 141.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredSerialize,The length of the statement  "            Assert.AreEqual("Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''."' errors[0]); " is 129.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredSerialize,The length of the statement  "            Assert.AreEqual("Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''."' errors[1]); " is 122.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredSerialize,The length of the statement  "            Assert.AreEqual("Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''."' errors[2]); " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,IgnoreDataMemberTest,The length of the statement  "            string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }' Formatting.Indented); " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDataContractSerializationAttributes,The length of the statement  "            //DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(DataContractSerializationAttributesClass)); " is 123.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CheckAdditionalContent,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string' int>>(new JsonTextReader(new StringReader(json))); }' "Additional text encountered after finished reading JSON content: {. Path ''' line 1' position 7."); " is 239.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeKeyValuePairConverterWithCamelCase,The length of the statement  "                JsonConvert.SerializeObject(new KeyValuePair<int' string>(123' "test value")' Formatting.Indented' new JsonSerializerSettings " is 125.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeFloatingPointHandling,The length of the statement  "            json = JsonConvert.SerializeObject(d' new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue }); " is 125.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeCustomTupleWithSerializableAttribute,The length of the statement  "                "Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+MyTuple`1[System.Int32]. A class should either have a default constructor' one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'm_Item1'' line 1' position 11."); " is 306.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeCustomTupleWithSerializableAttributeInPartialTrust,The length of the statement  "                ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<MyTuplePartial<int>>(json)' "Unable to find a constructor to use for type Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+MyTuplePartial`1[System.Int32]. A class should either have a default constructor' one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'm_Item1'' line 1' position 11."); " is 428.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RoundtripOfDateTimeOffset,The length of the statement  "            var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat' DateParseHandling = DateParseHandling.DateTimeOffset' DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }; " is 229.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NoConstructorReadOnlyCollectionTest,The length of the statement  "            ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>("[1]")' "Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path ''' line 1' position 1."); " is 317.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset,The length of the statement  "            Dictionary<DateTimeOffset' string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset' string>>(json' settings); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead,The length of the statement  "            Dictionary<DateTimeOffset' string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset' string>>(json' settings); " is 121.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ErrorCreatingJsonConverter,The length of the statement  "            ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass())' "Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'."); " is 196.
Long Statement,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeInvalidOctalRootError,The length of the statement  "            ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>("020474068")' "Input string '020474068' is not a valid number. Path ''' line 1' position 9."); " is 182.
Long Statement,Newtonsoft.Json.Tests.Serialization,AttachmentReadConverter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadJson,The length of the statement  "                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64))' "application/octet-stream") " is 124.
Long Statement,Newtonsoft.Json.Tests.TestObjects,Currency,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Currency.cs,__DebugDisplay,The length of the statement  "            return ExtraTopLevelOperators.PrintFormatToString<FSharpFunc<Currency' string>>(new PrintfFormat<FSharpFunc<Currency' string>' Unit' string' string' string>("%+0.8A")).Invoke(this); " is 181.
Long Statement,Newtonsoft.Json.Tests.TestObjects,Event,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Event.cs,ToString,The length of the statement  "            return string.Format("{{ sublocation = {0}' userId = {1}' type = {2}' summary = {3}' details = {4}' stackTrace = {5}' tag = {6} }}"' _sublocation' _userId' _type' _summary' _details' _stackTrace' _tag); " is 202.
Long Statement,Newtonsoft.Json.Tests.TestObjects,VersionKeyedCollection,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\VersionKeyedCollection.cs,OnErrorMethod,The length of the statement  "            Messages.Add(errorContext.Path + " - Error message for member " + errorContext.Member + " = " + errorContext.Error.Message); " is 124.
Long Statement,Newtonsoft.Json.Tests.TestObjects,ConverterPrecedenceClassConverter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\ConverterPrecedenceClassConverter.cs,ReadJson,The length of the statement  "                throw new Exception(StringUtils.FormatWith("Serialize converter {0} and deserialize converter {1} do not match."' CultureInfo.InvariantCulture' converter' ConverterType)); " is 171.
Long Statement,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromType,The length of the statement  "                Assert.Fail("Schema generated for type '{0}' is not valid." + Environment.NewLine + string.Join(Environment.NewLine' errors.ToArray())' typeof(T)); " is 147.
Long Statement,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UndefinedPropertyOnNoPropertySchema,The length of the statement  "            Assert.AreEqual("Property 'g' has not been defined and the schema does not allow additional properties. Line 1' position 5."' errors[0]); " is 137.
Long Statement,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The length of the statement  "            JArray a = new JArray(1' new JObject(new JProperty("value"' "value!"))' 3' 2' new JObject(new JProperty("value"' "value!"))' 4' 2' new JObject(new JProperty("value"' "value!"))); " is 178.
Long Statement,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual(JsonSchemaType.String' model.Properties["thirdproperty"].Properties["thirdproperty_firstproperty"].Type); " is 121.
Long Statement,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The length of the statement  "            Assert.AreEqual(null' model.Properties["thirdproperty"].Properties["thirdproperty_firstproperty"].AdditionalProperties); " is 120.
Long Statement,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,Location,The length of the statement  "            Assert.AreEqual("#/properties/foo/items/1/properties/foo"' schema.Properties["foo"].Items[1].Properties["foo"].Location); " is 121.
Long Statement,Newtonsoft.Json.Tests.Schema,JsonSchemaGeneratorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaGeneratorTests.cs,CircularReferenceError,The length of the statement  "            }' @"Unresolved circular reference for type 'Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass'. Explicitly define an Id for the type using a JsonObject/JsonArray attribute or automatically generate a type Id using the UndefinedSchemaIdHandling property."); " is 264.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,FailingDateTimeParse,The length of the statement  "            bool success = DateTime.TryParseExact(text' "yyyy-MM-ddTHH:mm:ss.FFFFFFFK"' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind' out oldDt); " is 147.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,NewDateTimeParse,The length of the statement  "            //AssertNewDateTimeParseEqual("0001-01-01T00:00:00+23:30"); // I don't know why a different value is returned from DateTime.TryParse' I think it is a bug in .NET " is 161.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,NewDateTimeParse,The length of the statement  "            AssertNewDateTimeParseEqual("9999-12-31T23:59:59.9999999+00:00"' DateTime.MaxValue); // DateTime.TryParse fails instead of returning MaxDate in some timezones " is 158.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,NewDateTimeParse,The length of the statement  "            AssertNewDateTimeParseEqual("9999-12-31T23:59:59.9999999-23:30"' DateTime.MaxValue); // DateTime.TryParse fails instead of returning MaxDate in some timezones " is 158.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,NewDateTimeParse,The length of the statement  "            AssertNewDateTimeParseEqual("9999-12-31T23:59:59.9999999+11:30"' DateTime.MaxValue); // DateTime.TryParse fails instead of returning MaxDate in some timezones " is 158.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,NewDateTimeParse,The length of the statement  "            AssertNewDateTimeParseEqual("9999-12-31T23:59:59.9999999-11:30"' DateTime.MaxValue); // DateTime.TryParse fails instead of returning MaxDate in some timezones " is 158.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,TryParseDateIso,The length of the statement  "                if (DateTimeOffset.TryParseExact(text' isoDateFormat' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind' out dateTimeOffset)) " is 134.
Long Statement,Newtonsoft.Json.Tests.Utilities,DateTimeUtilsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\DateTimeUtilsTests.cs,TryParseDateIso,The length of the statement  "                if (DateTime.TryParseExact(text' isoDateFormat' CultureInfo.InvariantCulture' DateTimeStyles.RoundtripKind' out dateTime)) " is 122.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,ConstructorWithRefString,The length of the statement  "            ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 1); " is 138.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndOutBool,The length of the statement  "            ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 2); " is 138.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndRefBoolAndRefBool,The length of the statement  "            ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 3); " is 138.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,DefaultConstructor_Struct,The length of the statement  "            Func<object> create = ExpressionReflectionDelegateFactory.Instance.CreateDefaultConstructor<object>(typeof(StructTest)); " is 120.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreatePropertySetter,The length of the statement  "            Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetProperty(typeof(Movie)' "Name")); " is 151.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreatePropertyGetter,The length of the statement  "            Func<object' object> getter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(TestReflectionUtils.GetProperty(typeof(Movie)' "Name")); " is 149.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateMethodCall,The length of the statement  "            MethodCall<object' object> method = ExpressionReflectionDelegateFactory.Instance.CreateMethodCall<object>(TestReflectionUtils.GetMethod(typeof(Movie)' "ToString")); " is 164.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateMethodCall,The length of the statement  "            method = ExpressionReflectionDelegateFactory.Instance.CreateMethodCall<object>(TestReflectionUtils.GetMethod(typeof(Movie)' "Equals")); " is 135.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateMethodCall_Constructor,The length of the statement  "            MethodCall<object' object> method = ExpressionReflectionDelegateFactory.Instance.CreateMethodCall<object>(typeof(Movie).GetConstructor(new Type[0])); " is 149.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,GetStatic,The length of the statement  "            Func<object' object> getter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(TestReflectionUtils.GetProperty(typeof(StaticTestClass)' "StringProperty")); " is 169.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,GetStatic,The length of the statement  "            getter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(TestReflectionUtils.GetField(typeof(StaticTestClass)' "StringField")); " is 142.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,SetStatic,The length of the statement  "            Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetProperty(typeof(StaticTestClass)' "StringProperty")); " is 171.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,SetStatic,The length of the statement  "            setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetField(typeof(StaticTestClass)' "StringField")); " is 142.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateGetField,The length of the statement  "            Func<object' object> getter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(TestReflectionUtils.GetField(typeof(FieldsTestClass)' "StringField")); " is 163.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateGetField,The length of the statement  "            getter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(TestReflectionUtils.GetField(typeof(FieldsTestClass)' "BoolField")); " is 140.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateSetField_ReadOnly,The length of the statement  "            Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetField(typeof(FieldsTestClass)' "IntReadOnlyField")); " is 170.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateSetField,The length of the statement  "            Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetField(typeof(FieldsTestClass)' "StringField")); " is 165.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateSetField,The length of the statement  "            setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetField(typeof(FieldsTestClass)' "BoolField")); " is 140.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,SetOnStruct,The length of the statement  "            Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetProperty(typeof(StructTest)' "StringProperty")); " is 166.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,SetOnStruct,The length of the statement  "            setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetField(typeof(StructTest)' "StringField")); " is 137.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateGetWithBadObjectTarget,The length of the statement  "                    Func<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateGet<object>(TestReflectionUtils.GetProperty(typeof(Movie)' "Name")); " is 149.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateGetWithBadObjectTarget,The length of the statement  "                    "Unable to cast object of type 'Newtonsoft.Json.Tests.TestObjects.Person' to type 'Newtonsoft.Json.Tests.TestObjects.Movie'."' " is 126.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateSetWithBadObjectTarget,The length of the statement  "                    Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetProperty(typeof(Movie)' "Name")); " is 151.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateSetWithBadObjectTarget,The length of the statement  "                    "Unable to cast object of type 'Newtonsoft.Json.Tests.TestObjects.Person' to type 'Newtonsoft.Json.Tests.TestObjects.Movie'."' " is 126.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateSetWithBadObjectValue,The length of the statement  "                    Action<object' object> setter = ExpressionReflectionDelegateFactory.Instance.CreateSet<object>(TestReflectionUtils.GetProperty(typeof(Movie)' "Name")); " is 151.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateStaticMethodCall,The length of the statement  "            MethodInfo castMethodInfo = typeof(JsonSerializerTest.DictionaryKey).GetMethod("op_Implicit"' new[] { typeof(string) }); " is 120.
Long Statement,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,CreateStaticMethodCall,The length of the statement  "            MethodCall<object' object> call = ExpressionReflectionDelegateFactory.Instance.CreateMethodCall<object>(castMethodInfo); " is 120.
Long Statement,Newtonsoft.Json.Tests.Utilities,LateboundReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\LateboundReflectionDelegateFactoryTests.cs,ConstructorWithRefString,The length of the statement  "            ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 1); " is 138.
Long Statement,Newtonsoft.Json.Tests.Utilities,LateboundReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\LateboundReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndOutBool,The length of the statement  "            ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 2); " is 138.
Long Statement,Newtonsoft.Json.Tests.Utilities,LateboundReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\LateboundReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndRefBoolAndRefBool,The length of the statement  "            ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 3); " is 138.
Complex Conditional,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteEscapedJavaScriptStringOld,The conditional expression  "c >= ' ' && c < 128 && c != '\\' && c != delimiter"  is complex.
Empty Catch Block,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBytesWithError,The method has an empty catch block.
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new byte[] { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new byte[] { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new byte[] { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 12' 29' 12' 30' 0' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 12' 29' 12' 30' 0' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 12' 29' 12' 30' 0' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 12' 29' 12' 30' 0' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 12' 29' 12' 30' 0' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteValues,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDouble,The following statement contains a magic number: writer.WriteValue(99.99d);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteNestedArray,The following statement contains a magic number: double value = (i != 5)                      ? Convert.ToDouble(i)                      : 5.78960446186581E+77d;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteNestedArray,The following statement contains a magic number: double value = (i != 5)                      ? Convert.ToDouble(i)                      : 5.78960446186581E+77d;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteNestedArray,The following statement contains a magic number: i <= 8
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.Cost = 999.59m;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.product.Add(new Product              {                  ExpiryDate = new DateTime(2000' 9' 28' 3' 59' 58' DateTimeKind.Local)'                  Name = "BSON!"'                  Price = -0.1m'                  Sizes = new[] { "First"' "Second" }              });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteSerializedStore,The following statement contains a magic number: s1.Establised = new DateTime(2000' 1' 1' 0' 0' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteLargeStrings,The following statement contains a magic number: i < 100
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The following statement contains a magic number: Assert.AreEqual(8' placemark.AddressDetails.Accuracy);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The following statement contains a magic number: Assert.AreEqual(-122.083739m' placemark.Point.Coordinates[0]);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The following statement contains a magic number: Assert.AreEqual(37.423021m' placemark.Point.Coordinates[1]);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeGoogleGeoCode,The following statement contains a magic number: Assert.AreEqual(0m' placemark.Point.Coordinates[2]);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,Example,The following statement contains a magic number: p.Price = 9.95m;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,Example,The following statement contains a magic number: Assert.AreEqual(9.95m' deserializedProduct.Price);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,Example,The following statement contains a magic number: Assert.AreEqual(3' deserializedProduct.Sizes.Length);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteOid,The following statement contains a magic number: byte[] oid = new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeEmptyAndNullStrings,The following statement contains a magic number: p.Price = 9.95m;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeEmptyAndNullStrings,The following statement contains a magic number: Assert.AreEqual(9.95m' deserializedProduct.Price);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeEmptyAndNullStrings,The following statement contains a magic number: Assert.AreEqual(3' deserializedProduct.Sizes.Length);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,SerializeEmptyAndNullStrings,The following statement contains a magic number: Assert.AreEqual(null' deserializedProduct.Sizes[2]);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Local));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Local));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Local));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Local));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Local));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,WriteDateTimes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 12' 20' 55' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonWriterTests.cs,DateTimeZoneHandling,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst1 = new MyTest              {                  TimeStamp = new DateTime(2000' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Joe Doe"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst1 = new MyTest              {                  TimeStamp = new DateTime(2000' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Joe Doe"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst1 = new MyTest              {                  TimeStamp = new DateTime(2000' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Joe Doe"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst1 = new MyTest              {                  TimeStamp = new DateTime(2000' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Joe Doe"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst1 = new MyTest              {                  TimeStamp = new DateTime(2000' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Joe Doe"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst1 = new MyTest              {                  TimeStamp = new DateTime(2000' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Joe Doe"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst2 = new MyTest              {                  TimeStamp = new DateTime(2010' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Bob"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst2 = new MyTest              {                  TimeStamp = new DateTime(2010' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Bob"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst2 = new MyTest              {                  TimeStamp = new DateTime(2010' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Bob"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst2 = new MyTest              {                  TimeStamp = new DateTime(2010' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Bob"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst2 = new MyTest              {                  TimeStamp = new DateTime(2010' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Bob"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,Bson_SupportMultipleContent,The following statement contains a magic number: MyTest tst2 = new MyTest              {                  TimeStamp = new DateTime(2010' 12' 20' 12' 59' 59' DateTimeKind.Utc)'                  UserName = "Bob"              };
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadDouble,The following statement contains a magic number: Assert.AreEqual(99.99d' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadDouble_Decimal,The following statement contains a magic number: Assert.AreEqual(99.99m' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadValues,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 29' 12' 30' 0' DateTimeKind.Utc)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadNestedArray,The following statement contains a magic number: double value = (i != 5)                      ? Convert.ToDouble(i)                      : 5.78960446186581E+77d;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadNestedArray,The following statement contains a magic number: double value = (i != 5)                      ? Convert.ToDouble(i)                      : 5.78960446186581E+77d;
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadNestedArray,The following statement contains a magic number: i <= 8
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadNestedArrayIntoLinq,The following statement contains a magic number: Assert.AreEqual(3' o.Count);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadReference,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11' 12 }' (byte[])reader.Value);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,ReadLargeStrings,The following statement contains a magic number: i < 100
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DateTimeKindHandling,The following statement contains a magic number: DateTime value = new DateTime(2000' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,UnspecifiedDateTimeKindHandling,The following statement contains a magic number: DateTime value = new DateTime(2000' 1' 1' 0' 0' 0' DateTimeKind.Unspecified);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,LocalDateTimeKindHandling,The following statement contains a magic number: DateTime value = new DateTime(2000' 1' 1' 0' 0' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append('1'' 127);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append(Euro' 5);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append('1'' 126);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append(Euro' 5);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append('1'' 125);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append(Euro' 5);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadLenStringValueTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringValueLong,The following statement contains a magic number: sb.Append('t'' 150);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append('1'' 127);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append(Euro' 5);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry0,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append('1'' 126);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append(Euro' 5);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry1,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append('1'' 125);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append(Euro' 5);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameTripleByteCharBufferBoundry2,The following statement contains a magic number: sb.Append('1'' 128);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,TestReadStringPropertyNameLong,The following statement contains a magic number: sb.Append('t'' 150);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Bson,BsonReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Bson\BsonReaderTests.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Converters,BinaryConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\BinaryConverterTests.cs,DeserializeByteArrayFromJsonArray,The following statement contains a magic number: Assert.AreEqual(4' c.ByteArray.Length);
Magic Number,Newtonsoft.Json.Tests.Converters,BinaryConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\BinaryConverterTests.cs,DeserializeByteArrayFromJsonArray,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3 }' c.ByteArray);
Magic Number,Newtonsoft.Json.Tests.Converters,BinaryConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\BinaryConverterTests.cs,DeserializeByteArrayFromJsonArray,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3 }' c.ByteArray);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithConverter,The following statement contains a magic number: string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0' 5.0)' new DoubleDoubleConverter());
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithConverter,The following statement contains a magic number: string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0' 5.0)' new DoubleDoubleConverter());
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithConverter,The following statement contains a magic number: Assert.AreEqual(5.0' r.length);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithConverter,The following statement contains a magic number: Assert.AreEqual(10.0' r.width);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializePerformance,The following statement contains a magic number: List<Shape> values = new List<Shape>              {                  Shape.NewRectangle(10.0' 5.0)'                  Shape.NewCircle(7.5)              };
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializePerformance,The following statement contains a magic number: List<Shape> values = new List<Shape>              {                  Shape.NewRectangle(10.0' 5.0)'                  Shape.NewCircle(7.5)              };
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializePerformance,The following statement contains a magic number: List<Shape> values = new List<Shape>              {                  Shape.NewRectangle(10.0' 5.0)'                  Shape.NewCircle(7.5)              };
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializePerformance,The following statement contains a magic number: i < 100
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializePerformance,The following statement contains a magic number: i < 100
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithFields,The following statement contains a magic number: string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0' 5.0));
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithFields,The following statement contains a magic number: string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0' 5.0));
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeUnionWithFields,The following statement contains a magic number: Assert.AreEqual(5.0' r.length);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,DeserializeUnionWithFields,The following statement contains a magic number: Assert.AreEqual(10.0' r.width);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Serialize,The following statement contains a magic number: Shape value = Shape.NewRectangle(10.0' 5.0);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Serialize,The following statement contains a magic number: Shape value = Shape.NewRectangle(10.0' 5.0);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(10' fields[0]);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual(5' fields[1]);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Deserialize,The following statement contains a magic number: Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]              {                  10.0' 5.0              });
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Deserialize,The following statement contains a magic number: Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]              {                  10.0' 5.0              });
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(10' value.width);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(5' value.length);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithTypeNameHandlingAndReferenceTracking,The following statement contains a magic number: string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0' 5.0)' new JsonSerializerSettings              {                  PreserveReferencesHandling = PreserveReferencesHandling.All'                  TypeNameHandling = TypeNameHandling.All              });
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithTypeNameHandlingAndReferenceTracking,The following statement contains a magic number: string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0' 5.0)' new JsonSerializerSettings              {                  PreserveReferencesHandling = PreserveReferencesHandling.All'                  TypeNameHandling = TypeNameHandling.All              });
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithTypeNameHandlingAndReferenceTracking,The following statement contains a magic number: Assert.AreEqual(5.0' r.length);
Magic Number,Newtonsoft.Json.Tests.Converters,DiscriminatedUnionConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,SerializeUnionWithTypeNameHandlingAndReferenceTracking,The following statement contains a magic number: Assert.AreEqual(10.0' r.width);
Magic Number,Newtonsoft.Json.Tests.Converters,DoubleDoubleConverter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,WriteJson,The following statement contains a magic number: writer.WriteValue(d * 2);
Magic Number,Newtonsoft.Json.Tests.Converters,DoubleDoubleConverter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\DiscriminatedUnionConverterTests.cs,ReadJson,The following statement contains a magic number: return d / 2;
Magic Number,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,SerializeUsingInternalConverter,The following statement contains a magic number: IList<KeyValuePair<string' int>> values = new List<KeyValuePair<string' int>>              {                  new KeyValuePair<string' int>("123"' 123)'                  new KeyValuePair<string' int>("456"' 456)              };
Magic Number,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,SerializeUsingInternalConverter,The following statement contains a magic number: IList<KeyValuePair<string' int>> values = new List<KeyValuePair<string' int>>              {                  new KeyValuePair<string' int>("123"' 123)'                  new KeyValuePair<string' int>("456"' 456)              };
Magic Number,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,SerializeUsingInternalConverter,The following statement contains a magic number: Assert.AreEqual(2' v2.Count);
Magic Number,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,SerializeUsingInternalConverter,The following statement contains a magic number: Assert.AreEqual(123' v2[0].Value);
Magic Number,Newtonsoft.Json.Tests.Converters,KeyValuePairConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\KeyValuePairConverterTests.cs,SerializeUsingInternalConverter,The following statement contains a magic number: Assert.AreEqual(456' v2[1].Value);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeObject,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new List<Employee>              {                  new Employee                  {                      BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Maurice"'                      LastName = "Moss"'                      Department = "IT"'                      JobTitle = "Support"                  }'                  new Employee                  {                      BirthDate = new DateTime(1978' 3' 15' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Jen"'                      LastName = "Barber"'                      Department = "IT"'                      JobTitle = "Manager"                  }              }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeObject,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new List<Employee>              {                  new Employee                  {                      BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Maurice"'                      LastName = "Moss"'                      Department = "IT"'                      JobTitle = "Support"                  }'                  new Employee                  {                      BirthDate = new DateTime(1978' 3' 15' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Jen"'                      LastName = "Barber"'                      Department = "IT"'                      JobTitle = "Manager"                  }              }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeObject,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new List<Employee>              {                  new Employee                  {                      BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Maurice"'                      LastName = "Moss"'                      Department = "IT"'                      JobTitle = "Support"                  }'                  new Employee                  {                      BirthDate = new DateTime(1978' 3' 15' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Jen"'                      LastName = "Barber"'                      Department = "IT"'                      JobTitle = "Manager"                  }              }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeObject,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new List<Employee>              {                  new Employee                  {                      BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Maurice"'                      LastName = "Moss"'                      Department = "IT"'                      JobTitle = "Support"                  }'                  new Employee                  {                      BirthDate = new DateTime(1978' 3' 15' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Jen"'                      LastName = "Barber"'                      Department = "IT"'                      JobTitle = "Manager"                  }              }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeObject,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new List<Employee>              {                  new Employee                  {                      BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Maurice"'                      LastName = "Moss"'                      Department = "IT"'                      JobTitle = "Support"                  }'                  new Employee                  {                      BirthDate = new DateTime(1978' 3' 15' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Jen"'                      LastName = "Barber"'                      Department = "IT"'                      JobTitle = "Manager"                  }              }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeObject,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new List<Employee>              {                  new Employee                  {                      BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Maurice"'                      LastName = "Moss"'                      Department = "IT"'                      JobTitle = "Support"                  }'                  new Employee                  {                      BirthDate = new DateTime(1978' 3' 15' 1' 1' 1' DateTimeKind.Utc)'                      FirstName = "Jen"'                      LastName = "Barber"'                      Department = "IT"'                      JobTitle = "Manager"                  }              }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,AssertDoesDeserialize,The following statement contains a magic number: Assert.AreEqual(123' myClass.Thing.Number);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,AssertShouldSerializeTest,The following statement contains a magic number: MyClass myClass = new MyClass              {                  Value = "Foo"'                  Thing = new MyThing { Number = 456' }              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: NullInterfaceTestClass initial = new NullInterfaceTestClass              {                  Company = "Company!"'                  DecimalRange = new Range<decimal> { First = 0' Last = 1 }'                  Id = new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)'                  IntRange = new Range<int> { First = int.MinValue' Last = int.MaxValue }'                  Year = 2010'                  NullDecimalRange = null              };
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(new Guid(1' 2' 3' 4' 5' 6' 7' 8' 9' 10' 11)' deserialized.Id);
Magic Number,Newtonsoft.Json.Tests.Converters,CustomCreationConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\CustomCreationConverterTests.cs,DeserializeAndConvertNullValue,The following statement contains a magic number: Assert.AreEqual(2010' deserialized.Year);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,SerializeEnumClassUndefined,The following statement contains a magic number: enumClass.StoreColor = (StoreColor)1000;
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,SerializeEnumClassUndefined,The following statement contains a magic number: enumClass.NullableStoreColor1 = (StoreColor)1000;
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DeserializeEnumClassUndefined,The following statement contains a magic number: Assert.AreEqual((StoreColor)1000' enumClass.StoreColor);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,DeserializeEnumClassUndefined,The following statement contains a magic number: Assert.AreEqual((StoreColor)1000' enumClass.NullableStoreColor1);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual(6' foos.Count);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual(Foo.Bat' foos[2]);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual(Foo.SerializeAsBaz' foos[3]);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual(Foo.FooBar | Foo.SerializeAsBaz' foos[4]);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual((Foo)int.MaxValue' foos[5]);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual(3' bars.Count);
Magic Number,Newtonsoft.Json.Tests.Converters,StringEnumConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\StringEnumConverterTests.cs,EnumMemberPlusFlags,The following statement contains a magic number: Assert.AreEqual(Bar.SerializeAsBaz' bars[2]);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeInvariantCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeCustomFormattedDateTime,The following statement contains a magic number: Assert.AreEqual(9' d.Day);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeCustomFormattedDateTime,The following statement contains a magic number: Assert.AreEqual(12' d.Month);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeCustomFormattedDateTime,The following statement contains a magic number: Assert.AreEqual(2006' d.Year);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeFormattedDateTimeNewZealandCulture,The following statement contains a magic number: d = new DateTime(2000' 12' 15' 22' 11' 3' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeCulture,The following statement contains a magic number: Assert.AreEqual(9' d.Day);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeCulture,The following statement contains a magic number: Assert.AreEqual(12' d.Month);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeCulture,The following statement contains a magic number: Assert.AreEqual(2006' d.Year);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset d = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 1' 1' 1' 1' 1' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 1' 1' 1' 1' 1' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,NullableSerializeUTC,The following statement contains a magic number: c.DateTimeOffsetField = new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime();
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeShouldChangeNonUTCDates,The following statement contains a magic number: DateTime localDateTime = new DateTime(2008' 1' 1' 1' 1' 1' 0' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,SerializeShouldChangeNonUTCDates,The following statement contains a magic number: c.DateTimeField = new DateTime(2008' 1' 1' 1' 1' 1' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,BlogCodeSample,The following statement contains a magic number: Person p = new Person              {                  Name = "Keith"'                  BirthDate = new DateTime(1980' 3' 8)'                  LastModified = new DateTime(2009' 4' 12' 20' 44' 55)'              };
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: var offset = new TimeSpan(2' 15' 0);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: var offset = new TimeSpan(2' 15' 0);
Magic Number,Newtonsoft.Json.Tests.Converters,IsoDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\IsoDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: var dto = new DateTimeOffset(2014' 1' 1' 0' 0' 0' 0' offset);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTime,The following statement contains a magic number: DateTime d = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset now = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,SerializeNullableDateTimeClass,The following statement contains a magic number: t = new NullableDateTimeTestClass()              {                  DateTimeField = new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)'                  DateTimeOffsetField = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)              };
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: DateTimeOffset start = new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 15' 22' 11' 3' 55' TimeSpan.Zero)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,DeserializeDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 15' 22' 11' 3' 55' DateTimeKind.Utc)' result);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: l1.Add(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2[0]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2[0]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2[0]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2[0]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2[0]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2[1]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2[1]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2[1]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2[1]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterList,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2[1]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("First"' new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("First"' new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("First"' new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("First"' new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("First"' new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("Second"' new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("Second"' new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("Second"' new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("Second"' new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: l1.Add("Second"' new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2["First"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2["First"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2["First"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2["First"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc)' l2["First"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2["Second"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2["Second"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2["Second"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2["Second"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterDictionary,The following statement contains a magic number: Assert.AreEqual(new DateTime(1983' 10' 9' 23' 10' 0' DateTimeKind.Utc)' l2["Second"]);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.Object1 = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.Object1 = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.Object1 = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.Object1 = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.Object1 = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.ObjectNotHandled = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.ObjectNotHandled = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.ObjectNotHandled = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.ObjectNotHandled = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Converters,JavaScriptDateTimeConverterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Converters\JavaScriptDateTimeConverterTests.cs,ConverterObject,The following statement contains a magic number: l1.ObjectNotHandled = new DateTime(2000' 12' 12' 20' 10' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ValidateUnrestrictedArray,The following statement contains a magic number: Assert.AreEqual(1.1' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(4' errors.Count);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual("thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi'. Line 5' position 40."' errors[2]);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual("thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi2u'. Line 5' position 40."' errors[3]);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(4' errors.Count);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(5' errors.Count);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual("thirdproperty.additional - String 'three' is less than minimum length of 6. Line 6' position 25."' errors[4]);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsInt32Failure,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int));                  s.Maximum = 2;                    JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@"5")))                  {                      Schema = s                  };                  reader.ReadAsInt32();              }' "Integer 5 exceeds maximum value of 2. Line 1' position 1.");
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsDecimal,The following statement contains a magic number: Assert.AreEqual(1.5m' d);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsInt32FromSerializer,The following statement contains a magic number: Assert.AreEqual(3' values.Length);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsInt32FromSerializer,The following statement contains a magic number: Assert.AreEqual(2' values[1]);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsInt32FromSerializer,The following statement contains a magic number: Assert.AreEqual(3' values[2]);
Magic Number,Newtonsoft.Json.Tests,JsonValidatingReaderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonValidatingReaderTests.cs,ReadAsInt32FromSerializer,The following statement contains a magic number: Assert.AreEqual(3' values[2]);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new { test = new[] { 1' 2' 3 } });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new { test = new[] { 1' 2' 3 } });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Example,The following statement contains a magic number: Employee e = new Employee                  {                      FirstName = "Eric"'                      LastName = "Example"'                      BirthDate = new DateTime(1980' 4' 20' 0' 0' 0' DateTimeKind.Utc)'                      Department = "IT"'                      JobTitle = "Web Dude"                  };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Example,The following statement contains a magic number: Employee e = new Employee                  {                      FirstName = "Eric"'                      LastName = "Example"'                      BirthDate = new DateTime(1980' 4' 20' 0' 0' 0' DateTimeKind.Utc)'                      Department = "IT"'                      JobTitle = "Web Dude"                  };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Example,The following statement contains a magic number: Employee e = new Employee                  {                      FirstName = "Eric"'                      LastName = "Example"'                      BirthDate = new DateTime(1980' 4' 20' 0' 0' 0' DateTimeKind.Utc)'                      Department = "IT"'                      JobTitle = "Web Dude"                  };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new { test = new[] { 1' 2' 3 } }' new JsonSerializerSettings                  {                      Formatting = Formatting.None                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new { test = new[] { 1' 2' 3 } }' new JsonSerializerSettings                  {                      Formatting = Formatting.None                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings                  {                      Formatting = Formatting.None'                      Converters =                      {                          // should take precedence                          new JavaScriptDateTimeConverter()'                          new IsoDateTimeConverter { DateTimeFormat = "dd" }                      }                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings                  {                      Formatting = Formatting.None'                      Converters =                      {                          // should take precedence                          new JavaScriptDateTimeConverter()'                          new IsoDateTimeConverter { DateTimeFormat = "dd" }                      }                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings                  {                      Formatting = Formatting.None'                      Converters =                      {                          // should take precedence                          new JavaScriptDateTimeConverter()'                          new IsoDateTimeConverter { DateTimeFormat = "dd" }                      }                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings                  {                      Formatting = Formatting.None'                      Converters =                      {                          // should take precedence                          new JavaScriptDateTimeConverter()'                          new IsoDateTimeConverter { DateTimeFormat = "dd" }                      }                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings                  {                      Formatting = Formatting.None'                      Converters =                      {                          // should take precedence                          new JavaScriptDateTimeConverter()'                          new IsoDateTimeConverter { DateTimeFormat = "dd" }                      }                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Override_JsonConverterOrder,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new[] { new DateTime(2000' 12' 12' 4' 2' 4' DateTimeKind.Utc) }' new JsonSerializerSettings                  {                      Formatting = Formatting.None'                      Converters =                      {                          // should take precedence                          new JavaScriptDateTimeConverter()'                          new IsoDateTimeConverter { DateTimeFormat = "dd" }                      }                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Create,The following statement contains a magic number: IList<int> l = new List<int> { 1' 2' 3 };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_Create,The following statement contains a magic number: IList<int> l = new List<int> { 1' 2' 3 };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_CreateWithSettings,The following statement contains a magic number: IList<int> l = new List<int> { 1' 2' 3 };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DefaultSettings_CreateWithSettings,The following statement contains a magic number: IList<int> l = new List<int> { 1' 2' 3 };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ObjectToString,The following statement contains a magic number: value = 1.1;
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ObjectToString,The following statement contains a magic number: value = 1.1m;
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,ObjectToString,The following statement contains a magic number: value = (float)1.1;
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DeserializeValueObjects,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))' d);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.1"' JsonConvert.ToString(1.1));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.11"' JsonConvert.ToString(1.11));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.111"' JsonConvert.ToString(1.111));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.1111"' JsonConvert.ToString(1.1111));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.11111"' JsonConvert.ToString(1.11111));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.111111"' JsonConvert.ToString(1.111111));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.01"' JsonConvert.ToString(1.01));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,FloatToString,The following statement contains a magic number: Assert.AreEqual("1.001"' JsonConvert.ToString(1.001));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.1"' JsonConvert.ToString(1.1m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.11"' JsonConvert.ToString(1.11m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.111"' JsonConvert.ToString(1.111m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.1111"' JsonConvert.ToString(1.1111m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.11111"' JsonConvert.ToString(1.11111m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.111111"' JsonConvert.ToString(1.111111m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.01"' JsonConvert.ToString(1.01m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,DecimalToString,The following statement contains a magic number: Assert.AreEqual("1.001"' JsonConvert.ToString(1.001m));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime year2000local = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime millisecondsLocal = new DateTime(2000' 1' 1' 1' 1' 1' 999' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime millisecondsLocal = new DateTime(2000' 1' 1' 1' 1' 1' 999' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime ticksLocal = new DateTime(634663873826822481' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime year2000Unspecified = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime year2000Utc = new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: DateTime unixEpoc = new DateTime(621355968000000000' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan Zero"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan 1 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(1)));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan 1.5 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(1.5)));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan 1.5 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(1.5)));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan 13 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13)));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan 13 hour"' new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13)));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteDateTime,The following statement contains a magic number: result = TestDateTime("DateTimeOffset TimeSpan with ticks"' new DateTimeOffset(634663873826822481' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,SerializeObjectDateTimeZoneHandling,The following statement contains a magic number: string json = JsonConvert.SerializeObject(                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new JsonSerializerSettings                  {                      DateTimeZoneHandling = DateTimeZoneHandling.Utc                  });
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 31' 20' 59' 59' new TimeSpan(0' 11' 33' 0' 0));
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeOffsetLength,The following statement contains a magic number: dt = dt.AddTicks(9999999);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 31' 20' 59' 59' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 31' 20' 59' 59' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 31' 20' 59' 59' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 31' 20' 59' 59' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 31' 20' 59' 59' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 31' 20' 59' 59' DateTimeKind.Local);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,MaximumDateTimeLength,The following statement contains a magic number: dt = dt.AddTicks(9999999);
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,StackOverflowTest,The following statement contains a magic number: int depth = 900;
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,JsonConvertTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,CustomDoubleRounding,The following statement contains a magic number: var measurements = new Measurements              {                  Loads = new List<double> { 23283.567554707258' 23224.849899771067' 23062.5' 22846.272519910868' 22594.281246368635 }'                  Positions = new List<double> { 57.724227689317019' 60.440934405753069' 63.444192925248643' 66.813119113482557' 70.4496501404433 }'                  Gain = 12345.67895111213              };
Magic Number,Newtonsoft.Json.Tests,IntConverter,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonConvertTest.cs,WriteJson,The following statement contains a magic number: writer.WriteValue(i * 2);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,FloatParseHandling,The following statement contains a magic number: Assert.AreEqual(9.9m' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,FloatParseHandling,The following statement contains a magic number: Assert.AreEqual(Convert.ToDecimal(1E-06)' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SurrogatePairValid,The following statement contains a magic number: Assert.AreEqual(2' s.Length);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseAdditionalContent_Text,The following statement contains a magic number: reader.SetCharBuffer(new char[2]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseAdditionalContent_Text,The following statement contains a magic number: Assert.AreEqual(2' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseAdditionalContent_Text,The following statement contains a magic number: Assert.AreEqual(3' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseAdditionalContent_Text,The following statement contains a magic number: Assert.AreEqual(4' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseAdditionalContent_Text,The following statement contains a magic number: Assert.AreEqual(5' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: jsonReader.SetCharBuffer(new char[5]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(2' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(7' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(2' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(15' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(3' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(10' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(3' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(12' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(4' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(22' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(5' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(30' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(6' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(4' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(7' jsonReader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingIndented,The following statement contains a magic number: Assert.AreEqual(2' jsonReader.LinePosition);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2L' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(3' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(3' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,Depth,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadLongString,The following statement contains a magic number: string s = new string('a'' 10000);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadLongJsonArray,The following statement contains a magic number: int valueCount = 10000;
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,AppendCharsWhileReadingNull,The following statement contains a magic number: reader.SetCharBuffer(new char[129]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,AppendCharsWhileReadingNull,The following statement contains a magic number: i < 15
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadInt32Overflow,The following statement contains a magic number: j < 1000
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadInt32Overflow_Negative,The following statement contains a magic number: j < 1000
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,AppendCharsWhileReadingNewLine,The following statement contains a magic number: reader.SetCharBuffer(new char[129]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,AppendCharsWhileReadingNewLine,The following statement contains a magic number: i < 14
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(7' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(31' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(37' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(55' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(61' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(73' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(91' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(97' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(109' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(115' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(133' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(139' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(145' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadNewLines,The following statement contains a magic number: Assert.AreEqual(151' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The following statement contains a magic number: Assert.AreEqual(1.1m' reader.ReadAsDecimal());
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The following statement contains a magic number: Assert.AreEqual(-1.1m' reader.ReadAsDecimal());
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDecimals,The following statement contains a magic number: Assert.AreEqual(0.000001m' reader.ReadAsDecimal());
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDoubles,The following statement contains a magic number: Assert.AreEqual(1.1d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDoubles,The following statement contains a magic number: Assert.AreEqual(-1.1d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseDoubles,The following statement contains a magic number: Assert.AreEqual(0.000001d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,WriteReadWrite,The following statement contains a magic number: jsonWriter.WriteValue(99);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,WriteReadWrite,The following statement contains a magic number: i < 5
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,WriteReadWrite,The following statement contains a magic number: jsonWriter.WriteValue(990.00990099m);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,WriteReadWrite,The following statement contains a magic number: jsonWriter.WriteValue(5);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,LongStringTest,The following statement contains a magic number: int length = 20000;
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,LongStringTest,The following statement contains a magic number: Assert.AreEqual(20000' reader.Value.ToString().Length);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,EscapedUnicodeText,The following statement contains a magic number: reader.SetCharBuffer(new char[2]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,EscapedUnicodeText,The following statement contains a magic number: Assert.AreEqual(24352' Convert.ToInt32(Convert.ToChar((string)reader.Value)));
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The following statement contains a magic number: Assert.AreEqual(0.1' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The following statement contains a magic number: Assert.AreEqual(1.000001' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The following statement contains a magic number: Assert.AreEqual(1E-06' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The following statement contains a magic number: Assert.AreEqual(4.94065645841247E-324' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The following statement contains a magic number: Assert.AreEqual(0.0000025d' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadFloatingPointNumber,The following statement contains a magic number: Assert.AreEqual(3000000000d' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumber,The following statement contains a magic number: Assert.AreEqual(250L' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumber,The following statement contains a magic number: Assert.AreEqual(250L' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumber,The following statement contains a magic number: Assert.AreEqual(250L' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumberAsInt64,The following statement contains a magic number: Assert.AreEqual((long)250' (long)jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumberAsInt64,The following statement contains a magic number: Assert.AreEqual((long)250' (long)jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumberAsInt64,The following statement contains a magic number: Assert.AreEqual((long)250' (long)jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumberAsInt32,The following statement contains a magic number: Assert.AreEqual(250' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumberAsInt32,The following statement contains a magic number: Assert.AreEqual(250' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadOctalNumberAsInt32,The following statement contains a magic number: Assert.AreEqual(250' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsBytesIntegerArrayWithComments,The following statement contains a magic number: Assert.AreEqual(2' data.Length);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsBytesIntegerArrayWithComments,The following statement contains a magic number: Assert.AreEqual(2' data[1]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadUnicode,The following statement contains a magic number: reader.SetCharBuffer(new char[5]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadHexidecimalWithAllLetters,The following statement contains a magic number: Assert.AreEqual(11806310474565' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetNegative,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(-6))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetNegative,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(-6))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetHoursOnly,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetHoursOnly,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetWithMinutes,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31)))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetWithMinutes,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31)))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetWithMinutes,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31)))' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetIsoDate,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2011' 8' 1' 21' 25' 0' DateTimeKind.Utc)' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetIsoDate,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2011' 8' 1' 21' 25' 0' DateTimeKind.Utc)' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetIsoDate,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2011' 8' 1' 21' 25' 0' DateTimeKind.Utc)' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetIsoDate,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2011' 8' 1' 21' 25' 0' DateTimeKind.Utc)' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetUnitedStatesDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 1' 30' 0' 0' 0' DateTimeKind.Unspecified)' dt.DateTime);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetUnitedStatesDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 1' 30' 0' 0' 0' DateTimeKind.Unspecified)' dt.DateTime);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetNewZealandDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 1' 30' 0' 0' 0' DateTimeKind.Unspecified)' dt.DateTime);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDateTimeOffsetNewZealandDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(2011' 1' 30' 0' 0' 0' DateTimeKind.Unspecified)' dt.DateTime);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDecimal,The following statement contains a magic number: Assert.AreEqual(-79228162514264300000000000000m' d);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadAsDecimalFrench,The following statement contains a magic number: Assert.AreEqual(9.99m' d);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBufferOnControlChar,The following statement contains a magic number: reader.SetCharBuffer(new char[5]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBufferOnControlChar,The following statement contains a magic number: i < 13
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBufferOnControlChar,The following statement contains a magic number: Assert.AreEqual(new DateTime(631136448000000000)' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBufferOnEndComment,The following statement contains a magic number: reader.SetCharBuffer(new char[5]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadBufferOnEndComment,The following statement contains a magic number: i < 26
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseNullStringConstructor,The following statement contains a magic number: reader.SetCharBuffer(new char[7]);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadContentDelimitedByComments,The following statement contains a magic number: Assert.AreEqual(5' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(2' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(2' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(3' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(3' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(4' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(4' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(5' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(6' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(6' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(7' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(9' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(10' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(11' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,SingleLineComments,The following statement contains a magic number: Assert.AreEqual(11' reader.LineNumber);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseOctalNumber,The following statement contains a magic number: Assert.AreEqual(8m' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ParseHexNumber,The following statement contains a magic number: Assert.AreEqual(32m' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The following statement contains a magic number: Assert.AreEqual(0.0000025d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The following statement contains a magic number: Assert.AreEqual(3000000000d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The following statement contains a magic number: Assert.AreEqual(602214180000000000000000d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The following statement contains a magic number: Assert.AreEqual(0.0000025m' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The following statement contains a magic number: Assert.AreEqual(3000000000m' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ScientificNotation,The following statement contains a magic number: Assert.AreEqual(602214180000000000000000m' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The following statement contains a magic number: Assert.AreEqual(3' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The following statement contains a magic number: Assert.AreEqual(3' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,MaxDepthDoesNotRecursivelyError,The following statement contains a magic number: Assert.AreEqual(2' reader.Depth);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingFromSlowStream,The following statement contains a magic number: Assert.AreEqual(1.11d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingFromSlowStream,The following statement contains a magic number: Assert.AreEqual(0.0000025d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingFromSlowStream,The following statement contains a magic number: Assert.AreEqual(3000000000d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextReaderTest.cs,ReadingFromSlowStream,The following statement contains a magic number: Assert.AreEqual(602214180000000000000000d' reader.Value);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(10);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(10.99);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(0.99);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(0.000000000000000001d);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(0.000000000000000001m);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NullableValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue((double?)1.1);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NullableValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue((float?)1.1);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NullableValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue((decimal?)1.1m);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteRawValue,The following statement contains a magic number: i < 3
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteFloatingPointNumber,The following statement contains a magic number: jsonWriter.WriteValue(0.1);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteFloatingPointNumber,The following statement contains a magic number: jsonWriter.WriteValue(1.000001);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteFloatingPointNumber,The following statement contains a magic number: jsonWriter.WriteValue(0.000001);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteIntegerNumber,The following statement contains a magic number: jsonWriter.WriteValue(9L);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteIntegerNumber,The following statement contains a magic number: jsonWriter.WriteValue(9UL);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Indentation,The following statement contains a magic number: jsonWriter.Indentation = 5;
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Indentation,The following statement contains a magic number: Assert.AreEqual(5' jsonWriter.Indentation);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Indentation,The following statement contains a magic number: jsonWriter.Indentation = 6;
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Indentation,The following statement contains a magic number: Assert.AreEqual(6' jsonWriter.Indentation);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Indentation,The following statement contains a magic number: jsonWriter.WriteValue(123);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,BuildStateArray,The following statement contains a magic number: var valueStates = JsonWriter.StateArrayTempate[7];
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,DateTimeZoneHandling,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NonAsciiStringEscapeHandling,The following statement contains a magic number: Assert.AreEqual(8' json.Length);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,NonAsciiStringEscapeHandling,The following statement contains a magic number: Assert.AreEqual(3' json.Length);
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new byte[] { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,QuoteChar,The following statement contains a magic number: writer.WriteValue(new byte[] { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Culture,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,Culture,The following statement contains a magic number: writer.WriteValue(new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero));
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteEscapedJavaScriptStringOld,The following statement contains a magic number: c >= ' ' && c < 128 && c != '\\' && c != delimiter
Magic Number,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,WriteEscapedJavaScriptStringOld,The following statement contains a magic number: switch (c)                      {                          case '\t':                              escapedValue = @"\t";                              break;                          case '\n':                              escapedValue = @"\n";                              break;                          case '\r':                              escapedValue = @"\r";                              break;                          case '\f':                              escapedValue = @"\f";                              break;                          case '\b':                              escapedValue = @"\b";                              break;                          case '\\':                              escapedValue = @"\\";                              break;                          case '\u0085': // Next Line                              escapedValue = @"\u0085";                              break;                          case '\u2028': // Line Separator                              escapedValue = @"\u2028";                              break;                          case '\u2029': // Paragraph Separator                              escapedValue = @"\u2029";                              break;                          case '\'':                              // this charater is being used as the delimiter                              escapedValue = @"\'";                              break;                          case '"':                              // this charater is being used as the delimiter                              escapedValue = "\\\"";                              break;                          default:                              if (c <= '\u001f')                              {                                  if (unicodeBuffer == null)                                      unicodeBuffer = new char[6];                                    StringUtils.ToCharAsUnicode(c' unicodeBuffer);                                    // slightly hacky but it saves multiple conditions in if test                                  escapedValue = EscapedUnicodeText;                              }                              else                              {                                  escapedValue = null;                              }                              break;                      }
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,ReadLargeJson,The following statement contains a magic number: i < 10
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,DeserializeLargeJson,The following statement contains a magic number: BenchmarkDeserializeMethod<IList<RootObject>>(SerializeMethod.JsonNet' json' Iterations / 10' false);
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeKeyValuePair,The following statement contains a magic number: i < 100
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObject,The following statement contains a magic number: i < 50
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObject,The following statement contains a magic number: int interations = 1000;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObjectComparedToXml,The following statement contains a magic number: const long totalIterations = 100000;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObjectComparedToXml,The following statement contains a magic number: var performance1 = (totalIterations / watch.ElapsedMilliseconds) * 1000;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObjectComparedToXml,The following statement contains a magic number: var performance2 = (totalIterations / watch.ElapsedMilliseconds) * 1000;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The following statement contains a magic number: int interations = 1000;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeString,The following statement contains a magic number: TimeOperation(() =>              {                  for (int i = 0; i < interations; i++)                  {                      using (StringWriter w = StringUtils.CreateStringWriter(StringUtils.GetLength(text) ?? 16))                      {                          char[] buffer = null;                          JavaScriptUtils.WriteEscapedJavaScriptString(w' text' '"'' true' JavaScriptUtils.DoubleQuoteCharEscapeFlags' StringEscapeHandling.Default' ref buffer);                      }                  }                    return "";              }' "New");
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,JTokenToObject,The following statement contains a magic number: int interations = 1000000;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeSize,The following statement contains a magic number: int interations = 100;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSerializationObject,The following statement contains a magic number: test.dictionary = new Dictionary<string' int> { { "Val & asd1"' 1 }' { "Val2 & asd1"' 3 }' { "Val3 & asd1"' 4 } };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSerializationObject,The following statement contains a magic number: test.dictionary = new Dictionary<string' int> { { "Val & asd1"' 1 }' { "Val2 & asd1"' 3 }' { "Val3 & asd1"' 4 } };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSerializationObject,The following statement contains a magic number: test.Address1.Entered = DateTime.Now.AddDays(20);
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSerializationObject,The following statement contains a magic number: test.BigNumber = 34123123123.121M;
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSerializationObject,The following statement contains a magic number: address.Entered = DateTime.Now.AddDays(-2);
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateSimpleObject,The following statement contains a magic number: return new SimpleObject              {                  Name = "Simple-1"'                  Id = 2311'                  Address = "Planet Earth"'                  Scores = new[] { 82' 96' 49' 40' 38' 38' 78' 96' 2' 39 }              };
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeLargeObject,The following statement contains a magic number: i < 20
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,SerializeUnicodeChars,The following statement contains a magic number: string s = (new string('\0'' 30));
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,ParseJObject,The following statement contains a magic number: i < 100000
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,JObjectCreationAndPropertyAccess,The following statement contains a magic number: TimeOperation<object>(() =>              {                  for (int i = 0; i < Iterations * 100; i++)                  {                      JObject test = new JObject(                          new JProperty("one"' 1)'                          new JProperty("two"' 2));                        test["i"] = i;                      int j = (int)test["i"];                      test["j"] = j;                  }                  return null;              }' "JObjectCreationAndPropertyAccess");
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,JObjectCreationAndPropertyAccess,The following statement contains a magic number: TimeOperation<object>(() =>              {                  for (int i = 0; i < Iterations * 100; i++)                  {                      JObject test = new JObject(                          new JProperty("one"' 1)'                          new JProperty("two"' 2));                        test["i"] = i;                      int j = (int)test["i"];                      test["j"] = j;                  }                  return null;              }' "JObjectCreationAndPropertyAccess");
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,NestedJToken,The following statement contains a magic number: i <= 100000
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,DeserializeNestedJToken,The following statement contains a magic number: string json = (new string('['' 100000)) + "1" + ((new string(']'' 100000)));
Magic Number,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,DeserializeNestedJToken,The following statement contains a magic number: string json = (new string('['' 100000)) + "1" + ((new string(']'' 100000)));
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,GetOffset,The following statement contains a magic number: char[] chars = new char[8];
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,HexToBytes,The following statement contains a magic number: byte[] bytes = new byte[fixedHex.Length / 2];
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,HexToBytes,The following statement contains a magic number: int shift = 4;
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,HexToBytes,The following statement contains a magic number: int b = (c - '0') % 32;
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,HexToBytes,The following statement contains a magic number: b -= 7;
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,HexToBytes,The following statement contains a magic number: b > 9
Magic Number,Newtonsoft.Json.Tests,TestFixtureBase,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestFixtureBase.cs,HexToBytes,The following statement contains a magic number: shift ^= 4;
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeObjectProperty,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Property2 = 2              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeChildObject,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Property1 = new { SubProperty2 = 2 }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeMultipleObjects,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Property1 = new { SubProperty2 = 2 }'                  Property2 = 2              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeMultipleObjects,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Property1 = new { SubProperty2 = 2 }'                  Property2 = 2              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = 1'                              Property2 = 2'                              Property3 = 3'                              Property4 = 4'                              Property5 = (object)null                          }                      }'                      new { }'                      3'                      null'                      5'                      null                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = 1'                              Property2 = 2'                              Property3 = 3'                              Property4 = 4'                              Property5 = (object)null                          }                      }'                      new { }'                      3'                      null'                      5'                      null                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = 1'                              Property2 = 2'                              Property3 = 3'                              Property4 = 4'                              Property5 = (object)null                          }                      }'                      new { }'                      3'                      null'                      5'                      null                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = 1'                              Property2 = 2'                              Property3 = 3'                              Property4 = 4'                              Property5 = (object)null                          }                      }'                      new { }'                      3'                      null'                      5'                      null                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = 1'                              Property2 = 2'                              Property3 = 3'                              Property4 = 4'                              Property5 = (object)null                          }                      }'                      new { }'                      3'                      null'                      5'                      null                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = (object)null'                              Property2 = 3'                              Property3 = new                              {                                }'                              Property5 = (object)null                          }                      }'                      null'                      null'                      4'                      5.1'                      null'                      new                      {                          Property1 = 1                      }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = (object)null'                              Property2 = 3'                              Property3 = new                              {                                }'                              Property5 = (object)null                          }                      }'                      null'                      null'                      4'                      5.1'                      null'                      new                      {                          Property1 = 1                      }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArray,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new                      {                          Property1 = new                          {                              Property1 = (object)null'                              Property2 = 3'                              Property3 = new                              {                                }'                              Property5 = (object)null                          }                      }'                      null'                      null'                      4'                      5.1'                      null'                      new                      {                          Property1 = 1                      }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,ConcatArray,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new { Property1 = 1 }'                      new { Property2 = 2 }'                      new { Property3 = 3 }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,ConcatArray,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new { Property1 = 1 }'                      new { Property2 = 2 }'                      new { Property3 = 3 }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeMismatchingTypesInArray,The following statement contains a magic number: var right = (JArray)JToken.FromObject(new object[]                  {                      1'                      5'                      new object[] { 1 }'                      new { Property1 = 1 }'                      true'                      new { Property1 = 1 }'                      null                  });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Nested,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      1'                      2'                      3                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Nested,The following statement contains a magic number: var left = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      1'                      2'                      3                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Nested,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      4'                      5                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Nested,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      4'                      5                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Root,The following statement contains a magic number: var left = (JArray)JToken.FromObject(new object[]              {                  1'                  2'                  3              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Root,The following statement contains a magic number: var left = (JArray)JToken.FromObject(new object[]              {                  1'                  2'                  3              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Root,The following statement contains a magic number: var right = (JArray)JToken.FromObject(new object[]              {                  4'                  5              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeArrayOverwrite_Root,The following statement contains a magic number: var right = (JArray)JToken.FromObject(new object[]              {                  4'                  5              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,UnionArrays,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new { Property1 = 1 }'                      new { Property2 = 2 }'                      new { Property3 = 3 }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,UnionArrays,The following statement contains a magic number: var right = (JObject)JToken.FromObject(new              {                  Array1 = new object[]                  {                      new { Property1 = 1 }'                      new { Property2 = 2 }'                      new { Property3 = 3 }                  }              });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJProperty,The following statement contains a magic number: JProperty p2 = new JProperty("p2"' 2);
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJProperty,The following statement contains a magic number: Assert.AreEqual(2' (int)p1.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJProperty,The following statement contains a magic number: Assert.AreEqual(2' (int)p1.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJProperty,The following statement contains a magic number: Assert.AreEqual(2' (int)p1.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: JConstructor c1 = new JConstructor("c1"' new[] { 1' 2 });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: JConstructor c2 = new JConstructor("c2"' new[] { 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: JConstructor c2 = new JConstructor("c2"' new[] { 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3' 4 }' c1.Select(i => (int)i));
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3' 4 }' c1.Select(i => (int)i));
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 1' 2' 3' 4 }' c1.Select(i => (int)i));
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: JConstructor c4 = new JConstructor("c4"' new[] { 5' 6 });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: JConstructor c4 = new JConstructor("c4"' new[] { 5' 6 });
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 5' 6 }' c1.Select(i => (int)i));
Magic Number,Newtonsoft.Json.Tests.Linq,MergeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\MergeTests.cs,MergeJConstructor,The following statement contains a magic number: CollectionAssert.AreEquivalent(new[] { 5' 6 }' c1.Select(i => (int)i));
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,Load,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(123)' constructor.Values().ElementAt(0)));
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,CreateWithMultiValue,The following statement contains a magic number: JConstructor constructor = new JConstructor("Test"' new List<int> { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,CreateWithMultiValue,The following statement contains a magic number: JConstructor constructor = new JConstructor("Test"' new List<int> { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,CreateWithMultiValue,The following statement contains a magic number: Assert.AreEqual(3' constructor.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,CreateWithMultiValue,The following statement contains a magic number: Assert.AreEqual(2' (int)constructor.Children().ElementAt(1));
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,CreateWithMultiValue,The following statement contains a magic number: Assert.AreEqual(3' (int)constructor.Children().ElementAt(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,CreateWithMultiValue,The following statement contains a magic number: Assert.AreEqual(3' (int)constructor.Children().ElementAt(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,Iterate,The following statement contains a magic number: JConstructor c = new JConstructor("MrConstructor"' 1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,Iterate,The following statement contains a magic number: JConstructor c = new JConstructor("MrConstructor"' 1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,Iterate,The following statement contains a magic number: JConstructor c = new JConstructor("MrConstructor"' 1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,Iterate,The following statement contains a magic number: JConstructor c = new JConstructor("MrConstructor"' 1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,SetValueWithInvalidIndex,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JConstructor c = new JConstructor();                  c["badvalue"] = new JValue(3);              }' @"Set JConstructor values with invalid key value: ""badvalue"". Argument position index expected.");
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,SetValue,The following statement contains a magic number: c[key] = new JValue(3);
Magic Number,Newtonsoft.Json.Tests.Linq,JConstructorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JConstructorTests.cs,SetValue,The following statement contains a magic number: Assert.AreEqual(3' (int)c[key]);
Magic Number,Newtonsoft.Json.Tests.Linq,JPropertyTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JPropertyTests.cs,MultiContentConstructor,The following statement contains a magic number: Assert.AreEqual(a.Count' 2);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,YahooFinance,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0))' jsonReader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDateTimeOffsetString,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2012' 1' 24' 3' 50' 0' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDateTimeOffsetString,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2012' 1' 24' 3' 50' 0' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDateTimeOffsetString,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2012' 1' 24' 3' 50' 0' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDateTimeOffsetString,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2012' 1' 24' 3' 50' 0' TimeSpan.Zero)' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(2' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(7' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(2' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(15' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(3' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(10' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(3' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(12' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(4' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(22' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(5' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(30' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(3' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadLineInfo,The following statement contains a magic number: Assert.AreEqual(12' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadBytesFromString,The following statement contains a magic number: var bytes = new HasBytes { Bytes = new byte[] { 1' 2' 3' 4 } };
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadBytesFromString,The following statement contains a magic number: var bytes = new HasBytes { Bytes = new byte[] { 1' 2' 3' 4 } };
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadBytesFromString,The following statement contains a magic number: var bytes = new HasBytes { Bytes = new byte[] { 1' 2' 3' 4 } };
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadBytesFromString,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 1' 2' 3' 4 }' result2.Bytes);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadBytesFromString,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 1' 2' 3' 4 }' result2.Bytes);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadBytesFromString,The following statement contains a magic number: CollectionAssert.AreEqual(new byte[] { 1' 2' 3' 4 }' result2.Bytes);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,DeserializeStringInt,The following statement contains a magic number: Assert.AreEqual(99' c.PreProperty);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,ReadAsDecimalString,The following statement contains a magic number: Assert.AreEqual(1.1m' reader.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,InitialPath_PropertyBase_ArrayToken,The following statement contains a magic number: JArray a = new JArray              {                  1' 2              };
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenReaderTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenReaderTest.cs,InitialPath_ArrayBase_ArrayToken,The following statement contains a magic number: JArray a = new JArray              {                  1' 2              };
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(10);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(10.99);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(0.99);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(0.000000000000000001d);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: jsonWriter.WriteValue(0.000000000000000001m);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(13' root.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(true' (bool)root[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(10' (int)root[3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(10' (int)root[3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(10.99' (double)root[4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(10.99' (double)root[4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(0.99' (double)root[5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(0.99' (double)root[5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(0.000000000000000001d' (double)root[6]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(0.000000000000000001d' (double)root[6]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(0.000000000000000001m' (decimal)root[7]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(0.000000000000000001m' (decimal)root[7]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(null' (string)root[8]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual("This is a string."' (string)root[9]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(null' ((JValue)root[10]).Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(null' ((JValue)root[11]).Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,ValueFormatting,The following statement contains a magic number: Assert.AreEqual(data' (byte[])root[12]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,DateTimeZoneHandling,The following statement contains a magic number: writer.WriteValue(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenWriterTest.cs,DateTimeZoneHandling,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)' dt);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,RemoveSpecificAndRemoveSelf,The following statement contains a magic number: JObject o = new JObject              {                  { "results"' new JArray(1' 2' 3' 4) }              };
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,RemoveSpecificAndRemoveSelf,The following statement contains a magic number: JObject o = new JObject              {                  { "results"' new JArray(1' 2' 3' 4) }              };
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,RemoveSpecificAndRemoveSelf,The following statement contains a magic number: JObject o = new JObject              {                  { "results"' new JArray(1' 2' 3' 4) }              };
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,RemoveSpecificAndRemoveSelf,The following statement contains a magic number: Assert.AreEqual(2' a.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Contains,The following statement contains a magic number: Assert.AreEqual(false' a.Contains(new JValue(2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: j.Add(new JValue(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: j.Add(new JValue(3));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(3' j.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: JToken[] a = new JToken[5];
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(2' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(2' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(3' (int)a[3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(3' (int)a[3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(null' a[4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The following statement contains a magic number: j.Add(new JValue(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The following statement contains a magic number: j.Add(new JValue(3));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { ((ICollection<JToken>)j).CopyTo(new JToken[3]' 1); }' @"The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.");
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,IndexOf,The following statement contains a magic number: Assert.AreEqual(2' j.IndexOf(v2));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Insert,The following statement contains a magic number: JValue v2 = new JValue(2);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Insert,The following statement contains a magic number: JValue v3 = new JValue(3);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Insert,The following statement contains a magic number: JValue v4 = new JValue(4);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Insert,The following statement contains a magic number: Assert.AreEqual(2' j.IndexOf(v2));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Insert,The following statement contains a magic number: Assert.AreEqual(3' j.IndexOf(v3));
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,AddFirstAddedTokenShouldBeFirst,The following statement contains a magic number: JValue v2 = new JValue(2);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,AddFirstAddedTokenShouldBeFirst,The following statement contains a magic number: JValue v3 = new JValue(3);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertShouldInsertAtZeroIndex,The following statement contains a magic number: JValue v2 = new JValue(2);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertOutOfRangeIndexShouldThrow,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => { j.Insert(2' new JValue(1)); }' @"Index must be within the bounds of the List.  Parameter name: index");
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Item,The following statement contains a magic number: JValue v2 = new JValue(2);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Item,The following statement contains a magic number: JValue v3 = new JValue(3);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Item,The following statement contains a magic number: JValue v4 = new JValue(4);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ArrayOrder,The following statement contains a magic number: IEnumerable<ListItemFields> t = new List<ListItemFields>              {                  new ListItemFields { ListItemText = "First"' ListItemValue = 1 }'                  new ListItemFields { ListItemText = "Second"' ListItemValue = 2 }'                  new ListItemFields { ListItemText = "Third"' ListItemValue = 3 }              };
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ArrayOrder,The following statement contains a magic number: IEnumerable<ListItemFields> t = new List<ListItemFields>              {                  new ListItemFields { ListItemText = "First"' ListItemValue = 1 }'                  new ListItemFields { ListItemText = "Second"' ListItemValue = 2 }'                  new ListItemFields { ListItemText = "Third"' ListItemValue = 3 }              };
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Iterate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Iterate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Iterate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,Iterate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,AddArrayToSelf,The following statement contains a magic number: JArray a = new JArray(1' 2);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,AddArrayToSelf,The following statement contains a magic number: Assert.AreEqual(3' a.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,AddArrayToSelf,The following statement contains a magic number: Assert.AreEqual(2' (int)a[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,AddArrayToSelf,The following statement contains a magic number: Assert.AreNotSame(a' a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,SetValueWithInvalidIndex,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JArray a = new JArray();                  a["badvalue"] = new JValue(3);              }' @"Set JArray values with invalid key value: ""badvalue"". Array position index expected.");
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,SetValue,The following statement contains a magic number: a[key] = new JValue(3);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,SetValue,The following statement contains a magic number: Assert.AreEqual(3' (int)a[key]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ReplaceAll,The following statement contains a magic number: JArray a = new JArray(new[] { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ReplaceAll,The following statement contains a magic number: JArray a = new JArray(new[] { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ReplaceAll,The following statement contains a magic number: Assert.AreEqual(3' a.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ReplaceAll,The following statement contains a magic number: Assert.AreEqual(2' (int)a[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ReplaceAll,The following statement contains a magic number: Assert.AreEqual(3' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,ReplaceAll,The following statement contains a magic number: Assert.AreEqual(3' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertAddEnd,The following statement contains a magic number: array.Insert(0' 123);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertAddEnd,The following statement contains a magic number: array.Insert(1' 456);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertAddEnd,The following statement contains a magic number: Assert.AreEqual(2' array.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertAddEnd,The following statement contains a magic number: Assert.AreEqual(123' (int)array[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JArrayTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JArrayTests.cs,InsertAddEnd,The following statement contains a magic number: Assert.AreEqual(456' (int)array[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ReadWithSupportMultipleContent,The following statement contains a magic number: Assert.AreEqual(2' roles.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DictionaryItemShouldSet,The following statement contains a magic number: o["PropertyNameValue"] = new JValue(2);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DictionaryItemShouldSet,The following statement contains a magic number: Assert.AreEqual(true' JToken.DeepEquals(new JValue(2)' t));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionRemove,The following statement contains a magic number: Assert.AreEqual(false' ((ICollection<KeyValuePair<string' JToken>>)o).Remove(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(2))));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericDictionaryAdd,The following statement contains a magic number: Assert.AreEqual(2' o.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionContains,The following statement contains a magic number: contains = ((ICollection<KeyValuePair<string' JToken>>)o).Contains(new KeyValuePair<string' JToken>("PropertyNameValue"' new JValue(2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: o.Add("PropertyNameValue2"' new JValue(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: o.Add("PropertyNameValue3"' new JValue(3));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(3' o.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: KeyValuePair<string' JToken>[] a = new KeyValuePair<string' JToken>[5];
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual("PropertyNameValue2"' a[2].Key);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(2' (int)a[2].Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(2' (int)a[2].Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual("PropertyNameValue3"' a[3].Key);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(3' (int)a[3].Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(3' (int)a[3].Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyTo,The following statement contains a magic number: Assert.AreEqual(default(KeyValuePair<string' JToken>)' a[4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JObject o = new JObject();                  o.Add("PropertyNameValue"' new JValue(1));                  o.Add("PropertyNameValue2"' new JValue(2));                  o.Add("PropertyNameValue3"' new JValue(3));                    ((ICollection<KeyValuePair<string' JToken>>)o).CopyTo(new KeyValuePair<string' JToken>[3]' 1);              }' @"The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.");
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JObject o = new JObject();                  o.Add("PropertyNameValue"' new JValue(1));                  o.Add("PropertyNameValue2"' new JValue(2));                  o.Add("PropertyNameValue3"' new JValue(3));                    ((ICollection<KeyValuePair<string' JToken>>)o).CopyTo(new KeyValuePair<string' JToken>[3]' 1);              }' @"The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.");
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericCollectionCopyToInsufficientArrayCapacity,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JObject o = new JObject();                  o.Add("PropertyNameValue"' new JValue(1));                  o.Add("PropertyNameValue2"' new JValue(2));                  o.Add("PropertyNameValue3"' new JValue(3));                    ((ICollection<KeyValuePair<string' JToken>>)o).CopyTo(new KeyValuePair<string' JToken>[3]' 1);              }' @"The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.");
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ParseJavaScriptDate,The following statement contains a magic number: Assert.AreEqual(DateTimeUtils.ConvertJavaScriptTicksToDateTime(1207285200000)' (DateTime)v);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,Iterate,The following statement contains a magic number: o.Add("PropertyNameValue2"' new JValue(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,KeyValuePairIterate,The following statement contains a magic number: o.Add("PropertyNameValue2"' new JValue(2));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,JObjectContainingHtml,The following statement contains a magic number: o["rc"] = new JValue(200);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ImplicitValueConversions,The following statement contains a magic number: moss["BirthDate"] = new JValue(new DateTime(1977' 12' 30));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ImplicitValueConversions,The following statement contains a magic number: moss["BirthDate"] = new JValue(new DateTime(1977' 12' 30));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ImplicitValueConversions,The following statement contains a magic number: moss["BirthDate"] = new JValue(new DateTime(1977' 12' 30));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ImplicitValueConversions,The following statement contains a magic number: jen["BirthDate"] = new DateTime(1978' 3' 15);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ImplicitValueConversions,The following statement contains a magic number: jen["BirthDate"] = new DateTime(1978' 3' 15);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ImplicitValueConversions,The following statement contains a magic number: jen["BirthDate"] = new DateTime(1978' 3' 15);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ReplaceJPropertyWithJPropertyWithSameName,The following statement contains a magic number: Assert.AreEqual(2' l.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,ReplaceJPropertyWithJPropertyWithSameName,The following statement contains a magic number: Assert.AreEqual(2' o.Properties().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,PropertyChanged,The following statement contains a magic number: Assert.AreEqual(2' changedCount);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,PropertyChanged,The following statement contains a magic number: Assert.AreEqual(3' changedCount);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,PropertyChanged,The following statement contains a magic number: Assert.AreEqual(4' changedCount);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,PropertyChanged,The following statement contains a magic number: Assert.AreEqual(4' changedCount);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,IListAdd,The following statement contains a magic number: Assert.AreEqual(3' l.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,IListAdd,The following statement contains a magic number: Assert.AreEqual(p3' l[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,IListRemove,The following statement contains a magic number: Assert.AreEqual(2' l.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,IListInsert,The following statement contains a magic number: Assert.AreEqual(p2' l[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericListJTokenAdd,The following statement contains a magic number: Assert.AreEqual(3' l.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericListJTokenAdd,The following statement contains a magic number: Assert.AreEqual(p3' l[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericListJTokenRemove,The following statement contains a magic number: Assert.AreEqual(2' l.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,GenericListJTokenInsert,The following statement contains a magic number: Assert.AreEqual(p2' l[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,SetValueWithInvalidPropertyName,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JObject o = new JObject();                  o[0] = new JValue(3);              }' "Set JObject values with invalid key value: 0. Object property name expected.");
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,SetValue,The following statement contains a magic number: o[key] = new JValue(3);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,SetValue,The following statement contains a magic number: Assert.AreEqual(3' (int)o[key]);
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o1 = new JObject(                  new JProperty("null"' null)'                  new JProperty("integer"' 1)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o1 = new JObject(                  new JProperty("null"' null)'                  new JProperty("integer"' 1)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o2 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 1)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o2 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 1)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o3 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 2)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o3 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 2)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o3 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 2)'                  new JProperty("array"' new JArray(1' 2)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o4 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 1)'                  new JProperty("array"' new JArray(2' 1)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o4 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 1)'                  new JProperty("array"' new JArray(2' 1)));
Magic Number,Newtonsoft.Json.Tests.Linq,JObjectTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JObjectTests.cs,DeepEqualsIgnoreOrder,The following statement contains a magic number: JObject o5 = new JObject(                  new JProperty("null"' null)'                  new JProperty("string"' "string!")'                  new JProperty("decimal"' 0.5m)'                  new JProperty("integer"' 1));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenEqualityComparerTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenEqualityComparerTests.cs,CompareEmptyProperties,The following statement contains a magic number: o1["hi"] = 10;
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenEqualityComparerTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenEqualityComparerTests.cs,JValueDictionary,The following statement contains a magic number: Assert.AreEqual(2' dic[v11]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenEqualityComparerTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenEqualityComparerTests.cs,JArrayDictionary,The following statement contains a magic number: Assert.AreEqual(2' dic[v11]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenEqualityComparerTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenEqualityComparerTests.cs,JObjectDictionary,The following statement contains a magic number: Assert.AreEqual(2' dic[v11]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenEqualityComparerTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenEqualityComparerTests.cs,JConstructorDictionary,The following statement contains a magic number: Assert.AreEqual(2' dic[v11]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ReadFrom,The following statement contains a magic number: Assert.AreEqual(2' (int)a[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ReadFrom,The following statement contains a magic number: Assert.AreEqual(3' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ReadFrom,The following statement contains a magic number: Assert.AreEqual(3' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ReadFrom,The following statement contains a magic number: Assert.AreEqual(1.1' (double)v);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ReadFrom,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks' new TimeSpan(12' 31' 0))' v.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ReadFrom,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks' new TimeSpan(12' 31' 0))' v.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Parent,The following statement contains a magic number: JArray v = new JArray(new JConstructor("TestConstructor")' new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Parent,The following statement contains a magic number: JArray v = new JArray(new JConstructor("TestConstructor")' new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Parent,The following statement contains a magic number: JArray v = new JArray(new JConstructor("TestConstructor")' new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: Assert.AreEqual(6' (int)next);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(7' 8)' next));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(7' 8)' next));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(9' 10)' next));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Next,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(9' 10)' next));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: JToken previous = a[3].Previous;
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(7' 8)' previous));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(7' 8)' previous));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: Assert.AreEqual(6' (int)previous);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Previous,The following statement contains a magic number: Assert.AreEqual(5' (int)previous);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Children,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Children,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Children,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Children,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Children,The following statement contains a magic number: Assert.AreEqual(4' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Children,The following statement contains a magic number: Assert.AreEqual(3' a.Children<JArray>().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: Assert.AreEqual(5' (int)a[1].Previous);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: Assert.AreEqual(2' a[2].BeforeSelf().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeAfter,The following statement contains a magic number: Assert.AreEqual(2' a[2].BeforeSelf().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(2L' (long)new JArray(1' 2' 3)[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(2L' (long)new JArray(1' 2' 3)[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(2L' (long)new JArray(1' 2' 3)[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20)' (DateTime)new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20)' (DateTime)new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20)' (DateTime)new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20)' (DateTime)new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20)' (DateTime)new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20)' (DateTime)new JValue(new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 0' 0' 0' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTime(2000' 12' 20' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)' (DateTimeOffset)new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(10' (long)new JValue(10));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(10' (long)new JValue(10));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(11.1f' (float)new JValue(11.1));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(11.1f' (float)new JValue(11.1));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(1.1' (double)new JValue(1.1));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(1.1' (double)new JValue(1.1));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5m' (decimal)(new JValue(5L)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5m' (decimal)(new JValue(5L)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5m' (decimal?)(new JValue(5L)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5m' (decimal?)(new JValue(5L)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5f' (float)(new JValue(5L)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5f' (float)(new JValue(5L)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5f' (float)(new JValue(5m)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5f' (float)(new JValue(5m)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5f' (float?)(new JValue(5m)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5f' (float?)(new JValue(5m)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5' (byte)(new JValue(5)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5' (byte)(new JValue(5)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12"' (string)(new JValue(new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12"' (string)(new JValue(new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12"' (string)(new JValue(new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12"' (string)(new JValue(new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12"' (string)(new JValue(new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12"' (string)(new JValue(new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual("12/12/2000 12:12:12 +00:00"' (string)(new JValue(new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero))));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Casting,The following statement contains a magic number: Assert.AreEqual(5' (int)(new JValue(StringComparison.OrdinalIgnoreCase)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1); }' "Can not convert Float to DateTime.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (DateTime)new JValue(1.1m); }' "Can not convert Float to DateTime.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1); }' "Can not convert Float to Uri.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Uri)new JValue(1.1m); }' "Can not convert Float to Uri.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1); }' "Can not convert Float to TimeSpan.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (TimeSpan)new JValue(1.1m); }' "Can not convert Float to TimeSpan.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1); }' "Can not convert Float to Guid.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,FailedCasting,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() => { var i = (Guid)new JValue(1.1m); }' "Can not convert Float to Guid.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000' 12' 20))' (JValue)new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000' 12' 20))' (JValue)new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000' 12' 20))' (JValue)new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000' 12' 20))' (JValue)new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000' 12' 20))' (JValue)new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTime(2000' 12' 20))' (JValue)new DateTime(2000' 12' 20)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero))' (JValue)new DateTimeOffset(2000' 12' 20' 23' 50' 10' TimeSpan.Zero)));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(10)' (JValue)10));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(10)' (JValue)10));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f)' (JValue)11.1f));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ImplicitCastingTo,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(11.1f)' (JValue)11.1f));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Root,The following statement contains a magic number: Assert.AreEqual(a' ((JArray)a[2])[0].Root);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      6'                      new JArray(7' 8)'                      new JArray(9' 10)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: Assert.AreEqual(6' (int)a[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: Assert.AreEqual(6' (int)a[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(9' 10)' a[1]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(9' 10)' a[1]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: Assert.AreEqual(2' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Remove,The following statement contains a magic number: Assert.AreEqual(6' (int)a[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: Assert.AreEqual(2' afterTokens.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2)' afterTokens[0]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' afterTokens[1]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AfterSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' afterTokens[1]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: JToken t = a[2];
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: Assert.AreEqual(2' beforeTokens.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,BeforeSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(5)' beforeTokens[0]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,HasValues,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,HasValues,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,HasValues,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,HasValues,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors,The following statement contains a magic number: Assert.AreEqual(2' ancestors.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf,The following statement contains a magic number: Assert.AreEqual(3' ancestors.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf,The following statement contains a magic number: Assert.AreEqual(a' ancestors[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(6' ancestors.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(a' ancestors[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(t2' ancestors[3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(o.Property("prop1")' ancestors[4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AncestorsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(o' ancestors[5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: Assert.AreEqual(4' ancestors.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: Assert.AreEqual(o.Property("prop1")' ancestors[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Ancestors_Many,The following statement contains a magic number: Assert.AreEqual(o' ancestors[3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.AreEqual(10' descendants.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.AreEqual(5' (int)descendants[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendants[descendants.Count - 4]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendants[descendants.Count - 4]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendants[descendants.Count - 4]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.AreEqual(1' (int)descendants[descendants.Count - 3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.AreEqual(2' (int)descendants[descendants.Count - 2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.AreEqual(2' (int)descendants[descendants.Count - 2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants,The following statement contains a magic number: Assert.AreEqual(3' (int)descendants[descendants.Count - 1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(12' descendants.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(5' (int)descendants[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendants[descendants.Count - 6]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendants[descendants.Count - 6]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendants[descendants.Count - 6]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(1' (int)descendants[descendants.Count - 5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(2' (int)descendants[descendants.Count - 4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(2' (int)descendants[descendants.Count - 4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(3' (int)descendants[descendants.Count - 3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(3' (int)descendants[descendants.Count - 3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Descendants_Many,The following statement contains a magic number: Assert.AreEqual(o.Property("prop1")' descendants[descendants.Count - 2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.AreEqual(11' descendantsAndSelf.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.AreEqual(5' (int)descendantsAndSelf[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendantsAndSelf[descendantsAndSelf.Count - 4]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendantsAndSelf[descendantsAndSelf.Count - 4]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendantsAndSelf[descendantsAndSelf.Count - 4]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.AreEqual(1' (int)descendantsAndSelf[descendantsAndSelf.Count - 3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.AreEqual(2' (int)descendantsAndSelf[descendantsAndSelf.Count - 2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.AreEqual(2' (int)descendantsAndSelf[descendantsAndSelf.Count - 2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf,The following statement contains a magic number: Assert.AreEqual(3' (int)descendantsAndSelf[descendantsAndSelf.Count - 1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(14' descendantsAndSelf.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(5' (int)descendantsAndSelf[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendantsAndSelf[descendantsAndSelf.Count - 7]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendantsAndSelf[descendantsAndSelf.Count - 7]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' descendantsAndSelf[descendantsAndSelf.Count - 7]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(1' (int)descendantsAndSelf[descendantsAndSelf.Count - 6]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(2' (int)descendantsAndSelf[descendantsAndSelf.Count - 5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(2' (int)descendantsAndSelf[descendantsAndSelf.Count - 5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(3' (int)descendantsAndSelf[descendantsAndSelf.Count - 4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(3' (int)descendantsAndSelf[descendantsAndSelf.Count - 4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(o' descendantsAndSelf[descendantsAndSelf.Count - 3]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DescendantsAndSelf_Many,The following statement contains a magic number: Assert.AreEqual(o.Property("prop1")' descendantsAndSelf[descendantsAndSelf.Count - 2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: Assert.AreEqual(4' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: Assert.AreEqual("String"' (string)a[4]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: Assert.AreEqual(6' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,CreateWriter,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("Property"' "PropertyValue"))' a[5]));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddFirst,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddFirst,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddFirst,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddFirst,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddFirst,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddFirst,The following statement contains a magic number: Assert.AreEqual(6' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,RemoveAll,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,RemoveAll,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,RemoveAll,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,RemoveAll,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,RemoveAll,The following statement contains a magic number: Assert.AreEqual(5' (int)first);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddValueToObject,The following statement contains a magic number: ExceptionAssert.Throws<ArgumentException>(() =>              {                  JObject o = new JObject();                  o.Add(5);              }' "Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: Assert.AreEqual(4' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: a[2].Replace(new JValue(int.MaxValue));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: Assert.AreEqual(int.MaxValue' (int)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: Assert.AreEqual(4' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue' new JArray("Test")' int.MaxValue' new JArray(1' 2' 3))' a));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Replace,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue' new JArray("Test")' int.MaxValue' new JArray(1' 2' 3))' a));
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToStringWithConverters,The following statement contains a magic number: JArray a =                  new JArray(                      new JValue(new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToStringWithConverters,The following statement contains a magic number: JArray a =                  new JArray(                      new JValue(new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToStringWithConverters,The following statement contains a magic number: JArray a =                  new JArray(                      new JValue(new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToStringWithNoIndenting,The following statement contains a magic number: JArray a =                  new JArray(                      new JValue(new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToStringWithNoIndenting,The following statement contains a magic number: JArray a =                  new JArray(                      new JValue(new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,ToStringWithNoIndenting,The following statement contains a magic number: JArray a =                  new JArray(                      new JValue(new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: Assert.AreEqual(5' (int)a[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: Assert.AreEqual("pie"' (string)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: a[4].AddAfterSelf("lastpie");
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddAfterSelf,The following statement contains a magic number: Assert.AreEqual("lastpie"' (string)a[5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual(5' (int)a[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual(a[2]' a[1].Next);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual(5' (int)a[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual("pie"' (string)a[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual(6' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual("secondlastpie"' (string)a[5]);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,AddBeforeSelf,The following statement contains a magic number: Assert.AreEqual(7' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DeepClone,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)'                      new JObject(                          new JProperty("First"' new JValue(Encoding.UTF8.GetBytes("Hi")))'                          new JProperty("Second"' 1)'                          new JProperty("Third"' null)'                          new JProperty("Fourth"' new JConstructor("Date"' 12345))'                          new JProperty("Fifth"' double.PositiveInfinity)'                          new JProperty("Sixth"' double.NaN)                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DeepClone,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)'                      new JObject(                          new JProperty("First"' new JValue(Encoding.UTF8.GetBytes("Hi")))'                          new JProperty("Second"' 1)'                          new JProperty("Third"' null)'                          new JProperty("Fourth"' new JConstructor("Date"' 12345))'                          new JProperty("Fifth"' double.PositiveInfinity)'                          new JProperty("Sixth"' double.NaN)                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DeepClone,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)'                      new JObject(                          new JProperty("First"' new JValue(Encoding.UTF8.GetBytes("Hi")))'                          new JProperty("Second"' 1)'                          new JProperty("Third"' null)'                          new JProperty("Fourth"' new JConstructor("Date"' 12345))'                          new JProperty("Fifth"' double.PositiveInfinity)'                          new JProperty("Sixth"' double.NaN)                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DeepClone,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)'                      new JObject(                          new JProperty("First"' new JValue(Encoding.UTF8.GetBytes("Hi")))'                          new JProperty("Second"' 1)'                          new JProperty("Third"' null)'                          new JProperty("Fourth"' new JConstructor("Date"' 12345))'                          new JProperty("Fifth"' double.PositiveInfinity)'                          new JProperty("Sixth"' double.NaN)                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DeepClone,The following statement contains a magic number: JArray a =                  new JArray(                      5'                      new JArray(1)'                      new JArray(1' 2)'                      new JArray(1' 2' 3)'                      new JObject(                          new JProperty("First"' new JValue(Encoding.UTF8.GetBytes("Hi")))'                          new JProperty("Second"' 1)'                          new JProperty("Third"' null)'                          new JProperty("Fourth"' new JConstructor("Date"' 12345))'                          new JProperty("Fifth"' double.PositiveInfinity)'                          new JProperty("Sixth"' double.NaN)                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DoubleDeepEquals,The following statement contains a magic number: double d = 1 + 0.1 + 0.1 + 0.1;
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DoubleDeepEquals,The following statement contains a magic number: double d = 1 + 0.1 + 0.1 + 0.1;
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DoubleDeepEquals,The following statement contains a magic number: double d = 1 + 0.1 + 0.1 + 0.1;
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,DoubleDeepEquals,The following statement contains a magic number: JValue v2 = new JValue(1.3);
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Path,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new JArray(1' 2' 3))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' new JObject(new JProperty("Test1"' new JArray(1' new JObject(new JProperty("Test1"' 1))' 3))))'                      new JProperty("Test4"' new JConstructor("Date"' new JArray(1' 2' 3)))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Path,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new JArray(1' 2' 3))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' new JObject(new JProperty("Test1"' new JArray(1' new JObject(new JProperty("Test1"' 1))' 3))))'                      new JProperty("Test4"' new JConstructor("Date"' new JArray(1' 2' 3)))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Path,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new JArray(1' 2' 3))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' new JObject(new JProperty("Test1"' new JArray(1' new JObject(new JProperty("Test1"' 1))' 3))))'                      new JProperty("Test4"' new JConstructor("Date"' new JArray(1' 2' 3)))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Path,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new JArray(1' 2' 3))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' new JObject(new JProperty("Test1"' new JArray(1' new JObject(new JProperty("Test1"' 1))' 3))))'                      new JProperty("Test4"' new JConstructor("Date"' new JArray(1' 2' 3)))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JTokenTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JTokenTests.cs,Path,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new JArray(1' 2' 3))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' new JObject(new JProperty("Test1"' new JArray(1' new JObject(new JProperty("Test1"' 1))' 3))))'                      new JProperty("Test4"' new JConstructor("Date"' new JArray(1' 2' 3)))                      );
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,FloatParseHandling,The following statement contains a magic number: Assert.AreEqual(9.9m' v.Value);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The following statement contains a magic number: v = new JValue(new DateTime(2000' 12' 12' 20' 59' 59' DateTimeKind.Utc)' JTokenType.Date);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The following statement contains a magic number: v = new JValue(new DateTime(2000' 12' 12' 20' 59' 59' DateTimeKind.Utc)' JTokenType.Date);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The following statement contains a magic number: v = new JValue(new DateTime(2000' 12' 12' 20' 59' 59' DateTimeKind.Utc)' JTokenType.Date);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The following statement contains a magic number: v = new JValue(new DateTime(2000' 12' 12' 20' 59' 59' DateTimeKind.Utc)' JTokenType.Date);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The following statement contains a magic number: v = new JValue(new DateTime(2000' 12' 12' 20' 59' 59' DateTimeKind.Utc)' JTokenType.Date);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,JValueToString,The following statement contains a magic number: v = new JValue(new DateTime(2000' 12' 12' 20' 59' 59' DateTimeKind.Utc)' JTokenType.Date);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,DeepEquals,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(5L)' new JValue(5)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,DeepEquals,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JValue(5L)' new JValue(5)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,DeepEquals,The following statement contains a magic number: Assert.IsFalse(JToken.DeepEquals(new JValue(5M)' new JValue(5)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,DeepEquals,The following statement contains a magic number: Assert.IsFalse(JToken.DeepEquals(new JValue(5M)' new JValue(5)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,HasValues,The following statement contains a magic number: Assert.IsFalse((new JValue(5L)).HasValues);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,SetValue,The following statement contains a magic number: ExceptionAssert.Throws<InvalidOperationException>(() =>              {                  JToken t = new JValue(5L);                  t[0] = new JValue(3);              }' "Cannot set child value on Newtonsoft.Json.Linq.JValue.");
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,SetValue,The following statement contains a magic number: ExceptionAssert.Throws<InvalidOperationException>(() =>              {                  JToken t = new JValue(5L);                  t[0] = new JValue(3);              }' "Cannot set child value on Newtonsoft.Json.Linq.JValue.");
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,Ordering,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Integer"' new JValue(1))'                  new JProperty("Float"' new JValue(1.2d))'                  new JProperty("Decimal"' new JValue(1.1m))                  );
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,Ordering,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Integer"' new JValue(1))'                  new JProperty("Float"' new JValue(1.2d))'                  new JProperty("Decimal"' new JValue(1.1m))                  );
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,Ordering,The following statement contains a magic number: Assert.AreEqual(1.1m' orderedValues[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,Ordering,The following statement contains a magic number: Assert.AreEqual(1.2d' orderedValues[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,Ordering,The following statement contains a magic number: Assert.AreEqual(1.2d' orderedValues[2]);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,WriteSingle,The following statement contains a magic number: float f = 5.2f;
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,SetDateTimeOffsetProperty,The following statement contains a magic number: var dateTimeOffset = new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(3));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,SetDateTimeOffsetProperty,The following statement contains a magic number: var dateTimeOffset = new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(3));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDecimal_Int64,The following statement contains a magic number: Assert.AreEqual(123' Convert.ToDecimal(new JValue(123)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDecimal_Int64,The following statement contains a magic number: Assert.AreEqual(123' Convert.ToDecimal(new JValue(123)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04))));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: var offset = new DateTimeOffset(2013' 02' 01' 01' 02' 03' 04' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: var offset = new DateTimeOffset(2013' 02' 01' 01' 02' 03' 04' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: var offset = new DateTimeOffset(2013' 02' 01' 01' 02' 03' 04' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: var offset = new DateTimeOffset(2013' 02' 01' 01' 02' 03' 04' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: var offset = new DateTimeOffset(2013' 02' 01' 01' 02' 03' 04' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(offset)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(offset)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(offset)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(offset)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ConvertsToDateTime_DateTimeOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2013' 02' 01' 01' 02' 03' 04)' Convert.ToDateTime(new JValue(offset)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToType,The following statement contains a magic number: IConvertible v = new JValue(9.0m);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToType,The following statement contains a magic number: Assert.AreEqual(9' i);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToType,The following statement contains a magic number: Assert.AreEqual(new BigInteger(9)' bi);
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToStringFormat,The following statement contains a magic number: JValue v = new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToStringFormat,The following statement contains a magic number: JValue v = new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToStringFormat,The following statement contains a magic number: JValue v = new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToStringFormat,The following statement contains a magic number: JValue v = new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ToStringFormat,The following statement contains a magic number: JValue v = new JValue(new DateTime(2013' 02' 01' 01' 02' 03' 04));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12).Add(TimeSpan.FromMinutes(30)));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,JValueTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JValueTests.cs,ParseIsoTimeZones,The following statement contains a magic number: DateTimeOffset expectedDate2 = new DateTimeOffset(2013' 08' 14' 4' 38' 31' TimeSpan.FromHours(12));
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CommentsAndReadFrom,The following statement contains a magic number: Assert.AreEqual(4' a.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,StartingCommentAndReadFrom,The following statement contains a magic number: Assert.AreEqual(3' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,StartingUndefinedAndReadFrom,The following statement contains a magic number: Assert.AreEqual(2' lineInfo.LineNumber);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,StartingUndefinedAndReadFrom,The following statement contains a magic number: Assert.AreEqual(10' lineInfo.LinePosition);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DoubleValue,The following statement contains a magic number: Assert.AreEqual(-10000d' value);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,Manual,The following statement contains a magic number: JValue date = new JValue(new DateTime(2000' 5' 23));
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,Manual,The following statement contains a magic number: JValue date = new JValue(new DateTime(2000' 5' 23));
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,Manual,The following statement contains a magic number: JValue date = new JValue(new DateTime(2000' 5' 23));
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,LinqToJsonDeserialize,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Name"' "John Smith")'                  new JProperty("BirthDate"' new DateTime(1983' 3' 20))                  );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,LinqToJsonDeserialize,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Name"' "John Smith")'                  new JProperty("BirthDate"' new DateTime(1983' 3' 20))                  );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,LinqToJsonDeserialize,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Name"' "John Smith")'                  new JProperty("BirthDate"' new DateTime(1983' 3' 20))                  );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ObjectParse,The following statement contains a magic number: Assert.AreEqual(2' list.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateLongArray,The following statement contains a magic number: List<int> expected = new List<int>() { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The following statement contains a magic number: Assert.AreEqual(32' resultObjects.Properties().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The following statement contains a magic number: Assert.AreEqual(32' resultObjects.Cast<JToken>().Values().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The following statement contains a magic number: Assert.AreEqual(4' resultObjects.Cast<JToken>().Values("GsearchResultClass").Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The following statement contains a magic number: Assert.AreEqual(5' o.PropertyValues().Cast<JArray>().Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,GoogleSearchAPI,The following statement contains a magic number: Assert.AreEqual(89' descendants.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: Assert.AreEqual(4' o.Properties().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: JArray a =                  new JArray(                      o'                      new DateTime(2000' 10' 10' 0' 0' 0' DateTimeKind.Utc)'                      55'                      new JArray(                          "1"'                          2'                          3.0'                          new DateTime(4' 5' 6' 7' 8' 9' DateTimeKind.Utc)                          )'                      new JConstructor(                          "ConstructorName"'                          "param1"'                          2'                          3.0                          )                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTree,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,QueryingExample,The following statement contains a magic number: IList<JToken> since2012 = posts                  .Where(p => (DateTime)p["Date"] > new DateTime(2012' 1' 1)).ToList();
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,QueryingExample,The following statement contains a magic number: Assert.AreEqual(2' since2012.Count);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTreeNested,The following statement contains a magic number: Assert.AreEqual(2' categories.ElementAt(0).Count);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTreeNested,The following statement contains a magic number: Assert.AreEqual("LINQ"' categories.ElementAt(2).Category);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,CreateJTokenTreeNested,The following statement contains a magic number: Assert.AreEqual(1' categories.ElementAt(2).Count);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,BasicQuerying,The following statement contains a magic number: Assert.AreEqual(2' o["channel"]["item"].Children()["title"].Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ToStringJsonConverter,The following statement contains a magic number: JObject o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' new DateTimeOffset(2000' 10' 15' 5' 5' 5' new TimeSpan(11' 11' 0)))'                      new JProperty("Test3"' "Test3Value")'                      new JProperty("Test4"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,DateTimeOffset,The following statement contains a magic number: Assert.AreEqual(4' jsonWriter.Token.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromObject,The following statement contains a magic number: Assert.AreEqual(2' o["channel"]["item"].Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromObject,The following statement contains a magic number: JArray a = JArray.FromObject(new List<int>() { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromObject,The following statement contains a magic number: JArray a = JArray.FromObject(new List<int>() { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromObject,The following statement contains a magic number: JArray a = JArray.FromObject(new List<int>() { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromObject,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromAnonDictionary,The following statement contains a magic number: Assert.AreEqual(2' o["channel"]["item"].Children().Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromAnonDictionary,The following statement contains a magic number: JArray a = JArray.FromObject(new List<int>() { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromAnonDictionary,The following statement contains a magic number: JArray a = JArray.FromObject(new List<int>() { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromAnonDictionary,The following statement contains a magic number: JArray a = JArray.FromObject(new List<int>() { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,FromAnonDictionary,The following statement contains a magic number: Assert.AreEqual(5' a.Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: o =                  new JObject(                      new JProperty("Test1"' new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc))'                      new JProperty("Test2"' "Test2Value")'                      new JProperty("Test3"' null)                      );
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' d);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' d);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' d);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' d);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' d);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,AsJEnumerable,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 10' 15' 5' 5' 5' DateTimeKind.Utc)' d);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,LinqCast,The following statement contains a magic number: Assert.AreEqual(12' list1[0]);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,LinqCast,The following statement contains a magic number: Assert.AreEqual(55' list1[1]);
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ChildrenExtension,The following statement contains a magic number: Assert.AreEqual(4' o.Children()["item"].Children()["title"].Count());
Magic Number,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,SerializeWithNoRedundentIdPropertiesTest,The following statement contains a magic number: dic1.Add("integer"' 12345);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,ParseWithEmptyArrayContent,The following statement contains a magic number: Assert.AreEqual(3' tokens.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,ParseWithEmptyArrayContent,The following statement contains a magic number: Assert.AreEqual("Name"' (string)tokens[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateDollarTypeString,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("$values"' new JArray(1' 2' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateDollarTypeString,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("$values"' new JArray(1' 2' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateDollarTypeString,The following statement contains a magic number: Assert.AreEqual(2' (int)t);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardProperty,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Blah"' 1)'                  new JProperty("Blah2"' 2));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardProperty,The following statement contains a magic number: Assert.AreEqual(2' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardProperty,The following statement contains a magic number: Assert.AreEqual(2' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultipleResultsError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultipleResultsError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultipleResultsError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultipleResultsError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluatePropertyOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateNoResultsWithMultipleArrayIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateNoResultsWithMultipleArrayIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateNoResultsWithMultipleArrayIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateNoResultsWithMultipleArrayIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultiPropertyIndexOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultiPropertyIndexOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultiPropertyIndexOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateMultiPropertyIndexOnArrayWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySliceWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateOutOfBoundsIndxer,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateOutOfBoundsIndxer,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateOutOfBoundsIndxer,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateOutOfBoundsIndxer,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayOutOfBoundsIndxerWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayOutOfBoundsIndxerWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayOutOfBoundsIndxerWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayOutOfBoundsIndxerWithError,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArray,The following statement contains a magic number: Assert.AreEqual(2' (int)t);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(3' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(7' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(8' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(9' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(9' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(9' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(8' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(2' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(9' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(9' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(8' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(7' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(7' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(6' (int)t[3]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(6' (int)t[3]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(5' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(5' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(4' (int)t[5]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(4' (int)t[5]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(3' (int)t[6]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(3' (int)t[6]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(2' (int)t[7]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(2' (int)t[7]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(1' (int)t[8]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(5' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(9' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(7' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(5' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(5' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(3' (int)t[3]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(3' (int)t[3]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArraySlice,The following statement contains a magic number: Assert.AreEqual(1' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: Assert.AreEqual(4' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: Assert.AreEqual(2' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: Assert.AreEqual(3' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: Assert.AreEqual(3' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: Assert.AreEqual(4' (int)t[3]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardArray,The following statement contains a magic number: Assert.AreEqual(4' (int)t[3]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: Assert.AreEqual(3' t.Count());
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: Assert.AreEqual(2' (int)t.ElementAt(0));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: Assert.AreEqual(3' (int)t.ElementAt(1));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateArrayMultipleIndexes,The following statement contains a magic number: Assert.AreEqual(1' (int)t.ElementAt(2));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScan,The following statement contains a magic number: JObject o2 = new JObject { { "Name"' 2 } };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScan,The following statement contains a magic number: Assert.AreEqual(2' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScan,The following statement contains a magic number: Assert.AreEqual(2' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScan,The following statement contains a magic number: JObject o2 = new JObject { { "Name"' 2 } };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScan,The following statement contains a magic number: Assert.AreEqual(5' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScan,The following statement contains a magic number: Assert.AreEqual(1' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScan,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(o2' t[3]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScan,The following statement contains a magic number: Assert.AreEqual(2' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScan,The following statement contains a magic number: Assert.AreEqual(2' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: JObject o2 = new JObject { { "Name"' 2 } };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: JObject o3 = new JObject { { "Name"' new JObject { { "Name"' new JArray(3) } } } };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: Assert.AreEqual(4' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: Assert.AreEqual(2' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject { { "Name"' new JArray(3) } }' t[2]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject { { "Name"' new JArray(3) } }' t[2]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(3)' t[3]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(3)' t[3]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: JObject o2 = new JObject { { "Name"' 2 } };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: JObject o3 = new JObject { { "Name"' new JObject { { "Name"' new JArray(3) } } } };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.AreEqual(9' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.AreEqual(1' (int)t[2]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(o2' t[3]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.AreEqual(2' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.AreEqual(2' (int)t[4]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(o3' t[5]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject { { "Name"' new JArray(3) } }' t[6]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject { { "Name"' new JArray(3) } }' t[6]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(3)' t[7]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(3)' t[7]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.AreEqual(3' (int)t[8]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateWildcardScanNestResults,The following statement contains a magic number: Assert.AreEqual(3' (int)t[8]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateSinglePropertyReturningArray,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Blah"' new[] { 1' 2' 3 }));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateSinglePropertyReturningArray,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("Blah"' new[] { 1' 2' 3 }));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,EvaluateSinglePropertyReturningArray,The following statement contains a magic number: Assert.AreEqual(3' (int)t);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,NoPathQuery,The following statement contains a magic number: JArray a = new JArray(1' 2' 3);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,NoPathQuery,The following statement contains a magic number: JArray a = new JArray(1' 2' 3);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,NoPathQuery,The following statement contains a magic number: Assert.AreEqual(2' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,NoPathQuery,The following statement contains a magic number: Assert.AreEqual(2' (int)t[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,NoPathQuery,The following statement contains a magic number: Assert.AreEqual(3' (int)t[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,MultipleQueries,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 4' 5' 6' 7' 8' 9);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterQuery,The following statement contains a magic number: JArray a = new JArray(                  new JObject(new JProperty("hi"' 1))'                  new JObject(new JProperty("hi"' 2))'                  new JObject(new JProperty("hi"' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterQuery,The following statement contains a magic number: JArray a = new JArray(                  new JObject(new JProperty("hi"' 1))'                  new JObject(new JProperty("hi"' 2))'                  new JObject(new JProperty("hi"' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterQuery,The following statement contains a magic number: Assert.AreEqual(2' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 2))' t[0]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 3))' t[1]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: JArray a = new JArray(                  new JObject(new JProperty("hi"' 1))'                  new JObject(new JProperty("hi"' 2))'                  new JObject(new JProperty("hi"' 2.0))'                  new JObject(new JProperty("hi"' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: JArray a = new JArray(                  new JObject(new JProperty("hi"' 1))'                  new JObject(new JProperty("hi"' 2))'                  new JObject(new JProperty("hi"' 2.0))'                  new JObject(new JProperty("hi"' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: JArray a = new JArray(                  new JObject(new JProperty("hi"' 1))'                  new JObject(new JProperty("hi"' 2))'                  new JObject(new JProperty("hi"' 2.0))'                  new JObject(new JProperty("hi"' 3)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: Assert.AreEqual(4' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 2))' t[1]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 2.0))' t[2]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 2.0))' t[2]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 3))' t[3]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,GreaterOrEqualQuery,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty("hi"' 3))' t[3]));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,NestedQuery,The following statement contains a magic number: Assert.AreEqual(2' t.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,Example,The following statement contains a magic number: Assert.AreEqual(50m' productPrice);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,Example,The following statement contains a magic number: Assert.AreEqual(2' storeNames.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,Example,The following statement contains a magic number: Assert.AreEqual(2' firstProductNames.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathExecuteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathExecuteTests.cs,Example,The following statement contains a magic number: Assert.AreEqual(149.95m' totalPrice);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,WildcardArrayWithProperty,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,TwoProperties,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,OnePropertyOneScan,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndIndexer,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndExistsQuery,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithWhitespace,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithEscapeQuote,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithDoubleEscape,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithFalse,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithTrue,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SinglePropertyAndFilterWithNull,The following statement contains a magic number: Assert.AreEqual(2' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterWithInteger,The following statement contains a magic number: Assert.AreEqual(12' (int)expressions.Value);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterWithNegativeInteger,The following statement contains a magic number: Assert.AreEqual(-12' (int)expressions.Value);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterWithFloat,The following statement contains a magic number: Assert.AreEqual(12.1d' (double)expressions.Value);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterExistWithAnd,The following statement contains a magic number: Assert.AreEqual(2' expressions.Expressions.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterExistWithAndOr,The following statement contains a magic number: Assert.AreEqual(2' andExpression.Expressions.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterExistWithAndOr,The following statement contains a magic number: Assert.AreEqual(2' orExpression.Expressions.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,FilterWithFloatExp,The following statement contains a magic number: Assert.AreEqual(5.56789e+0' (double)expressions.Value);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultiplePropertiesAndIndexers,The following statement contains a magic number: Assert.AreEqual(6' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultiplePropertiesAndIndexers,The following statement contains a magic number: Assert.AreEqual("Two"' ((ScanFilter)path.Filters[2]).Name);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultiplePropertiesAndIndexers,The following statement contains a magic number: Assert.AreEqual("Three"' ((FieldFilter)path.Filters[3]).Name);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultiplePropertiesAndIndexers,The following statement contains a magic number: Assert.AreEqual(1' ((ArrayIndexFilter)path.Filters[4]).Index);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultiplePropertiesAndIndexers,The following statement contains a magic number: Assert.AreEqual("Four"' ((FieldFilter)path.Filters[5]).Name);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,IndexerOnly,The following statement contains a magic number: Assert.AreEqual(111119990' ((ArrayIndexFilter)path.Filters[0]).Index);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,IndexerOnlyWithWhitespace,The following statement contains a magic number: Assert.AreEqual(10' ((ArrayIndexFilter)path.Filters[0]).Index);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleIndexes,The following statement contains a magic number: Assert.AreEqual(2' ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleIndexes,The following statement contains a magic number: Assert.AreEqual(111119990' ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleIndexes,The following statement contains a magic number: Assert.AreEqual(3' ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleIndexesWithWhitespace,The following statement contains a magic number: Assert.AreEqual(2' ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleIndexesWithWhitespace,The following statement contains a magic number: Assert.AreEqual(111119990' ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[0]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleIndexesWithWhitespace,The following statement contains a magic number: Assert.AreEqual(3' ((ArrayMultipleIndexFilter)path.Filters[0]).Indexes[1]);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleQuotedIndexes,The following statement contains a magic number: Assert.AreEqual(2' ((FieldMultipleFilter)path.Filters[0]).Names.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,MultipleQuotedIndexesWithWhitespace,The following statement contains a magic number: Assert.AreEqual(2' ((FieldMultipleFilter)path.Filters[0]).Names.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexAll,The following statement contains a magic number: Assert.AreEqual(111119990' ((ArraySliceFilter)path.Filters[0]).Start);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexAll,The following statement contains a magic number: Assert.AreEqual(3' ((ArraySliceFilter)path.Filters[0]).End);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexAll,The following statement contains a magic number: Assert.AreEqual(2' ((ArraySliceFilter)path.Filters[0]).Step);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndex,The following statement contains a magic number: Assert.AreEqual(111119990' ((ArraySliceFilter)path.Filters[0]).Start);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndex,The following statement contains a magic number: Assert.AreEqual(3' ((ArraySliceFilter)path.Filters[0]).End);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexNegative,The following statement contains a magic number: Assert.AreEqual(-111119990' ((ArraySliceFilter)path.Filters[0]).Start);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexNegative,The following statement contains a magic number: Assert.AreEqual(-3' ((ArraySliceFilter)path.Filters[0]).End);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexNegative,The following statement contains a magic number: Assert.AreEqual(-2' ((ArraySliceFilter)path.Filters[0]).Step);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexEmptyStop,The following statement contains a magic number: Assert.AreEqual(-3' ((ArraySliceFilter)path.Filters[0]).Start);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexWhitespace,The following statement contains a magic number: Assert.AreEqual(-111119990' ((ArraySliceFilter)path.Filters[0]).Start);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexWhitespace,The following statement contains a magic number: Assert.AreEqual(-3' ((ArraySliceFilter)path.Filters[0]).End);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,SlicingIndexWhitespace,The following statement contains a magic number: Assert.AreEqual(-2' ((ArraySliceFilter)path.Filters[0]).Step);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,AdjacentIndexers,The following statement contains a magic number: Assert.AreEqual(4' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,AdjacentIndexers,The following statement contains a magic number: Assert.AreEqual(0' ((ArrayIndexFilter)path.Filters[2]).Index);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,AdjacentIndexers,The following statement contains a magic number: Assert.AreEqual(int.MaxValue' ((ArrayIndexFilter)path.Filters[3]).Index);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,PropertyFollowingEscapedPropertyName,The following statement contains a magic number: Assert.AreEqual(5' path.Filters.Count);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,PropertyFollowingEscapedPropertyName,The following statement contains a magic number: Assert.AreEqual("dependencies"' ((FieldFilter)path.Filters[2]).Name);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,PropertyFollowingEscapedPropertyName,The following statement contains a magic number: Assert.AreEqual("System.Xml.ReaderWriter"' ((FieldFilter)path.Filters[3]).Name);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,JPathParseTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\JPathParseTests.cs,PropertyFollowingEscapedPropertyName,The following statement contains a magic number: Assert.AreEqual("source"' ((FieldFilter)path.Filters[4]).Name);
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: BooleanQueryExpression e1 = new BooleanQueryExpression              {                  Operator = QueryOperator.LessThan'                  Value = new JValue(3)'                  Path = new List<PathFilter>                  {                      new ArrayIndexFilter()                  }              };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e1.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e1.IsMatch(new JArray(3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e1.IsMatch(new JArray(3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e1.IsMatch(new JArray(3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e1.IsMatch(new JArray(4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e1.IsMatch(new JArray(4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: BooleanQueryExpression e2 = new BooleanQueryExpression              {                  Operator = QueryOperator.LessThanOrEquals'                  Value = new JValue(3)'                  Path = new List<PathFilter>                  {                      new ArrayIndexFilter()                  }              };
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(1' 2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(2' 3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsTrue(e2.IsMatch(new JArray(3' 4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e2.IsMatch(new JArray(4' 5)));
Magic Number,Newtonsoft.Json.Tests.Linq.JsonPath,QueryExpressionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\JsonPath\QueryExpressionTests.cs,BooleanExpressionTest,The following statement contains a magic number: Assert.IsFalse(e2.IsMatch(new JArray(4' 5)));
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractListTestClass,The following statement contains a magic number: Assert.AreEqual(2' l.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractListTestClass,The following statement contains a magic number: Assert.AreEqual(2' l[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,ListInterfaceDefaultCreator,The following statement contains a magic number: Assert.AreEqual(3' l.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,ListInterfaceDefaultCreator,The following statement contains a magic number: Assert.AreEqual(2' l[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,ListInterfaceDefaultCreator,The following statement contains a magic number: Assert.AreEqual(3' l[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,ListInterfaceDefaultCreator,The following statement contains a magic number: Assert.AreEqual(3' l[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,DictionaryInterfaceDefaultCreator,The following statement contains a magic number: Assert.AreEqual(2' d.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,DictionaryInterfaceDefaultCreator,The following statement contains a magic number: Assert.AreEqual(2' d["key2"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractDictionaryTestClass,The following statement contains a magic number: Assert.AreEqual(2' d.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,AbstractDictionaryTestClass,The following statement contains a magic number: Assert.AreEqual(2' d["key2"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,OverrideCreator,The following statement contains a magic number: Assert.AreEqual(2' contract.CreatorParameters.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,SerializeInterface,The following statement contains a magic number: Employee employee = new Employee              {                  BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                  FirstName = "Maurice"'                  LastName = "Moss"'                  Department = "IT"'                  JobTitle = "Support"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,SerializeInterface,The following statement contains a magic number: Employee employee = new Employee              {                  BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                  FirstName = "Maurice"'                  LastName = "Moss"'                  Department = "IT"'                  JobTitle = "Support"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,SerializeInterface,The following statement contains a magic number: Employee employee = new Employee              {                  BirthDate = new DateTime(1977' 12' 30' 1' 1' 1' DateTimeKind.Utc)'                  FirstName = "Maurice"'                  LastName = "Moss"'                  Department = "IT"'                  JobTitle = "Support"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,SingleTypeWithMultipleContractResolvers,The following statement contains a magic number: Book book = new Book              {                  BookName = "The Gathering Storm"'                  BookPrice = 16.19m'                  AuthorName = "Brandon Sanderson"'                  AuthorAge = 34'                  AuthorCountry = "United States of America"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,ContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ContractResolverTests.cs,SingleTypeWithMultipleContractResolvers,The following statement contains a magic number: Book book = new Book              {                  BookName = "The Gathering Storm"'                  BookPrice = 16.19m'                  AuthorName = "Brandon Sanderson"'                  AuthorAge = 34'                  AuthorCountry = "United States of America"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,Include,The following statement contains a magic number: Invoice invoice = new Invoice              {                  Company = "Acme Ltd."'                  Amount = 50.0m'                  Paid = false'                  FollowUpDays = 30'                  FollowUpEmailAddress = string.Empty'                  PaidDate = null              };
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,Include,The following statement contains a magic number: Invoice invoice = new Invoice              {                  Company = "Acme Ltd."'                  Amount = 50.0m'                  Paid = false'                  FollowUpDays = 30'                  FollowUpEmailAddress = string.Empty'                  PaidDate = null              };
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeInvoice,The following statement contains a magic number: Invoice invoice = new Invoice              {                  Company = "Acme Ltd."'                  Amount = 50.0m'                  Paid = false'                  FollowUpDays = 30'                  FollowUpEmailAddress = string.Empty'                  PaidDate = null              };
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeInvoice,The following statement contains a magic number: Invoice invoice = new Invoice              {                  Company = "Acme Ltd."'                  Amount = 50.0m'                  Paid = false'                  FollowUpDays = 30'                  FollowUpEmailAddress = string.Empty'                  PaidDate = null              };
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeDefaultValueAttributeTest,The following statement contains a magic number: json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21' TestProperty1 = "NotDefault" }'                  Formatting.None' new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore });
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,SerializeDefaultValueAttributeTest,The following statement contains a magic number: json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21' TestProperty1 = "TestProperty1Value" }'                  Formatting.None' new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore });
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,ApproxEquals,The following statement contains a magic number: Assert.IsTrue(MathUtils.ApproxEquals(1000.0' 1000.0000000000001));
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,ApproxEquals,The following statement contains a magic number: Assert.IsTrue(MathUtils.ApproxEquals(1000.0' 1000.0000000000001));
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,ApproxEquals,The following statement contains a magic number: Assert.IsFalse(MathUtils.ApproxEquals(1000.0' 1000.000000000001));
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,ApproxEquals,The following statement contains a magic number: Assert.IsFalse(MathUtils.ApproxEquals(1000.0' 1000.000000000001));
Magic Number,Newtonsoft.Json.Tests.Serialization,DefaultValueHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DefaultValueHandlingTests.cs,ApproxEquals,The following statement contains a magic number: Assert.IsFalse(MathUtils.ApproxEquals(0.0' 0.00001));
Magic Number,Newtonsoft.Json.Tests.Serialization,DynamicConcreteTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\DynamicConcreteTests.cs,AnyMethodsExposedByDynamicConcreteAreHarmless,The following statement contains a magic number: c.FuncWithRefType(10' null);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DataBagDoesNotInheritFromDictionaryClass,The following statement contains a magic number: e.Data.Add("extensionData1"' new int[] { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DataBagDoesNotInheritFromDictionaryClass,The following statement contains a magic number: e.Data.Add("extensionData1"' new int[] { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DataBagDoesNotInheritFromDictionaryClass,The following statement contains a magic number: Assert.AreEqual(3' o1.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DataBagDoesNotInheritFromDictionaryClass,The following statement contains a magic number: Assert.AreEqual(2' (int)o1[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DataBagDoesNotInheritFromDictionaryClass,The following statement contains a magic number: Assert.AreEqual(3' (int)o1[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DataBagDoesNotInheritFromDictionaryClass,The following statement contains a magic number: Assert.AreEqual(3' (int)o1[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataExample,The following statement contains a magic number: invoice.TaxRate = 0.15m;
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataTest,The following statement contains a magic number: Assert.AreEqual(4' c.Ints.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataTest,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' c.ExtensionData["NewValueComplex"]));
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataTest,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' c.ExtensionData["NewValueComplex"]));
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataTest,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' c.ExtensionData["Ignored"]));
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataTest,The following statement contains a magic number: Assert.IsTrue(JToken.DeepEquals(new JArray(1' 2' 3)' c.ExtensionData["Ignored"]));
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataTest,The following statement contains a magic number: Assert.AreEqual(7' c.ExtensionData.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializePublicExtensionDataTypeNamdHandling,The following statement contains a magic number: Assert.AreEqual(2m' bizzaroC2.HourlyWage);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor,The following statement contains a magic number: Assert.AreEqual(2m' bizzaroC2.HourlyWage);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,SerializePublicExtensionDataTypeNamdHandling,The following statement contains a magic number: PublicExtensionDataAttributeTestClass c = new PublicExtensionDataAttributeTestClass              {                  Name = "Name!"'                  ExtensionData = new Dictionary<object' object>                  {                      {                          "Test"' new WagePerson                          {                              HourlyWage = 2.1m                          }                      }                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,DeserializePublicExtensionData,The following statement contains a magic number: Assert.AreEqual(2' c.ExtensionData.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,FieldExtensionDataAttributeTest_Deserialize,The following statement contains a magic number: Assert.AreEqual(2' c.ExtensionData.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,FieldExtensionDataAttributeTest_Deserialize,The following statement contains a magic number: Assert.AreEqual(2' (long)c.ExtensionData["second"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,MultipleExtensionDataAttributesTest,The following statement contains a magic number: Assert.AreEqual(2' c.ExtensionData2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,MultipleExtensionDataAttributesTest,The following statement contains a magic number: Assert.AreEqual(2' (int)((JArray)c.ExtensionData2["second"])[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataAttributesInheritanceTest,The following statement contains a magic number: Assert.AreEqual(2' c.ExtensionData0.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,ExtensionDataAttributesInheritanceTest,The following statement contains a magic number: Assert.AreEqual(2' (int)c.ExtensionData0["second"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ExtensionDataTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ExtensionDataTests.cs,SerializeExtensionData_NoSetter,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new DocNoSetter(new JObject(new JProperty("Property1"' 123)))              {                  Name = "documentName"              });
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,List,The following statement contains a magic number: FSharpList<int> l = ListModule.OfSeq(new List<int> {1'2'3});
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,List,The following statement contains a magic number: FSharpList<int> l = ListModule.OfSeq(new List<int> {1'2'3});
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Set,The following statement contains a magic number: FSharpSet<int> l = SetModule.OfSeq(new List<int> { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Set,The following statement contains a magic number: FSharpSet<int> l = SetModule.OfSeq(new List<int> { 1' 2' 3 });
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Map,The following statement contains a magic number: FSharpMap<string' int> m1 = MapModule.OfSeq(new List<Tuple<string' int>> { Tuple.Create("one"' 1)' Tuple.Create("II"' 2)' Tuple.Create("3"' 3) });
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Map,The following statement contains a magic number: FSharpMap<string' int> m1 = MapModule.OfSeq(new List<Tuple<string' int>> { Tuple.Create("one"' 1)' Tuple.Create("II"' 2)' Tuple.Create("3"' 3) });
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Map,The following statement contains a magic number: Assert.AreEqual(2' m2["II"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,FSharpTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\FSharpTests.cs,Map,The following statement contains a magic number: Assert.AreEqual(3' m2["3"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: object['] myOtherArray =              {                  { new KeyValuePair<string' double>("my value"' 0.8)' "foobar" }'                  { true' 0.4d }'                  { 0.05f' 6 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: object['] myOtherArray =              {                  { new KeyValuePair<string' double>("my value"' 0.8)' "foobar" }'                  { true' 0.4d }'                  { 0.05f' 6 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: object['] myOtherArray =              {                  { new KeyValuePair<string' double>("my value"' 0.8)' "foobar" }'                  { true' 0.4d }'                  { 0.05f' 6 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: object['] myOtherArray =              {                  { new KeyValuePair<string' double>("my value"' 0.8)' "foobar" }'                  { true' 0.4d }'                  { 0.05f' 6 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: Assert.AreEqual(0.4' myOtherResult[1' 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: Assert.AreEqual(0.05' myOtherResult[2' 0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: Assert.AreEqual(0.05' myOtherResult[2' 0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: Assert.AreEqual(6L' myOtherResult[2' 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,MultiDObjectArray,The following statement contains a magic number: Assert.AreEqual(6L' myOtherResult[2' 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeIEnumerableFromConstructor,The following statement contains a magic number: Assert.AreEqual(3' result.Count());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeIEnumerableFromConstructor,The following statement contains a magic number: Assert.AreEqual(2' result.ElementAt(1));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeIEnumerableFromConstructor,The following statement contains a magic number: Assert.AreEqual(null' result.ElementAt(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializePrivateListCtor,The following statement contains a magic number: Assert.AreEqual(2' list.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializePrivateListConstructor,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializePrivateListConstructor,The following statement contains a magic number: Assert.AreEqual(2' list[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializePrivateListConstructor,The following statement contains a magic number: Assert.AreEqual(0' list[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,TestEscapeDictionaryStrings,The following statement contains a magic number: d1.Add(5' s);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,TestEscapeDictionaryStrings,The following statement contains a magic number: d2.Add(s' 5);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeExistingGenericList,The following statement contains a magic number: Assert.AreEqual(2' newValue.GenericList.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeSimpleKeyValuePair,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The following statement contains a magic number: DateTime dateTime = new DateTime(2000' 12' 1' 23' 1' 1' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The following statement contains a magic number: DateTime dateTime = new DateTime(2000' 12' 1' 23' 1' 1' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The following statement contains a magic number: DateTime dateTime = new DateTime(2000' 12' 1' 23' 1' 1' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The following statement contains a magic number: list.Add(new KeyValuePair<string' WagePerson>("key2"' new WagePerson              {                  BirthDate = dateTime'                  Department = "Department2"'                  LastModified = dateTime'                  HourlyWage = 2              }));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeComplexKeyValuePair,The following statement contains a magic number: Assert.AreEqual(2' result[1].Value.HourlyWage);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,StringListAppenderConverterTest,The following statement contains a magic number: Assert.AreEqual(2' p.ReleaseCountries.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeIList,The following statement contains a magic number: Assert.AreEqual(3' list.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,NullableValueGenericDictionary,The following statement contains a magic number: IDictionary<string' int?> v1 = new Dictionary<string' int?>              {                  { "First"' 1 }'                  { "Second"' null }'                  { "Third"' 3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,NullableValueGenericDictionary,The following statement contains a magic number: Assert.AreEqual(3' v2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,NullableValueGenericDictionary,The following statement contains a magic number: Assert.AreEqual(3' v2["Third"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(2' values.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(2' values[0].Value.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(2' values[1].Value.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(3' values.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(2' values[0].Value.Value.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual("bbb"' values[2].Value.Key);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(2' values[2].Value.Value.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual(2' values[2].Value.Value.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual("3"' values[2].Value.Value[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeNullableKeyValuePairArray,The following statement contains a magic number: Assert.AreEqual("4"' values[2].Value.Value[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray2D,The following statement contains a magic number: aa.Coordinates = new['] { { 1' 1 }' { 1' 2 }' { 2' 1 }' { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray2D,The following statement contains a magic number: aa.Coordinates = new['] { { 1' 1 }' { 1' 2 }' { 2' 1 }' { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray2D,The following statement contains a magic number: aa.Coordinates = new['] { { 1' 1 }' { 1' 2 }' { 2' 1 }' { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray2D,The following statement contains a magic number: aa.Coordinates = new['] { { 1' 1 }' { 1' 2 }' { 2' 1 }' { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3D,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArray3DWithConverter,The following statement contains a magic number: aa.Coordinates = new[' '] { { { 1' 1' 1 }' { 1' 1' 2 } }' { { 1' 2' 1 }' { 1' 2' 2 } }' { { 2' 1' 1 }' { 2' 1' 2 } }' { { 2' 2' 1 }' { 2' 2' 2 } } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3DWithConverter,The following statement contains a magic number: Assert.AreEqual(4' aa.Coordinates.GetLength(0));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3DWithConverter,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates.GetLength(1));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3DWithConverter,The following statement contains a magic number: Assert.AreEqual(3' aa.Coordinates.GetLength(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3DWithConverter,The following statement contains a magic number: Assert.AreEqual(3' aa.Coordinates.GetLength(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3DWithConverter,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates[1' 1' 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray2D,The following statement contains a magic number: Assert.AreEqual(4' aa.Coordinates.GetLength(0));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray2D,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates.GetLength(1));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray2D,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates[1' 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D,The following statement contains a magic number: Assert.AreEqual(4' aa.Coordinates.GetLength(0));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates.GetLength(1));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D,The following statement contains a magic number: Assert.AreEqual(3' aa.Coordinates.GetLength(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D,The following statement contains a magic number: Assert.AreEqual(3' aa.Coordinates.GetLength(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeArray3D,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates[1' 1' 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeEmpty3DArray,The following statement contains a magic number: Assert.AreEqual(0' aa.Coordinates.GetLength(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeSemiEmpty3DArray,The following statement contains a magic number: Assert.AreEqual(0' aa.Coordinates.GetLength(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeTypeName3DArray,The following statement contains a magic number: Assert.AreEqual(2' values2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,PrimitiveValuesInObjectArray,The following statement contains a magic number: Assert.AreEqual(2' o.Data.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ComplexValuesInObjectArray,The following statement contains a magic number: Assert.AreEqual(3' o.Data.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ComplexValuesInObjectArray,The following statement contains a magic number: Assert.AreEqual(4' ((JArray)o.Data[1]).Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ComplexValuesInObjectArray,The following statement contains a magic number: CustomAssert.IsInstanceOfType(typeof(JObject)' o.Data[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ComplexValuesInObjectArray,The following statement contains a magic number: Assert.AreEqual(1' ((JObject)o.Data[2]).Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ComplexValuesInObjectArray,The following statement contains a magic number: Assert.AreEqual(1' (int)((JObject)o.Data[2])["one"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArrayAsArrayList,The following statement contains a magic number: Assert.AreEqual(4' o.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArrayAsArrayList,The following statement contains a magic number: Assert.AreEqual(3' ((JArray)o[2]).Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArrayAsArrayList,The following statement contains a magic number: Assert.AreEqual(3' ((JArray)o[2]).Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeArrayAsArrayList,The following statement contains a magic number: Assert.AreEqual(0' ((JObject)o[3]).Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeMemberGenericList,The following statement contains a magic number: Assert.AreEqual(2' newName.pNumbers.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ReadOnlyCollectionSerialize,The following statement contains a magic number: ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ReadOnlyCollectionSerialize,The following statement contains a magic number: ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,ReadOnlyCollectionSerialize,The following statement contains a magic number: ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0' 1' 2' 3' 4 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p1 = new Product              {                  Name = "Product 1"'                  Price = 99.95m'                  ExpiryDate = new DateTime(2000' 12' 29' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p1 = new Product              {                  Name = "Product 1"'                  Price = 99.95m'                  ExpiryDate = new DateTime(2000' 12' 29' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p1 = new Product              {                  Name = "Product 1"'                  Price = 99.95m'                  ExpiryDate = new DateTime(2000' 12' 29' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p1 = new Product              {                  Name = "Product 1"'                  Price = 99.95m'                  ExpiryDate = new DateTime(2000' 12' 29' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p2 = new Product              {                  Name = "Product 2"'                  Price = 12.50m'                  ExpiryDate = new DateTime(2009' 7' 31' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p2 = new Product              {                  Name = "Product 2"'                  Price = 12.50m'                  ExpiryDate = new DateTime(2009' 7' 31' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p2 = new Product              {                  Name = "Product 2"'                  Price = 12.50m'                  ExpiryDate = new DateTime(2009' 7' 31' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeGenericList,The following statement contains a magic number: Product p2 = new Product              {                  Name = "Product 2"'                  Price = 12.50m'                  ExpiryDate = new DateTime(2009' 7' 31' 0' 0' 0' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,DeserializeGenericList,The following statement contains a magic number: Assert.AreEqual(2' products.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }' bytes);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(3' circularList.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(1' circularList[2].Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(1' circularList[2][0].Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.IsTrue(ReferenceEquals(circularList' circularList[2][0][0]));
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,SerializeRefNull,The following statement contains a magic number: child.Add("_id"' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,SerializeRefNull,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeEmployeeReference,The following statement contains a magic number: Assert.AreEqual(2' employees.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,DeserializeFromJToken,The following statement contains a magic number: Assert.AreEqual(2' employees.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MetadataPropertyHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MetadataPropertyHandlingTests.cs,PrimitiveType_MetadataPropertyIgnore_WithType,The following statement contains a magic number: Assert.AreEqual(5d' actual.Payload);
Magic Number,Newtonsoft.Json.Tests.Serialization,ReflectionAttributeProviderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ReflectionAttributeProviderTests.cs,GetAttributes_Property,The following statement contains a magic number: Assert.AreEqual(2' attributes.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ReflectionAttributeProviderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ReflectionAttributeProviderTests.cs,GetAttributes_Field,The following statement contains a magic number: Assert.AreEqual(2' attributes.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ReflectionAttributeProviderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ReflectionAttributeProviderTests.cs,GetAttributes_Parameter,The following statement contains a magic number: Assert.AreEqual(2' attributes.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,VirtualShouldSerialize,The following statement contains a magic number: Assert.IsNotNull(deserializedSetFoo.myBar.myBaz[2].myFrob[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,VirtualShouldSerialize,The following statement contains a magic number: Assert.AreEqual(setFoo.myBar.myBaz[2].name' deserializedSetFoo.myBar.myBaz[2].name);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,VirtualShouldSerialize,The following statement contains a magic number: Assert.AreEqual(setFoo.myBar.myBaz[2].name' deserializedSetFoo.myBar.myBaz[2].name);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,VirtualShouldSerialize,The following statement contains a magic number: Assert.IsNotNull(deserializedSetFoo.myBar.myBaz[2].myFrob[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,VirtualShouldSerialize,The following statement contains a magic number: Assert.AreEqual(setFoo.myBar.myBaz[2].myFrob[0].name' deserializedSetFoo.myBar.myBaz[2].myFrob[0].name);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,VirtualShouldSerialize,The following statement contains a magic number: Assert.AreEqual(setFoo.myBar.myBaz[2].myFrob[0].name' deserializedSetFoo.myBar.myBaz[2].myFrob[0].name);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,Serialize,The following statement contains a magic number: StringBuilder sb = new StringBuilder(256);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,ShouldSerializeTest,The following statement contains a magic number: c.Age = 27;
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,ShouldSerializeTest,The following statement contains a magic number: Assert.AreEqual(27' deserialized.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedTest,The following statement contains a magic number: c.Age = 27;
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual(27' deserialized.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedTest,The following statement contains a magic number: c.FavoriteNumber = 23;
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual(27' deserialized.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual(23' deserialized.FavoriteNumber);
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedExample,The following statement contains a magic number: joe.NumberOfChildren = 4;
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,SpecifiedExample,The following statement contains a magic number: martha.NumberOfChildren = 3;
Magic Number,Newtonsoft.Json.Tests.Serialization,ShouldSerializeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\ShouldSerializeTests.cs,ShouldSerializeInheritedClassTest,The following statement contains a magic number: joe.Age = 100;
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: Assert.AreEqual(916' output.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterSerializeTest,The following statement contains a magic number: Assert.AreEqual(7' memoryTraceWriter.GetTraceMessages().Count());
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: staff.StartDate = new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: Assert.AreEqual(1059' output.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterDeserializeTest,The following statement contains a magic number: Assert.AreEqual(7' memoryTraceWriter.GetTraceMessages().Count());
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterLimitTest,The following statement contains a magic number: i < 1005
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,MemoryTraceWriterLimitTest,The following statement contains a magic number: Assert.AreEqual(1000' traceMessages.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: string json =                  JsonConvert.SerializeObject(                      new TraceTestObject                      {                          StringArray = new[] { "1"' "2" }'                          IntList = new List<int> { 1' 2 }'                          Version = new Version(1' 2' 3' 4)'                          StringDictionary =                              new Dictionary<string' string>                              {                                  { "1"' "!" }'                                  { "Two"' "!!" }'                                  { "III"' "!!!" }                              }                      }'                      new JsonSerializerSettings                      {                          TraceWriter = traceWriter'                          Formatting = Formatting.Indented                      });
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: string json =                  JsonConvert.SerializeObject(                      new TraceTestObject                      {                          StringArray = new[] { "1"' "2" }'                          IntList = new List<int> { 1' 2 }'                          Version = new Version(1' 2' 3' 4)'                          StringDictionary =                              new Dictionary<string' string>                              {                                  { "1"' "!" }'                                  { "Two"' "!!" }'                                  { "III"' "!!!" }                              }                      }'                      new JsonSerializerSettings                      {                          TraceWriter = traceWriter'                          Formatting = Formatting.Indented                      });
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: string json =                  JsonConvert.SerializeObject(                      new TraceTestObject                      {                          StringArray = new[] { "1"' "2" }'                          IntList = new List<int> { 1' 2 }'                          Version = new Version(1' 2' 3' 4)'                          StringDictionary =                              new Dictionary<string' string>                              {                                  { "1"' "!" }'                                  { "Two"' "!!" }'                                  { "III"' "!!!" }                              }                      }'                      new JsonSerializerSettings                      {                          TraceWriter = traceWriter'                          Formatting = Formatting.Indented                      });
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: string json =                  JsonConvert.SerializeObject(                      new TraceTestObject                      {                          StringArray = new[] { "1"' "2" }'                          IntList = new List<int> { 1' 2 }'                          Version = new Version(1' 2' 3' 4)'                          StringDictionary =                              new Dictionary<string' string>                              {                                  { "1"' "!" }'                                  { "Two"' "!!" }'                                  { "III"' "!!!" }                              }                      }'                      new JsonSerializerSettings                      {                          TraceWriter = traceWriter'                          Formatting = Formatting.Indented                      });
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Collections.Generic.List`1[System.Int32]. Path 'IntList'."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Started serializing System.String[]. Path 'StringArray'."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.String[]. Path 'StringArray'."' traceWriter.TraceRecords[4].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Started serializing System.Version. Path 'Version'."' traceWriter.TraceRecords[5].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Version. Path 'Version'."' traceWriter.TraceRecords[6].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Started serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path 'StringDictionary'."' traceWriter.TraceRecords[7].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path 'StringDictionary'."' traceWriter.TraceRecords[8].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Serialize,The following statement contains a magic number: Assert.AreEqual("Finished serializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''."' traceWriter.TraceRecords[9].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(2' o2.IntList.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(2' o2.StringArray.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(2' o2.Version.Minor);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(3' o2.StringDictionary.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual("Started deserializing System.String[]. Path 'StringArray'' line 6' position 19."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing System.String[]. Path 'StringArray'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path 'Version.Major'' line 11' position 13."' traceWriter.TraceRecords[5].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[6].Message.StartsWith("Started deserializing System.Version. Path 'Version'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith("Finished deserializing System.Version. Path 'Version'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual("Started deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary.1'' line 19' position 9."' traceWriter.TraceRecords[8].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith("Finished deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Deserialize,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual(2' o2.IntList.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual(2' o2.StringArray.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual(2' o2.Version.Minor);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual(3' o2.StringDictionary.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Finished deserializing System.Collections.Generic.IList`1[System.Int32]. Path 'IntList'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual("Started deserializing System.String[]. Path 'StringArray'' line 6' position 19."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing System.String[]. Path 'StringArray'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path 'Version.Major'' line 11' position 13."' traceWriter.TraceRecords[5].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[6].Message.StartsWith("Started deserializing System.Version. Path 'Version'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith("Finished deserializing System.Version. Path 'Version'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.AreEqual("Started deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary.1'' line 19' position 9."' traceWriter.TraceRecords[8].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith("Finished deserializing System.Collections.Generic.IDictionary`2[System.String'System.String]. Path 'StringDictionary'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,Populate,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[10].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.TraceTestObject. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializing,The following statement contains a magic number: Assert.AreEqual(2' traceWriter.TraceRecords.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializingNested,The following statement contains a magic number: Assert.AreEqual(3' traceWriter.TraceRecords.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializingNested,The following statement contains a magic number: Assert.AreEqual(TraceLevel.Error' traceWriter.TraceRecords[2].Level);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ErrorDeserializingNested,The following statement contains a magic number: Assert.AreEqual("Error deserializing System.Collections.Generic.IList`1[System.Int32]. Could not convert string to integer: two. Path 'IntList[1]'' line 1' position 20."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: IList<object> l = new List<object>              {                  new Dictionary<string' string> { { "key!"' "value!" } }'                  new Version(1' 2' 3' 4)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: IList<object> l = new List<object>              {                  new Dictionary<string' string> { { "key!"' "value!" } }'                  new Version(1' 2' 3' 4)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: IList<object> l = new List<object>              {                  new Dictionary<string' string> { { "key!"' "value!" } }'                  new Version(1' 2' 3' 4)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Started serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values'."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Writing type name 'System.Collections.Generic.Dictionary`2[[System.String' mscorlib]'[System.String' mscorlib]]' mscorlib' for System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0]'."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0]'."' traceWriter.TraceRecords[4].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Started serializing System.Version. Path '$values[0]'."' traceWriter.TraceRecords[5].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Writing type name 'System.Version' mscorlib' for System.Version. Path '$values[1]'."' traceWriter.TraceRecords[6].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Version. Path '$values[1]'."' traceWriter.TraceRecords[7].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,WriteTypeNameForObjects,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Collections.Generic.List`1[System.Object]. Path ''."' traceWriter.TraceRecords[8].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: IList<DateTime> d = new List<DateTime>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: IList<DateTime> d = new List<DateTime>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: IList<DateTime> d = new List<DateTime>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: IList<DateTime> d = new List<DateTime>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: IList<DateTime> d = new List<DateTime>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: IList<DateTime> d = new List<DateTime>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SerializeConverter,The following statement contains a magic number: Assert.AreEqual("Finished serializing System.Collections.Generic.List`1[System.DateTime]. Path ''."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeConverter,The following statement contains a magic number: Assert.AreEqual("Finished deserializing System.DateTime with converter Newtonsoft.Json.Converters.JavaScriptDateTimeConverter. Path '[0]'' line 1' position 23."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeConverter,The following statement contains a magic number: Assert.AreEqual("Finished deserializing System.Collections.Generic.List`1[System.DateTime]. Path ''' line 1' position 24."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.AreEqual("Resolved type 'System.Collections.Generic.Dictionary`2[[System.String' mscorlib]'[System.String' mscorlib]]' mscorlib' to System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0].$type'' line 5' position 120."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.AreEqual("Started deserializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0].key!'' line 6' position 14."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing System.Collections.Generic.Dictionary`2[System.String'System.String]. Path '$values[0]'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.AreEqual("Resolved type 'System.Version' mscorlib' to System.Version. Path '$values[1].$type'' line 9' position 42."' traceWriter.TraceRecords[5].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.AreEqual("Deserializing System.Version using creator with parameters: Major' Minor' Build' Revision. Path '$values[1].Major'' line 10' position 15."' traceWriter.TraceRecords[6].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[7].Message.StartsWith("Started deserializing System.Version. Path '$values[1]'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[8].Message.StartsWith("Finished deserializing System.Version. Path '$values[1]'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeTypeName,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[9].Message.StartsWith("Finished deserializing System.Collections.Generic.List`1[System.Object]. Path '$values'"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMember,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.TestObjects.Person. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMemberConstructor,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[2].Message.StartsWith("Started deserializing System.Version. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,DeserializeMissingMemberConstructor,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[3].Message.StartsWith("Finished deserializing System.Version. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,ShouldSerializeTestClass,The following statement contains a magic number: c.Age = 29;
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: c.Age = 27;
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual("IsSpecified result for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual("IsSpecified result for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual("IsSpecified result for property 'FavoriteNumber' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass: False. Path 'Age'."' traceWriter.TraceRecords[4].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual("Finished serializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''."' traceWriter.TraceRecords[5].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual(27' deserialized.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: c.FavoriteNumber = 23;
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual("IsSpecified for property 'Weight' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Weight'' line 4' position 14."' traceWriter.TraceRecords[2].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual("IsSpecified for property 'Height' on Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass set to true. Path 'Height'' line 5' position 14."' traceWriter.TraceRecords[3].Message);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.IsTrue(traceWriter.TraceRecords[4].Message.StartsWith("Finished deserializing Newtonsoft.Json.Tests.Serialization.SpecifiedTestClass. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual(27' deserialized.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,TraceWriterTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\TraceWriterTests.cs,SpecifiedTest,The following statement contains a magic number: Assert.AreEqual(23' deserialized.FavoriteNumber);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonPropertyCollectionTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonPropertyCollectionTests.cs,AddPropertyIncludesPrivateImplementations,The following statement contains a magic number: Assert.AreEqual(3' contract.Properties.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserialize,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserialize,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserialize,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserialize,The following statement contains a magic number: product.Price = 3.99M;
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: product.Price = 3.99M;
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28)' deserializedProductShort.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28)' deserializedProductShort.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28)' deserializedProductShort.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberDeserializeOkay,The following statement contains a magic number: Assert.AreEqual("Large"' deserializedProductShort.Sizes[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,MissingMemberHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\MissingMemberHandlingTests.cs,MissingMemberIgnoreComplexValue,The following statement contains a magic number: Assert.AreEqual(2' myClass.PostProperty);
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateArray,The following statement contains a magic number: Assert.AreEqual(3' people.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateArray,The following statement contains a magic number: Assert.AreEqual(null' people[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateStore,The following statement contains a magic number: s.product = new List<Product>              {                  new Product                  {                      ExpiryDate = new DateTime(2000' 12' 3' 0' 0' 0' DateTimeKind.Utc)'                      Name = "ProductName!"'                      Price = 9.9m                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateStore,The following statement contains a magic number: s.product = new List<Product>              {                  new Product                  {                      ExpiryDate = new DateTime(2000' 12' 3' 0' 0' 0' DateTimeKind.Utc)'                      Name = "ProductName!"'                      Price = 9.9m                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateStore,The following statement contains a magic number: s.product = new List<Product>              {                  new Product                  {                      ExpiryDate = new DateTime(2000' 12' 3' 0' 0' 0' DateTimeKind.Utc)'                      Name = "ProductName!"'                      Price = 9.9m                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateStore,The following statement contains a magic number: s.product = new List<Product>              {                  new Product                  {                      ExpiryDate = new DateTime(2000' 12' 3' 0' 0' 0' DateTimeKind.Utc)'                      Name = "ProductName!"'                      Price = 9.9m                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateStore,The following statement contains a magic number: s.Width = 99.99d;
Magic Number,Newtonsoft.Json.Tests.Serialization,PopulateTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PopulateTests.cs,PopulateListOfPeople,The following statement contains a magic number: Assert.AreEqual(2' p.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInChildObject,The following statement contains a magic number: Assert.AreEqual(3' c.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInChildObject,The following statement contains a magic number: Assert.AreEqual("Value3"' c[2].Member);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInChildObject,The following statement contains a magic number: Assert.AreEqual("Handle this!"' c[2].ThrowError);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(3' c.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollection,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(3' c.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual(3' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorHandlingUsingEvent,The following statement contains a magic number: Assert.AreEqual("[4] - 4 - Cannot convert null value to System.DateTime. Path '[4]'' line 8' position 13."' errors[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(3' c.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(2009' 9' 9' 0' 0' 0' DateTimeKind.Utc)' c[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(1977' 2' 20' 0' 0' 0' DateTimeKind.Utc)' c[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 1' 0' 0' 0' DateTimeKind.Utc)' c[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,SerializePerson,The following statement contains a magic number: PersonError person = new PersonError              {                  Name = "George Michael Bluth"'                  Age = 16'                  Roles = null'                  Title = "Mister Manager"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,MultipleRequiredPropertyErrors,The following statement contains a magic number: Assert.AreEqual(2' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,HandlingArrayErrors,The following statement contains a magic number: Assert.AreEqual(2' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,HandlingMultidimensionalArrayErrors,The following statement contains a magic number: Assert.AreEqual(2' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingAndAvoidingRecursiveDepthError,The following statement contains a magic number: serializer.Deserialize<Nest>(new JsonTextReader(new StringReader(json)) { MaxDepth = 3 });
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteErrorHandlingLoopFromInputError,The following statement contains a magic number: Assert.AreEqual(3' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteErrorHandlingLoopFromInputError,The following statement contains a magic number: Assert.AreEqual("Infinite loop detected from error handling. Path '[1023]'' line 1' position 65536."' errors[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandling,The following statement contains a magic number: Assert.AreEqual(3' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandling,The following statement contains a magic number: Assert.AreEqual("Infinite loop detected from error handling. Path '[0]'' line 1' position 3."' errors[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandlingInObject,The following statement contains a magic number: Assert.AreEqual(4' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandlingInObject,The following statement contains a magic number: Assert.AreEqual("Infinite loop detected from error handling. Path 'badarray[0]'' line 1' position 15."' errors[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,InfiniteLoopArrayHandlingInObject,The following statement contains a magic number: Assert.AreEqual("Unexpected character encountered while parsing value: x. Path 'badarray[0]'' line 1' position 15."' errors[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContent,The following statement contains a magic number: const int maxDepth = 256;
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContent,The following statement contains a magic number: Assert.AreEqual(3' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContent,The following statement contains a magic number: Assert.AreEqual(@"Unexpected end when deserializing object. Path 'events[1].code'' line 1' position 45."' errors[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContentDictionary,The following statement contains a magic number: const int maxDepth = 256;
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContentDictionary,The following statement contains a magic number: Assert.AreEqual(2' logEvents.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationErrorHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,ErrorHandlingEndOfContentDictionary,The following statement contains a magic number: Assert.AreEqual(2' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,ThrowingReader,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationErrorHandlingTests.cs,Read,The following statement contains a magic number: _position > 65536
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectWithConstructorEvents,The following statement contains a magic number: SerializationEventTestObjectWithConstructor obj = new SerializationEventTestObjectWithConstructor(11' "Hello World!"' null);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectWithConstructorEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectWithConstructorEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectWithConstructorEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ListEvents,The following statement contains a magic number: SerializationEventTestList obj = new SerializationEventTestList              {                  1.1m'                  2.222222222m'                  int.MaxValue'                  Convert.ToDecimal(Math.PI)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ListEvents,The following statement contains a magic number: SerializationEventTestList obj = new SerializationEventTestList              {                  1.1m'                  2.222222222m'                  int.MaxValue'                  Convert.ToDecimal(Math.PI)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ListEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ListEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ListEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DictionaryEvents,The following statement contains a magic number: SerializationEventTestDictionary obj = new SerializationEventTestDictionary              {                  { 1.1m' "first" }'                  { 2.222222222m' "second" }'                  { int.MaxValue' "third" }'                  { Convert.ToDecimal(Math.PI)' "fourth" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DictionaryEvents,The following statement contains a magic number: SerializationEventTestDictionary obj = new SerializationEventTestDictionary              {                  { 1.1m' "first" }'                  { 2.222222222m' "second" }'                  { int.MaxValue' "third" }'                  { Convert.ToDecimal(Math.PI)' "fourth" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DictionaryEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DictionaryEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,DictionaryEvents,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEventsDocumentationExample,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEventsDocumentationExample,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,ObjectEventsDocumentationExample,The following statement contains a magic number: Assert.AreEqual(11' obj.Member1);
Magic Number,Newtonsoft.Json.Tests.Serialization,SerializationEventAttributeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,WhenSerializationErrorDetectedBySerializer_ThenCallbackIsCalled,The following statement contains a magic number: Debug.Assert(foo.Identifier == 25);
Magic Number,Newtonsoft.Json.Tests.Serialization,FooEvent,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\SerializationEventAttributeTests.cs,OnError,The following statement contains a magic number: Identifier = 25;
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.BirthDate = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.BirthDate = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.BirthDate = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.BirthDate = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.BirthDate = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.BirthDate = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.LastModified = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.LastModified = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.LastModified = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.LastModified = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.LastModified = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,JsonConvertSerializerSettings,The following statement contains a magic number: person.LastModified = new DateTime(2000' 11' 20' 23' 55' 44' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,BlogPostExample,The following statement contains a magic number: Product product = new Product              {                  ExpiryDate = new DateTime(2010' 12' 20' 18' 1' 0' DateTimeKind.Utc)'                  Name = "Widget"'                  Price = 9.99m'                  Sizes = new[] { "Small"' "Medium"' "Large" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,BlogPostExample,The following statement contains a magic number: Product product = new Product              {                  ExpiryDate = new DateTime(2010' 12' 20' 18' 1' 0' DateTimeKind.Utc)'                  Name = "Widget"'                  Price = 9.99m'                  Sizes = new[] { "Small"' "Medium"' "Large" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,BlogPostExample,The following statement contains a magic number: Product product = new Product              {                  ExpiryDate = new DateTime(2010' 12' 20' 18' 1' 0' DateTimeKind.Utc)'                  Name = "Widget"'                  Price = 9.99m'                  Sizes = new[] { "Small"' "Medium"' "Large" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,BlogPostExample,The following statement contains a magic number: Product product = new Product              {                  ExpiryDate = new DateTime(2010' 12' 20' 18' 1' 0' DateTimeKind.Utc)'                  Name = "Widget"'                  Price = 9.99m'                  Sizes = new[] { "Small"' "Medium"' "Large" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,CamelCasePropertyNamesContractResolverTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\CamelCasePropertyNamesContractResolverTests.cs,BlogPostExample,The following statement contains a magic number: Product product = new Product              {                  ExpiryDate = new DateTime(2010' 12' 20' 18' 1' 0' DateTimeKind.Utc)'                  Name = "Widget"'                  Price = 9.99m'                  Sizes = new[] { "Small"' "Medium"' "Large" }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeDictionarysWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(2' circularDictionary.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(3' circularList.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(1' circularList[2].Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.AreEqual(1' circularList[2][0].Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeListsWithPreserveObjectReferences,The following statement contains a magic number: Assert.IsTrue(ReferenceEquals(circularList' circularList[2][0][0]));
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeEmployeeReference,The following statement contains a magic number: Assert.AreEqual(2' employees.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInList,The following statement contains a magic number: Assert.AreEqual(4' employees.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInList,The following statement contains a magic number: Assert.AreEqual("e1"' employees[2].Name);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInList,The following statement contains a magic number: Assert.AreEqual("e2"' employees[3].Name);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInList,The following statement contains a magic number: Assert.AreEqual(employees[0]' employees[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInList,The following statement contains a magic number: Assert.AreEqual(employees[1]' employees[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,DeserializeReferenceInDictionary,The following statement contains a magic number: Assert.AreEqual(4' employees.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWithout,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Person p = new Person              {                  BirthDate = new DateTime(1980' 12' 23' 0' 0' 0' DateTimeKind.Utc)'                  LastModified = new DateTime(2009' 2' 20' 12' 59' 21' DateTimeKind.Utc)'                  Department = "IT"'                  Name = "James"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ExampleWith,The following statement contains a magic number: Assert.AreEqual(2' deserializedPeople.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,PreserveReferencesHandlingWithReusedJsonSerializer,The following statement contains a magic number: Assert.AreEqual(2' myClasses2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ReferencedIntList,The following statement contains a magic number: l.Add(2);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ReferencedIntList,The following statement contains a magic number: l.Add(3);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ReferencedIntDictionary,The following statement contains a magic number: l.Add("Second"' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ReferencedIntDictionary,The following statement contains a magic number: l.Add("Third"' 3);
Magic Number,Newtonsoft.Json.Tests.Serialization,PreserveReferencesHandlingTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\PreserveReferencesHandlingTests.cs,ReferencedComponentDictionary,The following statement contains a magic number: Assert.AreEqual(3' d.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CaseInsensitiveRequiredPropertyConstructorCreation,The following statement contains a magic number: Assert.AreEqual(foo1.Bars[2]' foo2.Bars[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CaseInsensitiveRequiredPropertyConstructorCreation,The following statement contains a magic number: Assert.AreEqual(foo1.Bars[2]' foo2.Bars[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NeverResolveIgnoredPropertyTypes,The following statement contains a magic number: Version v = new Version(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NeverResolveIgnoredPropertyTypes,The following statement contains a magic number: Version v = new Version(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NeverResolveIgnoredPropertyTypes,The following statement contains a magic number: Version v = new Version(1' 2' 3' 4);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeObservableCollection,The following statement contains a magic number: Assert.AreEqual(2' s.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PopulateResetSettings,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)' l[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanSerializeWithBuiltInTypeAsGenericArgument,The following statement contains a magic number: var input = new ResponseWithNewGenericProperty<int>()              {                  Message = "Trying out integer as type parameter"'                  Data = 25'                  Result = "This should be fine"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanSerializeWithBuiltInTypeAsGenericArgumentVirtual,The following statement contains a magic number: var input = new ResponseWithNewGenericPropertyVirtual<int>()              {                  Message = "Trying out integer as type parameter"'                  Data = 25'                  Result = "This should be fine"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanSerializeWithBuiltInTypeAsGenericArgumentOverride,The following statement contains a magic number: var input = new ResponseWithNewGenericPropertyOverride<int>()              {                  Message = "Trying out integer as type parameter"'                  Data = 25'                  Result = "This should be fine"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanSerializedWithGenericClosedTypeAsArgument,The following statement contains a magic number: var input = new ResponseWithNewGenericProperty<List<int>>()              {                  Message = "More complex case - generic list of int"'                  Data = Enumerable.Range(50' 70).ToList()'                  Result = "This should be fine too"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanSerializedWithGenericClosedTypeAsArgument,The following statement contains a magic number: var input = new ResponseWithNewGenericProperty<List<int>>()              {                  Message = "More complex case - generic list of int"'                  Data = Enumerable.Range(50' 70).ToList()'                  Result = "This should be fine too"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJObjectWithComments,The following statement contains a magic number: Assert.AreEqual(3' o.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJObjectWithComments,The following statement contains a magic number: Assert.AreEqual(3' o["C"].Count());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJObjectWithComments,The following statement contains a magic number: Assert.AreEqual(JTokenType.Comment' o["C"][2].Type);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerProperties,The following statement contains a magic number: serializer.MaxDepth = 9001;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerProperties,The following statement contains a magic number: Assert.AreEqual(9001' serializer.MaxDepth);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerSettingsProperties,The following statement contains a magic number: settings.MaxDepth = 9001;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerSettingsProperties,The following statement contains a magic number: Assert.AreEqual(9001' settings.MaxDepth);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerProxyProperties,The following statement contains a magic number: serializerProxy.MaxDepth = 9001;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerProxyProperties,The following statement contains a magic number: Assert.AreEqual(9001' serializerProxy.MaxDepth);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeLargeFloat,The following statement contains a magic number: Assert.IsTrue(MathUtils.ApproxEquals(1E+38' (double)o));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ConversionOperator,The following statement contains a magic number: i < 800
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: product.ExpiryDate = new DateTime(2008' 12' 28);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: product.Price = 3.99M;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28)' deserializedProduct.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28)' deserializedProduct.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28)' deserializedProduct.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: Assert.AreEqual(3.99m' deserializedProduct.Price);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserialization,The following statement contains a magic number: Assert.AreEqual("Large"' deserializedProduct.Sizes[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonConvertSerializer,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 1' 24' 12' 0' 0)' p.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonConvertSerializer,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 1' 24' 12' 0' 0)' p.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonConvertSerializer,The following statement contains a magic number: Assert.AreEqual(new DateTime(2010' 1' 24' 12' 0' 0)' p.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonConvertSerializer,The following statement contains a magic number: Assert.AreEqual(3.99m' p.Price);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJavaScriptDate,The following statement contains a magic number: DateTime dateValue = new DateTime(2010' 3' 30);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJavaScriptDate,The following statement contains a magic number: DateTime dateValue = new DateTime(2010' 3' 30);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJavaScriptDate,The following statement contains a magic number: DateTime dateValue = new DateTime(2010' 3' 30);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TestMethodExecutorObject,The following statement contains a magic number: Assert.AreEqual(executorObject2.serverMethodParams.Length' 4);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonIgnoreAttributeTest,The following statement contains a magic number: Assert.AreEqual(99' c.Field);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TorrentDeserializeTest,The following statement contains a magic number: Assert.AreEqual(4' o.Children().Count());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TorrentDeserializeTest,The following statement contains a magic number: Assert.AreEqual(nestedTorrentsArray.Children().Count()' 19);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The following statement contains a magic number: List<DateTime> testDates = new List<DateTime>              {                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The following statement contains a magic number: List<DateTime> testDates = new List<DateTime>              {                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The following statement contains a magic number: List<DateTime> testDates = new List<DateTime>              {                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The following statement contains a magic number: List<DateTime> testDates = new List<DateTime>              {                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The following statement contains a magic number: List<DateTime> testDates = new List<DateTime>              {                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTest,The following statement contains a magic number: List<DateTime> testDates = new List<DateTime>              {                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Local)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Unspecified)'                  new DateTime(2000' 1' 1' 1' 1' 1' DateTimeKind.Utc)'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetIso,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeOffsetMsAjax,The following statement contains a magic number: List<DateTimeOffset> testDates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(100' 1' 1' 1' 1' 1' DateTimeKind.Utc))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.Zero)'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(13))'                  new DateTimeOffset(2000' 1' 1' 1' 1' 1' TimeSpan.FromHours(-3.5))'              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonStringKeyDictionary,The following statement contains a magic number: values.Add(-5' 6);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonStringKeyDictionary,The following statement contains a magic number: values.Add(-5' 6);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousObjectSerialization,The following statement contains a magic number: var anonymous =                  new                  {                      StringValue = "I am a string"'                      IntValue = int.MaxValue'                      NestedAnonymous = new { NestedValue = byte.MaxValue }'                      NestedArray = new[] { 1' 2 }'                      Product = new Product() { Name = "TestProduct" }                  };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousObjectSerialization,The following statement contains a magic number: Assert.AreEqual(255' anonymous.NestedAnonymous.NestedValue);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousObjectSerialization,The following statement contains a magic number: Assert.AreEqual(2' anonymous.NestedArray.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousObjectSerialization,The following statement contains a magic number: Assert.AreEqual(2' anonymous.NestedArray[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousObjectSerializationWithSetting,The following statement contains a magic number: DateTime d = new DateTime(2000' 1' 1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArrayWhenNotFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(4' wibble.Bar.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArrayWhenNotFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(2' wibble.Bar[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArrayWhenNotFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(2' wibble.Bar[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArrayWhenNotFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(3' wibble.Bar[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArrayWhenNotFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(3' wibble.Bar[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(4' wibble.Bar.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(2' wibble.Bar[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(2' wibble.Bar[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(3' wibble.Bar[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson,The following statement contains a magic number: Assert.AreEqual(3' wibble.Bar[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: wibble.Bar.Add(2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: wibble.Bar.Add(3);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: Assert.AreEqual(5' wibbleOut.Bar.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: Assert.AreEqual(1' wibbleOut.Bar[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: Assert.AreEqual(2' wibbleOut.Bar[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: Assert.AreEqual(2' wibbleOut.Bar[3]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: Assert.AreEqual(3' wibbleOut.Bar[4]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CanDeserializeSerializedJson,The following statement contains a magic number: Assert.AreEqual(3' wibbleOut.Bar[4]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStack,The following statement contains a magic number: s.Push(2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStack,The following statement contains a magic number: s.Push(3);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTimeZone,The following statement contains a magic number: var date = new DateTime(2001' 4' 4' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTimeZone,The following statement contains a magic number: var date = new DateTime(2001' 4' 4' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeTimeZone,The following statement contains a magic number: var date = new DateTime(2001' 4' 4' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TimeSpanTest,The following statement contains a magic number: TimeSpan ts = new TimeSpan(00' 23' 59' 1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TimeSpanTest,The following statement contains a magic number: TimeSpan ts = new TimeSpan(00' 23' 59' 1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonIgnoreAttributeOnClassTest,The following statement contains a magic number: Assert.AreEqual(99' c.Field);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializerShouldUseMemberConverter_MsDate_DateParseNone,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970' 1' 1)' m2.DefaultConverter);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializerShouldUseMemberConverter_MsDate_DateParseNone,The following statement contains a magic number: Assert.AreEqual(new DateTime(1970' 1' 1)' m2.MemberConverter);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableMember,The following statement contains a magic number: UserNullable userNullablle = new UserNullable              {                  Id = new Guid("AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7")'                  FName = "FirstValue"'                  LName = "LastValue"'                  RoleId = 5'                  NullableRoleId = 6'                  NullRoleId = null'                  Active = true              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableMember,The following statement contains a magic number: UserNullable userNullablle = new UserNullable              {                  Id = new Guid("AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7")'                  FName = "FirstValue"'                  LName = "LastValue"'                  RoleId = 5'                  NullableRoleId = 6'                  NullRoleId = null'                  Active = true              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableMember,The following statement contains a magic number: Assert.AreEqual(5' userNullablleDeserialized.RoleId);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableMember,The following statement contains a magic number: Assert.AreEqual(6' userNullablleDeserialized.NullableRoleId);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: RequiredMembersClass c = new RequiredMembersClass()              {                  BirthDate = new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)'                  FirstName = "Bob"'                  LastName = "Smith"'                  MiddleName = "Cosmo"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: RequiredMembersClass c = new RequiredMembersClass()              {                  BirthDate = new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)'                  FirstName = "Bob"'                  LastName = "Smith"'                  MiddleName = "Cosmo"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: RequiredMembersClass c = new RequiredMembersClass()              {                  BirthDate = new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)'                  FirstName = "Bob"'                  LastName = "Smith"'                  MiddleName = "Cosmo"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: RequiredMembersClass c = new RequiredMembersClass()              {                  BirthDate = new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)'                  FirstName = "Bob"'                  LastName = "Smith"'                  MiddleName = "Cosmo"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: RequiredMembersClass c = new RequiredMembersClass()              {                  BirthDate = new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)'                  FirstName = "Bob"'                  LastName = "Smith"'                  MiddleName = "Cosmo"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: RequiredMembersClass c = new RequiredMembersClass()              {                  BirthDate = new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)'                  FirstName = "Bob"'                  LastName = "Smith"'                  MiddleName = "Cosmo"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)' c2.BirthDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)' c2.BirthDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)' c2.BirthDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)' c2.BirthDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)' c2.BirthDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RequiredMembersClass,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 12' 20' 10' 55' 55' DateTimeKind.Utc)' c2.BirthDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRequiredMembersClassNullRequiredValueProperty,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  RequiredMembersClass requiredMembersClass = new RequiredMembersClass                  {                      FirstName = null'                      BirthDate = new DateTime(2000' 10' 10' 10' 10' 10' DateTimeKind.Utc)'                      LastName = null'                      MiddleName = null                  };                    string json = JsonConvert.SerializeObject(requiredMembersClass);              }' "Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRequiredMembersClassNullRequiredValueProperty,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  RequiredMembersClass requiredMembersClass = new RequiredMembersClass                  {                      FirstName = null'                      BirthDate = new DateTime(2000' 10' 10' 10' 10' 10' DateTimeKind.Utc)'                      LastName = null'                      MiddleName = null                  };                    string json = JsonConvert.SerializeObject(requiredMembersClass);              }' "Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRequiredMembersClassNullRequiredValueProperty,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  RequiredMembersClass requiredMembersClass = new RequiredMembersClass                  {                      FirstName = null'                      BirthDate = new DateTime(2000' 10' 10' 10' 10' 10' DateTimeKind.Utc)'                      LastName = null'                      MiddleName = null                  };                    string json = JsonConvert.SerializeObject(requiredMembersClass);              }' "Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRequiredMembersClassNullRequiredValueProperty,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  RequiredMembersClass requiredMembersClass = new RequiredMembersClass                  {                      FirstName = null'                      BirthDate = new DateTime(2000' 10' 10' 10' 10' 10' DateTimeKind.Utc)'                      LastName = null'                      MiddleName = null                  };                    string json = JsonConvert.SerializeObject(requiredMembersClass);              }' "Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRequiredMembersClassNullRequiredValueProperty,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  RequiredMembersClass requiredMembersClass = new RequiredMembersClass                  {                      FirstName = null'                      BirthDate = new DateTime(2000' 10' 10' 10' 10' 10' DateTimeKind.Utc)'                      LastName = null'                      MiddleName = null                  };                    string json = JsonConvert.SerializeObject(requiredMembersClass);              }' "Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRequiredMembersClassNullRequiredValueProperty,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  RequiredMembersClass requiredMembersClass = new RequiredMembersClass                  {                      FirstName = null'                      BirthDate = new DateTime(2000' 10' 10' 10' 10' 10' DateTimeKind.Utc)'                      LastName = null'                      MiddleName = null                  };                    string json = JsonConvert.SerializeObject(requiredMembersClass);              }' "Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeJaggedArray,The following statement contains a magic number: aa.Coordinates = new[] { new[] { 1' 1 }' new[] { 1' 2 }' new[] { 2' 1 }' new[] { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeJaggedArray,The following statement contains a magic number: aa.Coordinates = new[] { new[] { 1' 1 }' new[] { 1' 2 }' new[] { 2' 1 }' new[] { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeJaggedArray,The following statement contains a magic number: aa.Coordinates = new[] { new[] { 1' 1 }' new[] { 1' 2 }' new[] { 2' 1 }' new[] { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeJaggedArray,The following statement contains a magic number: aa.Coordinates = new[] { new[] { 1' 1 }' new[] { 1' 2 }' new[] { 2' 1 }' new[] { 2' 2 } };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJaggedArray,The following statement contains a magic number: Assert.AreEqual(4' aa.Coordinates.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJaggedArray,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates[0].Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeJaggedArray,The following statement contains a magic number: Assert.AreEqual(2' aa.Coordinates[1][1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GetPerson,The following statement contains a magic number: Person person = new Person              {                  Name = "Mike Manager"'                  BirthDate = new DateTime(1983' 8' 3' 0' 0' 0' DateTimeKind.Utc)'                  Department = "IT"'                  LastModified = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GetPerson,The following statement contains a magic number: Person person = new Person              {                  Name = "Mike Manager"'                  BirthDate = new DateTime(1983' 8' 3' 0' 0' 0' DateTimeKind.Utc)'                  Department = "IT"'                  LastModified = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GetPerson,The following statement contains a magic number: Person person = new Person              {                  Name = "Mike Manager"'                  BirthDate = new DateTime(1983' 8' 3' 0' 0' 0' DateTimeKind.Utc)'                  Department = "IT"'                  LastModified = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GetPerson,The following statement contains a magic number: Person person = new Person              {                  Name = "Mike Manager"'                  BirthDate = new DateTime(1983' 8' 3' 0' 0' 0' DateTimeKind.Utc)'                  Department = "IT"'                  LastModified = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GetPerson,The following statement contains a magic number: Person person = new Person              {                  Name = "Mike Manager"'                  BirthDate = new DateTime(1983' 8' 3' 0' 0' 0' DateTimeKind.Utc)'                  Department = "IT"'                  LastModified = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GetPerson,The following statement contains a magic number: Person person = new Person              {                  Name = "Mike Manager"'                  BirthDate = new DateTime(1983' 8' 3' 0' 0' 0' DateTimeKind.Utc)'                  Department = "IT"'                  LastModified = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,WriteJsonDates,The following statement contains a magic number: LogEntry entry = new LogEntry              {                  LogDate = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)'                  Details = "Application started."              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,WriteJsonDates,The following statement contains a magic number: LogEntry entry = new LogEntry              {                  LogDate = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)'                  Details = "Application started."              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,WriteJsonDates,The following statement contains a magic number: LogEntry entry = new LogEntry              {                  LogDate = new DateTime(2009' 2' 15' 0' 0' 0' DateTimeKind.Utc)'                  Details = "Application started."              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IDictionaryProperty = new Dictionary<string' int>              {                  { "one"' 1 }'                  { "two"' 2 }'                  { "three"' 3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IDictionaryProperty = new Dictionary<string' int>              {                  { "one"' 1 }'                  { "two"' 2 }'                  { "three"' 3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IListProperty = new List<int>              {                  1' 2' 3              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IListProperty = new List<int>              {                  1' 2' 3              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IEnumerableProperty = new List<int>              {                  4' 5' 6              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IEnumerableProperty = new List<int>              {                  4' 5' 6              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,GenericListAndDictionaryInterfaceProperties,The following statement contains a magic number: o.IEnumerableProperty = new List<int>              {                  4' 5' 6              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PopulateDefaultValueWhenUsingConstructor,The following statement contains a magic number: Assert.AreEqual(21' c.TestProperty2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PopulateDefaultValueWhenUsingConstructor,The following statement contains a magic number: Assert.AreEqual(21' c.TestProperty2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PartialClassDeserialize,The following statement contains a magic number: Assert.AreEqual(8' n.FidOrder.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,OptInClassMetadataSerialization,The following statement contains a magic number: optInClass.Age = 26;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,OptInClassMetadataSerialization,The following statement contains a magic number: Assert.AreEqual(26' newOptInClass.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDataContractPrivateMembers,The following statement contains a magic number: DataContractPrivateMembers c = new DataContractPrivateMembers("Jeff"' 26' 10' "Dr");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDataContractPrivateMembers,The following statement contains a magic number: DataContractPrivateMembers c = new DataContractPrivateMembers("Jeff"' 26' 10' "Dr");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryInterface,The following statement contains a magic number: Assert.AreEqual(11' c.Dictionary["Item"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryInterfaceWithExistingValues,The following statement contains a magic number: Assert.AreEqual(3' c.Dictionary.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryInterfaceWithExistingValues,The following statement contains a magic number: Assert.AreEqual(11' c.Dictionary["Item"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryInterfaceWithExistingValues,The following statement contains a magic number: Assert.AreEqual(4' c.Collection.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryInterfaceWithExistingValues,The following statement contains a magic number: Assert.AreEqual(999' c.Collection.ElementAt(3));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryInterfaceWithExistingValues,The following statement contains a magic number: Assert.AreEqual(999' c.Collection.ElementAt(3));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserializationWithComments,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28' 0' 0' 0' DateTimeKind.Utc)' deserializedProduct.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserializationWithComments,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28' 0' 0' 0' DateTimeKind.Utc)' deserializedProduct.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserializationWithComments,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 28' 0' 0' 0' DateTimeKind.Utc)' deserializedProduct.ExpiryDate);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserializationWithComments,The following statement contains a magic number: Assert.AreEqual(3.99m' deserializedProduct.Price);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,TypedObjectDeserializationWithComments,The following statement contains a magic number: Assert.AreEqual("Large"' deserializedProduct.Sizes[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,AnonymousPlusLinqToSql,The following statement contains a magic number: var value = new              {                  bar = new JObject(new JProperty("baz"' 13))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeEnumerableAsObject,The following statement contains a magic number: Assert.AreEqual(2' content.Children.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGenericDictionary,The following statement contains a magic number: Assert.AreEqual(2' values.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeObjectSetOnlyProperty,The following statement contains a magic number: Assert.AreEqual(5' a.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeObjectSetOnlyProperty,The following statement contains a magic number: Assert.AreEqual(5' (int)a[a.Count - 1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableListWithNulls,The following statement contains a magic number: Assert.AreEqual(3' l.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableListWithNulls,The following statement contains a magic number: Assert.AreEqual(3.3m' l[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableListWithNulls,The following statement contains a magic number: Assert.AreEqual(1.1m' l[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableListWithNulls,The following statement contains a magic number: Assert.AreEqual(1.1m' l[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStruct,The following statement contains a magic number: StructTest structTest = new StructTest              {                  StringProperty = "StringProperty!"'                  StringField = "StringField"'                  IntProperty = 5'                  IntField = 10              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStruct,The following statement contains a magic number: StructTest structTest = new StructTest              {                  StringProperty = "StringProperty!"'                  StringField = "StringField"'                  IntProperty = 5'                  IntField = 10              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeListWithJsonConverter,The following statement contains a magic number: f.Bars.Add(new Bar { Id = 2 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeListWithJsonConverter,The following statement contains a magic number: Assert.AreEqual(3' newFoo.Bars.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeListWithJsonConverter,The following statement contains a magic number: Assert.AreEqual(2' newFoo.Bars[2].Id);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeListWithJsonConverter,The following statement contains a magic number: Assert.AreEqual(2' newFoo.Bars[2].Id);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeGuidKeyedDictionary,The following statement contains a magic number: dictionary.Add(new Guid("C2594C02-EBA1-426A-AA87-8DD8871350B0")' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializePersonKeyedDictionary,The following statement contains a magic number: dictionary.Add(new Person { Name = "p2" }' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeFragment,The following statement contains a magic number: Assert.AreEqual(2' searchResults.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.BirthDate = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.BirthDate = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.BirthDate = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.BirthDate = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.BirthDate = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.BirthDate = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.HourlyWage = 12.50m;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.LastModified = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.LastModified = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.LastModified = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.LastModified = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.LastModified = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeBaseReferenceWithDerivedValue,The following statement contains a magic number: wagePerson.LastModified = new DateTime(2000' 11' 29' 23' 59' 59' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePopulateDictionaryAndList,The following statement contains a magic number: Assert.AreEqual(2' d.Dictionary.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,IgnoreIndexedProperties,The following statement contains a magic number: g.Add(new KeyValueId { Id = 2' Key = "key2"' Value = "value2" });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDictionaryWithNoDefaultConstructor,The following statement contains a magic number: Assert.AreEqual(3' dic.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeToObjectProperty,The following statement contains a magic number: Assert.AreEqual(123L' item.Value);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DataContractJsonSerializerTest,The following statement contains a magic number: c.TimeSpanProperty = new TimeSpan(200' 20' 59' 30' 900);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DataContractJsonSerializerTest,The following statement contains a magic number: c.TimeSpanProperty = new TimeSpan(200' 20' 59' 30' 900);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DataContractJsonSerializerTest,The following statement contains a magic number: c.TimeSpanProperty = new TimeSpan(200' 20' 59' 30' 900);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DataContractJsonSerializerTest,The following statement contains a magic number: c.TimeSpanProperty = new TimeSpan(200' 20' 59' 30' 900);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DataContractJsonSerializerTest,The following statement contains a magic number: c.TimeSpanProperty = new TimeSpan(200' 20' 59' 30' 900);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUsingNonDefaultConstructorWithLeftOverValues,The following statement contains a magic number: Assert.AreEqual(2' kvPairs.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeClassWithInheritedProtectedMember,The following statement contains a magic number: AA myA = new AA(2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeClassWithInheritedProtectedMember,The following statement contains a magic number: BB myB = new BB(3' 4);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeClassWithInheritedProtectedMember,The following statement contains a magic number: BB myB = new BB(3' 4);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetField("AA_field1"' BindingFlags.Instance | BindingFlags.NonPublic)' myA));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property1"' BindingFlags.Instance | BindingFlags.NonPublic)' myA));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property2"' BindingFlags.Instance | BindingFlags.NonPublic)' myA));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property3"' BindingFlags.Instance | BindingFlags.NonPublic)' myA));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property4"' BindingFlags.Instance | BindingFlags.NonPublic)' myA));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(AA).GetField("AA_field1"' BindingFlags.Instance | BindingFlags.NonPublic)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property1"' BindingFlags.Instance | BindingFlags.NonPublic)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property2"' BindingFlags.Instance | BindingFlags.NonPublic)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property3"' BindingFlags.Instance | BindingFlags.NonPublic)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(2' ReflectionUtils.GetMemberValue(typeof(AA).GetProperty("AA_property4"' BindingFlags.Instance | BindingFlags.NonPublic)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(4' myB.BB_field1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(4' myB.BB_field2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' myB.BB_property1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' myB.BB_property2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property3"' BindingFlags.Instance | BindingFlags.Public)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property4"' BindingFlags.Instance | BindingFlags.NonPublic)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property6"' BindingFlags.Instance | BindingFlags.Public)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property7"' BindingFlags.Instance | BindingFlags.Public)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeClassWithInheritedProtectedMember,The following statement contains a magic number: Assert.AreEqual(3' ReflectionUtils.GetMemberValue(typeof(BB).GetProperty("BB_property8"' BindingFlags.Instance | BindingFlags.Public)' myB));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,FullClientMapSerialization,The following statement contains a magic number: ClientMap source = new ClientMap()              {                  position = new Pos() { X = 100' Y = 200 }'                  center = new PosDouble() { X = 251.6' Y = 361.3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,FullClientMapSerialization,The following statement contains a magic number: ClientMap source = new ClientMap()              {                  position = new Pos() { X = 100' Y = 200 }'                  center = new PosDouble() { X = 251.6' Y = 361.3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,FullClientMapSerialization,The following statement contains a magic number: ClientMap source = new ClientMap()              {                  position = new Pos() { X = 100' Y = 200 }'                  center = new PosDouble() { X = 251.6' Y = 361.3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,FullClientMapSerialization,The following statement contains a magic number: ClientMap source = new ClientMap()              {                  position = new Pos() { X = 100' Y = 200 }'                  center = new PosDouble() { X = 251.6' Y = 361.3 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRefAdditionalContent,The following statement contains a magic number: child.Add("_id"' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRefBadType,The following statement contains a magic number: ExceptionAssert.Throws<JsonSerializationException>(() =>              {                  //Additional text found in JSON string after finishing deserializing object.                  //Test 1                  var reference = new Dictionary<string' object>();                  reference.Add("$ref"' 1);                  reference.Add("$id"' 1);                    var child = new Dictionary<string' object>();                  child.Add("_id"' 2);                  child.Add("Name"' "Isabell");                  child.Add("Father"' reference);                    var json = JsonConvert.SerializeObject(child' Formatting.Indented);                  JsonConvert.DeserializeObject<Dictionary<string' object>>(json);              }' "JSON reference $ref property must have a string or null value. Path 'Father.$ref'' line 5' position 14.");
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRefNull,The following statement contains a magic number: child.Add("_id"' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeRefNull,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeIgnoredPropertyInConstructor,The following statement contains a magic number: Assert.AreEqual(2' cc.Second);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeFloatAsDecimal,The following statement contains a magic number: Assert.AreEqual(9.9m' dic["value"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDeserializeDictionaryKey,The following statement contains a magic number: Assert.AreEqual(2' newDictionary.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeNullableArray,The following statement contains a magic number: string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4' 4.3' null }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeNullableArray,The following statement contains a magic number: string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4' 4.3' null }' Formatting.Indented);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableArray,The following statement contains a magic number: Assert.AreEqual(3' d.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableArray,The following statement contains a magic number: Assert.AreEqual(2.4' d[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableArray,The following statement contains a magic number: Assert.AreEqual(4.3' d[1]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableArray,The following statement contains a magic number: Assert.AreEqual(null' d[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeHashSet,The following statement contains a magic number: Assert.AreEqual(3' d.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArray,The following statement contains a magic number: Assert.AreEqual(2' z.Length);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,StringDictionaryTest,The following statement contains a magic number: Assert.AreEqual(3' d.StringDictionaryProperty.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetIso,The following statement contains a magic number: var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject              {                  Offset = new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))              });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetIso,The following statement contains a magic number: var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject              {                  Offset = new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))              });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetIso,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(6)' deserializeObject.Offset.Offset);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetIso,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 1' 1)' deserializeObject.Offset.Date);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePropertyNullableDateTimeOffsetExactIso,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' d.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePropertyNullableDateTimeOffsetExactIso,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' d.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetMsAjax,The following statement contains a magic number: var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject              {                  Offset = new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))              }' Formatting.None' new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetMsAjax,The following statement contains a magic number: var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject              {                  Offset = new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))              }' Formatting.None' new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetMsAjax,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(6)' deserializeObject.Offset.Offset);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadWriteTimeZoneOffsetMsAjax,The following statement contains a magic number: Assert.AreEqual(new DateTime(2000' 1' 1)' deserializeObject.Offset.Date);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePropertyNullableDateTimeOffsetExactMsAjax,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' d.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializePropertyNullableDateTimeOffsetExactMsAjax,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(new DateTime(2000' 1' 1)' TimeSpan.FromHours(6))' d.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimalExact,The following statement contains a magic number: Assert.AreEqual(123456789876543.21m' d);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableDecimalExact,The following statement contains a magic number: Assert.AreEqual(123456789876543.21m' d);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimalPropertyExact,The following statement contains a magic number: Assert.AreEqual(123456789876543.21m' i.Amount);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimalArrayExact,The following statement contains a magic number: Assert.AreEqual(123456789876543.21m' a[0]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimalDictionaryExact,The following statement contains a magic number: Assert.AreEqual(123456789876543.21m' d["Value"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStructProperty,The following statement contains a magic number: obj.Position = new Vector { X = 1' Y = 2' Z = 3 };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStructProperty,The following statement contains a magic number: obj.Position = new Vector { X = 1' Y = 2' Z = 3 };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStructProperty,The following statement contains a magic number: Assert.AreEqual(2' obj.Position.Y);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStructProperty,The following statement contains a magic number: Assert.AreEqual(3' obj.Position.Z);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeEnumerable,The following statement contains a magic number: Assert.AreEqual("Three"' c2.Enumerable.ElementAt(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStringEnglish,The following statement contains a magic number: Assert.AreEqual(40' p.Age);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStringEnglish,The following statement contains a magic number: Assert.AreEqual(44.4' p.Height);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeStringEnglish,The following statement contains a magic number: Assert.AreEqual(4m' p.Price);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CommentTestClassTest,The following statement contains a magic number: Assert.AreEqual(1939' commentTestClass.StartYear);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,CommentTestClassTest,The following statement contains a magic number: Assert.AreEqual(63' commentTestClass.Values.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ImplementInterfaceObjectTest,The following statement contains a magic number: ImplementInterfaceObject cc = new ImplementInterfaceObject              {                  InterfaceMember = new DateTime(2010' 12' 31' 0' 0' 0' DateTimeKind.Utc)'                  NewMember = "NewMember!"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ImplementInterfaceObjectTest,The following statement contains a magic number: ImplementInterfaceObject cc = new ImplementInterfaceObject              {                  InterfaceMember = new DateTime(2010' 12' 31' 0' 0' 0' DateTimeKind.Utc)'                  NewMember = "NewMember!"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ImplementInterfaceObjectTest,The following statement contains a magic number: ImplementInterfaceObject cc = new ImplementInterfaceObject              {                  InterfaceMember = new DateTime(2010' 12' 31' 0' 0' 0' DateTimeKind.Utc)'                  NewMember = "NewMember!"              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonDefaultConstructorWithReadOnlyDictionaryPropertyTest,The following statement contains a magic number: c1.Categories.Add("two"' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NonDefaultConstructorWithReadOnlyDictionaryPropertyTest,The following statement contains a magic number: Assert.AreEqual(2' c2.Categories["two"]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGenericEnumerableProperty,The following statement contains a magic number: Assert.AreEqual(3' r.Departures.Count());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGenericEnumerableProperty,The following statement contains a magic number: Assert.IsNull(r.Departures.ElementAt(2));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: TestObject test = new TestObject("Test"' new byte[] { 72' 63' 62' 71' 92' 55 });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeByteArrayWithTypeNameHandling,The following statement contains a magic number: CollectionAssert.AreEquivalent(new byte[] { 72' 63' 62' 71' 92' 55 }' newObject.Data);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticDefault,The following statement contains a magic number: StaticTestClass.y = 2;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticDefault,The following statement contains a magic number: StaticTestClass.z = 3;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticDefault,The following statement contains a magic number: Assert.AreEqual(-2' StaticTestClass.y);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticDefault,The following statement contains a magic number: Assert.AreEqual(-3' StaticTestClass.z);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticReflection,The following statement contains a magic number: StaticTestClass.y = 2;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticReflection,The following statement contains a magic number: StaticTestClass.z = 3;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticReflection,The following statement contains a magic number: Assert.AreEqual(-2' StaticTestClass.y);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStaticReflection,The following statement contains a magic number: Assert.AreEqual(-3' StaticTestClass.z);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimalsWithCulture,The following statement contains a magic number: Assert.AreEqual(1.5m' c.Quantity);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimalsWithCulture,The following statement contains a magic number: Assert.AreEqual(2.2d' c.OptionalQuantity);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadForTypeHackFixDecimal,The following statement contains a magic number: IList<decimal> d1 = new List<decimal> { 1.1m };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeIConvertible,The following statement contains a magic number: ConvertableIntTestClass c = new ConvertableIntTestClass              {                  Integer = new ConvertibleInt(1)'                  NullableInteger1 = new ConvertibleInt(2)'                  NullableInteger2 = null              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: Item expected = new Item()              {                  SourceTypeID = new Guid("d8220a4b-75b1-4b7a-8112-b7bdae956a45")'                  BrokerID = new Guid("951663c4-924e-4c86-a57a-7ed737501dbd")'                  Latitude = 33.657145'                  Longitude = -117.766684'                  TimeStamp = new DateTime(2000' 3' 1' 23' 59' 59' DateTimeKind.Utc)'                  Payload = new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeGuid,The following statement contains a magic number: CollectionAssert.AreEquivalent((new byte[] { 0' 1' 2' 3' 4' 5' 6' 7' 8' 9 }).ToList()' bytes.ToList());
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableEnum,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new WithEnums              {                  Id = 7'                  NullableEnum = null              });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeNullableEnum,The following statement contains a magic number: json = JsonConvert.SerializeObject(new WithEnums              {                  Id = 7'                  NullableEnum = MyEnum.Value2              });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableStructWithConverter,The following statement contains a magic number: string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableStructWithConverter,The following statement contains a magic number: Assert.AreEqual(new WidgetId1 { Value = 1234 }' w.Id);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 1' 1' 1' 1' 1' 0' DateTimeKind.Utc).ToLocalTime()' c2.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 1' 1' 1' 1' 1' 0' TimeSpan.Zero)' c2.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTime(2008' 12' 12' 12' 12' 12' 0' DateTimeKind.Utc).ToLocalTime()' c.DateTimeField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,NullableDeserializeUTC,The following statement contains a magic number: Assert.AreEqual(new DateTimeOffset(2008' 12' 12' 12' 12' 12' 0' TimeSpan.Zero)' c.DateTimeOffsetField);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PrivateConstructor,The following statement contains a magic number: person.Age = 25;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,MetroBlogPost,The following statement contains a magic number: product.ExpiryDate = new DateTime(2012' 4' 1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,MetroBlogPost,The following statement contains a magic number: product.ExpiryDate = new DateTime(2012' 4' 1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,MetroBlogPost,The following statement contains a magic number: product.Price = 3.99M;
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,MultipleItems,The following statement contains a magic number: Assert.AreEqual(2' values.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredDeserializeMissing,The following statement contains a magic number: Assert.AreEqual(4' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredDeserializeMissing,The following statement contains a magic number: Assert.IsTrue(errors[2].StartsWith("Required property 'AllowNullProperty' not found in JSON. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredDeserializeMissing,The following statement contains a magic number: Assert.IsTrue(errors[3].StartsWith("Required property 'AlwaysProperty' not found in JSON. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredDeserializeNull,The following statement contains a magic number: Assert.AreEqual(3' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredDeserializeNull,The following statement contains a magic number: Assert.IsTrue(errors[2].StartsWith("Required property 'AlwaysProperty' expects a value but got null. Path ''"));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredSerialize,The following statement contains a magic number: Assert.AreEqual(3' errors.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ObjectRequiredSerialize,The following statement contains a magic number: Assert.AreEqual("Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''."' errors[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeCollectionItemConverter,The following statement contains a magic number: Assert.AreEqual(2' c2.Data.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: IDictionary<DateTimeOffset' int> dic1 = new Dictionary<DateTimeOffset' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: IDictionary<DateTimeOffset?' int> dic1 = new Dictionary<DateTimeOffset?' int>              {                  { new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)' 1 }'                  { new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTimeOffset_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTimeOffset(2013' 12' 12' 12' 12' 12' TimeSpan.Zero)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_Iso,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: IDictionary<DateTime' int> dic1 = new Dictionary<DateTime' int>              {                  { new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 1 }'                  { new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)' 2 }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(1' dic2[new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateTimeDictionaryKey_DateTime_MS,The following statement contains a magic number: Assert.AreEqual(2' dic2[new DateTime(2013' 12' 12' 12' 12' 12' DateTimeKind.Utc)]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PropertyItemConverter,The following statement contains a magic number: Event1 e = new Event1              {                  EventName = "Blackadder III"'                  Venue = "Gryphon Theatre"'                  Performances = new List<DateTime>                  {                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000)'                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000)'                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PropertyItemConverter,The following statement contains a magic number: Event1 e = new Event1              {                  EventName = "Blackadder III"'                  Venue = "Gryphon Theatre"'                  Performances = new List<DateTime>                  {                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000)'                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000)'                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,PropertyItemConverter,The following statement contains a magic number: Event1 e = new Event1              {                  EventName = "Blackadder III"'                  Venue = "Gryphon Theatre"'                  Performances = new List<DateTime>                  {                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000)'                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000)'                      DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)                  }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeCaseInsensitiveKeyValuePairConverter,The following statement contains a magic number: Assert.AreEqual(123' result.Key);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeKeyValuePairConverterWithCamelCase,The following statement contains a magic number: string json =                  JsonConvert.SerializeObject(new KeyValuePair<int' string>(123' "test value")' Formatting.Indented' new JsonSerializerSettings                  {                      ContractResolver = new CamelCasePropertyNamesContractResolver()                  });
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeFloatingPointHandling,The following statement contains a magic number: IList<double> d = new List<double> { 1.1' double.NaN' double.PositiveInfinity };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeCustomTupleWithSerializableAttribute,The following statement contains a magic number: var tuple = new MyTuple<int>(500);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeCustomTupleWithSerializableAttributeInPartialTrust,The following statement contains a magic number: var tuple = new MyTuplePartial<int>(500);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,RoundtripOfDateTimeOffset,The following statement contains a magic number: Assert.AreEqual(TimeSpan.FromHours(9.5)' dateTimeOffset.Offset);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringForInternetExplorer,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,JsonSerializerDateFormatString,The following statement contains a magic number: IList<object> dates = new List<object>              {                  new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc)'                  new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1))              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDeserializeTuple,The following statement contains a magic number: Tuple<int' int> tuple = Tuple.Create(500' 20);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDeserializeTuple,The following statement contains a magic number: Tuple<int' int> tuple = Tuple.Create(500' 20);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDeserializeTuple,The following statement contains a magic number: Assert.AreEqual(500' tuple2.Item1);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeDeserializeTuple,The following statement contains a magic number: Assert.AreEqual(20' tuple2.Item2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,SerializeStructWithSerializableAndDataContract,The following statement contains a magic number: Pair<string' int> p = new Pair<string' int>("One"' 2);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadStringFloatingPointSymbols,The following statement contains a magic number: Assert.AreEqual(float.NegativeInfinity' floats[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ReadStringFloatingPointSymbols,The following statement contains a magic number: Assert.AreEqual(float.NegativeInfinity' doubles[2]);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DefaultDateStringFormatVsUnsetDateStringFormat,The following statement contains a magic number: IDictionary<string' object> dates = new Dictionary<string' object>              {                  { "DateTime-Unspecified"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Unspecified) }'                  { "DateTime-Utc"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Utc) }'                  { "DateTime-Local"' new DateTime(2000' 12' 12' 12' 12' 12' DateTimeKind.Local) }'                  { "DateTimeOffset-Zero"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.Zero) }'                  { "DateTimeOffset-Plus1"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1)) }'                  { "DateTimeOffset-Plus15"' new DateTimeOffset(2000' 12' 12' 12' 12' 12' TimeSpan.FromHours(1.5)) }              };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeDecimal,The following statement contains a magic number: Assert.AreEqual(1234567890.123456m' d);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeCustomReferenceResolver,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DeserializeCustomReferenceResolver_ViaProvider,The following statement contains a magic number: Assert.AreEqual(2' people.Count);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,ConvertibleIdTest,The following statement contains a magic number: var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }' X = 2 };
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTime,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTime,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTime,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTimeAndCulture,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTimeAndCulture,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTimeAndCulture,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTime,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTime,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTime,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTime_ReadAhead,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTime_ReadAhead,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTime_ReadAhead,The following statement contains a magic number: DateTime dt = new DateTime(2000' 12' 22);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 22' 0' 0' 0' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 22' 0' 0' 0' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 22' 0' 0' 0' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 22' 0' 0' 0' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 22' 0' 0' 0' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(2000' 12' 22' 0' 0' 0' TimeSpan.Zero);
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTimeOffset,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(new DateTime(2000' 12' 22));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTimeOffset,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(new DateTime(2000' 12' 22));
Magic Number,Newtonsoft.Json.Tests.Serialization,JsonSerializerTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DateFormatStringWithDateTimeOffset,The following statement contains a magic number: DateTimeOffset dt = new DateTimeOffset(new DateTime(2000' 12' 22));
Magic Number,Newtonsoft.Json.Tests.Serialization,DTOWithParameterisedConstructor,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DTOWithParameterisedConstructor,The following statement contains a magic number: B = 2;
Magic Number,Newtonsoft.Json.Tests.Serialization,DTOWithoutParameterisedConstructor,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,DTOWithoutParameterisedConstructor,The following statement contains a magic number: B = 2;
Magic Number,Newtonsoft.Json.Tests.Serialization,StaticTestClass,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerTest.cs,StaticTestClass,The following statement contains a magic number: z = 3;
Magic Number,Newtonsoft.Json.Tests.TestObjects,DictionaryInterfaceClass,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\DictionaryInterfaceClass.cs,DictionaryInterfaceClass,The following statement contains a magic number: Collection = new List<int>              {                  1'                  2'                  3              };
Magic Number,Newtonsoft.Json.Tests.TestObjects,DictionaryInterfaceClass,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\DictionaryInterfaceClass.cs,DictionaryInterfaceClass,The following statement contains a magic number: Collection = new List<int>              {                  1'                  2'                  3              };
Magic Number,Newtonsoft.Json.Tests.TestObjects,Shape,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Shape.cs,Shape,The following statement contains a magic number: _unique_Empty = new Shape(3);
Magic Number,Newtonsoft.Json.Tests.TestObjects,VersionKeyedCollection,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\VersionKeyedCollection.cs,GetEnumerator,The following statement contains a magic number: i % 2 == 0
Magic Number,Newtonsoft.Json.Tests.TestObjects,SerializationEventTestDictionary,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\SerializationEventTestDictionary.cs,SerializationEventTestDictionary,The following statement contains a magic number: Member1 = 11;
Magic Number,Newtonsoft.Json.Tests.TestObjects,SerializationEventTestList,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\SerializationEventTestList.cs,SerializationEventTestList,The following statement contains a magic number: Member1 = 11;
Magic Number,Newtonsoft.Json.Tests.TestObjects,SerializationEventTestObject,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\SerializationEventTestObject.cs,SerializationEventTestObject,The following statement contains a magic number: Member1 = 11;
Magic Number,Newtonsoft.Json.Tests.TestObjects,Store,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Store.cs,Store,The following statement contains a magic number: rocket.ExpiryDate = new DateTime(2000' 2' 2' 23' 1' 30' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.TestObjects,Store,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Store.cs,Store,The following statement contains a magic number: rocket.ExpiryDate = new DateTime(2000' 2' 2' 23' 1' 30' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.TestObjects,Store,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Store.cs,Store,The following statement contains a magic number: rocket.ExpiryDate = new DateTime(2000' 2' 2' 23' 1' 30' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.TestObjects,Store,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Store.cs,Store,The following statement contains a magic number: rocket.ExpiryDate = new DateTime(2000' 2' 2' 23' 1' 30' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.TestObjects,Store,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\TestObjects\Store.cs,Store,The following statement contains a magic number: rocket.ExpiryDate = new DateTime(2000' 2' 2' 23' 1' 30' DateTimeKind.Utc);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromTypeTests,The following statement contains a magic number: GenerateSchemaAndSerializeFromType(new DateTime(2000' 12' 29' 23' 59' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromTypeTests,The following statement contains a magic number: GenerateSchemaAndSerializeFromType(new DateTime(2000' 12' 29' 23' 59' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromTypeTests,The following statement contains a magic number: GenerateSchemaAndSerializeFromType(new DateTime(2000' 12' 29' 23' 59' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromTypeTests,The following statement contains a magic number: GenerateSchemaAndSerializeFromType(new DateTime(2000' 12' 29' 23' 59' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromTypeTests,The following statement contains a magic number: GenerateSchemaAndSerializeFromType(new DateTime(2000' 12' 29' 23' 59' 0' DateTimeKind.Utc));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,GenerateSchemaAndSerializeFromTypeTests,The following statement contains a magic number: GenerateSchemaAndSerializeFromType(TimeSpan.FromTicks(1000000));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMaximum_Int,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Maximum = 10;                  schema.ExclusiveMaximum = true;                    JValue v = new JValue(10);                  v.Validate(schema);              }' "Integer 10 equals maximum value of 10 and exclusive maximum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMaximum_Int,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Maximum = 10;                  schema.ExclusiveMaximum = true;                    JValue v = new JValue(10);                  v.Validate(schema);              }' "Integer 10 equals maximum value of 10 and exclusive maximum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMaximum_Float,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Maximum = 10.1;                  schema.ExclusiveMaximum = true;                    JValue v = new JValue(10.1);                  v.Validate(schema);              }' "Float 10.1 equals maximum value of 10.1 and exclusive maximum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMaximum_Float,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Maximum = 10.1;                  schema.ExclusiveMaximum = true;                    JValue v = new JValue(10.1);                  v.Validate(schema);              }' "Float 10.1 equals maximum value of 10.1 and exclusive maximum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMinimum_Int,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Minimum = 10;                  schema.ExclusiveMinimum = true;                    JValue v = new JValue(10);                  v.Validate(schema);              }' "Integer 10 equals minimum value of 10 and exclusive minimum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMinimum_Int,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Minimum = 10;                  schema.ExclusiveMinimum = true;                    JValue v = new JValue(10);                  v.Validate(schema);              }' "Integer 10 equals minimum value of 10 and exclusive minimum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMinimum_Float,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Minimum = 10.1;                  schema.ExclusiveMinimum = true;                    JValue v = new JValue(10.1);                  v.Validate(schema);              }' "Float 10.1 equals minimum value of 10.1 and exclusive minimum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,ExclusiveMinimum_Float,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.Minimum = 10.1;                  schema.ExclusiveMinimum = true;                    JValue v = new JValue(10.1);                  v.Validate(schema);              }' "Float 10.1 equals minimum value of 10.1 and exclusive minimum is true.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,DivisibleBy_Int,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.DivisibleBy = 3;                    JValue v = new JValue(10);                  v.Validate(schema);              }' "Integer 10 is not evenly divisible by 3.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,DivisibleBy_Int,The following statement contains a magic number: ExceptionAssert.Throws<JsonSchemaException>(() =>              {                  JsonSchema schema = new JsonSchema();                  schema.DivisibleBy = 3;                    JValue v = new JValue(10);                  v.Validate(schema);              }' "Integer 10 is not evenly divisible by 3.");
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,DivisibleBy_Approx,The following statement contains a magic number: schema.DivisibleBy = 0.01;
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,DivisibleBy_Approx,The following statement contains a magic number: JValue v = new JValue(20.49);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleUnique,The following statement contains a magic number: JArray a = new JArray(1' 2' 3);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleUnique,The following statement contains a magic number: JArray a = new JArray(1' 2' 3);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleDuplicate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 2' 2);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleDuplicate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 2' 2);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleDuplicate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 2' 2);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleDuplicate,The following statement contains a magic number: JArray a = new JArray(1' 2' 3' 2' 2);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_SimpleDuplicate,The following statement contains a magic number: Assert.AreEqual(2' errorMessages.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The following statement contains a magic number: JArray a = new JArray(1' new JObject(new JProperty("value"' "value!"))' 3' 2' new JObject(new JProperty("value"' "value!"))' 4' 2' new JObject(new JProperty("value"' "value!")));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The following statement contains a magic number: JArray a = new JArray(1' new JObject(new JProperty("value"' "value!"))' 3' 2' new JObject(new JProperty("value"' "value!"))' 4' 2' new JObject(new JProperty("value"' "value!")));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The following statement contains a magic number: JArray a = new JArray(1' new JObject(new JProperty("value"' "value!"))' 3' 2' new JObject(new JProperty("value"' "value!"))' 4' 2' new JObject(new JProperty("value"' "value!")));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The following statement contains a magic number: JArray a = new JArray(1' new JObject(new JProperty("value"' "value!"))' 3' 2' new JObject(new JProperty("value"' "value!"))' 4' 2' new JObject(new JProperty("value"' "value!")));
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The following statement contains a magic number: Assert.AreEqual(3' errorMessages.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_ComplexDuplicate,The following statement contains a magic number: Assert.AreEqual("Non-unique array item at index 7."' errorMessages[2]);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: JArray a = new JArray(                  new JArray(1' 2)'                  new JArray(1' 1)'                  new JArray(3' 4)'                  new JArray(1' 2)'                  new JArray(1' 1)                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: JArray a = new JArray(                  new JArray(1' 2)'                  new JArray(1' 1)'                  new JArray(3' 4)'                  new JArray(1' 2)'                  new JArray(1' 1)                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: JArray a = new JArray(                  new JArray(1' 2)'                  new JArray(1' 1)'                  new JArray(3' 4)'                  new JArray(1' 2)'                  new JArray(1' 1)                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: JArray a = new JArray(                  new JArray(1' 2)'                  new JArray(1' 1)'                  new JArray(3' 4)'                  new JArray(1' 2)'                  new JArray(1' 1)                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: Assert.AreEqual(4' errorMessages.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: Assert.AreEqual("Non-unique array item at index 1."' errorMessages[2]);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_NestedDuplicate,The following statement contains a magic number: Assert.AreEqual("Non-unique array item at index 4."' errorMessages[3]);
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,Enum_Properties,The following statement contains a magic number: schema.Properties = new Dictionary<string' JsonSchema>              {                  {                      "bar"'                      new JsonSchema                      {                          Enum = new List<JToken>                          {                              new JValue(1)'                              new JValue(2)                          }                      }                  }              };
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,Enum_Properties,The following statement contains a magic number: o = new JObject(                  new JProperty("bar"' 3)                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_Property,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("bar"' new JArray(1' 2' 3' 3))                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_Property,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("bar"' new JArray(1' 2' 3' 3))                  );
Magic Number,Newtonsoft.Json.Tests.Schema,ExtensionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\ExtensionsTests.cs,UniqueItems_Property,The following statement contains a magic number: JObject o = new JObject(                  new JProperty("bar"' new JArray(1' 2' 3' 3))                  );
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(4' model.Properties.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(10' model.Properties["secondproperty"].MaximumLength);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(3' model.Properties["thirdproperty"].AdditionalProperties.Enum.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual("one"' (string)model.Properties["thirdproperty"].AdditionalProperties.Enum[2]);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(9' model.Properties["thirdproperty"].Properties["thirdproperty_firstproperty"].MaximumLength);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(7' model.Properties["thirdproperty"].Properties["thirdproperty_firstproperty"].MinimumLength);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,ExtendedComplex,The following statement contains a magic number: Assert.AreEqual(2' model.Properties["thirdproperty"].Properties["thirdproperty_firstproperty"].Patterns.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaModelBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaModelBuilderTests.cs,Required,The following statement contains a magic number: Assert.AreEqual(3' model.Properties.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaNodeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaNodeTests.cs,AddSchema,The following statement contains a magic number: Assert.AreEqual(2' node.Schemas.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaNodeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaNodeTests.cs,AddSchema,The following statement contains a magic number: Assert.AreEqual(2' node.Properties["firstproperty"].Schemas.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaNodeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaNodeTests.cs,AddSchema,The following statement contains a magic number: Assert.AreEqual(3' node.Properties["secondproperty"].Schemas.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaNodeTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaNodeTests.cs,AddSchema,The following statement contains a magic number: Assert.AreEqual(3' node.Properties["secondproperty"].Properties["secondproperty_firstproperty"].Schemas.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,Simple,The following statement contains a magic number: Assert.AreEqual(2' schema.Properties.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,MinimumMaximum,The following statement contains a magic number: Assert.AreEqual(1.1' schema.Minimum);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,MinimumMaximum,The following statement contains a magic number: Assert.AreEqual(1.2' schema.Maximum);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,MinimumMaximum,The following statement contains a magic number: Assert.AreEqual(2' schema.MaximumItems);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,MinimumMaximum,The following statement contains a magic number: Assert.AreEqual(5' schema.MinimumLength);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,MinimumMaximum,The following statement contains a magic number: Assert.AreEqual(50' schema.MaximumLength);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,MinimumMaximum,The following statement contains a magic number: Assert.AreEqual(3' schema.DivisibleBy);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,DefaultPrimitiveType,The following statement contains a magic number: Assert.AreEqual(1.1' (double)schema.Default);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaBuilderTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaBuilderTests.cs,Enum,The following statement contains a magic number: Assert.AreEqual(8' schema.Enum.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaGeneratorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaGeneratorTests.cs,Generate_Store,The following statement contains a magic number: Assert.AreEqual(11' schema.Properties.Count);
Magic Number,Newtonsoft.Json.Tests.Schema,JsonSchemaGeneratorTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Schema\JsonSchemaGeneratorTests.cs,Generate_Store,The following statement contains a magic number: Assert.AreEqual(4' productSchema.Properties.Count);
Magic Number,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndOutBool,The following statement contains a magic number: ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 2);
Magic Number,Newtonsoft.Json.Tests.Utilities,ExpressionReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\ExpressionReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndRefBoolAndRefBool,The following statement contains a magic number: ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 3);
Magic Number,Newtonsoft.Json.Tests.Utilities,LateboundReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\LateboundReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndOutBool,The following statement contains a magic number: ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 2);
Magic Number,Newtonsoft.Json.Tests.Utilities,LateboundReflectionDelegateFactoryTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Utilities\LateboundReflectionDelegateFactoryTests.cs,ConstructorWithRefStringAndRefBoolAndRefBool,The following statement contains a magic number: ConstructorInfo constructor = TestReflectionUtils.GetConstructors(typeof(OutAndRefTestClass)).Single(c => c.GetParameters().Count() == 3);
Duplicate Code,Newtonsoft.Json.Tests.Linq,LinqToJsonTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Linq\LinqToJsonTest.cs,ChildrenExtension,The method contains a code clone-set at the following line numbers (starting from the method definition): ((3' 26)' (28' 51))
Duplicate Code,Newtonsoft.Json.Tests.Serialization,JsonSerializerCollectionsTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\Serialization\JsonSerializerCollectionsTests.cs,SerializeTypeName3DArray,The method contains a code clone-set at the following line numbers (starting from the method definition): ((22' 53)' (55' 86))
Missing Default,Newtonsoft.Json.Tests,JsonTextWriterTest,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\JsonTextWriterTest.cs,BuildStateArray,The following switch statement is missing a default case: switch (valueToken)                  {                      case JsonToken.Integer:                      case JsonToken.Float:                      case JsonToken.String:                      case JsonToken.Boolean:                      case JsonToken.Null:                      case JsonToken.Undefined:                      case JsonToken.Date:                      case JsonToken.Bytes:                          Assert.AreEqual(valueStates' stateArray[(int)valueToken]' "Error for " + valueToken + " states.");                          break;                  }
Missing Default,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,BuildJObjectComparedToXml,The following switch statement is missing a default case: switch (name)                      {                          case "Property1":                              Int32.Parse(property.Value);                              break;                          case "Property2":                              Int32.Parse(property.Value);                              break;                          case "Property3":                              Int32.Parse(property.Value);                              break;                          case "Property4":                              Int32.Parse(property.Value);                              break;                          case "Property5":                              Int32.Parse(property.Value);                              break;                      }
Missing Default,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,DeserializeJsonNetManual,The following switch statement is missing a default case: switch (propertyName)                      {                          case "strings":                              reader.Read();                              while (reader.Read() && reader.TokenType != JsonToken.EndArray)                              {                                  c.strings.Add((string)reader.Value);                              }                              break;                          case "dictionary":                              reader.Read();                              while (reader.Read() && reader.TokenType != JsonToken.EndObject)                              {                                  string key = (string)reader.Value;                                  c.dictionary.Add(key' reader.ReadAsInt32().GetValueOrDefault());                              }                              break;                          case "Name":                              c.Name = reader.ReadAsString();                              break;                          case "Now":                              c.Now = reader.ReadAsDateTime().GetValueOrDefault();                              break;                          case "BigNumber":                              c.BigNumber = reader.ReadAsDecimal().GetValueOrDefault();                              break;                          case "Address1":                              reader.Read();                              c.Address1 = CreateAddress(reader);                              break;                          case "Addresses":                              reader.Read();                              while (reader.Read() && reader.TokenType != JsonToken.EndArray)                              {                                  var address = CreateAddress(reader);                                  c.Addresses.Add(address);                              }                              break;                      }
Missing Default,Newtonsoft.Json.Tests,PerformanceTests,D:\research\architectureSmells\repos\dejavusecurity_OutlookPrivacyPlugin\3rdParty\Newtonsoft.Json-7.0.1\Src\Newtonsoft.Json.Tests\PerformanceTests.cs,CreateAddress,The following switch statement is missing a default case: switch ((string)reader.Value)                      {                          case "Street":                              a.Street = reader.ReadAsString();                              break;                          case "Phone":                              a.Phone = reader.ReadAsString();                              break;                          case "Entered":                              a.Entered = reader.ReadAsDateTime().GetValueOrDefault();                              break;                      }
