Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,GitVersionCore.Tests,AssemblyFileVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyFileVersionTests.cs,ValidateAssemblyFileVersionBuilder,The method has 6 parameters. Parameters: assemblyFileVersioningScheme' major' minor' patch' tag' versionString
Long Parameter List,GitVersionCore.Tests,DynamicRepositoryTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DynamicRepositoryTests.cs,FindsVersionInDynamicRepo,The method has 5 parameters. Parameters: name' url' targetBranch' commitId' expectedFullSemVer
Long Parameter List,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,GetVersion,The method has 6 parameters. Parameters: fixture' configuration' repository' commitId' isForTrackedBranchOnly' targetBranch
Long Parameter List,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,AssertFullSemver,The method has 6 parameters. Parameters: fixture' fullSemver' repository' commitId' isForTrackedBranchOnly' targetBranch
Long Parameter List,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,AssertFullSemver,The method has 7 parameters. Parameters: fixture' configuration' fullSemver' repository' commitId' isForTrackedBranchOnly' targetBranch
Long Parameter List,GitVersionCore.Tests,InformationalVersionBuilderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\InformationalVersionBuilderTests.cs,ValidateInformationalVersionBuilder,The method has 10 parameters. Parameters: branchName' sha' shortSha' major' minor' patch' tag' versionSourceSha' commitsSinceTag' versionString
Long Parameter List,GitVersionCore.Tests,MergeMessageTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\MergeMessageTests.cs,ParsesGitHubPullMergeMessage,The method has 5 parameters. Parameters: message' expectedMergedBranch' expectedTargetBranch' expectedVersion' expectedPullRequestNumber
Long Parameter List,GitVersionCore.Tests,MergeMessageTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\MergeMessageTests.cs,ParsesBitBucketPullMergeMessage,The method has 5 parameters. Parameters: message' expectedMergedBranch' expectedTargetBranch' expectedVersion' expectedPullRequestNumber
Long Parameter List,GitVersionCore.Tests,MergeMessageTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\MergeMessageTests.cs,ParsesInvalidMergeMessage,The method has 5 parameters. Parameters: message' expectedMergedBranch' expectedTargetBranch' expectedVersion' expectedPullRequestNumber
Long Parameter List,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ValidateVersionParsing,The method has 12 parameters. Parameters: versionString' major' minor' patch' tag' tagNumber' numberOfBuilds' branchName' sha' otherMetaData' fullFormattedVersionString' tagPrefixRegex
Long Parameter List,GitVersionCore.Tests,TestableVersionVariables,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\TestableVersionVariables.cs,TestableVersionVariables,The method has 30 parameters. Parameters: major' minor' patch' buildMetaData' buildMetaDataPadded' fullBuildMetaData' branchName' sha' shortSha' majorMinorPatch' semVer' legacySemVer' legacySemVerPadded' fullSemVer' assemblySemVer' assemblySemFileVer' preReleaseTag' preReleaseTagWithDash' preReleaseLabel' preReleaseNumber' weightedPreReleaseNumber' informationalVersion' commitDate' nugetVersion' nugetVersionV2' nugetPreReleaseTag' nugetPreReleaseTagV2' versionSourceSha' commitsSinceVersionSource' commitsSinceVersionSourcePadded
Long Parameter List,GitVersionCore.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The method has 26 parameters. Parameters: assemblyVersioningScheme' assemblyFileVersioningScheme' assemblyVersioningFormat' assemblyFileVersioningFormat' assemblyInformationalFormat' versioningMode' gitTagPrefix' tag' nextVersion' branchPrefixToTrim' preventIncrementForMergedBranchVersion' tagNumberPattern' continuousDeploymentFallbackTag' trackMergeTarget' majorMessage' minorMessage' patchMessage' noBumpMessage' commitMessageMode' legacySemVerPadding' buildMetaDataPadding' commitsSinceVersionSourcePadding' versionFilters' tracksReleaseBranches' isRelease' commitDateFormat
Long Identifier,GitVersionCore.Tests,DefaultConfigFileLocatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DefaultConfigFileLocatorTests.cs,ThrowsExceptionOnAmbiguousConfigFileLocation,The length of the parameter workingDirectoryConfigFilePath is 30.
Long Identifier,GitVersionCore.Tests,DocumentationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DocumentationTests.cs,ConfigurationDocumentationIsUpToDate,The length of the parameter configurationDocumentationFile is 30.
Long Identifier,GitVersionCore.Tests,NamedConfigFileLocatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\NamedConfigFileLocatorTests.cs,ThrowsExceptionOnAmbiguousConfigFileLocation,The length of the parameter workingDirectoryConfigFilePath is 30.
Long Identifier,GitVersionCore.Tests,TestableVersionVariables,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\TestableVersionVariables.cs,TestableVersionVariables,The length of the parameter commitsSinceVersionSourcePadded is 31.
Long Identifier,GitVersionCore.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The length of the parameter preventIncrementForMergedBranchVersion is 38.
Long Identifier,GitVersionCore.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The length of the parameter continuousDeploymentFallbackTag is 31.
Long Identifier,GitVersionCore.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The length of the parameter commitsSinceVersionSourcePadding is 32.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,Setup,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldCreateAssemblyInfoFileWhenNotExistsAndEnsureAssemblyInfo,The length of the statement  "            var variables = variableProvider.GetVariablesFor(SemanticVersion.Parse("1.0.0"' "v")' new TestEffectiveConfiguration()' false); " is 127.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldCreateAssemblyInfoFileWhenNotExistsAndEnsureAssemblyInfo,The length of the statement  "            using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' true); " is 128.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldCreateAssemblyInfoFileAtPathWhenNotExistsAndEnsureAssemblyInfo,The length of the statement  "            var variables = variableProvider.GetVariablesFor(SemanticVersion.Parse("1.0.0"' "v")' new TestEffectiveConfiguration()' false); " is 127.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldCreateAssemblyInfoFileAtPathWhenNotExistsAndEnsureAssemblyInfo,The length of the statement  "            using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' true); " is 128.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldCreateAssemblyInfoFilesAtPathWhenNotExistsAndEnsureAssemblyInfo,The length of the statement  "            var variables = variableProvider.GetVariablesFor(SemanticVersion.Parse("1.0.0"' "v")' new TestEffectiveConfiguration()' false); " is 127.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldCreateAssemblyInfoFilesAtPathWhenNotExistsAndEnsureAssemblyInfo,The length of the statement  "            using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFiles' workingDir' variables' fileSystem' log' true); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldNotCreateAssemblyInfoFileWhenNotExistsAndNotEnsureAssemblyInfo,The length of the statement  "            var variables = variableProvider.GetVariablesFor(SemanticVersion.Parse("1.0.0"' "v")' new TestEffectiveConfiguration()' false); " is 127.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldNotCreateAssemblyInfoFileWhenNotExistsAndNotEnsureAssemblyInfo,The length of the statement  "            using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldNotCreateAssemblyInfoFileForUnknownSourceCodeAndEnsureAssemblyInfo,The length of the statement  "            var variables = variableProvider.GetVariablesFor(SemanticVersion.Parse("1.0.0"' "v")' new TestEffectiveConfiguration()' false); " is 127.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldNotCreateAssemblyInfoFileForUnknownSourceCodeAndEnsureAssemblyInfo,The length of the statement  "            using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' true); " is 128.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldStartSearchFromWorkingDirectory,The length of the statement  "            var variables = variableProvider.GetVariablesFor(SemanticVersion.Parse("1.0.0"' "v")' new TestEffectiveConfiguration()' false); " is 127.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldStartSearchFromWorkingDirectory,The length of the statement  "            using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFiles' workingDir' variables' fileSystem' log' false); " is 130.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersion,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldNotReplaceAssemblyVersionWhenVersionSchemeIsNone,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionInRelativePath,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionInRelativePathWithWhiteSpace,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionWithStar,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionWithAtttributeSuffix,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldAddAssemblyVersionIfMissingFromInfoFile,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAlreadySubstitutedValues,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionWhenCreatingAssemblyVersionFileAndEnsureAssemblyInfo,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionInRelativePathWithVariables,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldReplaceAssemblyVersionInRelativePathWithVariablesAndWhiteSpace,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldAddAssemblyInformationalVersionWhenUpdatingAssemblyVersionFile,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,Issue1183ShouldAddFSharpAssemblyInformationalVersionBesideOtherAttributes,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,ShouldNotAddAssemblyInformationalVersionWhenUpdatingAssemblyVersionFileWhenVersionSchemeIsNone,The length of the statement  "                using var assemblyInfoFileUpdater = new AssemblyInfoFileUpdater(assemblyInfoFile' workingDir' variables' fileSystem' log' false); " is 129.
Long Statement,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,VerifyAssemblyInfoFile,The length of the statement  "                BuildMetaData = new SemanticVersionBuildMetaData("versionSourceHash"' 3' "foo"' "hash"' "shortHash"' DateTimeOffset.Now)' " is 121.
Long Statement,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The length of the statement  "                                        BuildMetaData = new SemanticVersionBuildMetaData("950d2f830f5a2af12a6779a48d20dcbb02351f25"' 0' "master"' "3139d4eeb044f46057693473eacc2655b3b27e7d"' "3139d4eeb"' new DateTimeOffset(date' TimeSpan.Zero))' // assume time zone is UTC " is 231.
Long Statement,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The length of the statement  "                                        AssemblyVersioningScheme.MajorMinorPatch' AssemblyFileVersioningScheme.MajorMinorPatch' ""' ""' ""' VersioningMode.ContinuousDelivery' ""' ""' ""' IncrementStrategy.Inherit' " is 173.
Long Statement,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The length of the statement  "                                        ""' true' ""' ""' false' ""' ""' ""' ""' CommitMessageIncrementMode.Enabled' 4' 4' 4' Enumerable.Empty<IVersionFilter>()' false' true' format' 0) " is 145.
Long Statement,GitVersionCore.Tests,ConfigProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\ConfigProviderTests.cs,CanReadOldDocument,The length of the statement  "            error.Message.ShouldContainWithoutWhitespace(@"GitVersion configuration file contains old configuration' please fix the following errors: " is 137.
Long Statement,GitVersionCore.Tests,ConfigProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\ConfigProviderTests.cs,CanReadOldDocument,The length of the statement  "develop-branch-tag has been replaced by branch specific configuration.See http://gitversion.readthedocs.org/en/latest/configuration/#branch-configuration " is 153.
Long Statement,GitVersionCore.Tests,ConfigProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\ConfigProviderTests.cs,CanReadOldDocument,The length of the statement  "release-branch-tag has been replaced by branch specific configuration.See http://gitversion.readthedocs.org/en/latest/configuration/#branch-configuration"); " is 156.
Long Statement,GitVersionCore.Tests,DefaultConfigFileLocatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DefaultConfigFileLocatorTests.cs,WarnOnExistingGitVersionConfigYamlFile,The length of the statement  "            var configFileDeprecatedWarning = $"{DefaultConfigFileLocator.ObsoleteFileName}' is deprecated' use '{DefaultConfigFileLocator.DefaultFileName}' instead"; " is 154.
Long Statement,GitVersionCore.Tests,DefaultConfigFileLocatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DefaultConfigFileLocatorTests.cs,ThrowsExceptionOnAmbiguousConfigFileLocation,The length of the statement  "            var expecedMessage = $"Ambiguous config file selection from '{workingDirectoryConfigFilePath}' and '{repositoryConfigFilePath}'"; " is 129.
Long Statement,GitVersionCore.Tests,DefaultConfigFileLocatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DefaultConfigFileLocatorTests.cs,NoWarnOnGitVersionYmlFile,The length of the statement  "                var configurationProvider = new ConfigProvider(fileSystem' log' defaultConfigFileLocator' gitPreparer' configInitWizard); " is 121.
Long Statement,GitVersionCore.Tests,DocumentationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DocumentationTests.cs,ReadDocumentationFile,The length of the statement  "                throw new FileNotFoundException($"The documentation file '{documentationFilePath}' couldn't be found."' documentationFilePath); " is 127.
Long Statement,GitVersionCore.Tests,DynamicRepositoryTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DynamicRepositoryTests.cs,FindsVersionInDynamicRepo,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metadataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,DynamicRepositoryTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\DynamicRepositoryTests.cs,FindsVersionInDynamicRepo,The length of the statement  "            var gitVersionCalculator = new GitVersionCalculator(testFileSystem' log' configFileLocator' configurationProvider' buildServerResolver' gitVersionCache' gitVersionFinder' gitPreparer' variableProvider' options); " is 211.
Long Statement,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,GetVersion,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,GetVersion,The length of the statement  "            var gitVersionContext = new GitVersionContext(repository ?? fixture.Repository' log' targetBranch' configuration' isForTrackedBranchOnly' commitId); " is 148.
Long Statement,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,GetVersion,The length of the statement  "            var variables = variableProvider.GetVariablesFor(executeGitVersion' gitVersionContext.Configuration' gitVersionContext.IsCurrentCommitTagged); " is 142.
Long Statement,GitVersionCore.Tests,GitToolsTestingExtensions,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitToolsTestingExtensions.cs,ExecuteGitVersion,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metadataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,GitVersionContextTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionContextTests.cs,CanInheritIncrement,The length of the statement  "            var context = new GitVersionContext(fixture.Repository' new NullLog()' fixture.Repository.Branches[dummyBranchName]' config); " is 125.
Long Statement,GitVersionCore.Tests,GitVersionContextTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionContextTests.cs,UsesFirstBranchConfigWhenMultipleMatch,The length of the statement  "                    { "release/latest"' new BranchConfig { Increment = IncrementStrategy.None' Regex = "release/latest"' SourceBranches = new List<string>() } }' " is 141.
Long Statement,GitVersionCore.Tests,GitVersionContextTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionContextTests.cs,UsesFirstBranchConfigWhenMultipleMatch,The length of the statement  "                    { "release"' new BranchConfig { Increment = IncrementStrategy.Patch' Regex = "releases?[/-]"' SourceBranches = new List<string>() } } " is 133.
Long Statement,GitVersionCore.Tests,GitVersionContextTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionContextTests.cs,UsesFirstBranchConfigWhenMultipleMatch,The length of the statement  "            var releaseLatestBranch = new MockBranch("release/latest") { new MockCommit { CommitterEx = Generate.SignatureNow() } }; " is 120.
Long Statement,GitVersionCore.Tests,GitVersionContextTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionContextTests.cs,UsesFirstBranchConfigWhenMultipleMatch,The length of the statement  "            var releaseVersionBranch = new MockBranch("release/1.0.0") { new MockCommit { CommitterEx = Generate.SignatureNow() } }; " is 120.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,SetUp,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,CacheFileExistsOnDiskWhenOverrideConfigIsSpecifiedVersionShouldBeDynamicallyCalculatedWithoutSavingInCache,The length of the statement  "                arguments = new Arguments { TargetPath = fixture.RepositoryPath' OverrideConfig = new Config { TagPrefix = "prefix" } }; " is 120.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,CacheFileExistsOnDiskWhenOverrideConfigIsSpecifiedVersionShouldBeDynamicallyCalculatedWithoutSavingInCache,The length of the statement  "                cachedDirectoryTimestampAfter.ShouldBe(cacheDirectoryTimestamp' () => "Cache was updated when override config was set"); " is 120.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,RepositoryScope,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(this.log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 134.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,RepositoryScope,The length of the statement  "            var gitVersionCalculator = new GitVersionCalculator(fileSystem' log' configFileLocator' configurationProvider' buildServerResolver' gitVersionCache' gitVersionFinder' gitPreparer' variableProvider' options); " is 207.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,GetGitVersionCalculator,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,GitVersionExecutorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionExecutorTests.cs,GetGitVersionCalculator,The length of the statement  "            var gitVersionCalculator = new GitVersionCalculator(fileSystem' log' configFileLocator' configurationProvider' buildServerResolver' gitVersionCache' gitVersionFinder' gitPreparer' variableProvider' options); " is 207.
Long Statement,GitVersionCore.Tests,GitVersionInformationGeneratorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionInformationGeneratorTests.cs,ShouldCreateFile,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,InformationalVersionBuilderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\InformationalVersionBuilderTests.cs,ValidateInformationalVersionBuilder,The length of the statement  "                BuildMetaData = new SemanticVersionBuildMetaData(versionSourceSha' commitsSinceTag' branchName' sha' shortSha' DateTimeOffset.MinValue)' " is 136.
Long Statement,GitVersionCore.Tests,JsonVersionBuilderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\JsonVersionBuilderTests.cs,Json,The length of the statement  "                BuildMetaData = new SemanticVersionBuildMetaData("versionSourceSha"' 5' "feature1"' "commitSha"' "commitShortSha"' DateTimeOffset.Parse("2014-03-06 23:59:59Z")) " is 160.
Long Statement,GitVersionCore.Tests,JsonVersionBuilderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\JsonVersionBuilderTests.cs,Json,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,NamedConfigFileLocatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\NamedConfigFileLocatorTests.cs,ThrowsExceptionOnAmbiguousConfigFileLocation,The length of the statement  "            var expectedMessage = $"Ambiguous config file selection from '{workingDirectoryConfigFilePath}' and '{repositoryConfigFilePath}'"; " is 130.
Long Statement,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,RetryOperationThrowsWhenNegativeMaxRetries,The length of the statement  "            Action action = () => new OperationWithExponentialBackoff<IOException>(new MockThreadSleep()' new NullLog()' () => { }' -1); " is 124.
Long Statement,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationIsRetriedAMaximumNumberOfTimesAsync,The length of the statement  "            var retryOperation = new OperationWithExponentialBackoff<IOException>(new MockThreadSleep()' new NullLog()' Operation' numberOfRetries); " is 136.
Long Statement,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationDelayDoublesBetweenRetries,The length of the statement  "            var retryOperation = new OperationWithExponentialBackoff<IOException>(new MockThreadSleep(Validator)' new NullLog()' Operation' numberOfRetries); " is 145.
Long Statement,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,TotalSleepTimeForSixRetriesIsAboutThirtySecondsAsync,The length of the statement  "            var retryOperation = new OperationWithExponentialBackoff<IOException>(new MockThreadSleep(Validator)' new NullLog()' Operation' numberOfRetries); " is 145.
Long Statement,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,LegacySemVerTest,The length of the statement  "            new SemanticVersionPreReleaseTag("AReallyReallyReallyLongBranchName"' null).ToString("l").ShouldBe("AReallyReallyReallyL"); " is 123.
Long Statement,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,LegacySemVerTest,The length of the statement  "            new SemanticVersionPreReleaseTag("AReallyReallyReallyLongBranchName"' 1).ToString("lp").ShouldBe("AReallyReallyRea0001"); " is 121.
Long Statement,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,Setup,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeWithTagNamePattern,The length of the statement  "            var config = new TestEffectiveConfiguration(versioningMode: VersioningMode.ContinuousDeployment' tagNumberPattern: @"[/-](?<number>\d+)[-/]"); " is 142.
Long Statement,GitVersionCore.Tests,VersionSourceTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionSourceTests.cs,VersionSourceSha,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,VersionSourceTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionSourceTests.cs,VersionSourceShaOneCommit,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,VersionSourceTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionSourceTests.cs,VersionSourceShaUsingTag,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests,WixFileTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\WixFileTests.cs,UpdateWixVersionFile,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests.BuildServers,AzurePipelinesTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\AzurePipelinesTests.cs,EscapeValues,The length of the statement  "            var vsVersion = versionBuilder.GenerateSetParameterMessage("Foo"' "0.8.0-unstable568 Branch:'develop' Sha:'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb'"); " is 151.
Long Statement,GitVersionCore.Tests.BuildServers,AzurePipelinesTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\AzurePipelinesTests.cs,EscapeValues,The length of the statement  "            vsVersion[0].ShouldBe("##vso[task.setvariable variable=GitVersion.Foo;]0.8.0-unstable568 Branch:'develop' Sha:'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb'"); " is 155.
Long Statement,GitVersionCore.Tests.BuildServers,BuildServerBaseTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\BuildServerBaseTests.cs,SetUp,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests.BuildServers,CodeBuildTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\CodeBuildTests.cs,SetUp,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests.BuildServers,GitLabCiMessageGenerationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\GitLabCiMessageGenerationTest.cs,SetUp,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests.BuildServers,JenkinsMessageGenerationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\JenkinsMessageGenerationTests.cs,SetUp,The length of the statement  "            var nextVersionCalculator = new NextVersionCalculator(log' metaDataCalculator' baseVersionCalculator' mainlineVersionCalculator); " is 129.
Long Statement,GitVersionCore.Tests.BuildServers,MyGetTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\MyGetTests.cs,EscapeValues,The length of the statement  "            var message = versionBuilder.GenerateSetParameterMessage("Foo"' "0.8.0-unstable568 Branch:'develop' Sha:'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb'"); " is 149.
Long Statement,GitVersionCore.Tests.BuildServers,MyGetTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\MyGetTests.cs,EscapeValues,The length of the statement  "            Assert.AreEqual("##myget[setParameter name='GitVersion.Foo' value='0.8.0-unstable568 Branch:|'develop|' Sha:|'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb|'']"' message[0]); " is 169.
Long Statement,GitVersionCore.Tests.BuildServers,TeamCityTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\TeamCityTests.cs,EscapeValues,The length of the statement  "            var tcVersion = versionBuilder.GenerateSetParameterMessage("Foo"' "0.8.0-unstable568 Branch:'develop' Sha:'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb'"); " is 151.
Long Statement,GitVersionCore.Tests.BuildServers,TeamCityTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\TeamCityTests.cs,EscapeValues,The length of the statement  "            Assert.AreEqual("##teamcity[setParameter name='GitVersion.Foo' value='0.8.0-unstable568 Branch:|'develop|' Sha:|'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb|'']"' tcVersion[0]); " is 174.
Long Statement,GitVersionCore.Tests.BuildServers,TeamCityTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\TeamCityTests.cs,EscapeValues,The length of the statement  "            Assert.AreEqual("##teamcity[setParameter name='system.GitVersion.Foo' value='0.8.0-unstable568 Branch:|'develop|' Sha:|'ee69bff1087ebc95c6b43aa2124bd58f5722e0cb|'']"' tcVersion[1]); " is 181.
Long Statement,GitVersionCore.Tests.Configuration,IgnoreConfigTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\Configuration\IgnoreConfigTests.cs,ShouldSupportsOtherSequenceFormat,The length of the statement  "            config.Ignore.ShAs.ShouldBe(new[] { "b6c0c9fda88830ebcd563e500a5a7da5a1658e98"' "6c19c7c219ecf8dbc468042baefa73a1b213e8b1" }); " is 126.
Long Statement,GitVersionCore.Tests.Helpers,DirectoryHelper,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\Helpers\DirectoryHelper.cs,DeleteDirectory,The length of the statement  "                                              "{0}Most of the time' this is due to an external process accessing the files in the temporary repositories created during the test runs' and keeping a handle on the directory' thus preventing the deletion of those files." + " is 223.
Long Statement,GitVersionCore.Tests.Helpers,DirectoryHelper,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\Helpers\DirectoryHelper.cs,DeleteDirectory,The length of the statement  "                                              "{0}- Windows Search Indexer (go to the Indexing Options' in the Windows Control Panel' and exclude the bin folder of LibGit2Sharp.Tests)" + " is 140.
Long Statement,GitVersionCore.Tests.Init,InitScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\Init\InitScenarios.cs,CanSetNextVersion,The length of the statement  "            var gitPreparer = new GitPreparer(log' new TestEnvironment()' Options.Create(new Arguments { TargetPath = workingDirectory })); " is 127.
Long Statement,GitVersionCore.Tests.IntegrationTests,HotfixBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\HotfixBranchScenarios.cs,CanTakeVersionFromHotfixesBranch,The length of the statement  "            Commands.Checkout(fixture.Repository' fixture.Repository.CreateBranch("support-1.1"' (Commit)fixture.Repository.Tags.Single(t => t.FriendlyName == "1.1.0").Target)); " is 165.
Long Statement,GitVersionCore.Tests.IntegrationTests,MainlineDevelopmentMode,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MainlineDevelopmentMode.cs,MergedFeatureBranchesToMasterImpliesRelease,The length of the statement  "            // We should evaluate any commits not included in merge commit calculations for direct commit/push or squash to merge commits " is 125.
Long Statement,GitVersionCore.Tests.IntegrationTests,MainlineDevelopmentMode,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MainlineDevelopmentMode.cs,VerifyIncrementConfigIsHonoured,The length of the statement  "            // We should evaluate any commits not included in merge commit calculations for direct commit/push or squash to merge commits " is 125.
Long Statement,GitVersionCore.Tests.IntegrationTests,OtherScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\OtherScenarios.cs,DoNotBlowUpWhenMasterAndDevelopPointAtSameCommit,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Long Statement,GitVersionCore.Tests.IntegrationTests,OtherScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\OtherScenarios.cs,DoNotBlowUpWhenDevelopAndFeatureBranchPointAtSameCommit,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Long Statement,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CommitBeetweenMergeReleaseToDevelopShouldNotResetCount,The length of the statement  "            fixture.Repository.Merge(commit1' Generate.SignatureNow()' new MergeOptions { FastForwardStrategy = FastForwardStrategy.NoFastForward }); " is 137.
Long Statement,GitVersionCore.Tests.IntegrationTests,RemoteRepositoryScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\RemoteRepositoryScenarios.cs,GivenARemoteGitRepositoryWithCommitsAndBranchesThenClonedLocalShouldMatchRemoteVersion,The length of the statement  "            GitRepositoryHelper.NormalizeGitDirectory(new NullLog()' new TestEnvironment()' fixture.LocalRepositoryFixture.RepositoryPath' new AuthenticationInfo()' noFetch: false' currentBranch: string.Empty' isDynamicRepository: true); " is 225.
Long Statement,GitVersionCore.Tests.IntegrationTests,RemoteRepositoryScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\RemoteRepositoryScenarios.cs,GivenARemoteGitRepositoryWhenCheckingOutDetachedheadUsingExistingImplementationThrowsException,The length of the statement  "            Should.Throw<WarningException>(() => fixture.AssertFullSemver("0.1.0+4"' fixture.LocalRepositoryFixture.Repository' isForTrackedBranchOnly: false)' " is 147.
Long Statement,GitVersionCore.Tests.IntegrationTests,RemoteRepositoryScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\RemoteRepositoryScenarios.cs,GivenARemoteGitRepositoryWhenCheckingOutDetachedheadUsingExistingImplementationThrowsException,The length of the statement  "                $"It looks like the branch being examined is a detached Head pointing to commit '{fixture.LocalRepositoryFixture.Repository.Head.Tip.Id.ToString(7)}'. Without a proper branch name GitVersion cannot determine the build version."); " is 229.
Long Statement,GitVersionCore.Tests.IntegrationTests,VersionInCurrentBranchNameScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\VersionInCurrentBranchNameScenarios.cs,TakesVersionFromNameOfRemoteReleaseBranchInOrigin,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Long Statement,GitVersionCore.Tests.IntegrationTests,VersionInCurrentBranchNameScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\VersionInCurrentBranchNameScenarios.cs,DoesNotTakeVersionFromNameOfRemoteReleaseBranchInCustomRemote,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Long Statement,GitVersionCore.Tests.IntegrationTests,VersionInMergedBranchNameScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\VersionInMergedBranchNameScenarios.cs,TakesVersionFromNameOfRemoteReleaseBranchInOrigin,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Long Statement,GitVersionCore.Tests.IntegrationTests,VersionInMergedBranchNameScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\VersionInMergedBranchNameScenarios.cs,DoesNotTakeVersionFromNameOfRemoteReleaseBranchInCustomRemote,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Long Statement,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,ShouldIncrementVersionBasedOnConfig,The length of the statement  "            var semanticVersionBuildMetaData = new SemanticVersionBuildMetaData("ef7d0d7e1e700f1c7c9fa01ea6791bb778a5c37c"' 1' "master"' "b1a34edbd80e141f7cc046c074f109be7d022074"' "b1a34e"' DateTimeOffset.Now); " is 199.
Long Statement,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,ShouldIncrementVersionBasedOnConfig,The length of the statement  "            var sut = new NextVersionCalculator(log' new TestMetaDataCalculator(semanticVersionBuildMetaData)' baseCalculator' mainlineVersionCalculator); " is 142.
Long Statement,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,DoesNotIncrementWhenBaseVersionSaysNotTo,The length of the statement  "            var semanticVersionBuildMetaData = new SemanticVersionBuildMetaData("ef7d0d7e1e700f1c7c9fa01ea6791bb778a5c37c"' 1' "master"' "b1a34edbd80e141f7cc046c074f109be7d022074"' "b1a34e"' DateTimeOffset.Now); " is 199.
Long Statement,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,DoesNotIncrementWhenBaseVersionSaysNotTo,The length of the statement  "            var sut = new NextVersionCalculator(log' new TestMetaDataCalculator(semanticVersionBuildMetaData)' baseCalculator' mainlineVersionCalculator); " is 142.
Long Statement,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,AppliesBranchPreReleaseTag,The length of the statement  "            var semanticVersionBuildMetaData = new SemanticVersionBuildMetaData("ef7d0d7e1e700f1c7c9fa01ea6791bb778a5c37c"' 2' "develop"' "b1a34edbd80e141f7cc046c074f109be7d022074"' "b1a34e"' DateTimeOffset.Now); " is 200.
Long Statement,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,AppliesBranchPreReleaseTag,The length of the statement  "            var sut = new NextVersionCalculator(log' new TestMetaDataCalculator(semanticVersionBuildMetaData)' baseCalculator' mainlineVersionCalculator); " is 142.
Long Statement,GitVersionCore.Tests.VersionCalculation.Strategies,VersionInBranchNameBaseVersionStrategyTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\Strategies\VersionInBranchNameBaseVersionStrategyTests.cs,CanTakeVersionFromNameOfConfiguredReleaseBranch,The length of the statement  "            var branchConfigs = new Dictionary<string' BranchConfig> { { "support"' new BranchConfig { IsReleaseBranch = true } } }; " is 120.
Long Statement,GitVersionCore.Tests.VersionCalculation.Strategies,VersionInBranchNameBaseVersionStrategyTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\Strategies\VersionInBranchNameBaseVersionStrategyTests.cs,CanTakeVersionFromNameOfRemoteReleaseBranch,The length of the statement  "            Commands.Fetch((Repository)fixture.LocalRepositoryFixture.Repository' fixture.LocalRepositoryFixture.Repository.Network.Remotes.First().Name' new string[0]' new FetchOptions()' null); " is 183.
Magic Number,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,VerifyAssemblyInfoFile,The following statement contains a magic number: var version = new SemanticVersion              {                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceHash"' 3' "foo"' "hash"' "shortHash"' DateTimeOffset.Now)'                  Major = 2'                  Minor = 3'                  Patch = 1              };
Magic Number,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,VerifyAssemblyInfoFile,The following statement contains a magic number: var version = new SemanticVersion              {                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceHash"' 3' "foo"' "hash"' "shortHash"' DateTimeOffset.Now)'                  Major = 2'                  Minor = 3'                  Patch = 1              };
Magic Number,GitVersionCore.Tests,AssemblyInfoFileUpdaterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\AssemblyInfoFileUpdaterTests.cs,VerifyAssemblyInfoFile,The following statement contains a magic number: var version = new SemanticVersion              {                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceHash"' 3' "foo"' "hash"' "shortHash"' DateTimeOffset.Now)'                  Major = 2'                  Minor = 3'                  Patch = 1              };
Magic Number,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The following statement contains a magic number: var date = new DateTime(2017' 10' 6);
Magic Number,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The following statement contains a magic number: var date = new DateTime(2017' 10' 6);
Magic Number,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The following statement contains a magic number: var date = new DateTime(2017' 10' 6);
Magic Number,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The following statement contains a magic number: var formatValues = new SemanticVersionFormatValues(                                      new SemanticVersion                                      {                                          BuildMetaData = new SemanticVersionBuildMetaData("950d2f830f5a2af12a6779a48d20dcbb02351f25"' 0' "master"' "3139d4eeb044f46057693473eacc2655b3b27e7d"' "3139d4eeb"' new DateTimeOffset(date' TimeSpan.Zero))' // assume time zone is UTC                                        }'                                      new EffectiveConfiguration(                                          AssemblyVersioningScheme.MajorMinorPatch' AssemblyFileVersioningScheme.MajorMinorPatch' ""' ""' ""' VersioningMode.ContinuousDelivery' ""' ""' ""' IncrementStrategy.Inherit'                                          ""' true' ""' ""' false' ""' ""' ""' ""' CommitMessageIncrementMode.Enabled' 4' 4' 4' Enumerable.Empty<IVersionFilter>()' false' true' format' 0)                                  );
Magic Number,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The following statement contains a magic number: var formatValues = new SemanticVersionFormatValues(                                      new SemanticVersion                                      {                                          BuildMetaData = new SemanticVersionBuildMetaData("950d2f830f5a2af12a6779a48d20dcbb02351f25"' 0' "master"' "3139d4eeb044f46057693473eacc2655b3b27e7d"' "3139d4eeb"' new DateTimeOffset(date' TimeSpan.Zero))' // assume time zone is UTC                                        }'                                      new EffectiveConfiguration(                                          AssemblyVersioningScheme.MajorMinorPatch' AssemblyFileVersioningScheme.MajorMinorPatch' ""' ""' ""' VersioningMode.ContinuousDelivery' ""' ""' ""' IncrementStrategy.Inherit'                                          ""' true' ""' ""' false' ""' ""' ""' ""' CommitMessageIncrementMode.Enabled' 4' 4' 4' Enumerable.Empty<IVersionFilter>()' false' true' format' 0)                                  );
Magic Number,GitVersionCore.Tests,CommitDateTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\CommitDateTests.cs,CommitDateFormatTest,The following statement contains a magic number: var formatValues = new SemanticVersionFormatValues(                                      new SemanticVersion                                      {                                          BuildMetaData = new SemanticVersionBuildMetaData("950d2f830f5a2af12a6779a48d20dcbb02351f25"' 0' "master"' "3139d4eeb044f46057693473eacc2655b3b27e7d"' "3139d4eeb"' new DateTimeOffset(date' TimeSpan.Zero))' // assume time zone is UTC                                        }'                                      new EffectiveConfiguration(                                          AssemblyVersioningScheme.MajorMinorPatch' AssemblyFileVersioningScheme.MajorMinorPatch' ""' ""' ""' VersioningMode.ContinuousDelivery' ""' ""' ""' IncrementStrategy.Inherit'                                          ""' true' ""' ""' false' ""' ""' ""' ""' CommitMessageIncrementMode.Enabled' 4' 4' 4' Enumerable.Empty<IVersionFilter>()' false' true' format' 0)                                  );
Magic Number,GitVersionCore.Tests,GitVersionInformationGeneratorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionInformationGeneratorTests.cs,ShouldCreateFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable4"'                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceSha"' 5'                      "feature1"' "commitSha"' "commitShortSha"' DateTimeOffset.Parse("2014-03-06 23:59:59Z"))              };
Magic Number,GitVersionCore.Tests,GitVersionInformationGeneratorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionInformationGeneratorTests.cs,ShouldCreateFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable4"'                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceSha"' 5'                      "feature1"' "commitSha"' "commitShortSha"' DateTimeOffset.Parse("2014-03-06 23:59:59Z"))              };
Magic Number,GitVersionCore.Tests,GitVersionInformationGeneratorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\GitVersionInformationGeneratorTests.cs,ShouldCreateFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable4"'                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceSha"' 5'                      "feature1"' "commitSha"' "commitShortSha"' DateTimeOffset.Parse("2014-03-06 23:59:59Z"))              };
Magic Number,GitVersionCore.Tests,JsonVersionBuilderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\JsonVersionBuilderTests.cs,Json,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 0'                  PreReleaseTag = "unstable4"'                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceSha"' 5' "feature1"' "commitSha"' "commitShortSha"' DateTimeOffset.Parse("2014-03-06 23:59:59Z"))              };
Magic Number,GitVersionCore.Tests,JsonVersionBuilderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\JsonVersionBuilderTests.cs,Json,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 0'                  PreReleaseTag = "unstable4"'                  BuildMetaData = new SemanticVersionBuildMetaData("versionSourceSha"' 5' "feature1"' "commitSha"' "commitShortSha"' DateTimeOffset.Parse("2014-03-06 23:59:59Z"))              };
Magic Number,GitVersionCore.Tests,MergeMessageTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\MergeMessageTests.cs,MatchesCaptureGroupsFromCustomMessages,The following statement contains a magic number: var pr = 1234;
Magic Number,GitVersionCore.Tests,MergeMessageTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\MergeMessageTests.cs,MatchesCaptureGroupsFromCustomMessages,The following statement contains a magic number: sut.Version.ShouldBe(new SemanticVersion(2' 0));
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationIsRetriedOnIoException,The following statement contains a magic number: operationCount < 2
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationIsRetriedOnIoException,The following statement contains a magic number: operationCount.ShouldBe(2);
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationIsRetriedAMaximumNumberOfTimesAsync,The following statement contains a magic number: const int numberOfRetries = 3;
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationDelayDoublesBetweenRetries,The following statement contains a magic number: const int numberOfRetries = 3;
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationDelayDoublesBetweenRetries,The following statement contains a magic number: var expectedSleepMSec = 500;
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,OperationDelayDoublesBetweenRetries,The following statement contains a magic number: return Task.Run(() =>                  {                      sleepCount++;                      u.ShouldBe(expectedSleepMSec);                      expectedSleepMSec *= 2;                  });
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,TotalSleepTimeForSixRetriesIsAboutThirtySecondsAsync,The following statement contains a magic number: const int numberOfRetries = 6;
Magic Number,GitVersionCore.Tests,OperationWithExponentialBackoffTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\OperationWithExponentialBackoffTests.cs,TotalSleepTimeForSixRetriesIsAboutThirtySecondsAsync,The following statement contains a magic number: totalSleep.ShouldBe(31500);
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringJTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringJTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringJTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringJTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringSTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringSTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringSTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringSTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLpTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLpTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLpTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringLpTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringFTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringFTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringFTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringFTests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringITests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringITests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringITests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,SemanticVersionTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\SemanticVersionTests.cs,ToStringITests,The following statement contains a magic number: var fullSemVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = new SemanticVersionPreReleaseTag("beta"' 4)'                  BuildMetaData = new SemanticVersionBuildMetaData                  {                      Sha = "theSha"'                      Branch = "TheBranch"'                      CommitsSinceTag = 5'                      OtherMetaData = "TheOtherMetaData"                  }              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForPreRelease,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable.4"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForPreRelease,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable.4"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForPreReleaseWithPadding,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable.4"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForPreReleaseWithPadding,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable.4"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForPreReleaseWithPadding,The following statement contains a magic number: var config = new TestEffectiveConfiguration(buildMetaDataPadding: 2' legacySemVerPadding: 5);
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForPreReleaseWithPadding,The following statement contains a magic number: var config = new TestEffectiveConfiguration(buildMetaDataPadding: 2' legacySemVerPadding: 5);
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForPreRelease,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable.4"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForPreRelease,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "unstable.4"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForStable,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeliveryModeForStable,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForStable,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForStable,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForStableWhenCurrentCommitIsTagged,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData =                  {                      VersionSourceSha = "versionSourceSha"'                      CommitsSinceTag = 5'                      CommitsSinceVersionSource = 5'                      Sha = "commitSha"'                      ShortSha = "commitShortSha"'                      CommitDate = DateTimeOffset.Parse("2014-03-06 23:59:59Z")                  }              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForStableWhenCurrentCommitIsTagged,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData =                  {                      VersionSourceSha = "versionSourceSha"'                      CommitsSinceTag = 5'                      CommitsSinceVersionSource = 5'                      Sha = "commitSha"'                      ShortSha = "commitShortSha"'                      CommitDate = DateTimeOffset.Parse("2014-03-06 23:59:59Z")                  }              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForStableWhenCurrentCommitIsTagged,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData =                  {                      VersionSourceSha = "versionSourceSha"'                      CommitsSinceTag = 5'                      CommitsSinceVersionSource = 5'                      Sha = "commitSha"'                      ShortSha = "commitShortSha"'                      CommitDate = DateTimeOffset.Parse("2014-03-06 23:59:59Z")                  }              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeForStableWhenCurrentCommitIsTagged,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData =                  {                      VersionSourceSha = "versionSourceSha"'                      CommitsSinceTag = 5'                      CommitsSinceVersionSource = 5'                      Sha = "commitSha"'                      ShortSha = "commitShortSha"'                      CommitDate = DateTimeOffset.Parse("2014-03-06 23:59:59Z")                  }              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeWithTagNamePattern,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "PullRequest"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeWithTagNamePattern,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "PullRequest"'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeWithTagSetToUseBranchName,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VariableProviderTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VariableProviderTests.cs,ProvidesVariablesInContinuousDeploymentModeWithTagSetToUseBranchName,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,VersionSourceTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionSourceTests.cs,VersionSourceSha,The following statement contains a magic number: version.BuildMetaData.CommitsSinceVersionSource.ShouldBe(2);
Magic Number,GitVersionCore.Tests,WixFileTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\WixFileTests.cs,UpdateWixVersionFile,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,WixFileTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\WixFileTests.cs,UpdateWixVersionFile,The following statement contains a magic number: var semVer = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  BuildMetaData = "5.Branch.develop"              };
Magic Number,GitVersionCore.Tests,WixFileTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\WixFileTests.cs,UpdateWixVersionFile,The following statement contains a magic number: var config = new TestEffectiveConfiguration(buildMetaDataPadding: 2' legacySemVerPadding: 5);
Magic Number,GitVersionCore.Tests,WixFileTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\WixFileTests.cs,UpdateWixVersionFile,The following statement contains a magic number: var config = new TestEffectiveConfiguration(buildMetaDataPadding: 2' legacySemVerPadding: 5);
Magic Number,GitVersionCore.Tests.BuildServers,BuildServerBaseTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\BuildServerBaseTests.cs,BuildNumberIsFullSemVer,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,BuildServerBaseTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\BuildServerBaseTests.cs,BuildNumberIsFullSemVer,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,CodeBuildTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\CodeBuildTests.cs,AssertVariablesAreWrittenToFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,CodeBuildTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\CodeBuildTests.cs,AssertVariablesAreWrittenToFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,GitLabCiMessageGenerationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\GitLabCiMessageGenerationTest.cs,AssertVariablesAreWrittenToFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,GitLabCiMessageGenerationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\GitLabCiMessageGenerationTest.cs,AssertVariablesAreWrittenToFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,JenkinsMessageGenerationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\JenkinsMessageGenerationTests.cs,AssertVariablesAreWrittenToFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.BuildServers,JenkinsMessageGenerationTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\BuildServers\JenkinsMessageGenerationTests.cs,AssertVariablesAreWrittenToFile,The following statement contains a magic number: var semanticVersion = new SemanticVersion              {                  Major = 1'                  Minor = 2'                  Patch = 3'                  PreReleaseTag = "beta1"'                  BuildMetaData = "5"              };
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,ShouldNotUseNumberInFeatureBranchAsPreReleaseNumberOffDevelop,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,ShouldNotUseNumberInFeatureBranchAsPreReleaseNumberOffMaster,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,TestFeatureBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,TestFeaturesBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,ShouldUseConfiguredTag,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,ShouldHaveAGreaterSemVerAfterDevelopIsMergedIntoFeature,The following statement contains a magic number: var config = new Config()              {                  VersioningMode = VersioningMode.ContinuousDeployment'                  AssemblyVersioningScheme = AssemblyVersioningScheme.Major'                  AssemblyFileVersioningFormat = "{MajorMinorPatch}.{env:WeightedPreReleaseNumber ?? 0}"'                  LegacySemVerPadding = 4'                  BuildMetaDataPadding = 4'                  CommitsSinceVersionSourcePadding = 4'                  CommitMessageIncrementing = CommitMessageIncrementMode.Disabled'                  Branches = new Dictionary<string' BranchConfig>                  {                      {                          "develop"' new BranchConfig()                          {                              PreventIncrementOfMergedBranchVersion = true                          }                      }'                      {                          "feature"' new BranchConfig()                          {                              Tag = "feat-{BranchName}"                          }                      }                  }              };
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,ShouldHaveAGreaterSemVerAfterDevelopIsMergedIntoFeature,The following statement contains a magic number: var config = new Config()              {                  VersioningMode = VersioningMode.ContinuousDeployment'                  AssemblyVersioningScheme = AssemblyVersioningScheme.Major'                  AssemblyFileVersioningFormat = "{MajorMinorPatch}.{env:WeightedPreReleaseNumber ?? 0}"'                  LegacySemVerPadding = 4'                  BuildMetaDataPadding = 4'                  CommitsSinceVersionSourcePadding = 4'                  CommitMessageIncrementing = CommitMessageIncrementMode.Disabled'                  Branches = new Dictionary<string' BranchConfig>                  {                      {                          "develop"' new BranchConfig()                          {                              PreventIncrementOfMergedBranchVersion = true                          }                      }'                      {                          "feature"' new BranchConfig()                          {                              Tag = "feat-{BranchName}"                          }                      }                  }              };
Magic Number,GitVersionCore.Tests.IntegrationTests,FeatureBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\FeatureBranchScenarios.cs,ShouldHaveAGreaterSemVerAfterDevelopIsMergedIntoFeature,The following statement contains a magic number: var config = new Config()              {                  VersioningMode = VersioningMode.ContinuousDeployment'                  AssemblyVersioningScheme = AssemblyVersioningScheme.Major'                  AssemblyFileVersioningFormat = "{MajorMinorPatch}.{env:WeightedPreReleaseNumber ?? 0}"'                  LegacySemVerPadding = 4'                  BuildMetaDataPadding = 4'                  CommitsSinceVersionSourcePadding = 4'                  CommitMessageIncrementing = CommitMessageIncrementMode.Disabled'                  Branches = new Dictionary<string' BranchConfig>                  {                      {                          "develop"' new BranchConfig()                          {                              PreventIncrementOfMergedBranchVersion = true                          }                      }'                      {                          "feature"' new BranchConfig()                          {                              Tag = "feat-{BranchName}"                          }                      }                  }              };
Magic Number,GitVersionCore.Tests.IntegrationTests,HotfixBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\HotfixBranchScenarios.cs,PatchOlderReleaseExample,The following statement contains a magic number: fixture.Repository.CreatePullRequestRef("feature/fix"' "hotfix-1.1.1"' normalise: true' prNumber: 8);
Magic Number,GitVersionCore.Tests.IntegrationTests,MainlineDevelopmentMode,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MainlineDevelopmentMode.cs,VerifyPullRequestsActLikeContinuousDelivery,The following statement contains a magic number: fixture.Repository.CreatePullRequestRef("feature/foo"' "master"' normalise: true' prNumber: 8);
Magic Number,GitVersionCore.Tests.IntegrationTests,MainlineDevelopmentMode,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MainlineDevelopmentMode.cs,SupportBranches,The following statement contains a magic number: fixture.Repository.CreatePullRequestRef("feature/foo"' "support/1.0"' normalise: true' prNumber: 7);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,CanHandleContinuousDelivery,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,CanHandleContinuousDeployment,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,GivenARepositoryWithTagAndNextVersionInConfigVersionShouldMatchVersionTxtFile,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,GivenARepositoryWithTagAndNoNextVersionTxtFileVersionShouldBeTagWithBumpedPatch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,GivenARepositoryWithTagAndOldNextVersionConfigVersionShouldBeTagWithBumpedPatch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,CanSpecifyTagPrefixes,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,CanSpecifyTagPrefixesAsRegex,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,CanSpecifyTagPrefixesAsRegex,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,MasterScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\MasterScenarios.cs,AreTagsNotAdheringToTagPrefixIgnored,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,OtherBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\OtherBranchScenarios.cs,CanTakeVersionFromReleaseBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,OtherBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\OtherBranchScenarios.cs,BranchesWithIllegalCharsShouldNotBeUsedInVersionNames,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,PullRequestScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\PullRequestScenarios.cs,CanCalculatePullRequestChangesInheritingConfig,The following statement contains a magic number: fixture.Repository.CreatePullRequestRef("feature/Foo"' "develop"' 44' normalise: true);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,NoMergeBacksToDevelopInCaseThereAreNoChangesInReleaseBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(3);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,NoMergeBacksToDevelopInCaseThereAreChangesInReleaseBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(3);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanTakeVersionFromReleaseBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanTakeVersionFromReleaseBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanTakeVersionFromReleasesBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanTakeVersionFromReleasesBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,ReleaseBranchWithNextVersionSetInConfig,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,ReleaseBranchWithNextVersionSetInConfig,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanTakeVersionFromReleaseBranchWithTagOverridden,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanTakeVersionFromReleaseBranchWithTagOverridden,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanHandleReleaseBranchWithStability,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,CanHandleReleaseBranchWithStability,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchOffDevelopIsMergedIntoMasterAndDevelopVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchOffDevelopIsMergedIntoMasterAndDevelopVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchOffMasterIsMergedIntoMasterVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,MasterVersioningContinuousCorrectlyAfterMergingReleaseBranch,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchIsMergedIntoDevelopHighestVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchIsMergedIntoDevelopHighestVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchIsMergedIntoMasterHighestVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,WhenReleaseBranchIsMergedIntoMasterHighestVersionIsTakenWithIt,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,HotfixOffReleaseBranchShouldNotResetCount,The following statement contains a magic number: fixture.Repository.MakeCommits(4);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,HotfixOffReleaseBranchShouldNotResetCount,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,FeatureFromReleaseBranchShouldNotResetCount,The following statement contains a magic number: fixture.Repository.MakeCommits(10);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,AssemblySemFileVerShouldBeWeightedByPreReleaseWeight,The following statement contains a magic number: var config = new Config              {                  AssemblyFileVersioningFormat = "{Major}.{Minor}.{Patch}.{WeightedPreReleaseNumber}"'                  Branches =                  {                      { "release"' new BranchConfig                          {                              PreReleaseWeight = 1000                          }                      }                  }              };
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,AssemblySemFileVerShouldBeWeightedByPreReleaseWeight,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,ReleaseBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\ReleaseBranchScenarios.cs,AssemblySemFileVerShouldBeWeightedByDefaultPreReleaseWeight,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,RemoteRepositoryScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\RemoteRepositoryScenarios.cs,GivenARemoteGitRepositoryWithCommitsAndBranchesThenClonedLocalShouldMatchRemoteVersion,The following statement contains a magic number: using var fixture = new RemoteRepositoryFixture(                  path =>                  {                      Repository.Init(path);                      Console.WriteLine("Created git repository at '{0}'"' path);                        var repo = new Repository(path);                      repo.MakeCommits(5);                        repo.CreateBranch("develop");                      repo.CreateBranch("release-1.0");                        Commands.Checkout(repo' "release-1.0");                      repo.MakeCommits(5);                        return repo;                  });
Magic Number,GitVersionCore.Tests.IntegrationTests,RemoteRepositoryScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\RemoteRepositoryScenarios.cs,GivenARemoteGitRepositoryWithCommitsAndBranchesThenClonedLocalShouldMatchRemoteVersion,The following statement contains a magic number: using var fixture = new RemoteRepositoryFixture(                  path =>                  {                      Repository.Init(path);                      Console.WriteLine("Created git repository at '{0}'"' path);                        var repo = new Repository(path);                      repo.MakeCommits(5);                        repo.CreateBranch("develop");                      repo.CreateBranch("release-1.0");                        Commands.Checkout(repo' "release-1.0");                      repo.MakeCommits(5);                        return repo;                  });
Magic Number,GitVersionCore.Tests.IntegrationTests,RemoteRepositoryScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\RemoteRepositoryScenarios.cs,GivenARemoteGitRepositoryWhenCheckingOutDetachedheadUsingExistingImplementationThrowsException,The following statement contains a magic number: Should.Throw<WarningException>(() => fixture.AssertFullSemver("0.1.0+4"' fixture.LocalRepositoryFixture.Repository' isForTrackedBranchOnly: false)'                  $"It looks like the branch being examined is a detached Head pointing to commit '{fixture.LocalRepositoryFixture.Repository.Head.Tip.Id.ToString(7)}'. Without a proper branch name GitVersion cannot determine the build version.");
Magic Number,GitVersionCore.Tests.IntegrationTests,SupportBranchScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\SupportBranchScenarios.cs,SupportIsCalculatedCorrectly,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.IntegrationTests,SwitchingToGitFlowScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\SwitchingToGitFlowScenarios.cs,WhenDevelopBranchedFromMasterWithLegacyVersionTagsDevelopCanUseReachableTag,The following statement contains a magic number: fixture.Repository.MakeCommits(5);
Magic Number,GitVersionCore.Tests.IntegrationTests,SwitchingToGitFlowScenarios,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\IntegrationTests\SwitchingToGitFlowScenarios.cs,WhenDevelopBranchedFromMasterWithLegacyVersionTagsDevelopCanUseReachableTag,The following statement contains a magic number: fixture.Repository.MakeCommits(2);
Magic Number,GitVersionCore.Tests.VersionCalculation,BaseVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\BaseVersionCalculatorTests.cs,ShouldNotFilterVersion,The following statement contains a magic number: var version = new BaseVersion(context' "dummy"' false' new SemanticVersion(2)' new MockCommit()' null);
Magic Number,GitVersionCore.Tests.VersionCalculation,BaseVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\BaseVersionCalculatorTests.cs,ShouldFilterVersion,The following statement contains a magic number: var higherVersion = new BaseVersion(context' "exclude"' false' new SemanticVersion(2)' new MockCommit()' null);
Magic Number,GitVersionCore.Tests.VersionCalculation,V2Strategy,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\BaseVersionCalculatorTests.cs,GetVersions,The following statement contains a magic number: yield return new BaseVersion(context' "Source 2"' true' new SemanticVersion(2)' when' null);
Magic Number,GitVersionCore.Tests.VersionCalculation,NextVersionCalculatorTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionCore.Tests\VersionCalculation\NextVersionCalculatorTests.cs,AppliesBranchPreReleaseTag,The following statement contains a magic number: var semanticVersionBuildMetaData = new SemanticVersionBuildMetaData("ef7d0d7e1e700f1c7c9fa01ea6791bb778a5c37c"' 2' "develop"' "b1a34edbd80e141f7cc046c074f109be7d022074"' "b1a34e"' DateTimeOffset.Now);
