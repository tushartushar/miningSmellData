Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,GitVersionExe.Tests,ArgumentBuilder,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentBuilder.cs,ArgumentBuilder,The method has 7 parameters. Parameters: workingDirectory' exec' execArgs' projectFile' projectArgs' logFile' isTeamCity
Long Parameter List,GitVersionExe.Tests,GitVersionHelper,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\GitVersionHelper.cs,ExecuteIn,The method has 7 parameters. Parameters: workingDirectory' exec' execArgs' projectFile' projectArgs' isTeamCity' logToFile
Long Parameter List,GitVersionExe.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The method has 26 parameters. Parameters: assemblyVersioningScheme' assemblyFileVersioningScheme' assemblyVersioningFormat' assemblyFileVersioningFormat' assemblyInformationalFormat' versioningMode' gitTagPrefix' tag' nextVersion' branchPrefixToTrim' preventIncrementForMergedBranchVersion' tagNumberPattern' continuousDeploymentFallbackTag' trackMergeTarget' majorMessage' minorMessage' patchMessage' noBumpMessage' commitMessageMode' legacySemVerPadding' buildMetaDataPadding' commitsSinceVersionSourcePadding' versionFilters' tracksReleaseBranches' isRelease' commitDateFormat
Long Identifier,GitVersionExe.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The length of the parameter preventIncrementForMergedBranchVersion is 38.
Long Identifier,GitVersionExe.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The length of the parameter continuousDeploymentFallbackTag is 31.
Long Identifier,GitVersionExe.Tests,TestEffectiveConfiguration,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\TestEffectiveConfiguration.cs,TestEffectiveConfiguration,The length of the parameter commitsSinceVersionSourcePadding is 32.
Long Statement,GitVersionExe.Tests,ArgumentParserTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentParserTests.cs,UnknownOutputShouldThrow,The length of the statement  "            var exception = Assert.Throws<WarningException>(() => argumentParser.ParseArguments("targetDirectoryPath -output invalid_value")); " is 130.
Long Statement,GitVersionExe.Tests,ArgumentParserTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentParserTests.cs,UnknownOutputShouldThrow,The length of the statement  "            exception.Message.ShouldBe("Value 'invalid_value' cannot be parsed as output type' please use 'json' or 'buildserver'"); " is 120.
Long Statement,GitVersionExe.Tests,ArgumentParserTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentParserTests.cs,UrlAndBranchNameCanBeParsed,The length of the statement  "            var arguments = argumentParser.ParseArguments("targetDirectoryPath -url http://github.com/Particular/GitVersion.git -b somebranch"); " is 132.
Long Statement,GitVersionExe.Tests,ArgumentParserTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentParserTests.cs,WrongNumberOfArgumentsShouldThrow,The length of the statement  "            var exception = Assert.Throws<WarningException>(() => argumentParser.ParseArguments("targetDirectoryPath -l logFilePath extraArg")); " is 132.
Long Statement,GitVersionExe.Tests,ArgumentParserTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentParserTests.cs,CreateMulitpleAssemblyInfoProtected,The length of the statement  "            exception.Message.ShouldBe("Can't specify multiple assembly info files when using /ensureassemblyinfo switch' either use a single assembly info file or do not specify /ensureassemblyinfo and create assembly info files manually"); " is 229.
Long Statement,GitVersionExe.Tests,ExecCmdLineArgumentTest,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ExecCmdLineArgumentTest.cs,RunExecViaCommandLine,The length of the statement  "            var result = GitVersionHelper.ExecuteIn(fixture.RepositoryPath' ExecCommand.BuildTool' "RunExecViaCommandLine.csproj /target:OutputResults"); " is 141.
Long Statement,GitVersionExe.Tests,ExecCmdLineArgumentTest,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ExecCmdLineArgumentTest.cs,CheckBuildServerVerbosityConsole,The length of the statement  "            var result = GitVersionHelper.ExecuteIn(fixture.RepositoryPath' arguments: $@" {verbosityArg} -output buildserver /l ""/tmp/path"""' logToFile: false); " is 151.
Long Statement,GitVersionExe.Tests,ExecCmdLineArgumentTest,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ExecCmdLineArgumentTest.cs,WorkingDirectoryWithoutGitFolderCrashesWithInformativeMessage,The length of the statement  "            var results = GitVersionHelper.ExecuteIn(System.Environment.SystemDirectory' null' isTeamCity: false' logToFile: false); " is 120.
Long Statement,GitVersionExe.Tests,JsonOutputOnBuildServer,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\JsonOutputOnBuildServer.cs,BeingOnBuildServerDoesntOverrideOutputJson,The length of the statement  "            var result = GitVersionHelper.ExecuteIn(fixture.LocalRepositoryFixture.RepositoryPath' arguments: " /output json"' isTeamCity: true); " is 133.
Long Statement,GitVersionExe.Tests,MsBuildProjectArgTest,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\MsBuildProjectArgTest.cs,RunsMsBuildProvideViaCommandLineArg,The length of the statement  "            var result = GitVersionHelper.ExecuteIn(fixture.RepositoryPath' projectFile: "RunsMsBuildProvideViaCommandLineArg.proj"' projectArgs: "/target:OutputResults"); " is 159.
Long Statement,GitVersionExe.Tests,VersionWriterTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\VersionWriterTests.cs,GenerateAssembly,The length of the statement  "            customAttribute.ConstructorArguments.Add(new CustomAttributeArgument(asmDef.MainModule.TypeSystem.String' fileVersion + prereleaseInfo)); " is 137.
Long Statement,GitVersionExe.Tests.Helpers,DirectoryHelper,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\Helpers\DirectoryHelper.cs,DeleteDirectory,The length of the statement  "                                              "{0}Most of the time' this is due to an external process accessing the files in the temporary repositories created during the test runs' and keeping a handle on the directory' thus preventing the deletion of those files." + " is 223.
Long Statement,GitVersionExe.Tests.Helpers,DirectoryHelper,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\Helpers\DirectoryHelper.cs,DeleteDirectory,The length of the statement  "                                              "{0}- Windows Search Indexer (go to the Indexing Options' in the Windows Control Panel' and exclude the bin folder of LibGit2Sharp.Tests)" + " is 140.
Long Statement,GitVersionExe.Tests.Helpers,PathHelper,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\Helpers\PathHelper.cs,GetExeDirectory,The length of the statement  "            return Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)?.Replace("GitVersionExe.Tests"' "GitVersionExe"); " is 120.
Magic Number,GitVersionExe.Tests,ArgumentParserTests,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\ArgumentParserTests.cs,UpdateAssemblyInfoWithMultipleFilenames,The following statement contains a magic number: arguments.UpdateAssemblyInfoFileName.Count.ShouldBe(2);
Magic Number,GitVersionExe.Tests,PullRequestInJenkinsTest,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\PullRequestInJenkinsPipelineTest.cs,GivenJenkinsPipelineHasDuplicatedOriginVersionIsCalculatedProperly,The following statement contains a magic number: remoteRepository.MakeCommits(2);
Magic Number,GitVersionExe.Tests,PullRequestInTeamCityTest,C:\research\architectureSmells\repos\Particular_GitVersion\src\GitVersionExe.Tests\PullRequestInTeamCityTest.cs,GivenARemoteWithATagOnMasterAndAPullRequestWithTwoCommitsAndBuildIsRunningInTeamCityVersionIsCalculatedProperly,The following statement contains a magic number: remoteRepository.MakeCommits(2);
