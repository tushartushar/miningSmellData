Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,DeleteUserAsync,The length of the statement  "	await transientFaultStrategy.Try (() => AmazonDynamoDbClient.DeleteItemAsync (TableName' new Dictionary<string' AttributeValue> { " is 129.
Long Statement,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,FindUserByEmail,The length of the statement  "	var userDocDictionary = transientFaultStrategy.Try (() => AmazonDynamoDbClient.Query (queryRequest).Items.FirstOrDefault ()); " is 125.
Long Statement,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,FindUserById,The length of the statement  "	var getItemResult = transientFaultStrategy.Try (() => AmazonDynamoDbClient.GetItem (TableName' new Dictionary<string' AttributeValue> { " is 135.
Long Statement,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,FindUserByIdAsync,The length of the statement  "	var getItemResult = await transientFaultStrategy.Try (() => AmazonDynamoDbClient.GetItemAsync (TableName' new Dictionary<string' AttributeValue> { " is 146.
Long Statement,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,FindUserByName,The length of the statement  "	var userDocDictionary = transientFaultStrategy.Try (() => AmazonDynamoDbClient.Query (queryRequest).Items.FirstOrDefault ()); " is 125.
Long Statement,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,GetAmazonDynamoDbClient,The length of the statement  "		dynamoDbClient = transientFaultStrategy.Try (() => new AmazonDynamoDBClient (AwsAccessKeyId' AwsSecretAccessKey' awsRegionEndpoint)); " is 133.
Magic Number,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,DynamoDbMantleUserRepository,The following statement contains a magic number: TableReadCapacityUnits = 5;  
Magic Number,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,DynamoDbMantleUserRepository,The following statement contains a magic number: TableWriteCapacityUnits = 5;  
Magic Number,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,WaitUntilTableExists,The following statement contains a magic number: while (true) {  	if (transientFaultStrategy.Try (() => DoesTableExist (dynamoDbClient)))  		return;  	Thread.Sleep (5000);  }  
Magic Number,Mantle.Identity.Aws.Repositories,DynamoDbMantleUserRepository,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.Identity.Aws\Repositories\DynamoDbMantleUserRepository.cs,WaitUntilTableExists,The following statement contains a magic number: Thread.Sleep (5000);  
