Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient<T>,C:\repos\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DynamoDbDictionaryStorageClient,The following statement contains a magic number: TableReadCapacityUnits = 10;
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient<T>,C:\repos\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DynamoDbDictionaryStorageClient,The following statement contains a magic number: TableWriteCapacityUnits = 10;
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient<T>,C:\repos\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,InsertOrUpdateDictionaryStorageEntities,The following statement contains a magic number: foreach (var entityChunk in entities.Chunk(25))              {                  var writeRequests = entityChunk                      .Select(e => new WriteRequest(new PutRequest(ToDocumentDictionary(e))))                      .ToList();                    var batchRequest = new BatchWriteItemRequest(new Dictionary<string' List<WriteRequest>>                  {                      [TableName] = writeRequests                  });                    transientFaultStrategy.Try(() => AmazonDynamoDbClient.BatchWriteItem(batchRequest));              }
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient<T>,C:\repos\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DeletePartition,The following statement contains a magic number: foreach (var entityIdChunk in entityIds.Chunk(25))              {                  var writeRequests = entityIdChunk                      .Select(eid => new WriteRequest(new DeleteRequest(ToDocumentKeyDictionary(eid' partitionId))))                      .ToList();                    var batchRequest = new BatchWriteItemRequest(new Dictionary<string' List<WriteRequest>>                  {                      [TableName] = writeRequests                  });                    transientFaultStrategy.Try(() => AmazonDynamoDbClient.BatchWriteItem(batchRequest));              }
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient<T>,C:\repos\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,WaitUntilTableExists,The following statement contains a magic number: while (true)              {                  if (transientFaultStrategy.Try(() => DoesTableExist(dynamoDbClient)))                      return;                    Thread.Sleep(5000);              }
