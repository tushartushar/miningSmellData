Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,GetToDynamoDbAttributeValueConversions,The method has 68 lines of code.
Long Statement,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DeleteEntity,The length of the statement  "	transientFaultStrategy.Try (() => AmazonDynamoDbClient.DeleteItem (TableName' ToDocumentKeyDictionary (entityId' partitionId))); " is 128.
Long Statement,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DoesEntityExist,The length of the statement  "	return transientFaultStrategy.Try (() => AmazonDynamoDbClient.GetItem (TableName' ToDocumentKeyDictionary (entityId' partitionId)).IsItemSet); " is 142.
Long Statement,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,LoadDictionaryStorageEntity,The length of the statement  "	var getItemResult = transientFaultStrategy.Try (() => AmazonDynamoDbClient.GetItem (TableName' ToDocumentKeyDictionary (entityId' partitionId))); " is 145.
Long Statement,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DeletePartition,The length of the statement  "		var writeRequests = entityIdChunk.Select (eid => new WriteRequest (new DeleteRequest (ToDocumentKeyDictionary (eid' partitionId)))).ToList (); " is 142.
Long Statement,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,GetAmazonDynamoDbClient,The length of the statement  "		dynamoDbClient = transientFaultStrategy.Try (() => new AmazonDynamoDBClient (AwsAccessKeyId' AwsSecretAccessKey' awsRegionEndpoint)); " is 133.
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DynamoDbDictionaryStorageClient,The following statement contains a magic number: TableReadCapacityUnits = 10;  
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DynamoDbDictionaryStorageClient,The following statement contains a magic number: TableWriteCapacityUnits = 10;  
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,InsertOrUpdateDictionaryStorageEntities,The following statement contains a magic number: foreach (var entityChunk in entities.Chunk (25)) {  	var writeRequests = entityChunk.Select (e => new WriteRequest (new PutRequest (ToDocumentDictionary (e)))).ToList ();  	var batchRequest = new BatchWriteItemRequest (new Dictionary<string' List<WriteRequest>> {  		 = writeRequests  	});  	transientFaultStrategy.Try (() => AmazonDynamoDbClient.BatchWriteItem (batchRequest));  }  
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,DeletePartition,The following statement contains a magic number: foreach (var entityIdChunk in entityIds.Chunk (25)) {  	var writeRequests = entityIdChunk.Select (eid => new WriteRequest (new DeleteRequest (ToDocumentKeyDictionary (eid' partitionId)))).ToList ();  	var batchRequest = new BatchWriteItemRequest (new Dictionary<string' List<WriteRequest>> {  		 = writeRequests  	});  	transientFaultStrategy.Try (() => AmazonDynamoDbClient.BatchWriteItem (batchRequest));  }  
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,WaitUntilTableExists,The following statement contains a magic number: while (true) {  	if (transientFaultStrategy.Try (() => DoesTableExist (dynamoDbClient)))  		return;  	Thread.Sleep (5000);  }  
Magic Number,Mantle.DictionaryStorage.Aws.Clients,DynamoDbDictionaryStorageClient,D:\newReposJune17\caseywatson_Mantle\v1\Mantle\Mantle.DictionaryStorage.Aws\Clients\DynamoDbDictionaryStorageClient.cs,WaitUntilTableExists,The following statement contains a magic number: Thread.Sleep (5000);  
