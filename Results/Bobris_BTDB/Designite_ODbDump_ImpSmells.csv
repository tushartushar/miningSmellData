Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,Cyclomatic complexity of the method is 39
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: switch (action) {  case "dump": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var odb = new ObjectDB ()) {  				odb.Open (kdb' false);  				using (var tr = odb.StartTransaction ()) {  					var visitor = new ToConsoleVisitor ();  					var iterator = new ODBIterator (tr' visitor);  					iterator.Iterate ();  				}  			}  	break;  }  case "dumpnull":  case "null": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var odb = new ObjectDB ()) {  				odb.Open (kdb' false);  				using (var tr = odb.StartTransaction ()) {  					var visitor = new ToNullVisitor ();  					var iterator = new ODBIterator (tr' visitor);  					iterator.Iterate ();  				}  			}  	break;  }  case "stat": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc)) {  			Console.WriteLine (kdb.CalcStats ());  		}  	break;  }  case "compact": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  			Console.WriteLine ("Starting first compaction");  			while (kdb.Compact (new CancellationToken ())) {  				Console.WriteLine (kdb.CalcStats ());  				Console.WriteLine ("Another compaction needed");  			}  			Console.WriteLine (kdb.CalcStats ());  		}  	break;  }  case "export": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var tr = kdb.StartReadOnlyTransaction ())  				using (var st = File.Create (Path.Combine (args [0]' "export.dat"))) {  					KeyValueDBExportImporter.Export (tr' st);  				}  	break;  }  default: {  	Console.WriteLine ();  	break;  }  }  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: switch (action) {  case "dump": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var odb = new ObjectDB ()) {  				odb.Open (kdb' false);  				using (var tr = odb.StartTransaction ()) {  					var visitor = new ToConsoleVisitor ();  					var iterator = new ODBIterator (tr' visitor);  					iterator.Iterate ();  				}  			}  	break;  }  case "dumpnull":  case "null": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var odb = new ObjectDB ()) {  				odb.Open (kdb' false);  				using (var tr = odb.StartTransaction ()) {  					var visitor = new ToNullVisitor ();  					var iterator = new ODBIterator (tr' visitor);  					iterator.Iterate ();  				}  			}  	break;  }  case "stat": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc)) {  			Console.WriteLine (kdb.CalcStats ());  		}  	break;  }  case "compact": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  			Console.WriteLine ("Starting first compaction");  			while (kdb.Compact (new CancellationToken ())) {  				Console.WriteLine (kdb.CalcStats ());  				Console.WriteLine ("Another compaction needed");  			}  			Console.WriteLine (kdb.CalcStats ());  		}  	break;  }  case "export": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var tr = kdb.StartReadOnlyTransaction ())  				using (var st = File.Create (Path.Combine (args [0]' "export.dat"))) {  					KeyValueDBExportImporter.Export (tr' st);  				}  	break;  }  default: {  	Console.WriteLine ();  	break;  }  }  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: switch (action) {  case "dump": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var odb = new ObjectDB ()) {  				odb.Open (kdb' false);  				using (var tr = odb.StartTransaction ()) {  					var visitor = new ToConsoleVisitor ();  					var iterator = new ODBIterator (tr' visitor);  					iterator.Iterate ();  				}  			}  	break;  }  case "dumpnull":  case "null": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var odb = new ObjectDB ()) {  				odb.Open (kdb' false);  				using (var tr = odb.StartTransaction ()) {  					var visitor = new ToNullVisitor ();  					var iterator = new ODBIterator (tr' visitor);  					iterator.Iterate ();  				}  			}  	break;  }  case "stat": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc)) {  			Console.WriteLine (kdb.CalcStats ());  		}  	break;  }  case "compact": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  			Console.WriteLine ("Starting first compaction");  			while (kdb.Compact (new CancellationToken ())) {  				Console.WriteLine (kdb.CalcStats ());  				Console.WriteLine ("Another compaction needed");  			}  			Console.WriteLine (kdb.CalcStats ());  		}  	break;  }  case "export": {  	using (var dfc = new OnDiskFileCollection (args [0]))  		using (var kdb = new KeyValueDB (dfc))  			using (var tr = kdb.StartReadOnlyTransaction ())  				using (var st = File.Create (Path.Combine (args [0]' "export.dat"))) {  					KeyValueDBExportImporter.Export (tr' st);  				}  	break;  }  default: {  	Console.WriteLine ();  	break;  }  }  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: using (var dfc = new OnDiskFileCollection (args [0]))  	using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  		Console.WriteLine ("Starting first compaction");  		while (kdb.Compact (new CancellationToken ())) {  			Console.WriteLine (kdb.CalcStats ());  			Console.WriteLine ("Another compaction needed");  		}  		Console.WriteLine (kdb.CalcStats ());  	}  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: using (var dfc = new OnDiskFileCollection (args [0]))  	using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  		Console.WriteLine ("Starting first compaction");  		while (kdb.Compact (new CancellationToken ())) {  			Console.WriteLine (kdb.CalcStats ());  			Console.WriteLine ("Another compaction needed");  		}  		Console.WriteLine (kdb.CalcStats ());  	}  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: using (var dfc = new OnDiskFileCollection (args [0]))  	using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  		Console.WriteLine ("Starting first compaction");  		while (kdb.Compact (new CancellationToken ())) {  			Console.WriteLine (kdb.CalcStats ());  			Console.WriteLine ("Another compaction needed");  		}  		Console.WriteLine (kdb.CalcStats ());  	}  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  	Console.WriteLine ("Starting first compaction");  	while (kdb.Compact (new CancellationToken ())) {  		Console.WriteLine (kdb.CalcStats ());  		Console.WriteLine ("Another compaction needed");  	}  	Console.WriteLine (kdb.CalcStats ());  }  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  	Console.WriteLine ("Starting first compaction");  	while (kdb.Compact (new CancellationToken ())) {  		Console.WriteLine (kdb.CalcStats ());  		Console.WriteLine ("Another compaction needed");  	}  	Console.WriteLine (kdb.CalcStats ());  }  
Magic Number,ODbDump,Program,F:\newReposMay17\Bobris_BTDB\ODbDump\Program.cs,Main,The following statement contains a magic number: using (var kdb = new KeyValueDB (dfc' new SnappyCompressionStrategy ()' 100 * 1024 * 1024' null)) {  	Console.WriteLine ("Starting first compaction");  	while (kdb.Compact (new CancellationToken ())) {  		Console.WriteLine (kdb.CalcStats ());  		Console.WriteLine ("Another compaction needed");  	}  	Console.WriteLine (kdb.CalcStats ());  }  
