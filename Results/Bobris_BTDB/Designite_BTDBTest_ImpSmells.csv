Implementation smell,Namespace,Class,File,Method,Description
Long Method,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The method has 106 lines of code.
Long Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The method has 115 lines of code.
Long Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The method has 118 lines of code.
Long Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The method has 122 lines of code.
Complex Method,BTDBTest,UserEventDictionary,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,BTDBTest,Tick,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,BTDBTest,PersonSimple,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,BTDBTest,ClassWithIOrderedDictionary,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,Equals,Cyclomatic complexity of the method is 8
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,Cyclomatic complexity of the method is 8
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,Cyclomatic complexity of the method is 8
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,Cyclomatic complexity of the method is 8
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,Cyclomatic complexity of the method is 9
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,Cyclomatic complexity of the method is 9
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,Cyclomatic complexity of the method is 9
Complex Method,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,Cyclomatic complexity of the method is 9
Complex Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,Cyclomatic complexity of the method is 8
Complex Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,Cyclomatic complexity of the method is 8
Complex Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,Cyclomatic complexity of the method is 9
Complex Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,Cyclomatic complexity of the method is 9
Complex Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,Cyclomatic complexity of the method is 9
Complex Method,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,Cyclomatic complexity of the method is 9
Long Parameter List,BTDBTest,GreedyNonPublicClass,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,GreedyNonPublicClass,The method has 6 parameters. Parameters: a' b' c' d' e' f
Long Parameter List,BTDBTest,Tick,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Tick,The method has 7 parameters. Parameters: symbol' time' bid' ask' bidSize' askSize' provider
Long Parameter List,BTDBTest,IPermutationOfKeysTable,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ListBySec,The method has 6 parameters. Parameters: a0' a' a1' d' d1' c0
Long Parameter List,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,RemoveRange,The method has 6 parameters. Parameters: start' includeStart' end' includeEnd' result' removedCount
Long Parameter List,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationBasics,The method has 5 parameters. Parameters: start' includeStart' end' includeEnd' result
Long Parameter List,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The method has 5 parameters. Parameters: start' includeStart' end' includeEnd' result
Long Parameter List,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The method has 5 parameters. Parameters: l0' l1' r0' r1' erased
Long Parameter List,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The method has 5 parameters. Parameters: l0' l1' r0' r1' erased
Long Parameter List,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The method has 5 parameters. Parameters: l0' l1' r0' r1' erased
Long Parameter List,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The method has 5 parameters. Parameters: l0' l1' r0' r1' erased
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestDateTime,The length of the statement  "            TestWriteRead(w => w.WriteDateTime(value)' checkResult' r => Assert.Equal(value' r.ReadDateTime())' s => s.SkipDateTime());" is 123.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestTimeSpan,The length of the statement  "            TestWriteRead(w => w.WriteTimeSpan(value)' checkResult' r => Assert.Equal(value' r.ReadTimeSpan())' s => s.SkipTimeSpan());" is 123.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,StringTest,The length of the statement  "            TestString("A" + (Char)0xD800 + (Char)0xDC01 + "B" + (Char)0xD812' new byte[] { 6' 0x41' 0xC1' 0' 1' 0x42' 0xC0' 0xD8' 0x12 });" is 127.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,StringOrderedTest,The length of the statement  "            TestStringOrdered("A" + (Char)0xD800 + (Char)0xDC01 + "B" + (Char)0xD812' new byte[] { 0x42' 0xC1' 0' 2' 0x43' 0xC0' 0xD8' 0x13' 0x0 });" is 136.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestStringOrdered,The length of the statement  "            TestWriteRead(w => w.WriteStringOrdered(value)' checkResult' r => Assert.Equal(value' r.ReadStringOrdered())' s => s.SkipStringOrdered());" is 138.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,GuidTest,The length of the statement  "            TestWriteRead(w => w.WriteGuid(Guid.Empty)' Guid.Empty.ToByteArray()' r => Assert.Equal(Guid.Empty' r.ReadGuid())' s => s.SkipGuid());" is 134.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,Int64Test,The length of the statement  "            TestWriteRead(w => w.WriteInt64(0x1234567890ABCDEFL)' new byte[] { 0x12' 0x34' 0x56' 0x78' 0x90' 0xAB' 0xCD' 0xEF }' r => Assert.Equal(0x1234567890ABCDEFL' r.ReadInt64())' s => s.SkipInt64());" is 192.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,Int32Test,The length of the statement  "            TestWriteRead(w => w.WriteInt32(0x12345678)' new byte[] { 0x12' 0x34' 0x56' 0x78 }' r => Assert.Equal(0x12345678' r.ReadInt32())' s => s.SkipInt32());" is 150.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestVUInt32,The length of the statement  "            TestWriteRead(w => w.WriteVUInt32(value)' checkResult' r => Assert.Equal(value' r.ReadVUInt32())' s => s.SkipVUInt32());" is 120.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestVUInt64,The length of the statement  "            TestWriteRead(w => w.WriteVUInt64(value)' checkResult' r => Assert.Equal(value' r.ReadVUInt64())' s => s.SkipVUInt64());" is 120.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The length of the statement  "            TestDecimal(decimal.MaxValue - 1' new byte[] { 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFE });" is 125.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The length of the statement  "            TestDecimal(decimal.MaxValue' new byte[] { 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF });" is 121.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The length of the statement  "            TestDecimal(decimal.MinValue + 1' new byte[] { 128 + 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFE });" is 131.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The length of the statement  "            TestDecimal(decimal.MinValue' new byte[] { 128 + 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF });" is 127.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestDecimal,The length of the statement  "            TestWriteRead(w => w.WriteDecimal(value)' checkResult' r => Assert.Equal(value' r.ReadDecimal())' s => s.SkipDecimal());" is 120.
Long Statement,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestIPAddress,The length of the statement  "            TestWriteRead(w => w.WriteIPAddress(value)' checkResult' r => Assert.Equal(value' r.ReadIPAddress())' s => s.SkipIPAddress());" is 126.
Long Statement,BTDBTest,BTreeKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeKeyValueDBTest.cs,NewKeyValueDB,The length of the statement  "            return NewKeyValueDB(new KeyValueDBOptions { FileCollection = fileCollection' Compression = new SnappyCompressionStrategy()' FileSplitSize = 2147483647});" is 154.
Long Statement,BTDBTest,BTreeKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeKeyValueDBTest.cs,NewKeyValueDB,The length of the statement  "            return NewKeyValueDB(new KeyValueDBOptions { FileCollection = fileCollection' Compression = compression' FileSplitSize = fileSplitSize});" is 137.
Long Statement,BTDBTest,BTreeKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeKeyValueDBTest.cs,NewKeyValueDB,The length of the statement  "            return NewKeyValueDB(new KeyValueDBOptions { FileCollection = fileCollection' Compression = compression' FileSplitSize = fileSplitSize' CompactorScheduler = compactorScheduler});" is 178.
Long Statement,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The length of the statement  "            _first.RegisterLocalService((Func<ByteBuffer' ByteBuffer>)(p => ByteBuffer.NewAsync(p.ToByteArray().AsEnumerable().Reverse().ToArray())));" is 138.
Long Statement,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The length of the statement  "            _first.RegisterLocalService((Func<IDictionary<int' int>' IDictionary<int' int>>)(p => p.ToDictionary(kv => kv.Value' kv => kv.Key)));" is 133.
Long Statement,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The length of the statement  "            Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));" is 134.
Long Statement,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnComplexObjectsAsTask,The length of the statement  "            _first.RegisterLocalService((Func<List<int>' Task<List<int>>>)(p => Task.Factory.StartNew(() => p.AsEnumerable().Reverse().ToList())));" is 135.
Long Statement,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,DeserializesClassWithIList2,The length of the statement  "            var obj = new ObjectWithIList2 { Items = new List<ObjectDbTest.Person> { new ObjectDbTest.Person { Name = "A"' Age = 1 } } };" is 125.
Long Statement,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,DeserializesClassWithIListArray,The length of the statement  "            var obj = new ObjectWithIList2 { Items = new ObjectDbTest.Person[] { new ObjectDbTest.Person { Name = "A"' Age = 1 } } };" is 121.
Long Statement,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,DeserializesClassWithIListArrayFirstEmpty,The length of the statement  "            var obj = new ObjectWithIList2 { Items = new ObjectDbTest.Person[] { new ObjectDbTest.Manager { Name = "A"' Age = 1 } } };" is 122.
Long Statement,BTDBTest,EventStoreMigrationTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreMigrationTest.cs,CanMigrateIntToUlong,The length of the statement  "            var mapper = new EventStoreTest.OverloadableTypeMapper(typeof(EventWithUlong)' parentMapper.ToName(typeof(EventWithInt))'" is 121.
Long Statement,BTDBTest,EventStoreMigrationTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreMigrationTest.cs,CanMigrateStringToVersion,The length of the statement  "            var mapper = new EventStoreTest.OverloadableTypeMapper(typeof(EventWithVersion)' parentMapper.ToName(typeof(EventWithString))'" is 126.
Long Statement,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,UpgradeToDifferentEnumProperties,The length of the statement  "            manager.SetNewTypeNameMapper(new OverloadableTypeMapper(typeof(ApplicationInfoPropertyEnumTypeChanged)' "ApplicationInfo"));" is 124.
Long Statement,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsDictionary,The length of the statement  "            var userEvent = new UserEventDictionary { Id = 10' Dict = new Dictionary<string' User> { { "A"' userA }' { "B"' userB } } };" is 124.
Long Statement,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,Read,The length of the statement  "            manager.SetNewTypeNameMapper(new OverloadableTypeMapper(typeof(ClassWithChangedUINTtoULONG)' "BTDBTest.EventStoreTest+Credit"));" is 128.
Long Statement,BTDBTest,FindUnusedKeysTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\FindUnusedKeysTest.cs,StoreJobInDictionary,The length of the statement  "                sports.Dir[sport] = new JobMap { Jobs = new Dictionary<ulong' Job> { [0] = new Job { Duty = new Duty { Name = activity } } } };" is 127.
Long Statement,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,CanAccessPrivateProperties,The length of the statement  "            var propertyInfos = typeof(Nested).GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.FlattenHierarchy);" is 151.
Long Statement,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,AllocationLessDictionaryIteration,The length of the statement  "                dictType.GetMethods().Single(m => m.Name == "GetEnumerator" && m.ReturnType.IsValueType && m.GetParameters().Length == 0);" is 122.
Long Statement,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,ResolveWithOptionalParameterWithoutRegister,The length of the statement  "            object Create(Type t) => Activator.CreateInstance(t' BindingFlags.CreateInstance | BindingFlags.Public | BindingFlags.Instance | BindingFlags.OptionalParamBinding' null' new object[] { Type.Missing }' CultureInfo.CurrentCulture);" is 229.
Long Statement,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The length of the statement  "            Assert.False(personTable.AnyById(new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending'10'KeyProposition.Included'0'KeyProposition.Ignored)));" is 150.
Long Statement,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfComplexValues,The length of the statement  "                root.String2Person = new Dictionary<string' Person> { { "Boris"' new Person { Name = "Boris"' Age = 35 } }' { "null"' null } };" is 127.
Long Statement,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfComplexValuesSkip,The length of the statement  "                root.String2Person = new Dictionary<string' Person> { { "Boris"' new Person { Name = "Boris"' Age = 35 } }' { "null"' null } };" is 127.
Long Statement,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The length of the statement  "                AssertEqual(new KeyValuePair<byte[]' byte[]>(new byte[] { 1' 0xFF }' new byte[] { 1 })' root.Bytes2Bytes.Skip(1).First());" is 122.
Long Statement,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanRemoveRangeOfCompoundKeys,The length of the statement  "                var deleted = sd.RemoveRange(new LogId { Key = "key"' DateTime = DateTime.MinValue.ToUniversalTime()' CollisionId = ushort.MinValue }'" is 134.
Long Statement,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CompatibilityObjectInsideInlineList,The length of the statement  "            const string data3 = "QlREQkVYUDJUAAAAAAAAAAMAAAAAAAEMAAAADExhbmd1YWdlTWFwAwAAAAAAAgsAAAALTGFuZ3VhZ2VEYgMAAAAAAAMJAAAACVNoZWV0TWFwAwAAAAAABAgAAAAIU2hlZXREYgMAAAAAAAUNAAAADUF0dHJpYnV0ZU1hcAMAAAAAAAYMAAAADEF0dHJpYnV0ZURiAwAAAAAABwoAAAAKU2NoZW1hTWFwAwAAAAAACAkAAAAJU2NoZW1hRGIDAAAAAAAJDwAAAA9CYXJjb2RlU2V0dGluZwMAAAAAAAoKAAAAClF1aWV0Wm9uZQMAAAAAAAsLAAAAC09tclNldHRpbmcDAAAAAAAMDgAAAA5Db2RlMzlTZXR0aW5nAwAAAAAADRIAAAASRGF0YU1hdHJpeFNldHRpbmcDAAAAAAAOEQAAABFJbnNlcnRlckZ1bmN0aW9uAwAAAAAADwkAAAAJRW5jb2RpbmcDAAAAAAAQDAAAAAxSdWxlU2V0dGluZwMAAAAAABEbAAAAG1ByaW9yaXRpemVkRnVuY3Rpb25TZXR0aW5nAwAAAAAAEhMAAAATTGltaXRlZFJ1bGVTZXR0aW5nAwAAAAAAExIAAAASQ29tcG9zaXRlRnVuY3Rpb24DAAAAAAAUFQAAABVVcGRhdGVQcmludGVyTGlzdE1hcAMAAAAAABUUAAAAFFVwZGF0ZVByaW50ZXJMaXN0RGIDAAAAAAAWGAAAABhQcm9jZXNzYWJsZUl0ZW1TdGF0ZU1hcAMAAAAAABcWAAAAFlByb2Nlc3NhYmxlSXRlbVN0YXRlcwMAAAAAABgVAAAAFUFpbXNDb25maWd1cmF0aW9uTWFwAwAAAAAAGRQAAAAUQWltc0NvbmZpZ3VyYXRpb25EYgMAAAAAABoQAAAAEFByb2Nlc3NhYmxlSXRlbQQAAAAAAQEBMwAAAAEGSXRlbXMOT0RCRGljdGlvbmFyeR4JVW5zaWduZWQAB09iamVjdAwLTGFuZ3VhZ2VEYgQAAAAAAQIBRwAAAAQKQ29tcGFueUlkCVVuc2lnbmVkAAVOYW1lB1N0cmluZwAKSXNEZWZhdWx0BUJvb2wAC1JldmlzaW9uSWQJVW5zaWduZWQABAAAAAABAwEwAAAAAQZJdGVtcw5PREJEaWN0aW9uYXJ5GwlVbnNpZ25lZAAHT2JqZWN0CQhTaGVldERiBAAAAAABBAGgAQAADgpDb21wYW55SWQJVW5zaWduZWQABU5hbWUHU3RyaW5nAAxEZXNjcmlwdGlvbgdTdHJpbmcADE9yaWVudGF0aW9uBUVudW0XCQlQb3J0cmFpdApMYW5kc2NhcGWBggpTaGVldEtpbmQFRW51bUEpA0E0A0E1A0EzB0xldHRlcgZMZWdhbAhUYWJsb2lkBkZvcm1BBkZvcm1CBkZvcm1DBUF1dG + AgYKDhIWGh4iJEVByaW50T25Cb3RoU2lkZXMFRW51bQsJA05vBFllc4CBB1dlaWdodAdEb3VibGUAFFByaW50ZXJQYXBlclNvdXJjZXMFTGlzdB4HT2JqZWN0FhVQcmludGVyUGFwZXJTb3VyY2VEYgpJc0RlZmF1bHQFQm9vbAAHU3RhdHVzBUVudW0UCQhFbmFibGVkCERlbGV0ZWSAgRJCYWNrc2lkZU92ZXJsYXlJZAlVbnNpZ25lZAALVXBkYXRlRGF0ZQlEYXRlVGltZQAFVGFncwVMaXN0CwlVbnNpZ25lZAALUmV2aXNpb25JZAlVbnNpZ25lZAAEAAAAAAEFATQAAAABBkl0ZW1zDk9EQkRpY3Rpb25hcnkfCVVuc2lnbmVkAAdPYmplY3QNDEF0dHJpYnV0ZURiBAAAAAABBgGZAgAADQpDb21wYW55SWQJVW5zaWduZWQABU5hbWUHU3RyaW5nAAxEZXNjcmlwdGlvbgdTdHJpbmcAClZhbHVlVHlwZQVFbnVtRRkFVGV4dAdOdW1iZXIJRGF0ZVRpbWUOUG9zdGFsQWRkcmVzcwhCb29sZWFuElBvc3RhbEFkZHJlc3NMaW5lgIGCg4SFFVN5c3RlbUF0dHJpYnV0ZVZhbHVlBUVudW2BFk0NQ3JlYXRpb25EYXRlDEZpbGVDb3VudGVyEVByaW50T25Cb3RoU2lkZXMLQ3VzdG9tZXJJZA9Eb2N1bWVudE51bWJlcg5EdWN1bWVudFRpdGxlDFRvdGFsQW1vdW50DURlbGl2ZXJ5VHlwZQ9Ub3RhbERvY3VtZW50cwxUb3RhbFNoZWV0cw9FbnZlbG9wZUZvcm1hdApUaGlja25lc3MHV2VpZ2h0CVByaW9yaXR5DUVudmVsb3BlTmFtZQ1FbnZlbG9wZVNpemUOTnVtYmVyT2ZQYWdlcxVGaXJzdEN1c3RvbUF0dHJpYnV0ZRNBbnlDdXN0b21BdHRyaWJ1dGWBgoOEhYaHiYqLjI2Oj5CRksBkwGULSXNFeHRlcm5hbAVCb29sAA9SZW1vdmVkUGF0dGVybgdTdHJpbmcAD0V4dGVybmFsQ29uZmlnB09iamVjdBIRRXh0ZXJuYWxDb25maWdEYhJQb3N0YWxBZGRyZXNzTGluZQdPYmplY3QWFU9tc1Bvc3RhbEFkZHJlc3NMaW5lEFN1YkF0dHJpYnV0ZUlkcwVMaXN0CwlVbnNpZ25lZAALUmV2aXNpb25JZAlVbnNpZ25lZAALVXBkYXRlRGF0ZQlEYXRlVGltZQAFVGFncwVMaXN0CwlVbnNpZ25lZAAEAAAAAAEHATEAAAABBkl0ZW1zDk9EQkRpY3Rpb25hcnkcCVVuc2lnbmVkAAdPYmplY3QKCVNjaGVtYURiBAAAAAABCAH5AQAADwpDb21wYW55SWQJVW5zaWduZWQAC1NjaGVtYVR5cGUFRW51bVQdB0N1c3RvbQRPbXIMT21yQWR2YW5jZWQHQ29kZTM5D0NvZGUzOUFkdmFuY2VkC0RhdGFNYXRyaXgTRGF0YU1hdHJpeEFkdmFuY2VkgIGCg4SFhgxCYXJjb2RlVHlwZQVFbnVtGw0ET21yB0NvZGUzOQtEYXRhTWF0cml4gIGCEUNvbnRlbnRNYXhMZW5ndGgHU2lnbmVkAAVOYW1lB1N0cmluZwAMRGVzY3JpcHRpb24HU3RyaW5nAAZCcmFuZAdTdHJpbmcAD0JhcmNvZGVTZXR0aW5nB09iamVjdBAPQmFyY29kZVNldHRpbmcSSW5zZXJ0ZXJGdW5jdGlvbnMFTGlzdBoHT2JqZWN0EhFJbnNlcnRlckZ1bmN0aW9uDlJ1bnRpbWVHcm91cHMFTGlzdBUHT2JqZWN0DQxSdWxlU2V0dGluZxRDb25maWd1cmF0aW9uR3JvdXBzBUxpc3QcB09iamVjdBQTTGltaXRlZFJ1bGVTZXR0aW5nE0lzQXZhaWxhYmxlRm9yQWltcwVCb29sAAtSZXZpc2lvbklkCVVuc2lnbmVkAAtVcGRhdGVEYXRlCURhdGVUaW1lAAVUYWdzBUxpc3QLCVVuc2lnbmVkAAQAAAAAAQkBAwEAAAcMVG9wUG9zaXRpb24HRG91YmxlAA1MZWZ0UG9zaXRpb24HRG91YmxlAApRdWlldFpvbmUHT2JqZWN0CwpRdWlldFpvbmUMT3JpZW50YXRpb24FRW51bT4RC0hvcml6b250YWwJVmVydGljYWwTSG9yaXpvbnRhbFJldmVyc2VkEVZlcnRpY2FsUmV2ZXJzZWSAgYKDC09tclNldHRpbmcHT2JqZWN0DAtPbXJTZXR0aW5nDkNvZGUzOVNldHRpbmcHT2JqZWN0Dw5Db2RlMzlTZXR0aW5nEkRhdGFNYXRyaXhTZXR0aW5nB09iamVjdBMSRGF0YU1hdHJpeFNldHRpbmcEAAAAAAEKATMAAAACEFZlcnRpY2FsUGFkZGluZwdEb3VibGUAEkhvcml6b250YWxQYWRkaW5nB0RvdWJsZQAEAAAAAAELAUEAAAADDFdpZHRoT2ZNYXJrB0RvdWJsZQAQVGhpY2tuZXNzT2ZNYXJrB0RvdWJsZQAMTGluZVNwYWNpbmcHRG91YmxlAAQAAAAAAQwBOwAAAAMHSGVpZ2h0B0RvdWJsZQAVVGhpY2tuZXNzT2ZOYXJyb3dCYXIHRG91YmxlAAZSYXRpbwdEb3VibGUABAAAAAABDQFFAAAAAglDZWxsU2l6ZQdEb3VibGUAC1N5bWJvbFNpemUFRW51bSMRBUF1dG8IRml4ZWQxMghGaXhlZDIwCEZpeGVkMjSAjJSYBAAAAAABDgGMCwAAGQ1GdW5jdGlvblR5cGUFRW51bYPSgSEFTm9uZQdQYWNrVXAKU3RhcnRNYXJrC1NhZmV0eU1hcmsHUGFyaXR5D051bWJlck9mU2hlZXRzDFNoZWV0TnVtYmVyDlNoZWV0U2VxdWVuY2UOU2VxdWVuY2VDaGVjaw5Hcm91cFNlcXVlbmNlCVNldE1hdGNoC0VuZE9mR3JvdXARRW5kT2ZHcm91cERlbWFuZA1GaXJzdE9mR3JvdXATRmlyc3RPZkdyb3VwRGVtYW5kB0luc2VydAtBY2N1bXVsYXRlB0FjY0lucwVTdG9wD0RpdmVydENvbnRpbnVlC0RpdmVydFN0b3AIRGl2ZXJ0MQhEaXZlcnQyD1NlYWxpbmdDb250cm9sD1NlbGVjdGl2ZUZlZWQxD1NlbGVjdGl2ZUZlZWQyD1NlbGVjdGl2ZUZlZWQzD1NlbGVjdGl2ZUZlZWQ0D1NlbGVjdGl2ZUZlZWQ1D1NlbGVjdGl2ZUZlZWQ2D1NlbGVjdGl2ZUZlZWQ3D1NlbGVjdGl2ZUZlZWQ4CkVudmVsb3BlMQpFbnZlbG9wZTIKRW52ZWxvcGUzDEV4aXRDb250cm9sBkV4aXQxBkV4aXQyBkV4aXQzEFByZXNlbnRDb250aW51ZQxQcmVzZW50U3RvcAtFbnZlbG9wZUlkC0RvY3VtZW50SWQLQ3VzdG9tZXJJZAlQYWdlTm9mTQtGb3JjZWRGb2xkCUZyYW5rZXIxCUZyYW5rZXIyCU1hdGNoaW5nEEdyb3VwQ291bnRJbkpvYhBHcm91cEluZGV4SW5Kb2IPRm9ybUluZGV4SW5Kb2IRRm9ybUNvdW50SW5Hcm91cBFGb3JtSW5kZXhJbkdyb3VwBkpvYklkDE1haWxwaWVjZUlkCUVuZE9mSm9iCUlua01hcmsxCUlua01hcmsyC0pvZ0NvbnRyb2wVUHJpbnRPbmx5T25GaXJzdFBhZ2UIRGl2ZXJ0Mw9TZWxlY3RpdmVGZWVkORBTZWxlY3RpdmVGZWVkMTAQU2VsZWN0aXZlRmVlZDExEFNlbGVjdGl2ZUZlZWQxMhBTZWxlY3RpdmVGZWVkMTMQU2VsZWN0aXZlRmVlZDE0EFNlbGVjdGl2ZUZlZWQxNQ1SZVRpbWVHcm91cDENUmVUaW1lR3JvdXAyDVJlVGltZUdyb3VwM4CKi4yVlpeYmZqbpaanqKmqq6ytrq + wsbKztLW2t7i5uru8vb6 / wEDAQcBCwEbAR8BIwEnASsBLwEzATcBOwE / AUcBSwFPAVMBVwFbAV8BYwFnAWsBbwJbAl8CYwJnAmsCbwJzAncCewJ8JRW5jb2RpbmcHT2JqZWN0CglFbmNvZGluZwVOYW1lB1N0cmluZwATQ29tcG9zaXRlRnVuY3Rpb25zBUxpc3QbB09iamVjdBMSQ29tcG9zaXRlRnVuY3Rpb24VU2V0V2l0aEZ1bmN0aW9uVHlwZXMFTGlzdIPZBUVudW2D0oEhBU5vbmUHUGFja1VwClN0YXJ0TWFyawtTYWZldHlNYXJrB1Bhcml0eQ9OdW1iZXJPZlNoZWV0cwxTaGVldE51bWJlcg5TaGVldFNlcXVlbmNlDlNlcXVlbmNlQ2hlY2sOR3JvdXBTZXF1ZW5jZQlTZXRNYXRjaAtFbmRPZkdyb3VwEUVuZE9mR3JvdXBEZW1hbmQNRmlyc3RPZkdyb3VwE0ZpcnN0T2ZHcm91cERlbWFuZAdJbnNlcnQLQWNjdW11bGF0ZQdBY2NJbnMFU3RvcA9EaXZlcnRDb250aW51ZQtEaXZlcnRTdG9wCERpdmVydDEIRGl2ZXJ0Mg9TZWFsaW5nQ29udHJvbA9TZWxlY3RpdmVGZWVkMQ9TZWxlY3RpdmVGZWVkMg9TZWxlY3RpdmVGZWVkMw9TZWxlY3RpdmVGZWVkNA9TZWxlY3RpdmVGZWVkNQ9TZWxlY3RpdmVGZWVkNg9TZWxlY3RpdmVGZWVkNw9TZWxlY3RpdmVGZWVkOApFbnZlbG9wZTEKRW52ZWxvcGUyCkVudmVsb3BlMwxFeGl0Q29udHJvbAZFeGl0MQZFeGl0MgZFeGl0MxBQcmVzZW50Q29udGludWUMUHJlc2VudFN0b3ALRW52ZWxvcGVJZAtEb2N1bWVudElkC0N1c3RvbWVySWQJUGFnZU5vZk0LRm9yY2VkRm9sZAlGcmFua2VyMQlGcmFua2VyMglNYXRjaGluZxBHcm91cENvdW50SW5Kb2IQR3JvdXBJbmRleEluSm9iD0Zvcm1JbmRleEluSm9iEUZvcm1Db3VudEluR3JvdXARRm9ybUluZGV4SW5Hcm91cAZKb2JJZAxNYWlscGllY2VJZAlFbmRPZkpvYglJbmtNYXJrMQlJbmtNYXJrMgtKb2dDb250cm9sFVByaW50T25seU9uRmlyc3RQYWdlCERpdmVydDMPU2VsZWN0aXZlRmVlZDkQU2VsZWN0aXZlRmVlZDEwEFNlbGVjdGl2ZUZlZWQxMRBTZWxlY3RpdmVGZWVkMTIQU2VsZWN0aXZlRmVlZDEzEFNlbGVjdGl2ZUZlZWQxNBBTZWxlY3RpdmVGZWVkMTUNUmVUaW1lR3JvdXAxDVJlVGltZUdyb3VwMg1SZVRpbWVHcm91cDOAiouMlZaXmJmam6Wmp6ipqqusra6vsLGys7S1tre4ubq7vL2 + v8BAwEHAQsBGwEfASMBJwErAS8BMwE3ATsBPwFHAUsBTwFTAVcBWwFfAWMBZwFrAW8CWwJfAmMCZwJrAm8CcwJ3AnsCfClZhbHVlVHlwZQVFbnVtPhUHU3RyaW5nEFN0cmluZ1VwcGVyQ2FzZRBTdHJpbmdMb3dlckNhc2UISW50ZWdlcghCb29sZWFugIGCg4QTU3RhdGljVmFsdWVCb29sZWFuBUJvb2wAE1N0YXRpY1ZhbHVlSW50ZWdlcgdTaWduZWQAElN0YXRpY1ZhbHVlU3RyaW5nB1N0cmluZwAHUHJlZml4B1N0cmluZwAQQ2hhcmFjdGVyTnVtYmVyB1NpZ25lZAATQ2hhcmFjdGVyTnVtYmVyTWluB1NpZ25lZAATQ2hhcmFjdGVyTnVtYmVyTWF4B1NpZ25lZAARQ2hlY2tlZEJ5RGVmYXVsdAVCb29sAApJc0R5bmFtaWMFQm9vbAAPSXNDb25maWd1cmFibGUFQm9vbAAOSXNDb25kaXRpb25hbAVCb29sAAlJc0ZlZWRlcgVCb29sAAtJc1ByZWZpeGVkBUJvb2wAC0lzQ29tcHV0ZWQFQm9vbAAJQ2F0ZWdvcnkFRW51bR4NB1N0YXRpYwpJbnRlZ3JpdHkIQ29udHJvbICBggtFdmFsdWF0aW9uBUVudW1fJQVOb25lBkV2ZXJ5BkZpcnN0BUxhc3QMRXhjZXB0Rmlyc3QLRXhjZXB0TGFzdBNFeGNlcHRGaXJzdEFuZExhc3QLU3RhcnRPZkpvYglFbmRPZkpvYoCBgoOEhYaHiAlTZXF1ZW5jZQVFbnVtgOVBBU5vbmUQR3JvdXBDb3VudEluSm9iElNoZWV0SW5kZXhJbkdyb3VwElNoZWV0Q291bnRJbkdyb3VwEFNoZWV0SW5kZXhJbkpvYhBHcm91cEluZGV4SW5Kb2ITU2hlZXROdW1iZXJJbkdyb3VwFURvY3VtZW50SW5kZXhJbkdyb3VwCEFkZHJlc3MMVXNlckRlZmluZWQGSm9iSWQMTWFpbHBpZWNlSWQLU3RhcnRPZkpvYg1TdGFydE9mR3JvdXALRW5kT2ZHcm91cAlFbmRPZkpvYoCBgoOEhYaHiImKi4yNjo8OU2VxdWVuY2VPcmRlcgVFbnVtGQkKQXNjZW5kaW5nC0Rlc2NlbmRpbmeAgQxQYXJpdHlMb2dpYwVFbnVtEw0FTm9uZQVFdmVuBE9kZICBggQAAAAAAQ8B3wEAAA4FVHlwZQVFbnVtgKItBU5vbmUHQmluYXJ5DEhleGFkZWNpbWFsBk9jdGFsDkJjc0NoYXJhY3RlcnMPQmNzRGl2ZXJ0VW5pdHMSQmNzTnVtYmVyT2ZTaGVldHMRQmNzRmVlZGVyQ29udHJvbB1CY3NDaGFyYWN0ZXJzUmVzZXRPbk92ZXJmbG93DU51bWVyaWNBbHBoYQ1BbHBoYU51bWVyaWOAgYKDhIWGh4iJigpHcm91cFNpemUHU2lnbmVkAAtHcm91cE9yZGVyBUVudW0ZCQpBc2NlbmRpbmcLRGVzY2VuZGluZ4CBCEdyb3VwSWQHU3RyaW5nAAhBZGljaXR5B1NpZ25lZAAMVmFsdWVPZmZzZXQHU2lnbmVkAAlNaW5WYWx1ZQdTaWduZWQACU1heFZhbHVlB1NpZ25lZAANUmVnRXhQYXR0ZXJuB1N0cmluZwARUmVnRXhSZXBsYWNlbWVudAdTdHJpbmcAEVJlc2V0T25TaXplRXJyb3IFQm9vbAAJQml0T3JkZXIFRW51bRMJB05vcm1hbAhSZXZlcnNlgIEMUGFkZGluZ0NoYXIHU3RyaW5nAApQYWRTdHJpbmcFRW51bRcNB05vdFNldAVMZWZ0BlJpZ2h0gIGCBAAAAAABEAFXAAAAAglQcmlvcml0eQdTaWduZWQAHFByaW9yaXRpemVkRnVuY3Rpb25TZXR0aW5ncwVMaXN0JAdPYmplY3QcG1ByaW9yaXRpemVkRnVuY3Rpb25TZXR0aW5nBAAAAAABEQF9BAAABglQcmlvcml0eQdTaWduZWQADUZ1bmN0aW9uVHlwZQVFbnVtg9KBIQVOb25lB1BhY2tVcApTdGFydE1hcmsLU2FmZXR5TWFyawdQYXJpdHkPTnVtYmVyT2ZTaGVldHMMU2hlZXROdW1iZXIOU2hlZXRTZXF1ZW5jZQ5TZXF1ZW5jZUNoZWNrDkdyb3VwU2VxdWVuY2UJU2V0TWF0Y2gLRW5kT2ZHcm91cBFFbmRPZkdyb3VwRGVtYW5kDUZpcnN0T2ZHcm91cBNGaXJzdE9mR3JvdXBEZW1hbmQHSW5zZXJ0C0FjY3VtdWxhdGUHQWNjSW5zBVN0b3APRGl2ZXJ0Q29udGludWULRGl2ZXJ0U3RvcAhEaXZlcnQxCERpdmVydDIPU2VhbGluZ0NvbnRyb2wPU2VsZWN0aXZlRmVlZDEPU2VsZWN0aXZlRmVlZDIPU2VsZWN0aXZlRmVlZDMPU2VsZWN0aXZlRmVlZDQPU2VsZWN0aXZlRmVlZDUPU2VsZWN0aXZlRmVlZDYPU2VsZWN0aXZlRmVlZDcPU2VsZWN0aXZlRmVlZDgKRW52ZWxvcGUxCkVudmVsb3BlMgpFbnZlbG9wZTMMRXhpdENvbnRyb2wGRXhpdDEGRXhpdDIGRXhpdDMQUHJlc2VudENvbnRpbnVlDFByZXNlbnRTdG9wC0VudmVsb3BlSWQLRG9jdW1lbnRJZAtDdXN0b21lcklkCVBhZ2VOb2ZNC0ZvcmNlZEZvbGQJRnJhbmtlcjEJRnJhbmtlcjIJTWF0Y2hpbmcQR3JvdXBDb3VudEluSm9iEEdyb3VwSW5kZXhJbkpvYg9Gb3JtSW5kZXhJbkpvYhFGb3JtQ291bnRJbkdyb3VwEUZvcm1JbmRleEluR3JvdXAGSm9iSWQMTWFpbHBpZWNlSWQJRW5kT2ZKb2IJSW5rTWFyazEJSW5rTWFyazILSm9nQ29udHJvbBVQcmludE9ubHlPbkZpcnN0UGFnZQhEaXZlcnQzD1NlbGVjdGl2ZUZlZWQ5EFNlbGVjdGl2ZUZlZWQxMBBTZWxlY3RpdmVGZWVkMTEQU2VsZWN0aXZlRmVlZDEyEFNlbGVjdGl2ZUZlZWQxMxBTZWxlY3RpdmVGZWVkMTQQU2VsZWN0aXZlRmVlZDE1DVJlVGltZUdyb3VwMQ1SZVRpbWVHcm91cDINUmVUaW1lR3JvdXAzgIqLjJWWl5iZmpulpqeoqaqrrK2ur7CxsrO0tba3uLm6u7y9vr / AQMBBwELARsBHwEjAScBKwEvATMBNwE7AT8BRwFLAU8BUwFXAVsBXwFjAWcBawFvAlsCXwJjAmcCawJvAnMCdwJ7AnxxUcnVlRXF1aXZhbGVudEludGVnZXJWYWx1ZXMFTGlzdAkHU2lnbmVkABJSZXNldEludGVnZXJWYWx1ZQdTaWduZWQAG1RydWVFcXVpdmFsZW50U3RyaW5nVmFsdWVzBUxpc3QJB1N0cmluZwARUmVzZXRTdHJpbmdWYWx1ZQdTdHJpbmcABAAAAAABEgF2BAAABQxNaW5TZWxlY3RlZAdTaWduZWQADE1heFNlbGVjdGVkB1NpZ25lZAAYUnVsZUFjdGl2YXRpbmdGdW5jdGlvbnMFTGlzdIPZBUVudW2D0oEhBU5vbmUHUGFja1VwClN0YXJ0TWFyawtTYWZldHlNYXJrB1Bhcml0eQ9OdW1iZXJPZlNoZWV0cwxTaGVldE51bWJlcg5TaGVldFNlcXVlbmNlDlNlcXVlbmNlQ2hlY2sOR3JvdXBTZXF1ZW5jZQlTZXRNYXRjaAtFbmRPZkdyb3VwEUVuZE9mR3JvdXBEZW1hbmQNRmlyc3RPZkdyb3VwE0ZpcnN0T2ZHcm91cERlbWFuZAdJbnNlcnQLQWNjdW11bGF0ZQdBY2NJbnMFU3RvcA9EaXZlcnRDb250aW51ZQtEaXZlcnRTdG9wCERpdmVydDEIRGl2ZXJ0Mg9TZWFsaW5nQ29udHJvbA9TZWxlY3RpdmVGZWVkMQ9TZWxlY3RpdmVGZWVkMg9TZWxlY3RpdmVGZWVkMw9TZWxlY3RpdmVGZWVkNA9TZWxlY3RpdmVGZWVkNQ9TZWxlY3RpdmVGZWVkNg9TZWxlY3RpdmVGZWVkNw9TZWxlY3RpdmVGZWVkOApFbnZlbG9wZTEKRW52ZWxvcGUyCkVudmVsb3BlMwxFeGl0Q29udHJvbAZFeGl0MQZFeGl0MgZFeGl0MxBQcmVzZW50Q29udGludWUMUHJlc2VudFN0b3ALRW52ZWxvcGVJZAtEb2N1bWVudElkC0N1c3RvbWVySWQJUGFnZU5vZk0LRm9yY2VkRm9sZAlGcmFua2VyMQlGcmFua2VyMglNYXRjaGluZxBHcm91cENvdW50SW5Kb2IQR3JvdXBJbmRleEluSm9iD0Zvcm1JbmRleEluSm9iEUZvcm1Db3VudEluR3JvdXARRm9ybUluZGV4SW5Hcm91cAZKb2JJZAxNYWlscGllY2VJZAlFbmRPZkpvYglJbmtNYXJrMQlJbmtNYXJrMgtKb2dDb250cm9sFVByaW50T25seU9uRmlyc3RQYWdlCERpdmVydDMPU2VsZWN0aXZlRmVlZDkQU2VsZWN0aXZlRmVlZDEwEFNlbGVjdGl2ZUZlZWQxMRBTZWxlY3RpdmVGZWVkMTIQU2VsZWN0aXZlRmVlZDEzEFNlbGVjdGl2ZUZlZWQxNBBTZWxlY3RpdmVGZWVkMTUNUmVUaW1lR3JvdXAxDVJlVGltZUdyb3VwMg1SZVRpbWVHcm91cDOAiouMlZaXmJmam6Wmp6ipqqusra6vsLGys7S1tre4ubq7vL2 + v8BAwEHAQsBGwEfASMBJwErAS8BMwE3ATsBPwFHAUsBTwFTAVcBWwFfAWMBZwFrAW8CWwJfAmMCZwJrAm8CcwJ3AnsCfCVByaW9yaXR5B1NpZ25lZAAcUHJpb3JpdGl6ZWRGdW5jdGlvblNldHRpbmdzBUxpc3QkB09iamVjdBwbUHJpb3JpdGl6ZWRGdW5jdGlvblNldHRpbmcEAAAAAAETAZcFAAAFDUZ1bmN0aW9uVHlwZQVFbnVtg9KBIQVOb25lB1BhY2tVcApTdGFydE1hcmsLU2FmZXR5TWFyawdQYXJpdHkPTnVtYmVyT2ZTaGVldHMMU2hlZXROdW1iZXIOU2hlZXRTZXF1ZW5jZQ5TZXF1ZW5jZUNoZWNrDkdyb3VwU2VxdWVuY2UJU2V0TWF0Y2gLRW5kT2ZHcm91cBFFbmRPZkdyb3VwRGVtYW5kDUZpcnN0T2ZHcm91cBNGaXJzdE9mR3JvdXBEZW1hbmQHSW5zZXJ0C0FjY3VtdWxhdGUHQWNjSW5zBVN0b3APRGl2ZXJ0Q29udGludWULRGl2ZXJ0U3RvcAhEaXZlcnQxCERpdmVydDIPU2VhbGluZ0NvbnRyb2wPU2VsZWN0aXZlRmVlZDEPU2VsZWN0aXZlRmVlZDIPU2VsZWN0aXZlRmVlZDMPU2VsZWN0aXZlRmVlZDQPU2VsZWN0aXZlRmVlZDUPU2VsZWN0aXZlRmVlZDYPU2VsZWN0aXZlRmVlZDcPU2VsZWN0aXZlRmVlZDgKRW52ZWxvcGUxCkVudmVsb3BlMgpFbnZlbG9wZTMMRXhpdENvbnRyb2wGRXhpdDEGRXhpdDIGRXhpdDMQUHJlc2VudENvbnRpbnVlDFByZXNlbnRTdG9wC0VudmVsb3BlSWQLRG9jdW1lbnRJZAtDdXN0b21lcklkCVBhZ2VOb2ZNC0ZvcmNlZEZvbGQJRnJhbmtlcjEJRnJhbmtlcjIJTWF0Y2hpbmcQR3JvdXBDb3VudEluSm9iEEdyb3VwSW5kZXhJbkpvYg9Gb3JtSW5kZXhJbkpvYhFGb3JtQ291bnRJbkdyb3VwEUZvcm1JbmRleEluR3JvdXAGSm9iSWQMTWFpbHBpZWNlSWQJRW5kT2ZKb2IJSW5rTWFyazEJSW5rTWFyazILSm9nQ29udHJvbBVQcmludE9ubHlPbkZpcnN0UGFnZQhEaXZlcnQzD1NlbGVjdGl2ZUZlZWQ5EFNlbGVjdGl2ZUZlZWQxMBBTZWxlY3RpdmVGZWVkMTEQU2VsZWN0aXZlRmVlZDEyEFNlbGVjdGl2ZUZlZWQxMxBTZWxlY3RpdmVGZWVkMTQQU2VsZWN0aXZlRmVlZDE1DVJlVGltZUdyb3VwMQ1SZVRpbWVHcm91cDINUmVUaW1lR3JvdXAzgIqLjJWWl5iZmpulpqeoqaqrrK2ur7CxsrO0tba3uLm6u7y9vr / AQMBBwELARsBHwEjAScBKwEvATMBNwE7AT8BRwFLAU8BUwFXAVsBXwFjAWcBawFvAlsCXwJjAmcCawJvAnMCdwJ7Anw1TZXF1ZW5jZVR5cGUFRW51bYDlQQVOb25lEEdyb3VwQ291bnRJbkpvYhJTaGVldEluZGV4SW5Hcm91cBJTaGVldENvdW50SW5Hcm91cBBTaGVldEluZGV4SW5Kb2IQR3JvdXBJbmRleEluSm9iE1NoZWV0TnVtYmVySW5Hcm91cBVEb2N1bWVudEluZGV4SW5Hcm91cAhBZGRyZXNzDFVzZXJEZWZpbmVkBkpvYklkDE1haWxwaWVjZUlkC1N0YXJ0T2ZKb2INU3RhcnRPZkdyb3VwC0VuZE9mR3JvdXAJRW5kT2ZKb2KAgYKDhIWGh4iJiouMjY6PDlNlcXVlbmNlT3JkZXIFRW51bRkJCkFzY2VuZGluZwtEZXNjZW5kaW5ngIEPRXZhbHVhdGlvblR5cGUFRW51bV8lBU5vbmUGRXZlcnkGRmlyc3QFTGFzdAxFeGNlcHRGaXJzdAtFeGNlcHRMYXN0E0V4Y2VwdEZpcnN0QW5kTGFzdAtTdGFydE9mSm9iCUVuZE9mSm9igIGCg4SFhoeICUVuY29kaW5nB09iamVjdAoJRW5jb2RpbmcEAAAAAAEUATwAAAABBkl0ZW1zDk9EQkRpY3Rpb25hcnknCVVuc2lnbmVkAAdPYmplY3QVFFVwZGF0ZVByaW50ZXJMaXN0RGIEAAAAAAEVAQMBAAAJHEN1cnJlbnRTZWFyY2hpbmdQcmludGVyTmFtZQdTdHJpbmcAFkF2YWlsYWJsZVByaW50ZXJOYW1lcwVMaXN0CQdTdHJpbmcACkNvbXBhbnlJZAlVbnNpZ25lZAAGRXJyb3IHT2JqZWN0CwpFcnJvckluZm8bVXBkYXRlU2VsZWN0ZWRQcmludGVyc09ubHkFQm9vbAAgVHJ5RmluZEZvcm1hdEZvclZpcnR1YWxQcmludGVycwVCb29sABFQcmludGVyc1RvVXBkYXRlBUxpc3QJB1N0cmluZwALSXNGaW5pc2hlZAVCb29sAA1DcmVhdGlvbkRhdGUJRGF0ZVRpbWUABAAAAAABFgFMFQAAAQdTdGF0ZXMOT0RCRGljdGlvbmFyeZU1BUVudW2VEIMNB05vdFNldBNJbnB1dEZpbGVfVXBsb2FkZWQZSW5wdXRGaWxlX0NvbnZlcnRlZFRvVG5vIklucHV0RmlsZV9Eb2N1bWVudFByb2ZpbGVTZWxlY3RlZBtJbnB1dEZpbGVfRG9jdW1lbnRzQ3JlYXRlZBdJbnB1dEZpbGVfUHJlcHJvY2Vzc2VkE0lucHV0RmlsZV9DYW5jZWxlZBJJbnB1dEZpbGVfRGVsZXRlZBFJbnB1dEZpbGVfRmFpbGVkFFNhbXBsZUZpbGVfVXBsb2FkZWQaU2FtcGxlRmlsZV9Db252ZXJ0ZWRUb1RubxlTYW1wbGVGaWxlX0NvbnZlcnRGYWlsZWQbU2FtcGxlRmlsZV9Db252ZXJ0Q2FuY2VsZWQdU2FtcGxlRmlsZV9UaHVtYm5haWxzQ3JlYXRlZBlTYW1wbGVGaWxlX0NyZWF0ZVByZXZpZXcbU2FtcGxlRmlsZV9QcmV2aWV3RmluaXNoZWQZU2FtcGxlRmlsZV9QcmV2aWV3RmFpbGVkG1NhbXBsZUZpbGVfUHJldmlld0NhbmNlbGVkEURvY3VtZW50X0NyZWF0ZWQWRG9jdW1lbnRfUHJlcHJvY2Vzc2VkJkRvY3VtZW50X0NvbW11bmljYXRpb25Qcm9maWxlQXNzaWduZWQURG9jdW1lbnRfVW5hc3NpZ25lZBBEb2N1bWVudF9GYWlsZWQSRG9jdW1lbnRfQ2FuY2VsZWQRRG9jdW1lbnRfRGVsZXRlZB5Db21tdW5pY2F0aW9uUGllY2VfVW5hc3NpZ25lZCJDb21tdW5pY2F0aW9uUGllY2VfUGVuZGluZ1JlbGVhc2UjQ29tbXVuaWNhdGlvblBpZWNlX1JlbGVhc2VGaW5pc2hlZCdDb21tdW5pY2F0aW9uUGllY2VfUHJvZHVjdGlvbkNvbXBsZXRlZCRDb21tdW5pY2F0aW9uUGllY2VfUHJvZHVjdGlvbkZhaWxlZCZDb21tdW5pY2F0aW9uUGllY2VfUHJvZHVjdGlvbkNhbmNlbGVkIENvbW11bmljYXRpb25QaWVjZV9JblByb2R1Y3Rpb24bQ29tbXVuaWNhdGlvblBpZWNlX0RlbGV0ZWQhQ29tbXVuaWNhdGlvblBpZWNlX1JlbGVhc2VGYWlsZWQjQ29tbXVuaWNhdGlvblBpZWNlX1JlbGVhc2VDYW5jZWxlZCVDb21tdW5pY2F0aW9uUGllY2VfUHJvZHVjdGlvbkNoYW5nZWQiQ29tbXVuaWNhdGlvblBpZWNlX0NvbnRlbnRDaGFuZ2VkJENvbW11bmljYXRpb25Qcm9maWxlX0NvbnRlbnRDaGFuZ2VkDEJhdGNoX1JlYWR5E0JhdGNoX0luUHJvZHVjdGlvbhpCYXRjaF9Qcm9kdWN0aW9uQ29tcGxldGVkF0JhdGNoX1Byb2R1Y3Rpb25GYWlsZWQZQmF0Y2hfUHJvZHVjdGlvbkNhbmNlbGVkDkJhdGNoX0RlbGV0ZWQaUHJvZHVjdGlvbl9Db250ZW50Q2hhbmdlZBNQZGZQcmV2aWV3X1JlcXVlc3QVTGljZW5zZUZpbGVfVXBsb2FkZWQTTGljZW5zZUZpbGVfRmFpbGVkFkxpY2Vuc2VGaWxlX1Byb2Nlc3NlZCFFbGVjdHJvbmljRW5jbG9zdXJlRmlsZV9VcGxvYWRlZCdFbGVjdHJvbmljRW5jbG9zdXJlRmlsZV9Db252ZXJ0ZWRUb1Rubx9FbGVjdHJvbmljRW5jbG9zdXJlRmlsZV9GYWlsZWQgRWxlY3Ryb25pY0VuY2xvc3VyZUZpbGVfRGVsZXRlZBNQcmludGVyTGlzdF9RdWV1ZWQbQ29uZmlndXJhdGlvblNoZWV0X1JlcXVlc3QXQ29tbXVuaWNhdGlvbl9VcGxvYWRlZBxDb21tdW5pY2F0aW9uX1ByZXByb2Nlc3NpbmcbQ29tbXVuaWNhdGlvbl9QcmVwcm9jZXNzZWQWQ29tbXVuaWNhdGlvbl9XYWl0aW5nGENvbW11bmljYXRpb25fU3VibWl0dGVkGENvbW11bmljYXRpb25fU3BsaXR0aW5nGENvbW11bmljYXRpb25fQ29tcGxldGVkFUNvbW11bmljYXRpb25fRmFpbGVkF0NvbW11bmljYXRpb25fQ2FuY2VsZWQZQ29tbXVuaWNhdGlvblpvbmVzX1BhcnNlG0NvbW11bmljYXRpb25ab25lc19FeHRyYWN0HENvbW11bmljYXRpb25QcmV2aWV3X1F1ZXVlZCNDb21tdW5pY2F0aW9uUHJvY2Vzc1ByZXZpZXdfUXVldWVkGFdlYlBvcnRhbENvbnRlbnRfUXVldWVkHFdlYlBvcnRhbENvbnRlbnRfRG93bmxvYWRlZBhXZWJQb3J0YWxDb250ZW50X0ZhaWxlZBpXZWJQb3J0YWxDb250ZW50X0NhbmNlbGVkE091dHB1dEZpbGVfQ3JlYXRlZBpQcmludGVyT3V0cHV0RmlsZV9DcmVhdGVkGEVtYWlsT3V0cHV0RmlsZV9DcmVhdGVkF0VtYWlsT3V0cHV0RmlsZV9GYWlsZWQaU29ydGluZ1JlcG9ydEZpbGVfQ3JlYXRlZBxTYW1wbGVGaWxlX1RodW1ibmFpbHNGYWlsZWQeRG9jdW1lbnRQcm9maWxlUHJldmlld19VcGRhdGUaRW1haWxPdXRwdXRGaWxlX0NvbmZpcm1lZCJFbWFpbE91dHB1dEZpbGVfUmVzdWJtaXRSZXF1ZXN0ZWQRRmluZFRleHRfUmVxdWVzdBZOZXBJbnB1dEZpbGVfVXBsb2FkZWQaTmVwSW5wdXRGaWxlX1ByZXByb2Nlc3NlZBROZXBJbnB1dEZpbGVfRmFpbGVkFU5lcElucHV0RmlsZV9EZWxldGVkE05lcElucHV0RmlsZV9JbkpvYh5OZXBJbnB1dEZpbGVfUHJlcHJvY2Vzc0ZhaWxlZCBOZXBJbnB1dEZpbGVfUHJlcHJvY2Vzc0NhbmNlbGVkEE5lcEpvYl9TdGVwRWRpdCFOZXBJbnB1dEZpbGVfVGh1bWJuYWlsc1JlcXVlc3RlZB5OZXBJbnB1dEZpbGVfUHJldmlld1JlcXVlc3RlZBxOZXBKb2JfUHJvY2Vzc0NvbmZpZ3VyYXRpb24XTmVwQXR0YWNobWVudF9VcGxvYWRlZBtOZXBBdHRhY2htZW50X1ByZXByb2Nlc3NlZB9OZXBBdHRhY2htZW50X1ByZXByb2Nlc3NGYWlsZWQhTmVwQXR0YWNobWVudF9QcmVwcm9jZXNzQ2FuY2VsZWQcUHJvZHVjdGlvbkNsZWFuc2luZ19SdW5uaW5nFk5lcEF0dGFjaG1lbnRfRGVsZXRlZBJBaW1zRmlsZV9VcGxvYWRlZBBBaW1zRmlsZV9GYWlsZWQTQWltc0ZpbGVfUHJvY2Vzc2VkJlNhbXBsZUZpbGVfUHVyZURvY3VtZW50UGFnZXNSZXF1ZXN0ZWQdTWl4ZWRJbnB1dEZpbGVQcmV2aWV3X1VwZGF0ZRBOZXBKb2JfRmluaXNoZWQZTmVwQ29tbXVuaWNhdGlvbl9DcmVhdGVkGk5lcENvbW11bmljYXRpb25fRmluaXNoZWQSTmVwSm9iX1N0ZXBSZXZpZXcPTmVwSm9iX1NlbmRpbmcYTmVwQ29tbXVuaWNhdGlvbl9GYWlsZWQXTmVwUHJpbnRKb2JfTm90UHJpbnRlZBROZXBQcmludEpvYl9QcmludGVkGU5lcENvbW11bmljYXRpb25fU2VuZGluZxpOZXBDb21tdW5pY2F0aW9uX1RyYWNraW5nIk5lcFNhbXBsZUpvYl9Qcm9jZXNzQ29uZmlndXJhdGlvbhhOZXBTYW1wbGVKb2JfU3RlcFJldmlldxdOZXBTYW1wbGVGaWxlX1VwbG9hZGVkG05lcFNhbXBsZUZpbGVfUHJlcHJvY2Vzc2VkH05lcFNhbXBsZUZpbGVfUHJlcHJvY2Vzc0ZhaWxlZCFOZXBTYW1wbGVGaWxlX1ByZXByb2Nlc3NDYW5jZWxlZCJOZXBTYW1wbGVGaWxlX1RodW1ibmFpbHNSZXF1ZXN0ZWQUTmVwU2FtcGxlRmlsZV9JbkpvYhlOZXBDb21tdW5pY2F0aW9uX1dhaXRpbmcgTmVwSm9iX0NvbW11bmljYXRpb25zUHJvY2Vzc2luZxdOZXBKb2JfUHJpbnRQcm9jZXNzaW5nGE5lcEpvYl9Qcm9jZXNzaW5nRmFpbGVkJU5lcENvbW11bmljYXRpb25fV2ViTGlua0VtYWlsU2VuZGluZx1OZXBDb21tdW5pY2F0aW9uX0Rvd25sb2FkaW5nFk5lcFNhbXBsZUpvYl9TdGVwRWRpdBhOZXBGaWxlRG93bmxvYWRfUmVxdWVzdBpOZXBJbnB1dEZpbGVfSm9iQ29tcGxldGVkHE5lcEpvYl9JbnB1dEZpbGVzUHJvY2Vzc2luZyJOZXBBdHRhY2htZW50X1RodW1ibmFpbHNSZXF1ZXN0ZWQaTmVwQ29tbXVuaWNhdGlvbl9QcmludGluZx5OZXBKb2JfU2l6ZUNvbXB1dGluZ1JlcXVlc3RlZBhOZXBTYW1wbGVGaWxlX1ByZXBhcmluZyROZXBDb21tdW5pY2F0aW9uX0JvdW5jZUJhY2tUcmFja2luZyJOZXBDb21tdW5pY2F0aW9uX0JvdW5jZUJhY2tGYWlsZWQdTmVwQ29tbXVuaWNhdGlvbl9NYWlsU2VuZGluZxxNaXNMaWNlbnNlUmVuZXdhbF9SZXF1ZXN0ZWQWTWlzSW5wdXRGaWxlX1VwbG9hZGVkIU1pc0lucHV0RmlsZV9UaHVtYm5haWxzUmVxdWVzdGVkIE1pc0lucHV0RmlsZV9QcmVwcm9jZXNzQ2FuY2VsZWQeTWlzSW5wdXRGaWxlX1ByZXByb2Nlc3NGYWlsZWQVTWlzSW5wdXRGaWxlX0RlbGV0ZWQaTWlzSW5wdXRGaWxlX1ByZXByb2Nlc3NlZB5NaXNJbnB1dEZpbGVfUHJldmlld1JlcXVlc3RlZA9NaXNKb2JfQ3JlYXRlZBFNaXNKb2JfU3RlcElucHV0FE1pc0pvYl9Qcm9jZXNzSW5wdXQXTWlzSm9iX1N0ZXBPcHRpY2FsTWFyaxNNaXNJbnB1dEZpbGVfSW5Kb2IaTWlzSm9iX1Byb2Nlc3NPcHRpY2FsTWFyaxJNaXNKb2JfU3RlcE91dHB1dBVNaXNKb2JfUHJvY2Vzc091dHB1dBFNaXNKb2JfQ29tcGxldGVkIU1pc09wdGljYWxNYXJrR2VuZXJhdGlvbl9SZXF1ZXN0FE1pc1ByaW50Sm9iX0NyZWF0ZWQPTWlzSm9iX0RlbGV0ZWQSTWlzSm9iX1Byb2Nlc3NpbmcRTWlzSm9iX1Byb2Nlc3NlZB9NaXNJbWFnZVpvbmVQcm9jZXNzaW5nX1JlcXVlc3QeQWRkcmVzc0NhcnJpZXJQcmV2aWV3X1JlcXVlc3QXTWlzSW5wdXRGaWxlX1VwbG9hZGluZxRFdmlkZW5jZUZpbGVfRmFpbGVkF0V2aWRlbmNlRmlsZV9Qcm9jZXNzZWQWTWlzUHJpbnRKb2JfUHJvY2Vzc2VkGk1pc1ByaW50Sm9iX1Byb2Nlc3NGYWlsZWQUTWlzUHJpbnRKb2JfUHJpbnRlZBRNaXNQcmludEpvYl9EZWxldGVkFkV2aWRlbmNlRmlsZV9VcGxvYWRlZBRNaXNJbnB1dEZpbGVfT3V0cHV0KE1pc0NvbmZpZ3VyYXRpb25TaGVldEdlbmVyYXRpb25fUmVxdWVzdCBEb2N1bWVudFRlbXBsYXRlUHJldmlld19SZXF1ZXN0Fk1pc1ByaW50ZXJMaXN0X1F1ZXVlZCNQcmludGVyT3V0cHV0RmlsZV9SZXByaW50UmVxdWVzdGVkLFByaW50ZXJPdXRwdXRGaWxlX0NyZWF0ZVRodW1ibmFpbHNSZXF1ZXN0ZWQgTWlzUHJpbnRKb2JQcm9jZXNzaW5nX1JlcXVlc3RlZBVCYXRjaF9Jbk9wdGltaXphdGlvbhVPdmVybGF5RmlsZV9VcGxvYWRlZBZPdmVybGF5RmlsZV9Qcm9jZXNzZWQTT3ZlcmxheUZpbGVfRmFpbGVkIU1pc091dHB1dFByZXByb2Nlc3NpbmdfUmVxdWVzdGVkJk5lcENvbW11bmljYXRpb25fV2VibGlua0VtYWlsVHJhY2tpbmcjTWlzT3V0cHV0UHJldmlld0dlbmVyYXRpb25fUmVxdWVzdCdDb21tdW5pY2F0aW9uUGllY2VfUHJvZHVjdGlvbkRpc2NhcmRlZBxNaXNSZWFkQWxsWm9uZVZhbHVlX1JlcXVlc3QdTWlzSW5wdXRGaWxlX1ByaW50UmVhZHlUb1VzZSNNaXNUcmFuc2FjdGlvbnNSZXBvcnRpbmdfUmVxdWVzdGVkJk1pc1NpbmdsZVByaW50Sm9iUHJvY2Vzc2luZ19SZXF1ZXN0ZWQmTWlzVGh1bWJuYWlsQmF0Y2hHZW5lcmF0aW9uX1JlcXVlc3RlZCJDb21tdW5pY2F0aW9uUGllY2VfSW5PcHRpbWl6YXRpb24aRm9udEZpbGVQcmV2aWV3X1JlcXVlc3RlZBpGb250RmlsZVByZXZpZXdfUHJvY2Vzc2VkF0ZvbnRGaWxlUHJldmlld19GYWlsZWSAgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq + wsbKztLW2t7i5uru8vb6 / wEDAQcBCwEPARMBFwEbAR8BIwEnASsBLwEzATcBOwE / AUMBRwFLAU8BUwFXAVsBXwFjAWcBawFvAXMBdwF7AX8BgwGHAYsBjwGTAZcBmwGfAaMBpwGrAdcB2wHnAesB7wH7AgsCDwITAhcCGwIfAiMCJwIrAjMCNwI7Aj8CQwJHAksCTwJTAlcCWwJfAmMCZwJrAm8CcwKHBLMEtwS7BL8EwwTHBMsE + wT / BQMFBwULBQ8FEwUXBRsFHwUjBScFKwUvBTMFNwU7BT8FQwVHBUsFTwVTBVcFWwVfBWMFZwVrBW8FcwV3BXsFfwWDBYcFkwWjBacFqwWvBbMFtwW7Bb8FwwXHBcgdPYmplY3QXFlByb2Nlc3NhYmxlSXRlbVN0YXRlcwQAAAAAARcBNQAAAAEGSXRlbXMLRGljdGlvbmFyeSMJVW5zaWduZWQAB09iamVjdBEQUHJvY2Vzc2FibGVJdGVtBAAAAAABGAE8AAAAAQZJdGVtcw5PREJEaWN0aW9uYXJ5JwlVbnNpZ25lZAAHT2JqZWN0FRRBaW1zQ29uZmlndXJhdGlvbkRiBAAAAAABGQGuAAAABwpDb21wYW55SWQJVW5zaWduZWQAB1ByZWZpeAdTdHJpbmcAGEFsbG9jYXRpb25GaWxlRXh0ZW5zaW9uB1N0cmluZwAVUmVwcmludEZpbGVFeHRlbnNpb24HU3RyaW5nABNDbG9zZUZpbGVFeHRlbnNpb24HU3RyaW5nABlNYW51YWxDbG9zZUZpbGVFeHRlbnNpb24HU3RyaW5nAAtXYXNDaGFuZ2VkBUJvb2wABAAAAAABGgE + AAAAAwpDb21wYW55SWQJVW5zaWduZWQACEluZGV4ZXMFTGlzdAsJVW5zaWduZWQACVdvcmtlcklkB1N0cmluZwADAAAAAAIBAQAAAAEDAAAAAAIDAQAAAAIDAAAAAAIFAQAAAAMDAAAAAAIHAQAAAAQDAAAAAAIUAQAAAAUDAAAAAAIWAQAAAAYDAAAAAAIYAQAAAAgCAAAAAAMBAAAABwIAAAABAQMAAAABAQACAAAAAQIDAAAAAwEBAgAAAAEDAwAAAAUBAgIAAAABBAMAAAAHAQMCAAAAAQUDAAAAFAEEAgAAAAEGAwAAABYBBQIAAAABBwwAAAAXAX8BAX4aAQF / AAACAAAAAQgDAAAAGAEGAwAAAAIAZA4AAAB / AgEBCEVuZ2xpc2gBAQMAAAACAWUoAAAAfwQBAQZQbGFpbgNBNIGAgD + 0euFHrhR7fwABgABI09vL6L3CoX4AAQMAAAACAWYtAAAAfwQBAQdMZXR0ZXIHTGV0dGVygYOAP7R64UeuFHt / AACAAEjT28vo7YSifgABAwAAAAICZyQAAAB / BgEBDEN1c3RvbWVyIElEAYDAZQAAgIB / AAFI09vL6R3cRIADAAAAAgJoKAAAAH8GAQEQRG9jdW1lbnQgTnVtYmVyAYDAZQAAgIB / AAFI09vL6T60 / IADAAAAAgJpJwAAAH8GAQEPRG9jdW1lbnQgVGl0bGUBgMBlAACAgH8AAUjT28vpPtuFgAMAAAACAmolAAAAfwYBAQ1Ub3RhbCBBbW91bnQBgcBlAACAgH8AAUjT28vpPtuFgAMAAAACA2u8BQAAfwgBAYGAgAhPTVIgU3RkDDEtdHJhY2sgT01SCE5lb3Bvc3R / CQE / jrhR64UeuD98rAgxJul5fwoBP4FocrAgxJw / gWhysCDEnIF + CwE / gm6XjU / fOz8wYk3S8an8P3FTefqX4TN9DAE / gm6XjU / fOz8wpWmxdIGyQAgAAAAAAAB8DQE / OPgeii7Ci4B + Fn0OAYuAC1N0YXJ0IE1hcmuAgIQBgAAAgICAAQAAAAAAAIKAgICAfA4BpYAYRW5kIG9mIEdyb3VwIE1hcmsgKEVPRymAgIQBgAAAgICAAQAAAAAAAIKDgICAew4BpoASRGVtYW5kIGZlZWQgKEVPRymAgIQAgAAAgICAAAAAAAAAAIKFgICAeg4BrIAFU3RvcICAhACAAACAgIAAAQABAAAAgoOAgIB5DgGtgBJEaXZlcnQgJiBDb250aW51ZYCAhACAAACAgIAAAQABAAAAgoOAgIB4DgGugA5EaXZlcnQgJiBTdG9wgICEAIAAAICAgAABAAEAAACCg4CAgHcOAbKAEVNlbGVjdGl2ZSBGZWVkIDGAgIQAgAAAgICAAAEAAAEAAIKDgICAdg4Bs4ARU2VsZWN0aXZlIEZlZWQgMoCAhACAAACAgIAAAQAAAQAAgoOAgIB1DgG0gBFTZWxlY3RpdmUgRmVlZCAzgICEAIAAAICAgAABAAABAACCg4CAgHQOAbWAEVNlbGVjdGl2ZSBGZWVkIDSAgIQAgAAAgICAAAEAAAEAAIKDgICAcw4BtoARU2VsZWN0aXZlIEZlZWQgNYCAhACAAACAgIAAAQAAAQAAgoOAgIByDgG3gBFTZWxlY3RpdmUgRmVlZCA2gICEAIAAAICAgAABAAABAACCg4CAgHEOAbiAEVNlbGVjdGl2ZSBGZWVkIDeAgIQAgAAAgICAAAEAAAEAAIKDgICAcA4BuYARU2VsZWN0aXZlIEZlZWQgOICAhACAAACAgIAAAQAAAQAAgoOAgIBvDgG6gBVFbnZlbG9wZSBTZWxlY3Rpb24gMYCAhACAAACAgIAAAQABAAAAgoOAgIBuDgG9gA1FeGl0IENvbnRyb2yAgIQAgAAAgICAAAEAAQAAAIKDgICAbQ4BwEGAHVByZXNlbnQgb24gRGVjayBhbmQgQ29udGludWWAgIQAgAAAgICAAAEAAQAAAIKDgICAbA4BwEKAGVByZXNlbnQgb24gRGVjayBhbmQgU3RvcICAhACAAACAgIAAAQABAAAAgoOAgIBrDgGxgBBTZWFsaW5nIENvbnRyb2yAgIQAgAAAgICAAAEAAQAAAIKDgICAag4BmX8PAYGAgACAgICAAAAAgAIwgA9TZXF1ZW5jZSBDaGVja4CAgwCAAACDgYMBAAEAAAAAgYCEgIBpDgGVgAdQYXJpdHmAgIQAgAAAgICAAQAAAAAAAIGAgICBaA4BjIAMU2FmZXR5IE1hcmuAgIQBgAAAgICAAQAAAAAAAIKAgICAZwhmEAGBfwV + EQGBrYCAgAB9EQGCroCAgAB8EQGDwEGAgIAAexEBhMBCgICAAHoRAYWsgICAAGUQAYJ / A34RAYGtgICAAH0RAYKugICAAHwRAYOxgICAAGQQAYN / A34RAYGtgICAAH0RAYKugICAAHwRAYO6gICAAGMQAYR / BX4RAYGtgICAAH0RAYKugICAAHwRAYPAQYCAgAB7EQGEwEKAgIAAehEBhb2AgIAAYhABhX8DfhEBgcBBgICAAH0RAYLAQoCAgAB8EQGDsYCAgABhEAGGfwN + EQGBrYCAgAB9EQGCpYCAgAB8EQGDpoCAgABgEAGHfwN + EQGBroCAgAB9EQGCpYCAgAB8EQGDpoCAgABfEAGIfwN + EQGBrICAgAB9EQGCpYCAgAB8EQGDpoCAgABeAV0SAYGBgIF / An4RAYGlgICAAH0RAYKmgICAAAABSNPby + lLENdcAAMAAAACA2ygBwAAfwgBAYKAgAhPTVIgQWR2DDEtdHJhY2sgT01SBE5UTH8JAT + OuFHrhR64P3ysCDEm6Xl / CgE / gWhysCDEnD + BaHKwIMScgX4LAT + CbpeNT987PzBiTdLxqfw / cVN5 + pfhM30MAT + CbpeNT987PzClabF0gbJACAAAAAAAAHwNAT84 + B6KLsKLgH4YfQ4Bi4AKR2F0ZSBNYXJrgICEAYAAAICAgAEAAAAAAACCgICAgHwOAaWAFUluc2VydCBvbiBNYXJrIChFT0cpgICEAYAAAICAgAAAAAAAAACCg4CAgHsOAaaAFkluc2VydCBvbiBTcGFjZSAoRU9HKYCAhAGAAACAgIAAAAAAAAAAgoWAgIB6DgGngBpGaXJzdCBvZiBHcm91cCBNYXJrIChGT0cpgICEAYAAAICAgAAAAAAAAACCgoCAgHkOAaiAEkRlbWFuZCBmZWVkIChGT0cpgICEAYAAAICAgAAAAAAAAACChICAgHgOAayABVN0b3CAgIQAgAAAgICAAAEAAQAAAIKDgICAdw4BrYASRGl2ZXJ0ICYgQ29udGludWWAgIQAgAAAgICAAAEAAQAAAIKBgICAdg4BroAORGl2ZXJ0ICYgU3RvcICAhACAAACAgIAAAQABAAAAgoGAgIB1DgGygBFTZWxlY3RpdmUgRmVlZCAxgICEAIAAAICAgAABAAABAACCg4CAgHQOAbOAEVNlbGVjdGl2ZSBGZWVkIDKAgIQAgAAAgICAAAEAAAEAAIKDgICAcw4BtIARU2VsZWN0aXZlIEZlZWQgM4CAhACAAACAgIAAAQAAAQAAgoOAgIByDgG1gBFTZWxlY3RpdmUgRmVlZCA0gICEAIAAAICAgAABAAABAACCg4CAgHEOAbaAEVNlbGVjdGl2ZSBGZWVkIDWAgIQAgAAAgICAAAEAAAEAAIKDgICAcA4Bt4ARU2VsZWN0aXZlIEZlZWQgNoCAhACAAACAgIAAAQAAAQAAgoOAgIBvDgG4gBFTZWxlY3RpdmUgRmVlZCA3gICEAIAAAICAgAABAAABAACCg4CAgG4OAbmAEVNlbGVjdGl2ZSBGZWVkIDiAgIQAgAAAgICAAAEAAAEAAIKDgICAbQ4BuoAVRW52ZWxvcGUgU2VsZWN0aW9uIDGAgIQAgAAAgICAAAEAAQAAAIKDgICAbA4BvYANRXhpdCBDb250cm9sgICEAIAAAICAgAABAAEAAACCg4CAgGsOAcBBgB1QcmVzZW50IG9uIERlY2sgYW5kIENvbnRpbnVlgICEAIAAAICAgAABAAEAAACCg4CAgGoOAcBCgBlQcmVzZW50IG9uIERlY2sgYW5kIFN0b3CAgIQAgAAAgICAAAEAAQAAAIKDgICAaQ4BsYAQU2VhbGluZyBDb250cm9sgICEAIAAAICAgAABAAEAAACCg4CAgGgOAZl / DwGBgIAAgICAgAAAAIACMIAPU2VxdWVuY2UgQ2hlY2uAgIMAgAAAg4GFAAEBAAAAAIGAhICAZw4BlYAHUGFyaXR5gICEAIAAAICAgAABAAAAAACBgICAgWYOAYyADFNhZmV0eSBNYXJrgICEAYAAAICAgAEAAAAAAACCgICAgGUWZBABgX8FfhEBga2AgIAAfREBgq6AgIAAfBEBg8BBgICAAHsRAYTAQoCAgAB6EQGFrICAgABjEAGCfwV + EQGBrYCAgAB9EQGCroCAgAB8EQGDwEGAgIAAexEBhMBCgICAAHoRAYWxgICAAGIQAYN / A34RAYGtgICAAH0RAYKugICAAHwRAYO6gICAAGEQAYR / BX4RAYGtgICAAH0RAYKugICAAHwRAYPAQYCAgAB7EQGEwEKAgIAAehEBhb2AgIAAYBABhX8FfhEBga2AgIAAfREBgqWAgIAAfBEBg6aAgIAAexEBhKeAgIAAehEBhaiAgIAAXxABhn8FfhEBga6AgIAAfREBgqWAgIAAfBEBg6aAgIAAexEBhKeAgIAAehEBhaiAgIAAXhABh38CfhEBga2AgIAAfREBgrKAgIAAXRABiH8CfhEBga2AgIAAfREBgrOAgIAAXBABiX8CfhEBga2AgIAAfREBgrSAgIAAWxABin8CfhEBga2AgIAAfREBgrWAgIAAWhABi38CfhEBga2AgIAAfREBgraAgIAAWRABjH8CfhEBga2AgIAAfREBgreAgIAAWBABjX8CfhEBga2AgIAAfREBgriAgIAAVxABjn8CfhEBga2AgIAAfREBgrmAgIAAVhABj38CfhEBga6AgIAAfREBgrKAgIAAVRABkH8CfhEBga6AgIAAfREBgrOAgIAAVBABkX8CfhEBga6AgIAAfREBgrSAgIAAUxABkn8CfhEBga6AgIAAfREBgrWAgIAAUhABk38CfhEBga6AgIAAfREBgraAgIAAURABlH8CfhEBga6AgIAAfREBgreAgIAAUBABlX8CfhEBga6AgIAAfREBgriAgIAATxABln8CfhEBga6AgIAAfREBgrmAgIAATgFNEgGAgYCBfwR + EQGBp4CAgAB9EQGCqICAgAB8EQGDpYCAgAB7EQGEpoCAgAAAAUjT28vpzFZgTAADAAAAAgNtwgYAAH8IAQGDgYAIQ29kZSAzOQcxRCBCQ1IITmVvcG9zdH8JAT + OuFHrhR64P3ysCDEm6Xl / CgE / gWhysCDEnD + BaHKwIMScgX4LAT + CbpeNT987PzBiTdLxqfw / cVN5 + pfhM30MAT + CbpeNT987PzClabF0gbJACAAAAAAAAHwNAT84 + B6KLsKLgH4YfQ4BwEl / DwGAgIAAgICAgAAAAYAAgAxQYWdlIE4gb2YgTX4CfRMBl4aAgIB8EwGWg4CAgICDAIAAAIKBggEAAQAAAACBgICAgHwOAZiAD1NoZWV0IFNlcXVlbmNlgICDAIAAAIOBgwAAAQAAAACBgISAgHsOAZqAD0dyb3VwIFNlcXVlbmNlgICDAIAAAIOBgwAAAQAAAACBgIWAgHoOAal / DwGChIAAgICAgAAAAIAAgAdJbnNlcnSAgIQAgAAAgICAAAAAAAAAAIKDgICAeQ4Bqn8PAYKEgACAgICAAAAAgACAC0FjY3VtdWxhdGWAgIQAgAAAgICAAAAAAAAAAIKFgICAeA4Br38PAYKEgACAgICAAAAAgACACURpdmVydCAxgICEAIAAAICAgAABAAEAAACCg4CAgHcOAbB / DwGChIAAgICAgAAAAIAAgAlEaXZlcnQgMoCAhACAAACAgIAAAQABAAAAgoOAgIB2DgGyfw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgMYCAhACAAACAgIAAAQAAAQAAgoOAgIB1DgGzfw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgMoCAhACAAACAgIAAAQAAAQAAgoOAgIB0DgG0fw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgM4CAhACAAACAgIAAAQAAAQAAgoOAgIBzDgG1fw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgNICAhACAAACAgIAAAQAAAQAAgoOAgIByDgG2fw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgNYCAhACAAACAgIAAAQAAAQAAgoOAgIBxDgG3fw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgNoCAhACAAACAgIAAAQAAAQAAgoOAgIBwDgG4fw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgN4CAhACAAACAgIAAAQAAAQAAgoOAgIBvDgG5fw8BgoSAAICAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgOICAhACAAACAgIAAAQAAAQAAgoOAgIBuDgGxfw8BgoSAAICAgIAAAACAAIAQU2VhbGluZyBDb250cm9sgICEAIAAAICAgAABAAEAAACCg4CAgG0OAbp / DwGChIAAgICAgAAAAIAAgBVFbnZlbG9wZSBTZWxlY3Rpb24gMYCAhACAAACAgIAAAQABAAAAgoOAgIBsDgG7fw8BgoSAAICAgIAAAACAAIAVRW52ZWxvcGUgU2VsZWN0aW9uIDKAgIQAgAAAgICAAAEAAQAAAIKDgICAaw4BvH8PAYKEgACAgICAAAAAgACAFUVudmVsb3BlIFNlbGVjdGlvbiAzgICEAIAAAICAgAABAAEAAACCg4CAgGoOAb5 / DwGChIAAgICAgAAAAIAAgBFFeGl0IFNlbGVjdGlvbiAxgICEAIAAAICAgAABAAEAAACCg4CAgGkOAb9 / DwGChIAAgICAgAAAAIAAgBFFeGl0IFNlbGVjdGlvbiAygICEAIAAAICAgAABAAEAAACCg4CAgGgOAcBAfw8BgoSAAICAgIAAAACAAIARRXhpdCBTZWxlY3Rpb24gM4CAhACAAACAgIAAAQABAAAAgoOAgIBnDgGsfw8BgoSAAICAgIAAAACAAIAFU3RvcICAhACAAACAgIAAAQABAAAAgoOAgIBmDgHASH8PAYCAgACAgICAGVteQS1aYS16MC05IFwtXC5cJFwvXCslXQItAIAAgAxDdXN0b21lciBJRICAgQCAAACGgZAAAQEAAAAAgoCAgIBlBGQQAYF / A34RAYG6gICAAH0RAYK7gICAAHwRAYO8gICAAGMQAYJ / A34RAYG + gICAAH0RAYK / gICAAHwRAYPAQICAgABiEAGDfwN + EQGBr4CAgAB9EQGCsICAgAB8EQGDqYCAgABhEAGEfwJ + EQGBrICAgAB9EQGCqYCAgABgAV8SAYGAgIF / BH4RAYHASYCAgAB9EQGCqYCAgAB8EQGDqoCAgAB7EQGEwEiAgIAAAAFI09vL6hTzcl4AAwAAAAIDbnYNAAB / CAEBhIGACE5UTCBCQ1IHMUQgQkNSFE5UTCAiQWxwaGEiIEJhcmNvZGV / CQE / jrhR64UeuD98rAgxJul5fwoBP4FocrAgxJw / gWhysCDEnIF + CwE / gm6XjU / fOz8wYk3S8an8P3FTefqX4TN9DAE / gm6XjU / fOz8wpWmxdIGyQAgAAAAAAAB8DQE / OPgeii7Ci4B + KH0OAcBUfw8BgICAAICAgIAZW15BLVphLXowLTkgXC1cLlwkXC9cKyVdAi0AgAIwgQdKb2IgSUSAgIEAgAAAioqKAAEAAAABAYGAioCAfA4BwFV / DwGAgIAAgICAgBlbXkEtWmEtejAtOSBcLVwuXCRcL1wrJV0CLQCAAjCBDU1haWxwaWVjZSBJRICAgQCAAACKiooAAQAAAAABgYCLgIB7DgGlfw8Bh + AnD4AHQkNTIzFBgoCAgAAAAIAAgBtEZW1hbmQgZmVlZCAmIEVuZCBvZiBHcm91cICAhACAAACAgIABAAAAAAAAgoOAgIB6DgGnfw8Bh + AnD4AHQkNTIzFBgoCAgAAAAIAAgB1EZW1hbmQgZmVlZCAmIEZpcnN0IG9mIEdyb3VwgICEAIAAAICAgAAAAAAAAACCgoCAgHkOAcBWgClEZW1hbmQgZmVlZCwgRW5kIG9mIEdyb3VwIGFuZCBFbmQgb2YgSm9ifwJ + EwGlgICDfw8Bh + AnD4AHQkNTIzFBgoCAgAAAAIAAgH0TAcBWgICIfw8Bh + AnD4AHQkNTIzFBhICAgAAAAIAAgICEAIAAAICAgAAAAAAAAACCgICAgHgOAcBKfw8Bh + AnD4AHQkNTIzFBiICAgAAAAIAAgAxGb3JjZWQgRm9sZICAhACAAACAgIAAAQABAAAAgoGAgIB3DgHAWn8PAYaAgACAf4CAAAAAgACAJVBhZ2UgY291bnQsIFByaW50IG9ubHkgb24gZmlyc3QgcGFnZX4CfRMBwFqAgICAfBMBloCAgICAgwCAAACAgIAAAAAAAAAAgYCDgIB2DgGyfw8BhOAnD4AGQkNTIzKBgICAAAAAgACAEVNlbGVjdGl2ZSBGZWVkIDGAgIQAgAAAgICAAAEAAAEAAIKBgICAdQ4Bs38PAYTgJw + ABkJDUyMygoCAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCAygICEAIAAAICAgAABAAABAACCgYCAgHQOAbR / DwGE4CcPgAZCQ1MjMoSAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgM4CAhACAAACAgIAAAQAAAQAAgoGAgIBzDgG1fw8BhOAnD4AGQkNTIzKIgICAAAAAgACAEVNlbGVjdGl2ZSBGZWVkIDSAgIQAgAAAgICAAAEAAAEAAIKBgICAcg4Btn8PAYTgJw + ABkJDUyMzgYCAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA1gICEAIAAAICAgAABAAABAACCgYCAgHEOAbd / DwGE4CcPgAZCQ1MjM4KAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgNoCAhACAAACAgIAAAQAAAQAAgoGAgIBwDgG4fw8BhOAnD4AGQkNTIzOEgICAAAAAgACAEVNlbGVjdGl2ZSBGZWVkIDeAgIQAgAAAgICAAAEAAAEAAIKBgICAbw4BuX8PAYTgJw + ABkJDUyMziICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA4gICEAIAAAICAgAABAAABAACCgYCAgG4OAcCWfw8BhOAnD4AGQkNTIzSBgICAAAAAgACAEVNlbGVjdGl2ZSBGZWVkIDmAgIQAgAAAgICAAAEAAAEAAIKBgICAbQ4BwJd / DwGE4CcPgAZCQ1MjNIKAgIAAAACAAIASU2VsZWN0aXZlIEZlZWQgMTCAgIQAgAAAgICAAAEAAAEAAIKBgICAbA4BwJh / DwGE4CcPgAZCQ1MjNISAgIAAAACAAIASU2VsZWN0aXZlIEZlZWQgMTGAgIQAgAAAgICAAAEAAAEAAIKBgICAaw4BwJl / DwGE4CcPgAZCQ1MjNIiAgIAAAACAAIASU2VsZWN0aXZlIEZlZWQgMTKAgIQAgAAAgICAAAEAAAEAAIKBgICAag4BwJp / DwGE4CcPgAZCQ1MjNYGAgIAAAACAAIASU2VsZWN0aXZlIEZlZWQgMTOAgIQAgAAAgICAAAEAAAEAAIKBgICAaQ4BwJt / DwGE4CcPgAZCQ1MjNYKAgIAAAACAAIASU2VsZWN0aXZlIEZlZWQgMTSAgIQAgAAAgICAAAEAAAEAAIKBgICAaA4BwJx / DwGE4CcPgAZCQ1MjNYSAgIAAAACAAIASU2VsZWN0aXZlIEZlZWQgMTWAgIQAgAAAgICAAAEAAAEAAIKBgICAZw4Br38PAYXgJw + ABkJDUyM2wICAgIAAAACAAIAJRGl2ZXJ0IDGAgIQAgAAAgICAAAEAAQAAAIKBgICAZg4BsH8PAYXgJw + ABkJDUyM2wQCAgIAAAACAAIAJRGl2ZXJ0IDKAgIQAgAAAgICAAAEAAQAAAIKBgICAZQ4BwFt / DwGF4CcPgAZCQ1MjNsIAgICAAAAAgACAEERpdmVydCAzIChGRlBEKYCAhACAAACAgIAAAQABAAAAgoGAgIBkDgHAV38PAYXgJw + ABkJDUyM2gYCAgAAAAIAAgAlJbmsgTWFya4CAhACAAACAgIAAAQABAAAAgoGAgIBjDgHAWH8PAYXgJw + ABkJDUyM2goCAgAAAAIAAgAtJbmsgTWFyayAygICEAIAAAICAgAABAAEAAACCgYCAgGIOAbp / DwGF4CcPgAZCQ1MjNoSAgIAAAACAAIASRW52ZWxvcGUgRGl2ZXJ0IDGAgIQAgAAAgICAAAEAAQAAAIKBgICAYQ4Bu38PAYXgJw + ABkJDUyM2iICAgAAAAIAAgBJFbnZlbG9wZSBEaXZlcnQgMoCAhACAAACAgIAAAQABAAAAgoGAgIBgDgG8fw8BheAnD4AGQkNTIzaQgICAAAAAgACAEkVudmVsb3BlIERpdmVydCAzgICEAIAAAICAgAABAAEAAACCgYCAgF8OAcBZfw8BheAnD4AGQkNTIzaggICAAAAAgACADEpvZyBDb250cm9sgICEAIAAAICAgAABAAEAAACCgYCAgF4OAbF / DwGF4CcPgAZCQ1MjNsBAgICAAAAAgACAEFNlYWxpbmcgQ29udHJvbICAhACAAACAgIAAAQABAAAAgoGAgIBdDgHAUX8PAYSAgACAgICAAAAAgACAG0Zvcm0gc2VxdWVuY2Ugd2l0aGluIGEgSm9igICDAIAAAICAgAAAAAAAAACBgISAgFwOAcBTfw8BhICAAICAgIAAAACAAIAdRm9ybSBzZXF1ZW5jZSB3aXRoaW4gYSBHcm91cICAgwCAAACAgIAAAAAAAAAAgYCCgIBbDgHATX8PAYSAgACAgICAAAAAgACACU1hdGNoaW5ngICDAIAAAICAgAAAAAAAAACBgIWAgFoOAcBPfw8BhICAAICAgIAAAACAAIAPR3JvdXAgU2VxdWVuY2WAgIMAgAAAgICAAAAAAAAAAIGAhYCAWQ4BwFJ / DwGIgIAAgICAgAAAAIAAgCFUb3RhbCBudW1iZXIgb2YgRm9ybXMgaW4gYSBHcm91cICAgwCAAACAgIAAAAAAAAAAgYCDgIBYDgHAS38PAYSAgACAgICAAAAAgACACkZyYW5rZXIgMYCAhACAAACAgIAAAQABAAAAgoGAgIBXDgHATH8PAYSAgACAgICAAAAAgACACkZyYW5rZXIgMoCAhACAAACAgIAAAQABAAAAgoGAgIBWDgHASH8PAYCAgACAgICAGVteQS1aYS16MC05IFwtXC5cJFwvXCslXQItAIAAgAxDdXN0b21lciBJRICAgQCAAACGgZkAAQEAAAAAgoCAgIBVAlQQAYF / A34RAYGvgICAAH0RAYKwgICAAHwRAYPAW4CAgABTEAGCfwN + EQGBuoCAgAB9EQGCu4CAgAB8EQGDvICAgABSC1ESAYGAgIF / BX4RAYHAWoCAgAB9EQGCpYCAgAB8EQGDp4CAgAB7EQGEwFaAgIAAehEBhcBIgICAAFASAYCBgIJ / An4RAYHAWoCAgAB9EQGCpYCAgABPEgGAgYCDfwJ + EQGBwFqAgIAAfREBgqeAgIAAThIBgIGAhH8CfhEBgcBagICAAH0RAYLAVoCAgABNEgGAgYCFfwJ + EQGBpYCAgAB9EQGCwFaAgIAATBIBgIGAhn8CfhEBgaWAgIAAfREBgqeAgIAASxIBgIGAh38CfhEBgaeAgIAAfREBgsBWgICAAEoSAYCBgIh / An4RAYHAWoCAgAB9EQGCwEqAgIAASRIBgYB / BLa3uLmJfgR9EQGBsoCAgAB8EQGCs4CAgAB7EQGDtICAgAB6EQGEtYCAgABIEgGBgH8EwJbAl8CYwJmKfgR9EQGBtoCAgAB8EQGCt4CAgAB7EQGDuICAgAB6EQGEuYCAgABHEgGBgH8DwJrAm8Cci34EfREBgcCWgICAAHwRAYLAl4CAgAB7EQGDwJiAgIAAehEBhMCZgICAAAEBSNPby + oXsg9GAAMAAAACA2 / FBgAAfwgBAYWCgAtEYXRhTWF0cml4BzJEIEJDUghOZW9wb3N0fwkBP464UeuFHrg / fKwIMSbpeX8KAT + BaHKwIMScP4FocrAgxJyBfgsBP4Jul41P3zs / MGJN0vGp / D9xU3n6l + EzfQwBP4Jul41P3zs / MKVpsXSBskAIAAAAAAAAfA0BPzj4HoouwouAfhh9DgHASX8PAYCAgACAgICAAAABgACADFBhZ2UgTiBvZiBNfgJ9EwGXhoCAgHwTAZaDgICAgIMAgAAAgoGCAQABAAAAAIGAgICAfA4BmIAPU2hlZXQgU2VxdWVuY2WAgIMAgAAAg4GDAAABAAAAAIGAhICAew4BmoAPR3JvdXAgU2VxdWVuY2WAgIMAgAAAg4GDAAABAAAAAIGAhYCAeg4BqX8PAYKEgACAgICAAAAAgACAB0luc2VydICAhACAAACAgIAAAAAAAAAAgoOAgIB5DgGqfw8BgoSAAICAgIAAAACAAIALQWNjdW11bGF0ZYCAhACAAACAgIAAAAAAAAAAgoWAgIB4DgGvfw8BgoSAAICAgIAAAACAAIAJRGl2ZXJ0IDGAgIQAgAAAgICAAAEAAQAAAIKDgICAdw4BsH8PAYKEgACAgICAAAAAgACACURpdmVydCAygICEAIAAAICAgAABAAEAAACCg4CAgHYOAbJ / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCAxgICEAIAAAICAgAABAAABAACCg4CAgHUOAbN / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCAygICEAIAAAICAgAABAAABAACCg4CAgHQOAbR / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCAzgICEAIAAAICAgAABAAABAACCg4CAgHMOAbV / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA0gICEAIAAAICAgAABAAABAACCg4CAgHIOAbZ / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA1gICEAIAAAICAgAABAAABAACCg4CAgHEOAbd / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA2gICEAIAAAICAgAABAAABAACCg4CAgHAOAbh / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA3gICEAIAAAICAgAABAAABAACCg4CAgG8OAbl / DwGChIAAgICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA4gICEAIAAAICAgAABAAABAACCg4CAgG4OAbF / DwGChIAAgICAgAAAAIAAgBBTZWFsaW5nIENvbnRyb2yAgIQAgAAAgICAAAEAAQAAAIKDgICAbQ4Bun8PAYKEgACAgICAAAAAgACAFUVudmVsb3BlIFNlbGVjdGlvbiAxgICEAIAAAICAgAABAAEAAACCg4CAgGwOAbt / DwGChIAAgICAgAAAAIAAgBVFbnZlbG9wZSBTZWxlY3Rpb24gMoCAhACAAACAgIAAAQABAAAAgoOAgIBrDgG8fw8BgoSAAICAgIAAAACAAIAVRW52ZWxvcGUgU2VsZWN0aW9uIDOAgIQAgAAAgICAAAEAAQAAAIKDgICAag4Bvn8PAYKEgACAgICAAAAAgACAEUV4aXQgU2VsZWN0aW9uIDGAgIQAgAAAgICAAAEAAQAAAIKDgICAaQ4Bv38PAYKEgACAgICAAAAAgACAEUV4aXQgU2VsZWN0aW9uIDKAgIQAgAAAgICAAAEAAQAAAIKDgICAaA4BwEB / DwGChIAAgICAgAAAAIAAgBFFeGl0IFNlbGVjdGlvbiAzgICEAIAAAICAgAABAAEAAACCg4CAgGcOAax / DwGChIAAgICAgAAAAIAAgAVTdG9wgICEAIAAAICAgAABAAEAAACCg4CAgGYOAcBIfw8BgICAAICAgIAZW15BLVphLXowLTkgXC1cLlwkXC9cKyVdAi0AgACADEN1c3RvbWVyIElEgICBAIAAAIaBmQABAQAAAACCgICAgGUEZBABgX8DfhEBgbqAgIAAfREBgruAgIAAfBEBg7yAgIAAYxABgn8DfhEBgb6AgIAAfREBgr + AgIAAfBEBg8BAgICAAGIQAYN / A34RAYGvgICAAH0RAYKwgICAAHwRAYOpgICAAGEQAYR / An4RAYGsgICAAH0RAYKpgICAAGABXxIBgYCAgX8EfhEBgcBJgICAAH0RAYKpgICAAHwRAYOqgICAAHsRAYTASICAgAAAAUjT28vqHOIvXgADAAAAAgNwfg0AAH8IAQGGgoANTlRMIDJETWF0cml4BzJEIEJDUhdOVEwgIkFscGhhIiBEYXRhTWF0cml4fwkBP464UeuFHrg / fKwIMSbpeX8KAT + BaHKwIMScP4FocrAgxJyBfgsBP4Jul41P3zs / MGJN0vGp / D9xU3n6l + EzfQwBP4Jul41P3zs / MKVpsXSBskAIAAAAAAAAfA0BPzj4HoouwouAfih9DgHAVH8PAYCAgACAgICAGVteQS1aYS16MC05IFwtXC5cJFwvXCslXQItAIACMIEHSm9iIElEgICBAIAAAIqKigABAAAAAQGBgIqAgHwOAcBVfw8BgICAAICAgIAZW15BLVphLXowLTkgXC1cLlwkXC9cKyVdAi0AgAIwgQ1NYWlscGllY2UgSUSAgIEAgAAAioqKAAEAAAAAAYGAi4CAew4BpX8PAYfgJw + AB0JDUyMxQYKAgIAAAACAAIAbRGVtYW5kIGZlZWQgJiBFbmQgb2YgR3JvdXCAgIQAgAAAgICAAQAAAAAAAIKDgICAeg4Bp38PAYfgJw + AB0JDUyMxQYKAgIAAAACAAIAdRGVtYW5kIGZlZWQgJiBGaXJzdCBvZiBHcm91cICAhACAAACAgIAAAAAAAAAAgoKAgIB5DgHAVoApRGVtYW5kIGZlZWQsIEVuZCBvZiBHcm91cCBhbmQgRW5kIG9mIEpvYn8CfhMBpYCAg38PAYfgJw + AB0JDUyMxQYKAgIAAAACAAIB9EwHAVoCAiH8PAYfgJw + AB0JDUyMxQYSAgIAAAACAAICAhACAAACAgIAAAAAAAAAAgoCAgIB4DgHASn8PAYfgJw + AB0JDUyMxQYiAgIAAAACAAIAMRm9yY2VkIEZvbGSAgIQAgAAAgICAAAEAAQAAAIKBgICAdw4BwFp / DwGGgIAAgH + AgAAAAIAAgCVQYWdlIGNvdW50LCBQcmludCBvbmx5IG9uIGZpcnN0IHBhZ2V + An0TAcBagICAgHwTAZaAgICAgIMAgAAAgICAAAAAAAAAAIGAg4CAdg4Bsn8PAYTgJw + ABkJDUyMygYCAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCAxgICEAIAAAICAgAABAAABAACCgYCAgHUOAbN / DwGE4CcPgAZCQ1MjMoKAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgMoCAhACAAACAgIAAAQAAAQAAgoGAgIB0DgG0fw8BhOAnD4AGQkNTIzKEgICAAAAAgACAEVNlbGVjdGl2ZSBGZWVkIDOAgIQAgAAAgICAAAEAAAEAAIKBgICAcw4BtX8PAYTgJw + ABkJDUyMyiICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA0gICEAIAAAICAgAABAAABAACCgYCAgHIOAbZ / DwGE4CcPgAZCQ1MjM4GAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgNYCAhACAAACAgIAAAQAAAQAAgoGAgIBxDgG3fw8BhOAnD4AGQkNTIzOCgICAAAAAgACAEVNlbGVjdGl2ZSBGZWVkIDaAgIQAgAAAgICAAAEAAAEAAIKBgICAcA4BuH8PAYTgJw + ABkJDUyMzhICAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA3gICEAIAAAICAgAABAAABAACCgYCAgG8OAbl / DwGE4CcPgAZCQ1MjM4iAgIAAAACAAIARU2VsZWN0aXZlIEZlZWQgOICAhACAAACAgIAAAQAAAQAAgoGAgIBuDgHAln8PAYTgJw + ABkJDUyM0gYCAgAAAAIAAgBFTZWxlY3RpdmUgRmVlZCA5gICEAIAAAICAgAABAAABAACCgYCAgG0OAcCXfw8BhOAnD4AGQkNTIzSCgICAAAAAgACAElNlbGVjdGl2ZSBGZWVkIDEwgICEAIAAAICAgAABAAABAACCgYCAgGwOAcCYfw8BhOAnD4AGQkNTIzSEgICAAAAAgACAElNlbGVjdGl2ZSBGZWVkIDExgICEAIAAAICAgAABAAABAACCgYCAgGsOAcCZfw8BhOAnD4AGQkNTIzSIgICAAAAAgACAElNlbGVjdGl2ZSBGZWVkIDEygICEAIAAAICAgAABAAABAACCgYCAgGoOAcCafw8BhOAnD4AGQkNTIzWBgICAAAAAgACAElNlbGVjdGl2ZSBGZWVkIDEzgICEAIAAAICAgAABAAABAACCgYCAgGkOAcCbfw8BhOAnD4AGQkNTIzWCgICAAAAAgACAElNlbGVjdGl2ZSBGZWVkIDE0gICEAIAAAICAgAABAAABAACCgYCAgGgOAcCcfw8BhOAnD4AGQkNTIzWEgICAAAAAgACAElNlbGVjdGl2ZSBGZWVkIDE1gICEAIAAAICAgAABAAABAACCgYCAgGcOAa9 / DwGF4CcPgAZCQ1MjNsCAgICAAAAAgACACURpdmVydCAxgICEAIAAAICAgAABAAEAAACCgYCAgGYOAbB / DwGF4CcPgAZCQ1MjNsEAgICAAAAAgACACURpdmVydCAygICEAIAAAICAgAABAAEAAACCgYCAgGUOAcBbfw8BheAnD4AGQkNTIzbCAICAgAAAAIAAgBBEaXZlcnQgMyAoRkZQRCmAgIQAgAAAgICAAAEAAQAAAIKBgICAZA4BwFd / DwGF4CcPgAZCQ1MjNoGAgIAAAACAAIAJSW5rIE1hcmuAgIQAgAAAgICAAAEAAQAAAIKBgICAYw4BwFh / DwGF4CcPgAZCQ1MjNoKAgIAAAACAAIALSW5rIE1hcmsgMoCAhACAAACAgIAAAQABAAAAgoGAgIBiDgG6fw8BheAnD4AGQkNTIzaEgICAAAAAgACAEkVudmVsb3BlIERpdmVydCAxgICEAIAAAICAgAABAAEAAACCgYCAgGEOAbt / DwGF4CcPgAZCQ1MjNoiAgIAAAACAAIASRW52ZWxvcGUgRGl2ZXJ0IDKAgIQAgAAAgICAAAEAAQAAAIKBgICAYA4BvH8PAYXgJw + ABkJDUyM2kICAgAAAAIAAgBJFbnZlbG9wZSBEaXZlcnQgM4CAhACAAACAgIAAAQABAAAAgoGAgIBfDgHAWX8PAYXgJw + ABkJDUyM2oICAgAAAAIAAgAxKb2cgQ29udHJvbICAhACAAACAgIAAAQABAAAAgoGAgIBeDgGxfw8BheAnD4AGQkNTIzbAQICAgAAAAIAAgBBTZWFsaW5nIENvbnRyb2yAgIQAgAAAgICAAAEAAQAAAIKBgICAXQ4BwFF / DwGEgIAAgICAgAAAAIAAgBtGb3JtIHNlcXVlbmNlIHdpdGhpbiBhIEpvYoCAgwCAAACAgIAAAAAAAAAAgYCEgIBcDgHAU38PAYSAgACAgICAAAAAgACAHUZvcm0gc2VxdWVuY2Ugd2l0aGluIGEgR3JvdXCAgIMAgAAAgICAAAAAAAAAAIGAgoCAWw4BwE1 / DwGEgIAAgICAgAAAAIAAgAlNYXRjaGluZ4CAgwCAAACAgIAAAAAAAAAAgYCFgIBaDgHAT38PAYSAgACAgICAAAAAgACAD0dyb3VwIFNlcXVlbmNlgICDAIAAAICAgAAAAAAAAACBgIWAgFkOAcBSfw8BiICAAICAgIAAAACAAIAhVG90YWwgbnVtYmVyIG9mIEZvcm1zIGluIGEgR3JvdXCAgIMAgAAAgICAAAAAAAAAAIGAg4CAWA4BwEt / DwGEgIAAgICAgAAAAIAAgApGcmFua2VyIDGAgIQAgAAAgICAAAEAAQAAAIKBgICAVw4BwEx / DwGEgIAAgICAgAAAAIAAgApGcmFua2VyIDKAgIQAgAAAgICAAAEAAQAAAIKBgICAVg4BwEh / DwGAgIAAgICAgBlbXkEtWmEtejAtOSBcLVwuXCRcL1wrJV0CLQCAAIAMQ3VzdG9tZXIgSUSAgIEAgAAAhoGZAAEBAAAAAIKAgICAVQJUEAGBfwN + EQGBr4CAgAB9EQGCsICAgAB8EQGDwFuAgIAAUxABgn8DfhEBgbqAgIAAfREBgruAgIAAfBEBg7yAgIAAUgtREgGBgICBfwV + EQGBwFqAgIAAfREBgqWAgIAAfBEBg6eAgIAAexEBhMBWgICAAHoRAYXASICAgABQEgGAgYCCfwJ + EQGBwFqAgIAAfREBgqWAgIAATxIBgIGAg38CfhEBgcBagICAAH0RAYKngICAAE4SAYCBgIR / An4RAYHAWoCAgAB9EQGCwFaAgIAATRIBgIGAhX8CfhEBgaWAgIAAfREBgsBWgICAAEwSAYCBgIZ / An4RAYGlgICAAH0RAYKngICAAEsSAYCBgId / An4RAYGngICAAH0RAYLAVoCAgABKEgGAgYCIfwJ + EQGBwFqAgIAAfREBgsBKgICAAEkSAYGAfwS2t7i5iX4EfREBgbKAgIAAfBEBgrOAgIAAexEBg7SAgIAAehEBhLWAgIAASBIBgYB / BMCWwJfAmMCZin4EfREBgbaAgIAAfBEBgreAgIAAexEBg7iAgIAAehEBhLmAgIAARxIBgYB / A8CawJvAnIt + BH0RAYHAloCAgAB8EQGCwJeAgIAAexEBg8CYgICAAHoRAYTAmYCAgAABAUjT28vqHOIvRgADAAAAAgQBEwAAAH8VAQCAAYAAAIAASNPby + on87UDAAAAAgW1AQAAAIcDAAAAAgYBGQAAAH8ZAQEET1hNBGphZgRqcmYEamNmBHRjZgE =";" is 42005.
Long Statement,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,DoubleDoubleRefsRelation,The length of the statement  "                var value = new DuoDuoRefs { Id = 1' R1 = new DuoRule1 { R1 = new Rule1()' R2 = new Rule1() }' R2 = new DuoRule1 { R1 = new Rule1()' R2 = new Rule1() } };" is 154.
Long Statement,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,DoubleDoubleRefsRelation,The length of the statement  "                Assert.NotSame(value.R1.R2' value.R2.R1); // Reference equality in multiple levels does not work and cannot work due to backward compatibility" is 142.
Long Statement,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,IterateRelationWithReusedObjects,The length of the statement  "                table.Insert(new WithReusedObjects { Id = 2' BlobsIDict = new Dictionary<Blob' Blob> { [new Blob()] = new Blob()' [new Blob { Name = "A" }] = new Blob() } });" is 158.
Long Statement,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,IterateRelationWithReusedObjects,The length of the statement  "                table.Insert(new WithReusedObjects { Id = 3' BlobsDict = new Dictionary<Blob' Blob> { [new Blob()] = new Blob()' [new Blob { Name = "A" }] = new Blob() } });" is 157.
Complex Conditional,BTDBTest,ObjectWithDictionaryOfSimpleType,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,Equals,The conditional expression  "Items == null && other.Items != null || Items != null && other.Items == null"  is complex.
Empty Catch Block,BTDBTest,StreamLayerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\StreamLayerTest.cs,Dispose,The method has an empty catch block.
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestWriteRead,The following statement contains a magic number: sw = new BufferedWriterStub(checkResult.Length * 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestWriteRead,The following statement contains a magic number: sr = new BufferedReaderStub(checkResult.Concat(checkResult).ToArray()' checkResult.Length * 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestWriteRead,The following statement contains a magic number: sr = new BufferedReaderStub(checkResult.Concat(checkResult).ToArray()' checkResult.Length * 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,TestWriteRead,The following statement contains a magic number: sr = new BufferedReaderStub(checkResult.Concat(checkResult).ToArray()' checkResult.Length * 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DateTimeTest,The following statement contains a magic number: var d = new DateTime(1976' 2' 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DateTimeTest,The following statement contains a magic number: var d = new DateTime(1976' 2' 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DateTimeTest,The following statement contains a magic number: var d = new DateTime(1976' 2' 2);
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,StringTest,The following statement contains a magic number: TestString("A"' new byte[] { 2' 0x41 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,StringTest,The following statement contains a magic number: TestString("β"' new byte[] { 2' 0x83' 0xB2 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,StringTest,The following statement contains a magic number: TestString("A" + (Char)0xD800 + (Char)0xDC01 + "B" + (Char)0xD812' new byte[] { 6' 0x41' 0xC1' 0' 1' 0x42' 0xC0' 0xD8' 0x12 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,StringOrderedTest,The following statement contains a magic number: TestStringOrdered("A" + (Char)0xD800 + (Char)0xDC01 + "B" + (Char)0xD812' new byte[] { 0x42' 0xC1' 0' 2' 0x43' 0xC0' 0xD8' 0x13' 0x0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,UInt8Test,The following statement contains a magic number: TestWriteRead(w => w.WriteUInt8(42)' new byte[] { 42 }' r => Assert.Equal(42' r.ReadUInt8())' s => s.SkipUInt8());
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,UInt8Test,The following statement contains a magic number: TestWriteRead(w => w.WriteUInt8(42)' new byte[] { 42 }' r => Assert.Equal(42' r.ReadUInt8())' s => s.SkipUInt8());
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,UInt8Test,The following statement contains a magic number: TestWriteRead(w => w.WriteUInt8(42)' new byte[] { 42 }' r => Assert.Equal(42' r.ReadUInt8())' s => s.SkipUInt8());
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,Int8Test,The following statement contains a magic number: TestWriteRead(w => w.WriteInt8(-42)' new byte[] { 0xD6 }' r => Assert.Equal(-42' r.ReadInt8())' s => s.SkipInt8());
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,Int8Test,The following statement contains a magic number: TestWriteRead(w => w.WriteInt8(-42)' new byte[] { 0xD6 }' r => Assert.Equal(-42' r.ReadInt8())' s => s.SkipInt8());
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b = new byte[] { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var bExpect = new byte[] { 2' 3' 4' 5' 6 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var bExpect = new byte[] { 2' 3' 4' 5' 6 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var bExpect = new byte[] { 2' 3' 4' 5' 6 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var bExpect = new byte[] { 2' 3' 4' 5' 6 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var bExpect = new byte[] { 2' 3' 4' 5' 6 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b2Expect = new byte[] { 0' 2' 3' 4' 5' 6' 0 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b2Expect = new byte[] { 0' 2' 3' 4' 5' 6' 0 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b2Expect = new byte[] { 0' 2' 3' 4' 5' 6' 0 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b2Expect = new byte[] { 0' 2' 3' 4' 5' 6' 0 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: var b2Expect = new byte[] { 0' 2' 3' 4' 5' 6' 0 };
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: TestWriteRead(w => w.WriteBlock(b' 1' 5)' bExpect' r =>             {                 var b2 = new byte[b.Length];                 r.ReadBlock(b2' 1' 5);                 Assert.Equal(b2Expect' b2);             }' s => s.SkipBlock(5u));
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: TestWriteRead(w => w.WriteBlock(b' 1' 5)' bExpect' r =>             {                 var b2 = new byte[b.Length];                 r.ReadBlock(b2' 1' 5);                 Assert.Equal(b2Expect' b2);             }' s => s.SkipBlock(5u));
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,BlockTest,The following statement contains a magic number: TestWriteRead(w => w.WriteBlock(b' 1' 5)' bExpect' r =>             {                 var b2 = new byte[b.Length];                 r.ReadBlock(b2' 1' 5);                 Assert.Equal(b2Expect' b2);             }' s => s.SkipBlock(5u));
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt32Test,The following statement contains a magic number: TestVUInt32(127' new byte[] { 127 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt32Test,The following statement contains a magic number: TestVUInt32(127' new byte[] { 127 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt32Test,The following statement contains a magic number: TestVUInt32(128' new byte[] { 128' 128 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt32Test,The following statement contains a magic number: TestVUInt32(128' new byte[] { 128' 128 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt32Test,The following statement contains a magic number: TestVUInt32(128' new byte[] { 128' 128 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt64Test,The following statement contains a magic number: TestVUInt64(127' new byte[] { 127 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt64Test,The following statement contains a magic number: TestVUInt64(127' new byte[] { 127 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt64Test,The following statement contains a magic number: TestVUInt64(128' new byte[] { 128' 128 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt64Test,The following statement contains a magic number: TestVUInt64(128' new byte[] { 128' 128 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt64Test,The following statement contains a magic number: TestVUInt64(128' new byte[] { 128' 128 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,VUInt64Test,The following statement contains a magic number: TestVUInt64(0x1234567890ABCDEFUL' new byte[] { 255' 0x12' 0x34' 0x56' 0x78' 0x90' 0xAB' 0xCD' 0xEF });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1M' new byte[] { 32' 1 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(-1M' new byte[] { 160' 1 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(0.0002M' new byte[] { 32 + 4' 2 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(0.0002M' new byte[] { 32 + 4' 2 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(0.0002M' new byte[] { 32 + 4' 2 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(0.0002M' new byte[] { 32 + 4' 2 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000M' new byte[] { 32' 248' 232' 212' 165' 16' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(1000000000000000000000M' new byte[] { 64' 54' 53' 201' 173' 197' 222' 160' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(decimal.MaxValue - 1' new byte[] { 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFE });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(decimal.MaxValue' new byte[] { 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(decimal.MinValue + 1' new byte[] { 128 + 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFE });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(decimal.MinValue + 1' new byte[] { 128 + 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFE });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(decimal.MinValue' new byte[] { 128 + 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DecimalTest,The following statement contains a magic number: TestDecimal(decimal.MinValue' new byte[] { 128 + 96' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF' 0xFF });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(1' new byte[] { 63' 128' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(1' new byte[] { 63' 128' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MinValue' new byte[] { 255' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MinValue' new byte[] { 255' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MinValue' new byte[] { 255' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MinValue' new byte[] { 255' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MaxValue' new byte[] { 127' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MaxValue' new byte[] { 127' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MaxValue' new byte[] { 127' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.MaxValue' new byte[] { 127' 127' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.NaN' new byte[] { 255' 192' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,SingleTest,The following statement contains a magic number: TestSingle(float.NaN' new byte[] { 255' 192' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(1' new byte[] { 63' 240' 0' 0' 0' 0' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(1' new byte[] { 63' 240' 0' 0' 0' 0' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MinValue' new byte[] { 255' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.MaxValue' new byte[] { 127' 239' 255' 255' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.NaN' new byte[] { 255' 248' 0' 0' 0' 0' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,DoubleTest,The following statement contains a magic number: TestDouble(double.NaN' new byte[] { 255' 248' 0' 0' 0' 0' 0' 0 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(IPAddress.Loopback' new byte[] { 0' 127' 0' 0' 1 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(IPAddress.Broadcast' new byte[] { 0' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(IPAddress.Broadcast' new byte[] { 0' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(IPAddress.Broadcast' new byte[] { 0' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(IPAddress.Broadcast' new byte[] { 0' 255' 255' 255' 255 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(null' new byte[] { 3 });
Magic Number,BTDBTest,AbstractBufferedReaderWriterTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\AbstractBufferedReaderWriterTest.cs,IPAddressTest,The following statement contains a magic number: TestIPAddress(ip' new byte[] { 2' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 0' 1' 1 });
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,CommitWithUlongWorks,The following statement contains a magic number: tr1.SetCommitUlong(42);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,CommitWithUlongWorks,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetCommitUlong());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[0] = (byte)(j / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[1] = (byte)(j % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: i % 100 == 0 || i == transactionCount - 1
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[0] = (byte)((transactionCount - i) / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[1] = (byte)((transactionCount - i) % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[0] = (byte)((transactionCount - j) / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[1] = (byte)((transactionCount - j) % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: i % 100 == 0 || i == transactionCount - 1
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: const int keyCount = 10000;
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[101];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[99];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: const int keysCreated = 10000;
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: const int keysCreated = 10000;
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: Assert.Equal((byte)(i / 256)' key[0]);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: Assert.Equal((byte)(i % 256)' key[1]);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(3' tr.GetKeyValueCount());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: tr.SetKeyPrefix(ByteBuffer.NewAsync(_key1' 0' 3));
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(2' tr.GetKeyValueCount());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(_key3.Skip(3).ToArray()' tr.GetKeyAsByteArray());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SimpleEraseCurrentWorks,The following statement contains a magic number: Assert.Equal(2' tr.GetKeyValueCount());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorks,The following statement contains a magic number: AdvancedEraseRangeWorksCore(range[0]' range[1]' range[2]);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' 1 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' i / 4 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' i / 4 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' 1 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' i / 2 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' i / 2 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i - i / 2' i / 2 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i - i / 2' i / 2 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 0' i / 2 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 3 * i / 4' 1 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 3 * i / 4' 1 };
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: i < 1000
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: var key = new byte[5000];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: i < 5000
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: var key = new byte[5];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: var value = new byte[100];
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: key[4] = j;
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: j < 100
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: tr.SetKeyPrefix(ByteBuffer.NewSync(key' 0' 4));
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: Assert.Equal(100' tr.GetKeyValueCount());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,CompressibleValueLoad,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[1000]);
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,CompressibleValueLoad,The following statement contains a magic number: Assert.Equal(new byte[1000]' tr.GetValueAsByteArray());
Magic Number,BTDBTest,ArtInMemoryArtInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ArtInMemoryKeyValueDBTest.cs,StartWritingTransactionWorks,The following statement contains a magic number: task.Wait(1000);
Magic Number,BTDBTest,BTreeKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeKeyValueDBTest.cs,NewKeyValueDB,The following statement contains a magic number: return NewKeyValueDB(new KeyValueDBOptions { FileCollection = fileCollection' Compression = new SnappyCompressionStrategy()' FileSplitSize = 2147483647});
Magic Number,BTDBTest,ByteBufferTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ByteBufferTests.cs,ConversionFromReadOnlyMemoryWorks,The following statement contains a magic number: var b = new byte[10];
Magic Number,BTDBTest,ByteBufferTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ByteBufferTests.cs,ConversionFromReadOnlyMemoryWorks,The following statement contains a magic number: var m = b.AsMemory(3' 5);
Magic Number,BTDBTest,ByteBufferTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ByteBufferTests.cs,ConversionFromReadOnlyMemoryWorks,The following statement contains a magic number: var m = b.AsMemory(3' 5);
Magic Number,BTDBTest,ByteBufferTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ByteBufferTests.cs,ConversionFromReadOnlyMemoryWorks,The following statement contains a magic number: Assert.Equal(3' bb.Offset);
Magic Number,BTDBTest,ByteBufferTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ByteBufferTests.cs,ConversionFromReadOnlyMemoryWorks,The following statement contains a magic number: Assert.Equal(5' bb.Length);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,BasicTest,The following statement contains a magic number: Assert.Equal(3' _second.QueryRemoteService<IAdder>().Add(1' 2));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,BasicTest,The following statement contains a magic number: Assert.Equal(3' _second.QueryRemoteService<IAdder>().Add(1' 2));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ServiceWithIAdderAndIIface1,The following statement contains a magic number: Assert.Equal(5' _second.QueryRemoteService<IAdder>().Add(10000' -9995));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ServiceWithIAdderAndIIface1,The following statement contains a magic number: Assert.Equal(5' _second.QueryRemoteService<IAdder>().Add(10000' -9995));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ServiceWithIAdderAndIIface1,The following statement contains a magic number: Assert.Equal(5' _second.QueryRemoteService<IAdder>().Add(10000' -9995));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ServiceWithIAdderAndIIface1,The following statement contains a magic number: Assert.Equal(2' i1.Meth1("Hi"));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,AssertIIface1Async,The following statement contains a magic number: Assert.Equal(2' i1.Meth1("Hi").Result);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateAsService,The following statement contains a magic number: AreDoubleEqual(31.0' d(10.5' 20.5)' 1e-10);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateAsService,The following statement contains a magic number: AreDoubleEqual(31.0' d(10.5' 20.5)' 1e-10);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateAsService,The following statement contains a magic number: AreDoubleEqual(31.0' d(10.5' 20.5)' 1e-10);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateAsService,The following statement contains a magic number: AreDoubleEqual(31.0' d(10.5' 20.5)' 1e-10);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ClientServiceDeallocedWhenNotneeded,The following statement contains a magic number: Assert.Equal(2' adder.Add(1' 1));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,IfaceToDelegateConversion,The following statement contains a magic number: Assert.Equal(5' adder(2' 3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,IfaceToDelegateConversion,The following statement contains a magic number: Assert.Equal(5' adder(2' 3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,IfaceToDelegateConversion,The following statement contains a magic number: Assert.Equal(5' adder(2' 3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateToIfaceConversion,The following statement contains a magic number: Assert.Equal(30' _second.QueryRemoteService<IAdder>().Add(10' 20));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateToIfaceConversion,The following statement contains a magic number: Assert.Equal(30' _second.QueryRemoteService<IAdder>().Add(10' 20));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DelegateToIfaceConversion,The following statement contains a magic number: Assert.Equal(30' _second.QueryRemoteService<IAdder>().Add(10' 20));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,BasicMethodOverloading,The following statement contains a magic number: Assert.Equal(9' i2.Invoke(3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,BasicMethodOverloading,The following statement contains a magic number: Assert.Equal(9' i2.Invoke(3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,BasicMethodOverloading,The following statement contains a magic number: Assert.Equal(2' i2.Invoke("Hi"));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(3' i2.Invoke(3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(3' i2.Invoke(3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(2' i2.Invoke("Hi"));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(10' i3.Invoke(3' 4));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(10' i3.Invoke(3' 4));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(10' i3.Invoke(3' 4));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(8' i3.Invoke("Hi"' "Dev"));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(10' i3O.Invoke(4' 3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(10' i3O.Invoke(4' 3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(10' i3O.Invoke(4' 3));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ChangingNumberAndOrderOfParameters,The following statement contains a magic number: Assert.Equal(7' i3O.Invoke("Hi"' "Dev"));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteArraySupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteArraySupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteArraySupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteArraySupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteArraySupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteArraySupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(new byte[] { 0' 1' 2' 3' 255 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport2,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(ByteBuffer.NewAsync(new byte[] { 0' 1' 2' 3' 255 })).ToByteArray());
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport2,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(ByteBuffer.NewAsync(new byte[] { 0' 1' 2' 3' 255 })).ToByteArray());
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport2,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(ByteBuffer.NewAsync(new byte[] { 0' 1' 2' 3' 255 })).ToByteArray());
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport2,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(ByteBuffer.NewAsync(new byte[] { 0' 1' 2' 3' 255 })).ToByteArray());
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport2,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(ByteBuffer.NewAsync(new byte[] { 0' 1' 2' 3' 255 })).ToByteArray());
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,ByteBufferSupport2,The following statement contains a magic number: Assert.Equal(new byte[] { 255' 3' 2' 1' 0 }' d(ByteBuffer.NewAsync(new byte[] { 0' 1' 2' 3' 255 })).ToByteArray());
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SimpleConversion,The following statement contains a magic number: Assert.Equal("81"' d(9));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DisconnectionShouldCancelRunningMethods,The following statement contains a magic number: _first.RegisterLocalService((Func<Task>)(() => Task.Factory.StartNew(() => e.WaitOne(1000))));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,DisconnectionShouldCancelRunningMethods,The following statement contains a magic number: task.Wait(1000);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListLongAsParameters,The following statement contains a magic number: Assert.Equal(new List<long> { 3' 2' 1 }' d(new List<long> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListLongAsParameters,The following statement contains a magic number: Assert.Equal(new List<long> { 3' 2' 1 }' d(new List<long> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListLongAsParameters,The following statement contains a magic number: Assert.Equal(new List<long> { 3' 2' 1 }' d(new List<long> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListLongAsParameters,The following statement contains a magic number: Assert.Equal(new List<long> { 3' 2' 1 }' d(new List<long> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListIntAsParameters,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListIntAsParameters,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListIntAsParameters,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIListIntAsParameters,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportIDictionaryIntAsParameters,The following statement contains a magic number: Assert.Equal(new Dictionary<int' int> { { 1' 5 }' { 2' 6 }' { 3' 7 } }' d(new Dictionary<int' int> { { 5' 1 }' { 6' 2 }' { 7' 3 } }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportSimpleDTOAsParameter,The following statement contains a magic number: d(new SimpleDTO { Name = "Text"' Number = 3.14 });
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportSimpleDTOAsParameter,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportSimpleDTOAsParameter,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportSimpleDTOAsResult,The following statement contains a magic number: _first.RegisterLocalService((Func<SimpleDTO>)(() => new SimpleDTO { Name = "Text"' Number = 3.14 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportSimpleDTOAsResult,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,SupportSimpleDTOAsResult,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnAndRegisterOtherTypes,The following statement contains a magic number: _first.RegisterLocalService((Func<object>)(() => new SimpleDTO { Name = "Text"' Number = 3.14 }));
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnAndRegisterOtherTypes,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnAndRegisterOtherTypes,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanSendAndRegisterOtherTypes,The following statement contains a magic number: d(new SimpleDTO { Name = "Text"' Number = 3.14 });
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanSendAndRegisterOtherTypes,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanSendAndRegisterOtherTypes,The following statement contains a magic number: AreDoubleEqual(3.14' received.Number' 1e-14);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnComplexObjectsAsTask,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }).Result);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnComplexObjectsAsTask,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }).Result);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnComplexObjectsAsTask,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }).Result);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,CanReturnComplexObjectsAsTask,The following statement contains a magic number: Assert.Equal(new List<int> { 3' 2' 1 }' d(new List<int> { 1' 2' 3 }).Result);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,AreDoubleEqual,The following statement contains a magic number: Assert.InRange(diff' - precision/2'  precision/2);
Magic Number,BTDBTest,ConnectedServiceTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,AreDoubleEqual,The following statement contains a magic number: Assert.InRange(diff' - precision/2'  precision/2);
Magic Number,BTDBTest,Class3,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,Invoke,The following statement contains a magic number: return param.Length + 2 * (param2 ?? "").Length;
Magic Number,BTDBTest,Class3,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ConnectedServiceTest.cs,Invoke,The following statement contains a magic number: return 2 * param2 + param;
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,SizeDoesNotGrowOverLimit,The following statement contains a magic number: const int cacheCapacity = 50000;
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,SizeDoesNotGrowOverLimit,The following statement contains a magic number: i < 80
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,Put,The following statement contains a magic number: var content = new byte[1024];
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,Get,The following statement contains a magic number: var content = new byte[1024];
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,Get,The following statement contains a magic number: return cache.Get(CalcHash(content)).Result.Length == 1024;
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerIncreasingRate,The following statement contains a magic number: const int cacheCapacity = 50000;
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerIncreasingRate,The following statement contains a magic number: i < 80
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerIncreasingRate,The following statement contains a magic number: Assert.True(Get(cache' 79));
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerDecreasingRate,The following statement contains a magic number: const int cacheCapacity = 50000;
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerDecreasingRate,The following statement contains a magic number: j < 79 - i
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerDecreasingRate,The following statement contains a magic number: i < 80
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,GettingContentMakesItStayLongerDecreasingRate,The following statement contains a magic number: Assert.False(Get(cache' 60));
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,AccessEveryTenthTenTimesMoreMakesItStay,The following statement contains a magic number: const int cacheCapacity = 50000;
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,AccessEveryTenthTenTimesMoreMakesItStay,The following statement contains a magic number: j < (i % 5 == 0 ? 10 + i : 1)
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,AccessEveryTenthTenTimesMoreMakesItStay,The following statement contains a magic number: j < (i % 5 == 0 ? 10 + i : 1)
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,AccessEveryTenthTenTimesMoreMakesItStay,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,AccessEveryTenthTenTimesMoreMakesItStay,The following statement contains a magic number: i==42
Magic Number,BTDBTest,DiskChunkCacheTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DiskChunkCacheTest.cs,AccessEveryTenthTenTimesMoreMakesItStay,The following statement contains a magic number: i < 46
Magic Number,BTDBTest,DtoChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\DTOChannelTest.cs,CanSendIIndirect,The following statement contains a magic number: File o1 = new File             {                 Id = 1'                 RawData = new IIndirectImpl<ByteData>(new ByteData { Data = 2 })             };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializingNewObjectsWritesNewMetadata,The following statement contains a magic number: Assert.InRange(data.Length' 1' 100);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,ParsingMetadataStopsGeneratingThem,The following statement contains a magic number: Assert.InRange(data.Length' 1' 10);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: i == 2
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializationRunsAndDoesNotLeak1Byte,The following statement contains a magic number: Assert.InRange(GC.GetTotalMemory(false)' 0' baselineMemory + 400);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,DeserializeSimpleClass,The following statement contains a magic number: var obj = new User { Name = "Boris"' Age = 40 };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,DeserializesClassWithIList2,The following statement contains a magic number: Assert.Equal(99' meta.Length);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,DeserializesClassWithIListArray,The following statement contains a magic number: Assert.Equal(99' meta.Length);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializingBoxedDoubleDoesNotCrash,The following statement contains a magic number: var obj = new DtoWithObject { Something = 1.2 };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializingBoxedDoubleDoesNotCrash,The following statement contains a magic number: Assert.Equal(1.2' ((DtoWithObject)obj2).Something);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SupportPureArray,The following statement contains a magic number: var obj = new PureArray { A = new[] { "A"' "B" }' B = new[] { 42' 7 } };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SupportPureArray,The following statement contains a magic number: var obj = new PureArray { A = new[] { "A"' "B" }' B = new[] { 42' 7 } };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SupportPureArray,The following statement contains a magic number: Assert.Equal(ev.B' new[] { 42' 7 });
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SupportPureArray,The following statement contains a magic number: Assert.Equal(ev.B' new[] { 42' 7 });
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: var obj = new EventWithNullable             {                 EventId = 1'                 NullableInt = 42'                 ListWithNullables = new List<int?> { 4' new int?() }'                 DictionaryWithNullables = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } }             };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: var obj = new EventWithNullable             {                 EventId = 1'                 NullableInt = 42'                 ListWithNullables = new List<int?> { 4' new int?() }'                 DictionaryWithNullables = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } }             };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: var obj = new EventWithNullable             {                 EventId = 1'                 NullableInt = 42'                 ListWithNullables = new List<int?> { 4' new int?() }'                 DictionaryWithNullables = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } }             };
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: Assert.Equal(42' ev.NullableInt.Value);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: Assert.Equal(2' ev.ListWithNullables.Count);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: Assert.Equal(4' ev.ListWithNullables[0].Value);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: Assert.Equal(2' ev.DictionaryWithNullables.Count);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,SerializeDeserializeWithNullable,The following statement contains a magic number: Assert.False(ev.DictionaryWithNullables[2].HasValue);
Magic Number,BTDBTest,EventStore2Test,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,GivenObjectWithMultipleReferencesToSingleInstance_WhenDeserializationFailsDeepDownBecauseOfMissingMetadata_ThenNextReferenceShouldBeResolvedCorrectlyAfterApplicationOfTheMetadata,The following statement contains a magic number: var reusableObj = new EventWithInt { Status = 42 };
Magic Number,BTDBTest,ObjectWithMultipleReferences,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStore2Test.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Reference2 != null ? Reference2.GetHashCode() : 0);
Magic Number,BTDBTest,EventStoreMigrationTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreMigrationTest.cs,CanMigrateIntToUlong,The following statement contains a magic number: var obj = (EventWithUlong)PassThroughEventStorage(new EventWithInt             {                 A = 42             }' mapper);
Magic Number,BTDBTest,EventStoreMigrationTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreMigrationTest.cs,CanMigrateIntToUlong,The following statement contains a magic number: Assert.Equal(42ul' obj.A);
Magic Number,BTDBTest,EventStoreMigrationTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreMigrationTest.cs,CanMigrateStringToVersion,The following statement contains a magic number: Assert.Equal(new Version(1'2'3)' obj.A);
Magic Number,BTDBTest,EventStoreMigrationTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreMigrationTest.cs,CanMigrateStringToVersion,The following statement contains a magic number: Assert.Equal(new Version(1'2'3)' obj.A);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: var events = new object[]             {                 new User {Name = "B"' Age = 2}'                 new User {Name = "C"' Age = 3}             };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: var events = new object[]             {                 new User {Name = "B"' Age = 2}'                 new User {Name = "C"' Age = 3}             };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: i == 10
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: i <= 10000
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: GC.Collect(2);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,WhenReadOnlyStoreIsCreatedFromNewEventStoreManagerThenItShouldNotLeakMemory,The following statement contains a magic number: Assert.InRange(GC.GetTotalMemory(false)' 0' baselineMemory * 3F);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanWriteSimpleEvent,The following statement contains a magic number: Assert.Equal(10ul' appender.KnownAppendablePosition());
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStart,The following statement contains a magic number: var file1 = new MemoryEventFileStorage(4096' 4096);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStart,The following statement contains a magic number: var file1 = new MemoryEventFileStorage(4096' 4096);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStart,The following statement contains a magic number: appender.Store(null' new object[] { new byte[4000] });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStart,The following statement contains a magic number: appender.Store(null' new object[] { new byte[4000] });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanReadLongerEventsFromIncompleteFile,The following statement contains a magic number: appender.Store(null' new object[] { new byte[8000] });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanReadLongerEventsFromIncompleteFile,The following statement contains a magic number: var buf = ByteBuffer.NewSync(new byte[4096]);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanReadLongerEventsFromIncompleteFile,The following statement contains a magic number: buf = ByteBuffer.NewSync(new byte[4096]);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanReadLongerEventsFromIncompleteFile,The following statement contains a magic number: file1.Read(buf' 4096);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanReadLongerEventsFromIncompleteFile,The following statement contains a magic number: file2.Write(buf' 4096);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreOnEverySectorPosition,The following statement contains a magic number: var file1 = new MemoryEventFileStorage(4096' 8192);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreOnEverySectorPosition,The following statement contains a magic number: var file1 = new MemoryEventFileStorage(4096' 8192);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreOnEverySectorPosition,The following statement contains a magic number: appender.Store(null' new object[] { new byte[7000] });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreOnEverySectorPosition,The following statement contains a magic number: i < 4600
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStartFirstNearlyFull,The following statement contains a magic number: var file1 = new MemoryEventFileStorage(4096' 4096);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStartFirstNearlyFull,The following statement contains a magic number: var file1 = new MemoryEventFileStorage(4096' 4096);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStartFirstNearlyFull,The following statement contains a magic number: appender.Store(null' new object[] { new byte[4080] });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanFinalizeEventStoreAfterReadFromStartFirstNearlyFull,The following statement contains a magic number: appender.Store(null' new object[] { new byte[4000] });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanWriteMultipleEventsWithMetadata,The following statement contains a magic number: var events = new object[]                 {                     new User {Name = "B"' Age = 2}'                     new User {Name = "C"' Age = 3}                 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanWriteMultipleEventsWithMetadata,The following statement contains a magic number: var events = new object[]                 {                     new User {Name = "B"' Age = 2}'                     new User {Name = "C"' Age = 3}                 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CustomEventIsReadFromSecondSplit,The following statement contains a magic number: var appender = manager.AppendToStore(new MemoryEventFileStorage(4096' 4096));
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CustomEventIsReadFromSecondSplit,The following statement contains a magic number: var appender = manager.AppendToStore(new MemoryEventFileStorage(4096' 4096));
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,NestedObjectsTest,The following statement contains a magic number: var userEvent = new UserEvent { Id = 10' User1 = new User { Name = "A"' Age = 1 } };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SameReferenceTest,The following statement contains a magic number: var userEvent = new UserEvent { Id = 10' User1 = user' User2 = user };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,UpgradeToMoreObjectProperties,The following statement contains a magic number: var userEvent = new UserEvent { Id = 10' User1 = user' User2 = user };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,UpgradeToMoreObjectProperties,The following statement contains a magic number: Assert.Equal(10' readUserEvent.Id);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,UpgradeToLessObjectProperties,The following statement contains a magic number: var userEvent = new UserEvent { Id = 10' User1 = user' User2 = user };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,UpgradeToLessObjectProperties,The following statement contains a magic number: Assert.Equal(10' readUserEvent.Id);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsList,The following statement contains a magic number: var userB = new User { Name = "B"' Age = 2 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsList,The following statement contains a magic number: var userEvent = new UserEventList { Id = 10' List = new List<User> { userA' userB' userA } };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SkipListOnUpgrade,The following statement contains a magic number: var userB = new User { Name = "B"' Age = 2 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SkipListOnUpgrade,The following statement contains a magic number: var userEvent = new UserEventList { Id = 10' List = new List<User> { userA' userB' userA } };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SkipListOnUpgrade,The following statement contains a magic number: Assert.Equal(10' readUserEvent.Id);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsDictionary,The following statement contains a magic number: var userB = new User { Name = "B"' Age = 2 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsDictionary,The following statement contains a magic number: var userEvent = new UserEventDictionary { Id = 10' Dict = new Dictionary<string' User> { { "A"' userA }' { "B"' userB } } };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsDataOverMaxBlockSize,The following statement contains a magic number: var randomData = new byte[20000];
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportsDataOverMaxBlockSize,The following statement contains a magic number: Assert.True(10000 < appender.KnownAppendablePosition());
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CompressionShortensData,The following statement contains a magic number: var compressibleData = new byte[20000];
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CompressionShortensData,The following statement contains a magic number: Assert.True(2000 > appender.KnownAppendablePosition());
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStopReadBatchesAfterFirst,The following statement contains a magic number: var events = new object[]                 {                     new User {Name = "B"' Age = 2}'                     new User {Name = "C"' Age = 3}                 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStopReadBatchesAfterFirst,The following statement contains a magic number: var events = new object[]                 {                     new User {Name = "B"' Age = 2}'                     new User {Name = "C"' Age = 3}                 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,MoreComplexRepeatedAppendingAndReading,The following statement contains a magic number: i < 520
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,Read,The following statement contains a magic number: Assert.Equal(2u' e.Credit.B);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanWriteEventWithIndexer,The following statement contains a magic number: Assert.Equal("o"' ev[11]);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportPureArray,The following statement contains a magic number: appender.Store(null' new object[] { new PureArray { A = new[] { "A"' "B" }' B = new[] { 42' 7 } } });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportPureArray,The following statement contains a magic number: appender.Store(null' new object[] { new PureArray { A = new[] { "A"' "B" }' B = new[] { 42' 7 } } });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportPureArray,The following statement contains a magic number: Assert.Equal(ev.B' new[] { 42' 7 });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,SupportPureArray,The following statement contains a magic number: Assert.Equal(ev.B' new[] { 42' 7 });
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: var testEvent = new EventWithNullable             {                 EventId = 1'                 NullableInt = 42'                 ListWithNullables = new List<int?> { 4' new int?() }'                 DictionaryWithNullables = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } }             };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: var testEvent = new EventWithNullable             {                 EventId = 1'                 NullableInt = 42'                 ListWithNullables = new List<int?> { 4' new int?() }'                 DictionaryWithNullables = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } }             };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: var testEvent = new EventWithNullable             {                 EventId = 1'                 NullableInt = 42'                 ListWithNullables = new List<int?> { 4' new int?() }'                 DictionaryWithNullables = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } }             };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: Assert.Equal(42' ev.NullableInt.Value);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: Assert.Equal(2' ev.ListWithNullables.Count);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: Assert.Equal(4' ev.ListWithNullables[0].Value);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: Assert.Equal(2' ev.DictionaryWithNullables.Count);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,CanStoreNullable,The following statement contains a magic number: Assert.False(ev.DictionaryWithNullables[2].HasValue);
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,TypeMapperCanForceSkipEvents,The following statement contains a magic number: var user = new User { Name = "ABC"' Age = 88 };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,TypeMapperCanForceSkipEvents,The following statement contains a magic number: var userEvent = new UserEvent { Id = 10' User1 = user' User2 = user };
Magic Number,BTDBTest,EventStoreTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\EventStoreTest.cs,TypeMapperCanForceSkipEvents,The following statement contains a magic number: var userEventMore = new UserEventMore { Id = 11' User1 = user' User2 = user };
Magic Number,BTDBTest,FileCollectionTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\FileCollectionTests.cs,CanCreateFile,The following statement contains a magic number: i < 32000
Magic Number,BTDBTest,FileCollectionTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\FileCollectionTests.cs,CanCreateFile,The following statement contains a magic number: var data = new byte[4];
Magic Number,BTDBTest,FileCollectionTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\FileCollectionTests.cs,CanCreateFile,The following statement contains a magic number: f.RandomRead(data' (ulong) i * 4' false);
Magic Number,BTDBTest,FileCollectionTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\FileCollectionTests.cs,CanCreateFile,The following statement contains a magic number: i < 32000
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,CanAccessPrivateProperties,The following statement contains a magic number: il                 .Newobj(() => new Nested())                 .Dup()                 .Stloc(local)                 .LdcI4(42)                 .Call(propertyInfo.GetSetMethod(true))                 .Ldloc(local)                 .Call(propertyInfo.GetGetMethod(true))                 .Ret();
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,CanAccessPrivateProperties,The following statement contains a magic number: Assert.Equal(42' d());
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,CanCallPrivateConstructor,The following statement contains a magic number: il                 .LdcI4(42)                 .Newobj(typeof(PrivateConstructor).GetConstructors(BindingFlags.NonPublic | BindingFlags.Instance)[0])                 .Ret();
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,CanCallPrivateConstructor,The following statement contains a magic number: Assert.Equal(42' method.Create()().A);
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,Factorial,The following statement contains a magic number: n > 2
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,FactorialWorks,The following statement contains a magic number: il                 .Ldarg(0) //[n]                 .Stloc(ret) //[]                 .Mark(next)                 .Ldarg(0) //[n]                 .LdcI4(2) // [ret' 2]                 .Blt(finish) //[]                 .Ldarg(0) //[n]                 .LdcI4(1) //[n' 1]                 .Sub() //[n-1]                 .Dup() //[n-1' n-1]                 .Starg(0) //[n-1]                 .Ldloc(ret) //[n-1' ret]                 .Mul()  //[(n-1)*ret] -> ret                 .Stloc(ret) //[ret]                 .Br(next)                 .Mark(finish)                 .Ldloc(ret)                 .Ret();
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,FactorialWorks,The following statement contains a magic number: Assert.Equal(24' method.Create()(4));
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,FactorialWorks,The following statement contains a magic number: Assert.Equal(24' method.Create()(4));
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,AllocationLessDictionaryIteration,The following statement contains a magic number: Assert.Equal(10' method.Create()(new Dictionary<int' int> { { 1' 2 }' { 3' 4 } }));
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,AllocationLessDictionaryIteration,The following statement contains a magic number: Assert.Equal(10' method.Create()(new Dictionary<int' int> { { 1' 2 }' { 3' 4 } }));
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,AllocationLessDictionaryIteration,The following statement contains a magic number: Assert.Equal(10' method.Create()(new Dictionary<int' int> { { 1' 2 }' { 3' 4 } }));
Magic Number,BTDBTest,ILExtensionsTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ILExtensionsTest.cs,AllocationLessDictionaryIteration,The following statement contains a magic number: Assert.Equal(10' method.Create()(new Dictionary<int' int> { { 1' 2 }' { 3' 4 } }));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,CommitWithUlongWorks,The following statement contains a magic number: tr1.SetCommitUlong(42);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,CommitWithUlongWorks,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetCommitUlong());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[0] = (byte)(j / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: key[1] = (byte)(j % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions,The following statement contains a magic number: i % 100 == 0 || i == transactionCount - 1
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[0] = (byte)((transactionCount - i) / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[1] = (byte)((transactionCount - i) % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[0] = (byte)((transactionCount - j) / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: key[1] = (byte)((transactionCount - j) % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,MultipleTransactions2,The following statement contains a magic number: i % 100 == 0 || i == transactionCount - 1
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: const int keyCount = 10000;
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[101];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[99];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: const int keysCreated = 10000;
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: const int keysCreated = 10000;
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: Assert.Equal((byte)(i / 256)' key[0]);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyIndexWorks,The following statement contains a magic number: Assert.Equal((byte)(i % 256)' key[1]);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(3' tr.GetKeyValueCount());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: tr.SetKeyPrefix(ByteBuffer.NewAsync(_key1' 0' 3));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(2' tr.GetKeyValueCount());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(_key3.Skip(3).ToArray()' tr.GetKeyAsByteArray());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SimpleEraseCurrentWorks,The following statement contains a magic number: Assert.Equal(2' tr.GetKeyValueCount());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorks,The following statement contains a magic number: AdvancedEraseRangeWorksCore(range[0]' range[1]' range[2]);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' 1 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' i / 4 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' i / 4 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' 1 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' i / 2 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' i / 2 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i - i / 2' i / 2 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i - i / 2' i / 2 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 0' i / 2 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 3 * i / 4' 1 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 3 * i / 4' 1 };
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,EraseRangeSource,The following statement contains a magic number: i < 1000
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: var key = new byte[5000];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,ALotOf5KBTransactionsWorks,The following statement contains a magic number: i < 5000
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: var key = new byte[5];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: var value = new byte[100];
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: key[4] = j;
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: j < 100
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: tr.SetKeyPrefix(ByteBuffer.NewSync(key' 0' 4));
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: Assert.Equal(100' tr.GetKeyValueCount());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,CompressibleValueLoad,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[1000]);
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,CompressibleValueLoad,The following statement contains a magic number: Assert.Equal(new byte[1000]' tr.GetValueAsByteArray());
Magic Number,BTDBTest,InMemoryInMemoryKeyValueDBTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\InMemoryKeyValueDBTest.cs,StartWritingTransactionWorks,The following statement contains a magic number: task.Wait(1000);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,DelegateWithNamedParameters,The following statement contains a magic number: var obj = factory(22' 11);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,DelegateWithNamedParameters,The following statement contains a magic number: var obj = factory(22' 11);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,DelegateWithNamedParameters,The following statement contains a magic number: Assert.Equal(11' obj.Param1);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,DelegateWithNamedParameters,The following statement contains a magic number: Assert.Equal(22' obj.Param2);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: builder.RegisterInstance(7).Named<int>("i");
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: builder.RegisterInstance(3).Named<int>("j");
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: builder.RegisterType<MultipleConstructors>().UsingConstructor().Keyed<MultipleConstructors>(2);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: builder.RegisterType<MultipleConstructors>().UsingConstructor(typeof(int)).Keyed<MultipleConstructors>(3);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: builder.RegisterType<MultipleConstructors>().UsingConstructor(typeof(string)).Keyed<MultipleConstructors>(4);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: builder.RegisterType<MultipleConstructors>().UsingConstructor(typeof(int)' typeof(int)).Keyed<MultipleConstructors>(5);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: Assert.Equal(""' container.ResolveKeyed<MultipleConstructors>(2).Desc);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: Assert.Equal("Int 7"' container.ResolveKeyed<MultipleConstructors>(3).Desc);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: Assert.Equal("String A"' container.ResolveKeyed<MultipleConstructors>(4).Desc);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,UsingConstructorWorks,The following statement contains a magic number: Assert.Equal("Int 7' Int 3"' container.ResolveKeyed<MultipleConstructors>(5).Desc);
Magic Number,BTDBTest,IocTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,ResolveWithOptionalParameterWithRegister,The following statement contains a magic number: var expected = new ClassWithRegisteredOptionalParam(new ClassWithInt32(42));
Magic Number,BTDBTest,OptionalClass<T>,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\IOCTests.cs,GetHashCode,The following statement contains a magic number: return -1937169414 + EqualityComparer<T>.Default.GetHashCode(Value);
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,ItWillRunFirstTimeAfterWaitTime,The following statement contains a magic number: Assert.True(e.WaitOne(1000));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,ItShouldRunAgainSoonIfCompactionSuccessfull,The following statement contains a magic number: Assert.True(e.WaitOne(1000));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,ItShouldCancelRunningCompaction,The following statement contains a magic number: Assert.True(e.WaitOne(1000));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,ItShouldCancelRunningCompaction,The following statement contains a magic number: Assert.True(e.WaitOne(1000));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,AdvideRunningWorksWellForSharedInstance,The following statement contains a magic number: s.WaitTime = TimeSpan.FromMilliseconds(150);
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,AdvideRunningWorksWellForSharedInstance,The following statement contains a magic number: Assert.False(e.WaitOne(100));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,AdvideRunningWorksWellForSharedInstance,The following statement contains a magic number: Assert.True(e.WaitOne(100));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,AdvideRunningWorksWellForSharedInstance,The following statement contains a magic number: Assert.False(e.WaitOne(50));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,AdvideRunningWorksWellForSharedInstance,The following statement contains a magic number: Assert.True(e.WaitOne(50));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,DbOpenedAfterFirstCompactingIsCorrectlyPlanned,The following statement contains a magic number: s.WaitTime = TimeSpan.FromMilliseconds(50);
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,DbOpenedAfterFirstCompactingIsCorrectlyPlanned,The following statement contains a magic number: Assert.True(e.WaitOne(100));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,DbOpenedAfterFirstCompactingIsCorrectlyPlanned,The following statement contains a magic number: Assert.True(e.WaitOne(100));
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,MissingOpeningAdviceDoesNotBlockScheduling,The following statement contains a magic number: s.WaitTime = TimeSpan.FromMilliseconds(50);
Magic Number,BTDBTest,KeyValueDBCompactorSchedulerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCompactorSchedulerTest.cs,MissingOpeningAdviceDoesNotBlockScheduling,The following statement contains a magic number: Assert.True(e.WaitOne(100));
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reader,The following statement contains a magic number: IEnumerable<KeyValuePair<long' Tick>> flow = TicksGenerator.GetFlow(1000000' KeysType.Random);
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reader,The following statement contains a magic number: flow = TicksGenerator.GetFlow(1000000' KeysType.Random);
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: byte[] buf = new byte[8];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[0] = index[7];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[1] = index[6];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[2] = index[5];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[2] = index[5];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[3] = index[4];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[3] = index[4];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[4] = index[3];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[4] = index[3];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[5] = index[2];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[5] = index[2];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[6] = index[1];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Direct,The following statement contains a magic number: buf[7] = index[0];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: byte[] buf = new byte[8];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[0] = index[7];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[1] = index[6];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[2] = index[5];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[2] = index[5];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[3] = index[4];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[3] = index[4];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[4] = index[3];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[4] = index[3];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[5] = index[2];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[5] = index[2];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[6] = index[1];
Magic Number,BTDBTest,KeyValueDBCustomTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,Reverse,The following statement contains a magic number: buf[7] = index[0];
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,TicksGenerator,The following statement contains a magic number: pipsizes[i] = Math.Round(Math.Pow(10' -digits[i])' digits[i]);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,TicksGenerator,The following statement contains a magic number: prices[i] = Math.Round(Double.Parse(tokens[2]' format)' digits[i]);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int direction = random.Next() % 2 == 0 ? 1 : -1;
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int pips = random.Next(0' 10);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int spread = random.Next(2' 30);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int spread = random.Next(2' 30);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int seconds = random.Next(1' 30);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int bidSize = random.Next(0' 10000);
Magic Number,BTDBTest,TicksGenerator,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,GetFlow,The following statement contains a magic number: int askSize = random.Next(0' 10000);
Magic Number,BTDBTest,Tick,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBCustomTest.cs,CompareTo,The following statement contains a magic number: Math.Abs(other.Bid - this.Bid) > 1e-50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[200]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: i % 5 == 0
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: i == 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: Assert.Equal(50' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: Assert.Equal(50' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollback,The following statement contains a magic number: Assert.Equal(50' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[200]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: i % 5 == 0
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: i == 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: Assert.InRange(tr.GetKeyValueCount()' 41' 50);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackTooFar,The following statement contains a magic number: Assert.InRange(tr.GetKeyValueCount()' 41' 50);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollbackToStartIfNoTrlMissing,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollbackToStartIfNoTrlMissing,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[200]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollbackToStartIfNoTrlMissing,The following statement contains a magic number: i % 5 == 0
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollbackToStartIfNoTrlMissing,The following statement contains a magic number: i == 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanRollbackToStartIfNoTrlMissing,The following statement contains a magic number: i < 60
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[200]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: i % 5 == 0
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: i == 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: Assert.InRange(tr.GetKeyValueCount()' 41' 50);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CannotRollbackToStartIfAnyTrlMissing,The following statement contains a magic number: Assert.InRange(tr.GetKeyValueCount()' 41' 50);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: Assert.Equal(9UL' tr.GetCommitUlong());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollback,The following statement contains a magic number: Assert.Equal(50UL' tr.GetCommitUlong());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: Assert.Equal(9UL' tr.GetCommitUlong());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: fileCollection.GetFile(3).Remove();
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     FileSplitSize = 100 * 1024 * 1024'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     FileSplitSize = 100 * 1024 * 1024'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     FileSplitSize = 100 * 1024 * 1024'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     FileSplitSize = 100 * 1024 * 1024'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     OpenUpToCommitUlong = 9UL'                     PreserveHistoryUpToCommitUlong = 9UL'                     FileSplitSize = 100 * 1024 * 1024'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: Assert.Equal(9UL' tr.GetCommitUlong());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: options = new KeyValueDBOptions                 {                     Compression = new SnappyCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 100 * 1024 * 1024'                     OpenUpToCommitUlong = 50UL'                     PreserveHistoryUpToCommitUlong = 50UL'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ComplexTrlRollbackWhenKviLost,The following statement contains a magic number: Assert.Equal(50UL' tr.GetCommitUlong());
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[2000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: i % 2 == 0
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: i % 5 == 0
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: i == 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,ReopenAndReopenWithRoolbackDoesNotCorruptDB,The following statement contains a magic number: i < 60
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new NoCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 8096'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[2000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: kvDb.PreserveHistoryUpToCommitUlong = 100;
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: tr.SetCommitUlong(100 + (ulong)i);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: i < 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: kvDb.PreserveHistoryUpToCommitUlong = 150;
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction + 1' fileCountAfterFirstCompaction + 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: tr.SetCommitUlong(100 + (ulong)i);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: kvDb.PreserveHistoryUpToCommitUlong = 200;
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimist,The following statement contains a magic number: Assert.InRange<uint>(fileCollection.GetCount()' 1' 4);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new NoCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 8096'                     CompactorScheduler = CompactorScheduler.Instance'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[2000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: BTDB.Buffer.PackUnpack.PackInt32BE(key' 0' i * 2);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: i < 50
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction + 2' fileCountAfterFirstCompaction + 50);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction + 2' fileCountAfterFirstCompaction + 50);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: tr.CreateOrUpdateKeyValueUnsafe(key' new byte[2000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: i < 4
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CompatorShouldNotBePesimistDespiteRunningTransactions,The following statement contains a magic number: Assert.InRange(fileCollection.GetCount()' fileCountAfterFirstCompaction / 3' 2 * fileCountAfterFirstCompaction / 3);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanOpenDbAfterDeletingAndCompacting,The following statement contains a magic number: var options = new KeyValueDBOptions                 {                     Compression = new NoCompressionStrategy()'                     FileCollection = fileCollection'                     FileSplitSize = 4096'                     OpenUpToCommitUlong = null'                     PreserveHistoryUpToCommitUlong = null'                     CompactorScheduler = null'                 };
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanOpenDbAfterDeletingAndCompacting,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(new byte[5]' new byte[3000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanOpenDbAfterDeletingAndCompacting,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(new byte[5]' new byte[3000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanOpenDbAfterDeletingAndCompacting,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(new byte[6]' new byte[2000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanOpenDbAfterDeletingAndCompacting,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(new byte[6]' new byte[2000]);
Magic Number,BTDBTest,KeyValueDBRollbackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBRollbackTest.cs,CanOpenDbAfterDeletingAndCompacting,The following statement contains a magic number: Assert.Null(kvDb.FileCollection.FileInfoByIdx(4));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CommitWithUlongWorks,The following statement contains a magic number: tr1.SetCommitUlong(42);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CommitWithUlongWorks,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetCommitUlong());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,UlongsAreRembered,The following statement contains a magic number: tr1.SetUlong(0' 42);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,UlongsAreRembered,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetUlong(0));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,UlongsAreRembered,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetUlong(0));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,UlongsAreRembered,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetUlong(0));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,UlongsAreRembered,The following statement contains a magic number: Assert.Equal(42ul' tr2.GetUlong(0));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: key[0] = (byte)(j / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: key[1] = (byte)(j % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: var key = new byte[2 + transactionCount * 10];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: key[0] = (byte)((transactionCount - i) / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: key[1] = (byte)((transactionCount - i) % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: tr1.CreateOrUpdateKeyValue(ByteBuffer.NewSync(key' 0' 2 + i * 10)' ByteBuffer.NewEmpty());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: key[0] = (byte)((transactionCount - j) / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: key[1] = (byte)((transactionCount - j) % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MultipleTransactions2,The following statement contains a magic number: Assert.Equal(FindResult.Exact' tr1.Find(ByteBuffer.NewSync(key' 0' 2 + j * 10)));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: const int keyCount = 10000;
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[101];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: var key = new byte[99];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,FindKeyWithPreferPreviousKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: const int keysCreated = 10000;
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedFindPreviousAndNextKeyWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyIndexWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyIndexWorks,The following statement contains a magic number: const int keysCreated = 10000;
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyIndexWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyIndexWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyIndexWorks,The following statement contains a magic number: Assert.Equal((byte)(i / 256)' key[0]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyIndexWorks,The following statement contains a magic number: Assert.Equal((byte)(i % 256)' key[1]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(3' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SimplePrefixWorks,The following statement contains a magic number: tr.SetKeyPrefix(ByteBuffer.NewAsync(_key1' 0' 3));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(2' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SimplePrefixWorks,The following statement contains a magic number: Assert.Equal(_key3.Skip(3).ToArray()' tr.GetKeyAsByteArray());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SimpleEraseCurrentWorks,The following statement contains a magic number: Assert.Equal(2' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedEraseRangeWorks,The following statement contains a magic number: AdvancedEraseRangeWorksCore(range[0]' range[1]' range[2]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AdvancedEraseRangeWorksCore,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' 1 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' i / 4 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 2' i / 4 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' 1 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' i / 2 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i / 4' i / 2 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i - i / 2' i / 2 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' i - i / 2' i / 2 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 0' i / 2 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 3 * i / 4' 1 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: yield return new[] { i' 3 * i / 4' 1 };
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,EraseRangeSource,The following statement contains a magic number: i < 1000
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,ALotOf5KbTransactionsWorks,The following statement contains a magic number: var key = new byte[5000];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,ALotOf5KbTransactionsWorks,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,ALotOf5KbTransactionsWorks,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: var key = new byte[5];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: var value = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: key[4] = j;
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: tr.SetKeyPrefix(ByteBuffer.NewSync(key' 0' 4));
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,SetKeyPrefixInOneTransaction,The following statement contains a magic number: Assert.Equal(100' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompressibleValueLoad,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[1000]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompressibleValueLoad,The following statement contains a magic number: Assert.Equal(new byte[1000]' tr.GetValueAsByteArray());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,VeryLongKeys,The following statement contains a magic number: var key = new byte[200000];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,VeryLongKeys,The following statement contains a magic number: var value = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,VeryLongKeys,The following statement contains a magic number: key[100000] = i;
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,VeryLongKeys,The following statement contains a magic number: key[100000] = i;
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,StartWritingTransactionWorks,The following statement contains a magic number: task.Wait(1000);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: key[0] = (byte)(i / 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: key[1] = (byte)(i % 256);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: tr.EraseRange(1' 3);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: Assert.Equal(5' tr.GetKeyAsByteArray()[1]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,MoreComplexReopen,The following statement contains a magic number: Assert.Equal(96' tr.GetKeyValueCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToNewFileAfterReopenWithCorruption,The following statement contains a magic number: fileCollection.SimulateCorruptionBySetSize(20 + 16);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToNewFileAfterReopenWithCorruption,The following statement contains a magic number: fileCollection.SimulateCorruptionBySetSize(20 + 16);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToNewFileAfterReopenWithCorruption,The following statement contains a magic number: Assert.True(2 <= fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[1024]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(Key2' new byte[10]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: Assert.Equal(2u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(Key2' new byte[1024]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key3' new byte[10]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: Assert.Equal(3u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,AddingContinueToSameFileAfterReopenOfDBWith2TransactionLogFiles,The following statement contains a magic number: Assert.Equal(3u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionDoesNotRemoveStillUsedFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[1024]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionDoesNotRemoveStillUsedFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(Key2' new byte[10]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionDoesNotRemoveStillUsedFiles,The following statement contains a magic number: Assert.Equal(3u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionDoesNotRemoveStillUsedFiles,The following statement contains a magic number: Assert.Equal(2u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionDoesNotRemoveStillUsedFiles,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key3' new byte[10]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionStabilizedEvenWithOldTransactions,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[4000]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionStabilizedEvenWithOldTransactions,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(Key2' new byte[4000]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionStabilizedEvenWithOldTransactions,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key3' new byte[4000]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionStabilizedEvenWithOldTransactions,The following statement contains a magic number: Assert.Equal(4u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionStabilizedEvenWithOldTransactions,The following statement contains a magic number: Assert.Equal(4u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionStabilizedEvenWithOldTransactions,The following statement contains a magic number: Assert.Equal(3u' fileCollection.GetCount());
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,PreapprovedCommitAndCompaction,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(_key1' new byte[1024]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,PreapprovedCommitAndCompaction,The following statement contains a magic number: tr.CreateOrUpdateKeyValue(Key2' new byte[10]);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionLimitsKviWriteSpeed,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionLimitsKviWriteSpeed,The following statement contains a magic number: j < 100
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionLimitsKviWriteSpeed,The following statement contains a magic number: i < 256
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionLimitsKviWriteSpeed,The following statement contains a magic number: Assert.InRange(logger.KviTime.TotalMilliseconds' 1000' 2000);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,CompactionLimitsKviWriteSpeed,The following statement contains a magic number: Assert.InRange(logger.KviTime.TotalMilliseconds' 1000' 2000);
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: var value = new byte[2000];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: i < 2000
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: var key = new byte[100];
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: i < 2000
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: i < 2000
Magic Number,BTDBTest,KeyValueDBTestBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\KeyValueDBTestBase.cs,BigCompaction,The following statement contains a magic number: Assert.Equal(667' tr.GetKeyValueCount());
Magic Number,BTDBTest,NumberAllocatorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\NumberAllocatorTest.cs,BasicTest,The following statement contains a magic number: var a=new NumberAllocator(5);
Magic Number,BTDBTest,NumberAllocatorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\NumberAllocatorTest.cs,BasicTest,The following statement contains a magic number: Assert.Equal(5u' a.Allocate());
Magic Number,BTDBTest,NumberAllocatorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\NumberAllocatorTest.cs,BasicTest,The following statement contains a magic number: Assert.Equal(6u' a.Allocate());
Magic Number,BTDBTest,NumberAllocatorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\NumberAllocatorTest.cs,BasicTest,The following statement contains a magic number: a.Deallocate(5);
Magic Number,BTDBTest,NumberAllocatorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\NumberAllocatorTest.cs,BasicTest,The following statement contains a magic number: Assert.Equal(5u' a.Allocate());
Magic Number,BTDBTest,NumberAllocatorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\NumberAllocatorTest.cs,BasicTest,The following statement contains a magic number: Assert.Equal(7u' a.Allocate());
Magic Number,BTDBTest,ObjectDbSelfHealingTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbSelfHealingTest.cs,ChangeOfPrimaryKeyDeleteAllData,The following statement contains a magic number: var job = new JobV1 { Id = 11' Name = "Code" };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,InitILinks,The following statement contains a magic number: var link = new Link { Id = 1' Edges = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,InitILinks,The following statement contains a magic number: var link = new Link { Id = 1' Edges = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,InitILinks,The following statement contains a magic number: var link = new Link { Id = 1' Edges = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: links.Insert(new Link { Id = 2' Edges = new Dictionary<ulong' ulong> { [10] = 20 } });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: links.Insert(new Link { Id = 2' Edges = new Dictionary<ulong' ulong> { [10] = 20 } });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: links.Insert(new Link { Id = 2' Edges = new Dictionary<ulong' ulong> { [10] = 20 } });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: link = links.FindById(2);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: link.Edges.Add(20' 30);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: link.Edges.Add(20' 30);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: link = links.FindById(2);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInUpdate,The following statement contains a magic number: Assert.Equal(2' link.Edges.Count);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: links.Insert(new Link { Id = 2' Edges = new Dictionary<ulong' ulong> { [10] = 20 } });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: links.Insert(new Link { Id = 2' Edges = new Dictionary<ulong' ulong> { [10] = 20 } });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: links.Insert(new Link { Id = 2' Edges = new Dictionary<ulong' ulong> { [10] = 20 } });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: link = links.FindById(2);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: link.Edges.Add(20' 30);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: link.Edges.Add(20' 30);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: link = links.FindById(2);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,LeakingIDictionaryInShallowUpdate,The following statement contains a magic number: Assert.Equal(2' link.Edges.Count);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,ReuseIDictionaryAfterShallowRemove,The following statement contains a magic number: Assert.Equal(3' value.Edges.Count);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInList,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInList,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInList,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInList,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInList,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInList,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: var link = new LinkInList                 {                     Id = 1'                     EdgesList = new List<IDictionary<ulong' ulong>>                     {                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } '                         new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: link.EdgesList.Add(new Dictionary<ulong' ulong> { [10] = 20 });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: link.EdgesList.Add(new Dictionary<ulong' ulong> { [10] = 20 });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInListInUpdate,The following statement contains a magic number: i < 20
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInDictionary,The following statement contains a magic number: var link = new LinkInDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInDictionary,The following statement contains a magic number: var link = new LinkInDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInDictionary,The following statement contains a magic number: var link = new LinkInDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInDictionary,The following statement contains a magic number: var link = new LinkInDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInDictionary,The following statement contains a magic number: var link = new LinkInDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInDictionary,The following statement contains a magic number: var link = new LinkInDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInIDictionary,The following statement contains a magic number: var link = new LinkInIDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInIDictionary,The following statement contains a magic number: var link = new LinkInIDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInIDictionary,The following statement contains a magic number: var link = new LinkInIDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInIDictionary,The following statement contains a magic number: var link = new LinkInIDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInIDictionary,The following statement contains a magic number: var link = new LinkInIDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInIDictionary,The following statement contains a magic number: var link = new LinkInIDict                 {                     Id = 1'                     EdgesIDict = new Dictionary<int' IDictionary<ulong' ulong>>                     {                         [0] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }'                         [1] = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInInlineObject,The following statement contains a magic number: var link = new Links                 {                     Id = 1'                     Nodes = new Nodes { Edges = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInInlineObject,The following statement contains a magic number: var link = new Links                 {                     Id = 1'                     Nodes = new Nodes { Edges = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInInlineObject,The following statement contains a magic number: var link = new Links                 {                     Id = 1'                     Nodes = new Nodes { Edges = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 } }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeIDictionaryInInlineObject,The following statement contains a magic number: Assert.Equal(2ul' l.Nodes.Edges[1]);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,AlsoFieldsInsideIDictionaryAreStoredInlineByDefault,The following statement contains a magic number: var license = new License                 {                     CompanyId = 1'                     UserId = 1'                     ConcurrentFeautureItemsSessions = new Dictionary<ulong' IDictionary<ulong' ConcurrentFeatureItemInfo>>                     {                         [4] = new Dictionary<ulong' ConcurrentFeatureItemInfo> { [2] = new ConcurrentFeatureItemInfo() }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,AlsoFieldsInsideIDictionaryAreStoredInlineByDefault,The following statement contains a magic number: var license = new License                 {                     CompanyId = 1'                     UserId = 1'                     ConcurrentFeautureItemsSessions = new Dictionary<ulong' IDictionary<ulong' ConcurrentFeatureItemInfo>>                     {                         [4] = new Dictionary<ulong' ConcurrentFeatureItemInfo> { [2] = new ConcurrentFeatureItemInfo() }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,IIndirectIsNotFreedAutomatically,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] { 1' 2' 3 }'                         Edges = new Dictionary<ulong' ulong> { [10] = 20 }                     })                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,IIndirectIsNotFreedAutomatically,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] { 1' 2' 3 }'                         Edges = new Dictionary<ulong' ulong> { [10] = 20 }                     })                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,IIndirectIsNotFreedAutomatically,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] { 1' 2' 3 }'                         Edges = new Dictionary<ulong' ulong> { [10] = 20 }                     })                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,IIndirectIsNotFreedAutomatically,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] { 1' 2' 3 }'                         Edges = new Dictionary<ulong' ulong> { [10] = 20 }                     })                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,IIndirectIsNotFreedAutomatically,The following statement contains a magic number: Assert.Equal(file.Data.Value.Data' new byte[] { 1' 2' 3 });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,IIndirectIsNotFreedAutomatically,The following statement contains a magic number: Assert.Equal(file.Data.Value.Data' new byte[] { 1' 2' 3 });
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,PreferInlineIsTransferedThroughDBObject,The following statement contains a magic number: var setting = new Setting                 {                     Id = 1'                     License = new License                     {                         CompanyId = 1'                         ConcurrentFeautureItemsSessions = new Dictionary<ulong' IDictionary<ulong' ConcurrentFeatureItemInfo>>                         {                             [4] = new Dictionary<ulong' ConcurrentFeatureItemInfo> { [2] = new ConcurrentFeatureItemInfo() }                         }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,PreferInlineIsTransferedThroughDBObject,The following statement contains a magic number: var setting = new Setting                 {                     Id = 1'                     License = new License                     {                         CompanyId = 1'                         ConcurrentFeautureItemsSessions = new Dictionary<ulong' IDictionary<ulong' ConcurrentFeatureItemInfo>>                         {                             [4] = new Dictionary<ulong' ConcurrentFeatureItemInfo> { [2] = new ConcurrentFeatureItemInfo() }                         }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: var graph = new Graph                 {                     Id = 1'                     Nodes = new NodesA { A = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' F = "f" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: var graph = new Graph                 {                     Id = 1'                     Nodes = new NodesA { A = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' F = "f" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: var graph = new Graph                 {                     Id = 1'                     Nodes = new NodesA { A = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' F = "f" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: graph = new Graph                 {                     Id = 2'                     Nodes = new NodesB { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: graph = new Graph                 {                     Id = 2'                     Nodes = new NodesB { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: graph = new Graph                 {                     Id = 2'                     Nodes = new NodesB { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: graph = new Graph                 {                     Id = 2'                     Nodes = new NodesB { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: Assert.True(table.FindById(2).Nodes is NodesB);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjects,The following statement contains a magic number: table.RemoveById(2);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksTogetherWithRemoveByPrefix,The following statement contains a magic number: var license = new License                 {                     CompanyId = 1'                     UserId = 1'                     ConcurrentFeautureItemsSessions = new Dictionary<ulong' IDictionary<ulong' ConcurrentFeatureItemInfo>>                     {                         [4] = new Dictionary<ulong' ConcurrentFeatureItemInfo> { [2] = new ConcurrentFeatureItemInfo() }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksTogetherWithRemoveByPrefix,The following statement contains a magic number: var license = new License                 {                     CompanyId = 1'                     UserId = 1'                     ConcurrentFeautureItemsSessions = new Dictionary<ulong' IDictionary<ulong' ConcurrentFeatureItemInfo>>                     {                         [4] = new Dictionary<ulong' ConcurrentFeatureItemInfo> { [2] = new ConcurrentFeatureItemInfo() }                     }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: var graph = new NodesGraph                 {                     Id = 1'                     Nodes = new NodesOne { A = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' F = "f" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: var graph = new NodesGraph                 {                     Id = 1'                     Nodes = new NodesOne { A = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' F = "f" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: var graph = new NodesGraph                 {                     Id = 1'                     Nodes = new NodesOne { A = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' F = "f" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: graph = new NodesGraph                 {                     Id = 2'                     Nodes = new NodesTwo { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: graph = new NodesGraph                 {                     Id = 2'                     Nodes = new NodesTwo { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: graph = new NodesGraph                 {                     Id = 2'                     Nodes = new NodesTwo { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: graph = new NodesGraph                 {                     Id = 2'                     Nodes = new NodesTwo { B = new Dictionary<ulong' ulong> { [0] = 1' [1] = 2' [2] = 3 }' E = "e" }                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: graph = new NodesGraph                 {                     Id = 3'                     Nodes = new NodesBase()                 };
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: Assert.True(table.FindById(2).Nodes is NodesTwo);
Magic Number,BTDBTest,ObjectDbTableFreeContentTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableFreeContentTest.cs,FreeWorksAlsoForDifferentSubObjectsWithoutIface,The following statement contains a magic number: table.RemoveById(2);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,FastRemoveCanBeUsed,The following statement contains a magic number: table.Insert(new Resource                     {                         CompanyId = 2'                         Location = new RangeLocation()'                         ResourceId = i.ToString()                     });
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,FastRemoveCanBeUsed,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,FastRemoveCanBeUsed,The following statement contains a magic number: Assert.Equal(100' table.RemoveById(1));
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,FastRemoveCanBeUsed,The following statement contains a magic number: Assert.Equal(100' table.Count);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCannotBeRemovedAtOnce,The following statement contains a magic number: table.Insert(new DataDifferentPrefix { A = i % 2' B = i });
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCannotBeRemovedAtOnce,The following statement contains a magic number: i < 10
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCannotBeRemovedAtOnce,The following statement contains a magic number: Assert.Equal(5' table.RemoveById(0));
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCannotBeRemovedAtOnce,The following statement contains a magic number: AssertCounts(tr' eraseAll: 1' eraseCurrent: 5);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCannotBeRemovedAtOnce,The following statement contains a magic number: Assert.Equal(5' table.Count);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: table.Insert(new DataSamePrefix { A = i % 2' B = i % 2' C = i });
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: table.Insert(new DataSamePrefix { A = i % 2' B = i % 2' C = i });
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: i < 10
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: Assert.Equal(5' table.RemoveById(0));
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: AssertCounts(tr' eraseAll: 2' eraseCurrent: 0);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: Assert.Equal(5' table.Count);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: Assert.Equal(5' table.RemoveById(0' 0));
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: AssertCounts(tr' eraseAll: 1' eraseCurrent: 5);
Magic Number,BTDBTest,ObjectDbTableRemoveOptimalizeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableRemoveOptimalizeTest.cs,SecIndexesCanBeRemovedAtOnce,The following statement contains a magic number: Assert.Equal(5' table.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CannotInsertSameKeyTwice,The following statement contains a magic number: personSimpleTable.Insert(new PersonSimple {TenantId = 2' Email = "nospam@nospam.cz"' Name = "Boris"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanInsertAndEnumerate,The following statement contains a magic number: var personLubos = new PersonSimple {TenantId = 2' Email = "nospam@nospam.cz"' Name = "Lubos"};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UpdateWorks,The following statement contains a magic number: var person = new PersonSimple             {                 TenantId = 1'                 Email = "nospam@nospam.cz"'                 Name = "Boris"'                 Ratings = new Dictionary<string' IList<byte>> {{"Czech"' new List<byte> {1' 2' 1}}}'             };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UpdateWorks,The following statement contains a magic number: person.Ratings.Add("History"' new List<byte> {3});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UpdateWorks,The following statement contains a magic number: Assert.Equal(new List<byte> {3}' p.Ratings["History"]);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ShallowUpdateWorks,The following statement contains a magic number: var person = new PersonSimple             {                 TenantId = 1'                 Email = "nospam@nospam.cz"'                 Name = "Boris"'                 Ratings = new Dictionary<string' IList<byte>> {{"Czech"' new List<byte> {1' 2' 1}}}'             };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ShallowUpdateWorks,The following statement contains a magic number: person.Ratings.Add("History"' new List<byte> {3});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ShallowUpdateWorks,The following statement contains a magic number: Assert.Equal(new List<byte> {3}' p.Ratings["History"]);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,BasicRelationWithTenantApartWorks,The following statement contains a magic number: personSimpleTable.TenantId = 2;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,BasicRelationWithTenantApartWorks,The following statement contains a magic number: personSimpleTable.TenantId = 2;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: var firstPerson = new Person {TenantId = 42' Id = 2' Name = "Lubos"' Age = 28};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: var firstPerson = new Person {TenantId = 42' Id = 2' Name = "Lubos"' Age = 28};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: var firstPerson = new Person {TenantId = 42' Id = 2' Name = "Lubos"' Age = 28};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(42ul' firstPerson.TenantId);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 4' Name = "Vladimir"' Age = 28});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 4' Name = "Vladimir"' Age = 28});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 3' Name = "Boris"' Age = 29});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 3' Name = "Boris"' Age = 29});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.TenantId = 2;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 2' Name = "Lubos"' Age = 128});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 2' Name = "Lubos"' Age = 128});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 3' Name = "Boris"' Age = 129});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: personTable.Insert(new Person {Id = 3' Name = "Boris"' Age = 129});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(2u' orderedEnumerator.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(2u' personTable.CountByAge(new AdvancedEnumeratorParam<uint>()));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(128u' age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(129u' age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(28u' GetNext(en).Age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(29u' GetNext(en).Age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(28u' GetNext(en).Age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(128u' GetNext(en).Age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(129u' GetNext(en).Age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(2ul' id);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(3ul' id);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(2' personTable.CountById(new AdvancedEnumeratorParam<ulong>()));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.False(personTable.AnyById(new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending'10'KeyProposition.Included'0'KeyProposition.Ignored)));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: var ena = personTable.ListByAge(new AdvancedEnumeratorParam<uint>(EnumerationOrder.Ascending' 29'                 KeyProposition.Included'                 29' KeyProposition.Included));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: var ena = personTable.ListByAge(new AdvancedEnumeratorParam<uint>(EnumerationOrder.Ascending' 29'                 KeyProposition.Included'                 29' KeyProposition.Included));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(29u' age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(2' personTable.CountByAge(28));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(2' personTable.CountByAge(28));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(1' personTable.CountByAge(29));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.True(personTable.AnyByAge(28));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.True(personTable.AnyByAge(29));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.False(personTable.AnyByAge(18));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(new[] {2ul' 4ul}' personTable.ListByAge(28).Select(p => p.Id));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(new[] {2ul' 4ul}' personTable.ListByAge(28).Select(p => p.Id));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AdvancedIteratingWorks,The following statement contains a magic number: Assert.Equal(new[] {2ul' 4ul}' personTable.ListByAge(28).Select(p => p.Id));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: personTable.Insert(new Person {TenantId = 1' Id = 2' Name = "Lubos"' Age = 28});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: personTable.Insert(new Person {TenantId = 1' Id = 2' Name = "Lubos"' Age = 28});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: personTable.Insert(new Person {TenantId = 1' Id = 3' Name = "Boris"' Age = 28});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: personTable.Insert(new Person {TenantId = 1' Id = 3' Name = "Boris"' Age = 28});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: var ex = Assert.Throws<BTDBException>(() => personTable.FindByAgeOrDefault(1' 28));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: Assert.Equal(28u' p.Age);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: var enumerator = personTable.FindByAge(1' 28);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SimpleFindBySecondaryKeyWorks,The following statement contains a magic number: Assert.True(personTable.RemoveById(1' 2));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: jobTable.Insert(new Job                 {                     Id = 11'                     Name = "Code"'                     Priority = 1'                     Lookup = new Dictionary<int' int> {{1' 2}}                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: jobTable.Insert(new Job                 {                     Id = 11'                     Name = "Code"'                     Priority = 1'                     Lookup = new Dictionary<int' int> {{1' 2}}                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: jobTable.Insert(new Job {Id = 22' Name = "Sleep"' Priority = 2});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: jobTable.Insert(new Job {Id = 22' Name = "Sleep"' Priority = 2});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: jobTable.Insert(new Job {Id = 33' Name = "Bicycle"' Priority = 1});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: var en = jobTable.ListByPrioritizedName(2'                     new AdvancedEnumeratorParam<string>(EnumerationOrder.Ascending));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: Assert.Equal(11u' job.Id);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWorksWithoutIncludedPrimaryWorks,The following statement contains a magic number: Assert.True(jobTable.RemoveById(11));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanAddButCannotGetDuplicateSecondaryKeys,The following statement contains a magic number: jobTable.Insert(new Job {Id = 11' Name = "Code"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanAddButCannotGetDuplicateSecondaryKeys,The following statement contains a magic number: jobTable.Insert(new Job {Id = 12' Name = "Code"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UpdateSecondaryIndexWorks,The following statement contains a magic number: var job = new Job {Id = 11' Name = "Code"};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UpdateSecondaryIndexWorks,The following statement contains a magic number: var job = new Job {Id = 11' Name = "HardCore Code"};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UpdateSecondaryIndexWorks,The following statement contains a magic number: Assert.Equal(11u' j.Id);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanIterateBySecondaryKey,The following statement contains a magic number: jobTable.Insert(new Job {Id = 11' Name = "Code"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanIterateBySecondaryKey,The following statement contains a magic number: jobTable.Insert(new Job {Id = 22' Name = "Sleep"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanIterateBySecondaryKey,The following statement contains a magic number: jobTable.Insert(new Job {Id = 33' Name = "Bicycle"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanHaveMoreSecondaryIndexesThanKeys,The following statement contains a magic number: creator(tr).Insert(new Lic {CompanyId = 1' UserId = 2' Status = "ok"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: rooms.Insert(new Room {CompanyId = 1' Id = 10' Name = "First 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: rooms.Insert(new Room {CompanyId = 1' Id = 20' Name = "Second 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: rooms.Insert(new Room {CompanyId = 2' Id = 30' Name = "First 2"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: rooms.Insert(new Room {CompanyId = 2' Id = 30' Name = "First 2"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: Assert.Equal(3u' oen.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: Assert.Equal(2ul' key);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: oen = rooms.ListById(2ul' new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyCanBeDefinedOnSameFieldAsPrimaryKey,The following statement contains a magic number: Assert.Equal(30ul' key);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyOnBothPrimaryKeyAndNormalFieldWorks,The following statement contains a magic number: docTable.Insert(new Document {CompanyId = 1' Id = 2' DocumentType = 3' CreatedDate = DateTime.UtcNow});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyOnBothPrimaryKeyAndNormalFieldWorks,The following statement contains a magic number: docTable.Insert(new Document {CompanyId = 1' Id = 2' DocumentType = 3' CreatedDate = DateTime.UtcNow});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyOnBothPrimaryKeyAndNormalFieldWorks,The following statement contains a magic number: Assert.Equal(2u' en.Current.Id);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UserNoticeWorks,The following statement contains a magic number: table.Insert(new UserNotice {UserId = 1' NoticeId = 2});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UserNoticeWorks,The following statement contains a magic number: var en = table.ListByNoticeId(new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending'                     1' KeyProposition.Excluded' 3' KeyProposition.Excluded));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,UserNoticeWorks,The following statement contains a magic number: Assert.Equal(2u' en.Current.NoticeId);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,IIndirectIsProperlyLoadedAfterDbReopen,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] {1' 2' 3}'                         Edges = new Dictionary<ulong' ulong> {[10] = 20}                     })                 };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,IIndirectIsProperlyLoadedAfterDbReopen,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] {1' 2' 3}'                         Edges = new Dictionary<ulong' ulong> {[10] = 20}                     })                 };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,IIndirectIsProperlyLoadedAfterDbReopen,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] {1' 2' 3}'                         Edges = new Dictionary<ulong' ulong> {[10] = 20}                     })                 };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,IIndirectIsProperlyLoadedAfterDbReopen,The following statement contains a magic number: var file = new File                 {                     Id = 1'                     Data = new DBIndirect<RawData>(new RawData                     {                         Data = new byte[] {1' 2' 3}'                         Edges = new Dictionary<ulong' ulong> {[10] = 20}                     })                 };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,IIndirectIsProperlyLoadedAfterDbReopen,The following statement contains a magic number: Assert.Equal(file.Data.Value.Data' new byte[] {1' 2' 3});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,IIndirectIsProperlyLoadedAfterDbReopen,The following statement contains a magic number: Assert.Equal(file.Data.Value.Data' new byte[] {1' 2' 3});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,PartialRemove,The following statement contains a magic number: var itemCount = 100;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,PartialRemove,The following statement contains a magic number: var cnt = files.RemoveByIdPartial(50);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,PartialRemove,The following statement contains a magic number: Assert.Equal(50' files.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,PartialRemove,The following statement contains a magic number: Assert.Equal(50' cnt);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,PartialRemove,The following statement contains a magic number: cnt = files.RemoveByIdPartial(100);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,PartialRemove,The following statement contains a magic number: Assert.Equal(50' cnt);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: rooms.Insert(new Room {Id = 10' Name = "First 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: rooms.Insert(new Room {Id = 20' Name = "Second 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: ModifyDuringEnumerate(creator' table => table.Insert(new Room {Id = 30' Name = "third"})' true);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: ModifyDuringEnumerate(creator' table => table.RemoveById(20)' true);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: ModifyDuringEnumerate(creator' table => table.Update(new Room {Id = 10' Name = "First"})' false);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: ModifyDuringEnumerate(creator' table => table.Upsert(new Room {Id = 40' Name = "insert new value"})' true);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CheckModificationDuringEnumerate,The following statement contains a magic number: ModifyDuringEnumerate(creator' table => table.Upsert(new Room {Id = 10' Name = "update existing"})' false);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ModificationCheckIsNotConfusedByOtherTransaction,The following statement contains a magic number: rooms.Insert(new Room {Id = 10' Name = "First 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ModificationCheckIsNotConfusedByOtherTransaction,The following statement contains a magic number: rooms.Insert(new Room {Id = 20' Name = "Second 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ModificationCheckIsNotConfusedByOtherTransaction,The following statement contains a magic number: rooms.Insert(new Room {Id = 30' Name = "First 1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ModificationCheckIsNotConfusedByOtherTransaction,The following statement contains a magic number: roTable.ListById(new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending' 0' KeyProposition.Excluded'                 100' KeyProposition.Excluded));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ModificationCheckIsNotConfusedByOtherTransaction,The following statement contains a magic number: Assert.Equal(20ul' en.Current.Id);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: personTable.Insert(new Person {Id = 2' Name = "Cecil"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: personTable.Insert(new Person {Id = 3' Name = "Boris"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: personTable.Insert(new Person {Id = 4' Name = "Alena"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: personTable.Insert(new Person {Id = 5' Name = "Bob"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: personTable.Insert(new Person {Id = 6' Name = "B"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: personTable.Insert(new Person {Id = 7' Name = "C"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,StringPrefixExample,The following statement contains a magic number: Assert.Equal(3u' orderedEnumerator.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ListByIdWithApartField,The following statement contains a magic number: Assert.Equal(2u' enumerator.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithApartField,The following statement contains a magic number: personTable.TenantId = 13;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithApartField,The following statement contains a magic number: personTable.TenantId = 2;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithApartField,The following statement contains a magic number: personTable.TenantId = 13;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithoutApartField,The following statement contains a magic number: personTable.Insert(new PersonSimple {TenantId = 13' Email = "a@d.cz"' Name = "A"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithoutApartField,The following statement contains a magic number: personTable.Insert(new PersonSimple {TenantId = 13' Email = "b@d.cz"' Name = "B"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithoutApartField,The following statement contains a magic number: var enumerator = personTable.FindById(13);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithoutApartField,The following statement contains a magic number: enumerator = personTable.FindById(2);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithoutApartField,The following statement contains a magic number: Assert.True(personTable.RemoveById(13' "a@d.cz"));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,WorkWithPKPrefixWithoutApartField,The following statement contains a magic number: var removedCount = personTable.RemoveById(13);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RelationAssembliesCanBeGarbageCollected,The following statement contains a magic number: var createCount = 3;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AnotherCombinationOfListAndPkAndSkWorks,The following statement contains a magic number: var currentDay = new DateTime(2017' 2' 9' 1' 1' 1' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AnotherCombinationOfListAndPkAndSkWorks,The following statement contains a magic number: var currentDay = new DateTime(2017' 2' 9' 1' 1' 1' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AnotherCombinationOfListAndPkAndSkWorks,The following statement contains a magic number: var currentDay = new DateTime(2017' 2' 9' 1' 1' 1' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AnotherCombinationOfListAndPkAndSkWorks,The following statement contains a magic number: table.Insert(new ProductionTrackingDaily                     {CompanyId = 5' ProductionDate = currentDay' ProductionsCount = 1});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AnotherCombinationOfListAndPkAndSkWorks,The following statement contains a magic number: var en = table.ListByProductionDateWithCompanyId(5' dateParam);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AnotherCombinationOfListAndPkAndSkWorks,The following statement contains a magic number: en = table.ListByProductionDateWithCompanyId(5'                     new AdvancedEnumeratorParam<DateTime>(EnumerationOrder.Ascending' DateTime.MinValue'                         KeyProposition.Included' DateTime.MaxValue' KeyProposition.Excluded));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ContainMethodWorks,The following statement contains a magic number: var currentDay = new DateTime(2017' 2' 9' 1' 1' 1' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ContainMethodWorks,The following statement contains a magic number: var currentDay = new DateTime(2017' 2' 9' 1' 1' 1' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ContainMethodWorks,The following statement contains a magic number: var currentDay = new DateTime(2017' 2' 9' 1' 1' 1' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ContainMethodWorks,The following statement contains a magic number: Assert.False(table.Contains(5' currentDay));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ContainMethodWorks,The following statement contains a magic number: table.Insert(new ProductionTrackingDaily                     {CompanyId = 5' ProductionDate = currentDay' ProductionsCount = 1});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ContainMethodWorks,The following statement contains a magic number: Assert.True(table.Contains(5' currentDay));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWithApartFieldsWorks,The following statement contains a magic number: table.ApplicationId = 5;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,SecondaryKeyWithApartFieldsWorks,The following statement contains a magic number: table.CompanyId = 7;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AccidentalAccessToUninitializedCurrentDoesNotMoveIterator,The following statement contains a magic number: table.ApplicationId = 5;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AccidentalAccessToUninitializedCurrentDoesNotMoveIterator,The following statement contains a magic number: table.CompanyId = 7;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,AccidentalAccessToUninitializedCurrentDoesNotMoveIterator,The following statement contains a magic number: Assert.Equal(2' counter);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ProgrammerIsWarnedWhenWorkingWithDerivedType,The following statement contains a magic number: Assert.Equal(2' failCountingListener.FailCount);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ProgrammerIsWarnedWhenWorkingWithDerivedType,The following statement contains a magic number: Assert.Equal(3' failCountingListener.FailCount);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RefuseOutOfOrderPrefixSearch,The following statement contains a magic number: table.Insert(new Application {Name = "A1"' ApplicationId = 10});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RefuseOutOfOrderPrefixSearch,The following statement contains a magic number: table.CompanyId = 2;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RefuseOutOfOrderPrefixSearch,The following statement contains a magic number: table.Insert(new Application {Name = "A2"' ApplicationId = 10});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RefuseOutOfOrderPrefixSearch,The following statement contains a magic number: var en = table.FindById(10);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RefuseOutOfOrderPrefixSearch,The following statement contains a magic number: en = table.FindById(10);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveFromRelationWhileEnumerating_,The following statement contains a magic number: var exc = Assert.Throws<InvalidOperationException>(() =>             {                 using (var tr = _db.StartTransaction())                 {                     var creator = tr.InitRelation<ISimpleRelation>("ISimpleRelation");                     var personSimpleTable = creator(tr);                     for (int i = 0; i < 100; i++)                     {                         var duty = new SimpleObject() {Id = (ulong) i' Name = "HardCore Code" + i % 5};                         personSimpleTable.Insert(duty);                     }                      var enumerator =                         personSimpleTable.ListByName("HardCore Code" + 0' new AdvancedEnumeratorParam<ulong>());                     while (enumerator.MoveNext())                     {                         creator(tr).RemoveById(enumerator.Current.Id);                     }                      tr.Commit();                 }             });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveFromRelationWhileEnumerating_,The following statement contains a magic number: var exc = Assert.Throws<InvalidOperationException>(() =>             {                 using (var tr = _db.StartTransaction())                 {                     var creator = tr.InitRelation<ISimpleRelation>("ISimpleRelation");                     var personSimpleTable = creator(tr);                     for (int i = 0; i < 100; i++)                     {                         var duty = new SimpleObject() {Id = (ulong) i' Name = "HardCore Code" + i % 5};                         personSimpleTable.Insert(duty);                     }                      var enumerator =                         personSimpleTable.ListByName("HardCore Code" + 0' new AdvancedEnumeratorParam<ulong>());                     while (enumerator.MoveNext())                     {                         creator(tr).RemoveById(enumerator.Current.Id);                     }                      tr.Commit();                 }             });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,TransactionProtectionWorksForFindingBySecondaryKey,The following statement contains a magic number: personSimpleTable.Insert(new SimpleObject {Id = 2' Name = "code2"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,TransactionProtectionWorksForFindingBySecondaryKey,The following statement contains a magic number: Assert.Equal(2' cnt);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NotCompleteSecondaryKeyIsRecalculatedDuringInit,The following statement contains a magic number: var duty = new SimpleObject {Id = (ulong) i' Name = "HardCore Code" + i % 5};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NotCompleteSecondaryKeyIsRecalculatedDuringInit,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NotCompleteSecondaryKeyIsRecalculatedDuringInit,The following statement contains a magic number: Assert.Equal(20' cnt);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInPrimaryKeys,The following statement contains a magic number: table.Insert(new WithNullableInKey {Value = 41u});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInPrimaryKeys,The following statement contains a magic number: table.Insert(new WithNullableInKey {Key = 1u' Value = 42u});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInPrimaryKeys,The following statement contains a magic number: Assert.Equal(41u' n.Value.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInPrimaryKeys,The following statement contains a magic number: Assert.Equal(42u' n.Value.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInSecondaryKey,The following statement contains a magic number: table.Insert(new WithNullableInSecondaryKey                 {                     Zip = 50346'                     Value = 42                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInSecondaryKey,The following statement contains a magic number: table.Insert(new WithNullableInSecondaryKey                 {                     Zip = 50346'                     Value = 42                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInSecondaryKey,The following statement contains a magic number: var v = table.FindBySK(50346);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,NullableWorksInSecondaryKey,The following statement contains a magic number: Assert.Equal(42u' v.Value.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: table.Insert(new WithNullables                 {                     Id = 11'                     SByteField = -10'                     ByteField = 10'                     ShortField = -1000'                     UShortField = 1000'                     IntField = -100000'                     UIntField = 100000'                     LongField = -1000000000000'                     ULongField = 1000000000000'                     BoolField = true'                     DoubleField = 12.34'                     FloatField = -12.34f'                     DecimalField = 123456.789m'                     DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)'                     TimeSpanField = new TimeSpan(1' 2' 3' 4)'                     GuidField = new Guid("39aabab2-9971-4113-9998-a30fc7d5606a")'                     EnumField = TestEnum.Item2'                     ByteBufferField = ByteBuffer.NewAsync(new byte[] {0' 1' 2}' 1' 1)                 });
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: var o = table.FindById(11);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(-10' o.SByteField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(10' o.ByteField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(-1000' o.ShortField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(1000' o.UShortField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(-100000' o.IntField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(100000u' o.UIntField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(-1000000000000' o.LongField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(1000000000000u' o.ULongField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.InRange(12.34 - o.DoubleField.Value' -1e-10' 1e10);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.InRange(12.34 - o.DoubleField.Value' -1e-10' 1e10);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.InRange(12.34 - o.DoubleField.Value' -1e-10' 1e10);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.InRange(-12.34 - o.FloatField.Value' -1e-6' 1e6);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.InRange(-12.34 - o.FloatField.Value' -1e-6' 1e6);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.InRange(-12.34 - o.FloatField.Value' -1e-6' 1e6);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(123456.789m' o.DecimalField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new TimeSpan(1' 2' 3' 4)' o.TimeSpanField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new TimeSpan(1' 2' 3' 4)' o.TimeSpanField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,VariousNullableFieldsWorks,The following statement contains a magic number: Assert.Equal(new TimeSpan(1' 2' 3' 4)' o.TimeSpanField.Value);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ApartFieldCanBeRenamed,The following statement contains a magic number: table.CompanyId = 10;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ApartFieldCanBeRenamed,The following statement contains a magic number: table.Insert(new CompanyName {Name = "Q"' Id = 11});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ApartFieldCanBeRenamed,The following statement contains a magic number: Assert.Equal(10u' table.CompanyId);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,ApartFieldCanBeRenamed,The following statement contains a magic number: var cn = table.FindById(11);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.UserId = 10;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.Insert(new InheritedRelation_CompanyItem {Value = 100});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.Insert(new InheritedRelation_CompanyItem {Value = 101});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.UserId = 11;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.Insert(new InheritedRelation_CompanyItem {Value = 102});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.Insert(new InheritedRelation_CompanyItem {Value = 103});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 100}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 10' Value = 101}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: table.UserId = 10;
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: var expected = new[]                     {                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 102}'                         new InheritedRelation_CompanyItem {CompanyId = 1' UserId = 11' Value = 103}'                     };
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,InheritanceSupport,The following statement contains a magic number: Assert.Equal(2' removed);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: var rule1 = new DeliveryRuleV1 {Id = 11' Status = 300};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: var rule1 = new DeliveryRuleV1 {Id = 11' Status = 300};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: var rule2 = new DeliveryRuleV1 {Id = 12' Status = 200' Activities = new[] {new Activity()}};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: var rule2 = new DeliveryRuleV1 {Id = 12' Status = 200' Activities = new[] {new Activity()}};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: ruleV2Table.RemoveById(11);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: var j = ruleV2Table.FindById(12);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanSkipNativeObjectField,The following statement contains a magic number: Assert.Equal(200' j.Status);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,DeserializeWellDuringListing,The following statement contains a magic number: var app = new ApplicationV3                     {CompanyId = 1' ApplicationId = 100' CreatedUserId = 100' Description = "info"};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,DeserializeWellDuringListing,The following statement contains a magic number: var app = new ApplicationV3                     {CompanyId = 1' ApplicationId = 100' CreatedUserId = 100' Description = "info"};
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: var date = new DateTime(2019' 1' 24' 1' 0' 0' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: var date = new DateTime(2019' 1' 24' 1' 0' 0' DateTimeKind.Utc);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: items.Insert(new ItemTask {CompanyId = 2' Expiration = date' Name = "1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: items.Insert(new ItemTask {CompanyId = 2' Expiration = date + TimeSpan.FromDays(1)' Name = "3"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: items.Insert(new ItemTask {CompanyId = 3' Expiration = date' Name = "1"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: items.Insert(new ItemTask {CompanyId = 3' Expiration = date + TimeSpan.FromDays(1)' Name = "4"});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: var cnt = items.RemoveById(new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending'                     1' KeyProposition.Included'                     2' KeyProposition.Excluded));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: Assert.Equal(2' cnt);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: Assert.Equal(4' items.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: var cnt = items.RemoveById(new AdvancedEnumeratorParam<ulong>(EnumerationOrder.Ascending'                     1' KeyProposition.Included'                     2' KeyProposition.Included));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: Assert.Equal(4' cnt);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,RemoveByIdWithAdvancedEnumerator,The following statement contains a magic number: Assert.Equal(2' items.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanEasilyCopyComplexObjectBetweenRelationsOfSameType,The following statement contains a magic number: todo.Insert(new SimpleJob                     {Id = 1' Properties = new Dictionary<int' string> {[1] = "one"' [2] = "two"}});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanEasilyCopyComplexObjectBetweenRelationsOfSameType,The following statement contains a magic number: Assert.Equal(2' job.Properties.Count);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanEasilyCopyComplexObjectBetweenRelationsOfSameType,The following statement contains a magic number: Assert.Equal("two"' job.Properties[2]);
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 1' C = 2});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 2' C = 1});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 2' C = 2});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 2' C = 2});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 2' C = 3});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 2' C = 3});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: table.Insert(new ThreeInts {A = 1' B = 3' C = 1});
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(6' table.CountById());
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(6' table.CountById(1));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(4'                 table.CountById(1'                     new AdvancedEnumeratorParam<int>(EnumerationOrder.Ascending' 2' KeyProposition.Included' 3'                         KeyProposition.Included)));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(4'                 table.CountById(1'                     new AdvancedEnumeratorParam<int>(EnumerationOrder.Ascending' 2' KeyProposition.Included' 3'                         KeyProposition.Included)));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(4'                 table.CountById(1'                     new AdvancedEnumeratorParam<int>(EnumerationOrder.Ascending' 2' KeyProposition.Included' 3'                         KeyProposition.Included)));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(3' table.CountById(1' 2));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(3' table.CountById(1' 2));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(1' table.CountById(1' 2' 3));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(1' table.CountById(1' 2' 3));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(new[] {1' 2' 3}' table.ListById(1' 2).Select(o => o.C));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(new[] {1' 2' 3}' table.ListById(1' 2).Select(o => o.C));
Magic Number,BTDBTest,ObjectDbTableTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,CanUseCountByIdAndSimpleListById,The following statement contains a magic number: Assert.Equal(new[] {1' 2' 3}' table.ListById(1' 2).Select(o => o.C));
Magic Number,BTDBTest,Person,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,GetHashCode,The following statement contains a magic number: var hashCode = -1360180430;
Magic Number,BTDBTest,Person,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(Name);
Magic Number,BTDBTest,Person,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,GetHashCode,The following statement contains a magic number: hashCode = hashCode * -1521134295 + Age.GetHashCode();
Magic Number,BTDBTest,InheritedRelation_CompanyItem,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ UserId.GetHashCode();
Magic Number,BTDBTest,InheritedRelation_CompanyItem,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Value;
Magic Number,BTDBTest,DeliveryRuleV2,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,DeliveryRuleV2,The following statement contains a magic number: Status = 100;
Magic Number,BTDBTest,DeliveryRuleV1,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableTest.cs,DeliveryRuleV1,The following statement contains a magic number: Status = 100;
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ChangeOfPrimaryKeyIsNotSupported,The following statement contains a magic number: var job = new JobV1 { Id = 11' Name = "Code" };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesAreAutomaticallyGenerated,The following statement contains a magic number: var job = new JobV1 { Id = 11' Name = "Code" };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesAreAutomaticallyGenerated,The following statement contains a magic number: var job = new JobV2 { Id = 21' Name = "Build"' Cost = 42 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesAreAutomaticallyGenerated,The following statement contains a magic number: var job = new JobV2 { Id = 21' Name = "Build"' Cost = 42 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesAreAutomaticallyGenerated,The following statement contains a magic number: j = jobTable.FindByCostOrDefault(21' 42);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesAreAutomaticallyGenerated,The following statement contains a magic number: j = jobTable.FindByCostOrDefault(21' 42);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesAreAutomaticallyGenerated,The following statement contains a magic number: Assert.Equal(42u' en.Current.Cost);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeRemoved,The following statement contains a magic number: carTable.CompanyId = 10;
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeRemoved,The following statement contains a magic number: var car = new Car { Id = 11' Name = "Ferrari" };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeRemoved,The following statement contains a magic number: Assert.Equal("Ferrari"' carTable.FindById(10' 11).Name);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeRemoved,The following statement contains a magic number: Assert.Equal("Ferrari"' carTable.FindById(10' 11).Name);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeAdded,The following statement contains a magic number: var car = new Car { CompanyId = 10' Id = 11' Name = "Ferrari" };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeAdded,The following statement contains a magic number: var car = new Car { CompanyId = 10' Id = 11' Name = "Ferrari" };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeAdded,The following statement contains a magic number: carTable.CompanyId = 10;
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ApartFieldCanBeAdded,The following statement contains a magic number: Assert.Equal("Ferrari"' carTable.FindById(11).Name);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,UpgradePrimaryKeyWithEnumWorks,The following statement contains a magic number: Assert.Equal(3' table.Count);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ModifiedIndexesAreRecalculated,The following statement contains a magic number: var job = new JobV2 { Id = 11' Name = "Code"' Cost = 1000 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ModifiedIndexesAreRecalculated,The following statement contains a magic number: var job = new JobV2 { Id = 11' Name = "Code"' Cost = 1000 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,ModifiedIndexesAreRecalculated,The following statement contains a magic number: var j = jobTable.FindByNameOrDefault(1000' "Code");
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,AddedFieldIsInsertedFromDefaultObject,The following statement contains a magic number: var job = new JobV2 { Id = 11' Name = "Code" };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,AddedFieldIsInsertedFromDefaultObject,The following statement contains a magic number: jobTable.RemoveById(11);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: var job1 = new JobV3 { Id = 11' Status = 300 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: var job1 = new JobV3 { Id = 11' Status = 300 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: var job2 = new JobV3 { Id = 12' Status = 200 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: var job2 = new JobV3 { Id = 12' Status = 200 };
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: jobTable.RemoveById(11);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: Assert.Null(jobTable.FindByExpiredStatusOrDefault(false' 300));
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: var item = jobTable.FindByExpiredStatusOrDefault(false' 200);
Magic Number,BTDBTest,ObjectDbTableUpgradeTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,NewIndexesOnNewFieldAreDeletedWhenItemWasDeleted,The following statement contains a magic number: Assert.Equal(12ul' item.Id);
Magic Number,BTDBTest,JobV3,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,JobV3,The following statement contains a magic number: Status = 100;
Magic Number,BTDBTest,JobV31,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDbTableUpgradeTest.cs,JobV31,The following statement contains a magic number: Status = 100;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,SupportsCommitUlong,The following statement contains a magic number: tr.SetCommitUlong(1234567);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,SupportsCommitUlong,The following statement contains a magic number: Assert.Equal(1234567ul' tr.GetCommitUlong());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,SupportsCommitUlong,The following statement contains a magic number: Assert.Equal(1234567ul' tr.GetCommitUlong());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InsertPerson,The following statement contains a magic number: var p = new Person { Name = "Bobris"' Age = 35 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InsertPerson,The following statement contains a magic number: Assert.Equal(35u' p.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InsertPersonAndEnumerateInNextTransaction,The following statement contains a magic number: tr.Store(new Person { Name = "Bobris"' Age = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InsertPersonAndEnumerateInNextTransaction,The following statement contains a magic number: Assert.Equal(35u' p.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InsertPersonAndEnumerateAfterReopen,The following statement contains a magic number: tr.Store(new Person { Name = "Bobris"' Age = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InsertPersonAndEnumerateAfterReopen,The following statement contains a magic number: Assert.Equal(35u' p.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ModifyPerson,The following statement contains a magic number: tr.Store(new Person { Name = "Bobris"' Age = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ModifyPerson,The following statement contains a magic number: Assert.Equal(36u' p.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,PersonUpgrade,The following statement contains a magic number: tr.Store(new Person { Name = "Bobris"' Age = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,PersonUpgrade,The following statement contains a magic number: Assert.Equal(35u' p.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,PersonDegrade,The following statement contains a magic number: tr.Store(new PersonNew { Name = "Bobris"' Age = 35' Comment = "Will be lost" });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,PersonDegrade,The following statement contains a magic number: Assert.Equal(35u' p.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ALotsOfPeople,The following statement contains a magic number: i < 1000
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ALotsOfPeople,The following statement contains a magic number: uint i = 1000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteObject,The following statement contains a magic number: var p = new Person { Name = "Bobris"' Age = 35 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteObject,The following statement contains a magic number: p = new Person { Name = "DeadMan"' Age = 105 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteObject,The following statement contains a magic number: Assert.Equal(2' tr.Enumerate<Person>().Count());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OIdsAreInOrder,The following statement contains a magic number: Assert.Equal(firstOid + 2' tr.Store(new Person()));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OIdsAreInOrder,The following statement contains a magic number: Assert.Equal(firstOid + 3' tr.Store(new Person()));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,EnumReturnsOidsInOrderAndNewObjIsSkipped,The following statement contains a magic number: Assert.Equal(2' i);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,GetByOid,The following statement contains a magic number: p1.Age = 35;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,GetByOid,The following statement contains a magic number: tr.Store(new Person { Name = "DeadMan"' Age = 105 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.SByteField = -10;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ByteField = 10;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ShortField = -1000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.UShortField = 1000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.IntField = -100000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.UIntField = 100000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.LongField = -1000000000000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ULongField = 1000000000000;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DoubleField = 12.34;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.FloatField = -12.34f;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DecimalField = 123456.789m;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.TimeSpanField = new TimeSpan(1' 2' 3' 4);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.TimeSpanField = new TimeSpan(1' 2' 3' 4);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.TimeSpanField = new TimeSpan(1' 2' 3' 4);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ByteArrayField = new byte[] { 0' 1' 2 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ByteBufferField = ByteBuffer.NewAsync(new byte[] { 0' 1' 2 }' 1' 1);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.VersionField = new Version(1'2'3'4);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.VersionField = new Version(1'2'3'4);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.VersionField = new Version(1'2'3'4);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(-10' o.SByteField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(10' o.ByteField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(-1000' o.ShortField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(1000' o.UShortField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(-100000' o.IntField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(100000u' o.UIntField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(-1000000000000' o.LongField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(1000000000000u' o.ULongField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.InRange(12.34 - o.DoubleField' -1e-10' 1e10);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.InRange(12.34 - o.DoubleField' -1e-10' 1e10);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.InRange(12.34 - o.DoubleField' -1e-10' 1e10);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.InRange(-12.34 - o.FloatField' -1e-6' 1e6);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.InRange(-12.34 - o.FloatField' -1e-6' 1e6);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.InRange(-12.34 - o.FloatField' -1e-6' 1e6);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(123456.789m' o.DecimalField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local)' o.DateTimeField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new TimeSpan(1' 2' 3' 4)' o.TimeSpanField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new TimeSpan(1' 2' 3' 4)' o.TimeSpanField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new TimeSpan(1' 2' 3' 4)' o.TimeSpanField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new byte[] { 0' 1' 2 }' o.ByteArrayField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new Version(1'2'3'4)' o.VersionField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new Version(1'2'3'4)' o.VersionField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AssertContent,The following statement contains a magic number: Assert.Equal(new Version(1'2'3'4)' o.VersionField);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfDbObjectsSimple,The following statement contains a magic number: Assert.Equal(2' root.Persons.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.ByteList = new List<byte> { 0' 255 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.ByteBufferList = new List<ByteBuffer> { ByteBuffer.NewAsync(new byte[] { 1' 2 }) };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.NullableIntList = new List<int?> { 1' 2 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: Assert.Equal(new List<int> { 5' 10' 2000 }' root.IntList);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: Assert.Equal(new List<int> { 5' 10' 2000 }' root.IntList);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: Assert.Equal(new List<int> { 5' 10' 2000 }' root.IntList);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: Assert.Equal(new List<byte> { 0' 255 }' root.ByteList);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: Assert.Equal(new byte[] { 1' 2 }' root.ByteBufferList[0].ToByteArray());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValues,The following statement contains a magic number: Assert.Equal(new List<int?> { 1' 2 }' root.NullableIntList);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValuesSkip,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValuesSkip,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValuesSkip,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValuesSkip,The following statement contains a magic number: root.ByteBufferList = new List<ByteBuffer> { ByteBuffer.NewAsync(new byte[] { 1' 2 }) };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ListOfSimpleValuesSkip,The following statement contains a magic number: root.NullableIntList = new List<int?> { 1' 2 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineDictionariesOfSimpleValues,The following statement contains a magic number: root.NullableInt2Bool = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineDictionariesOfSimpleValues,The following statement contains a magic number: Assert.Equal(2' root.Int2String.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineDictionariesOfSimpleValues,The following statement contains a magic number: Assert.Equal(2' root.Int2String.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineDictionariesOfSimpleValues,The following statement contains a magic number: Assert.False(root.NullableInt2Bool[2].HasValue);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineDictionariesOfSimpleValuesSkip,The following statement contains a magic number: root.NullableInt2Bool = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 1' 2' 3 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 1' 2' 3 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: root.NullableIntList = new List<int?> { 4' new int?() };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: Assert.Equal(3' root.IntList.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: Assert.Equal(2' root.IntList[1]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: Assert.Equal(3' root.IntList[2]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: Assert.Equal(3' root.IntList[2]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: Assert.Equal(2' root.NullableIntList.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValues,The following statement contains a magic number: Assert.Equal(4' root.NullableIntList[0]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InlineListsOfSimpleValuesSkip,The following statement contains a magic number: root.IntList = new List<int> { 1' 2 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfSimpleValues,The following statement contains a magic number: root.NullableInt2Bool = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfSimpleValues,The following statement contains a magic number: Assert.Equal(2' root.Int2String.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfSimpleValues,The following statement contains a magic number: Assert.Equal(2' root.NullableInt2Bool.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfSimpleValues,The following statement contains a magic number: Assert.False(root.NullableInt2Bool[2].HasValue);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfSimpleValuesSkip,The following statement contains a magic number: root.NullableInt2Bool = new Dictionary<int?' bool?> { { 1' true }' { 2' new bool?() } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: root.Int2String.Add(3' "C");
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: Assert.Equal("C"' root.Int2String.GetIncreasingEnumerator(2).Aggregate(""' (current' p) => current + p.Value));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: Assert.Equal("C"' root.Int2String.GetIncreasingEnumerator(3).Aggregate(""' (current' p) => current + p.Value));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: Assert.Equal(""' root.Int2String.GetIncreasingEnumerator(4).Aggregate(""' (current' p) => current + p.Value));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: Assert.Equal("A"' root.Int2String.GetDecreasingEnumerator(2).Aggregate(""' (current' p) => current + p.Value));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: Assert.Equal("CA"' root.Int2String.GetDecreasingEnumerator(3).Aggregate(""' (current' p) => current + p.Value));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,OrderedDictionaryEnumeration,The following statement contains a magic number: Assert.Equal("CA"' root.Int2String.GetDecreasingEnumerator(4).Aggregate(""' (current' p) => current + p.Value));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanQuerySizeOfKeyInOrderedDictionary,The following statement contains a magic number: root.Int2String.Add(3' "C");
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanQuerySizeOfKeyInOrderedDictionary,The following statement contains a magic number: var size = qs.QuerySizeByKey(3);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanQuerySizeOfKeyInOrderedDictionary,The following statement contains a magic number: Assert.Equal(3u' size.Key);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanQuerySizeOfKeyInOrderedDictionary,The following statement contains a magic number: Assert.Equal(2u' size.Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanQuerySizeOfKeyInOrderedDictionary,The following statement contains a magic number: Assert.Equal(3u' size.Key);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanQuerySizeOfKeyInOrderedDictionary,The following statement contains a magic number: Assert.Equal(2u' size.Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfComplexValues,The following statement contains a magic number: root.String2Person = new Dictionary<string' Person> { { "Boris"' new Person { Name = "Boris"' Age = 35 } }' { "null"' null } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfComplexValues,The following statement contains a magic number: Assert.Equal(2' root.String2Person.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfComplexValues,The following statement contains a magic number: Assert.Equal(35u' root.String2Person["Boris"].Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionariesOfComplexValuesSkip,The following statement contains a magic number: root.String2Person = new Dictionary<string' Person> { { "Boris"' new Person { Name = "Boris"' Age = 35 } }' { "null"' null } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: root.Bytes2Bytes.Add(new byte[] { 2 }' new byte[] { 2' 2 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: root.Bytes2Bytes.Add(new byte[] { 2 }' new byte[] { 2' 2 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: root.Bytes2Bytes.Add(new byte[] { 2 }' new byte[] { 2' 2 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: AssertEqual(new KeyValuePair<byte[]' byte[]>(new byte[] { 2 }' new byte[] { 2' 2 })' root.Bytes2Bytes.Skip(2).First());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: AssertEqual(new KeyValuePair<byte[]' byte[]>(new byte[] { 2 }' new byte[] { 2' 2 })' root.Bytes2Bytes.Skip(2).First());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: AssertEqual(new KeyValuePair<byte[]' byte[]>(new byte[] { 2 }' new byte[] { 2' 2 })' root.Bytes2Bytes.Skip(2).First());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DictionaryOfByteArrayKeysAndValues,The following statement contains a magic number: AssertEqual(new KeyValuePair<byte[]' byte[]>(new byte[] { 2 }' new byte[] { 2' 2 })' root.Bytes2Bytes.Skip(2).First());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InheritanceSupportedWithAutoRegistration,The following statement contains a magic number: var sl1 = new Person { Name = "Poor Slave"' Age = 18 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InheritanceSupportedWithAutoRegistration,The following statement contains a magic number: var sl2 = new Person { Name = "Poor Poor Slave"' Age = 17 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InheritanceSupportedWithAutoRegistration,The following statement contains a magic number: root.String2Person.Add("master"' new Manager { Name = "Chief"' Age = 19' Managing = new List<Person> { sl1' sl2 } });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,InheritanceSupportedWithAutoRegistration,The following statement contains a magic number: Assert.Equal(3' dict.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,NotStoredProperties,The following statement contains a magic number: tr.Store(new PersonWithNonStoredProperty { Name = "Bobris"' Age = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,SupportForStorageOfPrivateProperties,The following statement contains a magic number: tr.Store(new PersonWithPrivateAge { Name = "Bobris"' PublicAge = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,SupportForStorageOfPrivateProperties,The following statement contains a magic number: Assert.Equal(35u' p.PublicAge);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanGetSizeOfObject,The following statement contains a magic number: var oid = tr.StoreAndFlush(new Person { Name = "Bobris"' Age = 35 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanGetSizeOfObject,The following statement contains a magic number: Assert.Equal(2u' s.Key);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanGetSizeOfObject,The following statement contains a magic number: Assert.Equal(10u' s.Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,UpgradeWithDictString2ListOfUInt64Works,The following statement contains a magic number: d.Dict.Add("A"' new List<ulong> { 1' 2 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,UpgradeWithDictInt2StringWorks,The following statement contains a magic number: d.Dict.Add(10' "A");
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BiggerTransactionWithGC,The following statement contains a magic number: i == 90
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BiggerTransactionWithGC,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ForbidToStoreDateTimeUnknownKindInKey,The following statement contains a magic number: var unknownKind = new DateTime(2013' 1' 25' 22' 05' 00);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ForbidToStoreDateTimeUnknownKindInKey,The following statement contains a magic number: var unknownKind = new DateTime(2013' 1' 25' 22' 05' 00);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ForbidToStoreDateTimeUnknownKindInKey,The following statement contains a magic number: var unknownKind = new DateTime(2013' 1' 25' 22' 05' 00);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,ForbidToStoreDateTimeUnknownKindInKey,The following statement contains a magic number: var unknownKind = new DateTime(2013' 1' 25' 22' 05' 00);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CC1Upgrade,The following statement contains a magic number: d2.Dict2[CC1V1T3.Item1] = 10;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CC1Upgrade,The following statement contains a magic number: Assert.Equal(10' d2.Dict2[CC1V2T3.Item1]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: d.Dict[1] = new DBIndirect<Person>(new Person { Name = "A"' Age = 10 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: d.Dict[2] = new DBIndirect<Person>(new Person { Name = "B"' Age = 20 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: d.Dict[2] = new DBIndirect<Person>(new Person { Name = "B"' Age = 20 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: Assert.Equal(2' tr.Enumerate<Person>().Count());
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: Assert.Equal(10u' d.Dict[1].Value.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: Assert.Equal("B"' d.Dict[2].Value.Name);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: tr.Delete(d.Dict[2].Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: Assert.Equal(10u' d.Dict[1].Value.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,BasicIndirectInDict,The following statement contains a magic number: Assert.Null(d.Dict[2].Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteIndirectWithoutMaterialization,The following statement contains a magic number: d.Dict[1] = new DBIndirect<Person>(new Person { Name = "A"' Age = 10 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteIndirectWithoutMaterialization,The following statement contains a magic number: d.Dict[2] = new DBIndirect<Person>(new Person { Name = "B"' Age = 20 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteIndirectWithoutMaterialization,The following statement contains a magic number: d.Dict[2] = new DBIndirect<Person>(new Person { Name = "B"' Age = 20 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteIndirectWithoutMaterialization,The following statement contains a magic number: tr.Delete(d.Dict[2]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteIndirectWithoutMaterialization,The following statement contains a magic number: Assert.Equal(10u' d.Dict[1].Value.Age);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteIndirectWithoutMaterialization,The following statement contains a magic number: Assert.Null(d.Dict[2].Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,RemoveRange,The following statement contains a magic number: i <= 5
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CheckSingletonTypes,The following statement contains a magic number: Assert.Equal(2' a.Length);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,UpgradeNestedMapWithEnumWorks,The following statement contains a magic number: wfd.Items[0] = new Dictionary<MapEnum' int> { { MapEnum.A' 11 } };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,UpgradeNestedMapWithEnumWorks,The following statement contains a magic number: Assert.Equal(11' wfd.Items[0][MapEnumEx.A]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanStoreObjectWithIndexer,The following statement contains a magic number: Assert.Equal("evvy"' t[12]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,LoopsThroughAllItemsEvenIfDeleteIsPerformed,The following statement contains a magic number: sd[2] = "c";
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,LoopsThroughAllItemsEvenIfDeleteIsPerformed,The following statement contains a magic number: Assert.Equal(3' sd.Count);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanRemoveRangeOfCompoundKeys,The following statement contains a magic number: sd[new LogId() { Key = "key"' DateTime = DateTime.UtcNow.AddSeconds(2)' CollisionId = 0 }] = "c";
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CanRemoveRangeOfCompoundKeys,The following statement contains a magic number: Assert.Equal(3' deleted);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CannotStoreDateTimeKindUnspecified,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() =>             {                 using (var tr = _db.StartTransaction())                 {                     var t = tr.Singleton<TimeIndex>().Items;                     var unspecifiedKindDate = new DateTime(2015' 1' 1' 1' 1' 1' DateTimeKind.Unspecified);                     t[new TimeIndex.TimeIndexKey { Time = unspecifiedKindDate }] = 15;                     tr.Commit();                 }             });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,CannotStoreDateTimeKindUnspecified,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() =>             {                 using (var tr = _db.StartTransaction())                 {                     var t = tr.Singleton<TimeIndex>().Items;                     var unspecifiedKindDate = new DateTime(2015' 1' 1' 1' 1' 1' DateTimeKind.Unspecified);                     t[new TimeIndex.TimeIndexKey { Time = unspecifiedKindDate }] = 15;                     tr.Commit();                 }             });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationBasics,The following statement contains a magic number: i <= 9
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: i <= 9
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: e.Position = 2;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: Assert.Equal(res.Length' (int)(e.Position - 2));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: Assert.Equal(result.Substring(Math.Min(result.Length' 2))' res);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: e.Position = 2;
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: Assert.Equal(res.Length' (int)(e.Position - 2));
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,AdvancedIterationSeeks,The following statement contains a magic number: Assert.Equal(result.Substring(0' Math.Max(0' result.Length - 2))' res);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,NotMaterializingDict2,The following statement contains a magic number: Assert.Equal(101UL' att[key]);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,NullableWorks,The following statement contains a magic number: tr.Store(new WithNullable { FieldInt = 10 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,NullableWorks,The following statement contains a magic number: Assert.Equal(10' v.FieldInt.Value);
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,NullableSkippingWorks,The following statement contains a magic number: tr.Store(new WithNullable { FieldInt = 10 });
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteAllWorks,The following statement contains a magic number: var sl1 = new Person { Name = "Poor Slave"' Age = 18 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteAllWorks,The following statement contains a magic number: var sl2 = new Person { Name = "Poor Poor Slave"' Age = 17 };
Magic Number,BTDBTest,ObjectDbTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ObjectDBTest.cs,DeleteAllWorks,The following statement contains a magic number: root.String2Person.Add("master"' new Manager { Name = "Chief"' Age = 19' Managing = new List<Person> { sl1' sl2 } });
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.SByteField = -10;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ByteField = 10;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ShortField = -1000;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.UShortField = 1000;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.IntField = -100000;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.UIntField = 100000;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.LongField = -1000000000000;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ULongField = 1000000000000;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DoubleField = 12.34;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.FloatField = -12.34f;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DecimalField = 123456.789m;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.DateTimeField = new DateTime(2000' 1' 1' 12' 34' 56' DateTimeKind.Local);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.TimeSpanField = new TimeSpan(1' 2' 3' 4);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.TimeSpanField = new TimeSpan(1' 2' 3' 4);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.TimeSpanField = new TimeSpan(1' 2' 3' 4);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ByteArrayField = new byte[] { 0' 1' 2 };
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,FieldsOfVariousTypes,The following statement contains a magic number: o.ByteBufferField = ByteBuffer.NewAsync(new byte[] { 0' 1' 2 }' 1' 1);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.IntList = new List<int> { 5' 10' 2000 };
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,ListOfSimpleValues,The following statement contains a magic number: root.ByteList = new List<byte> { 0' 255 };
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,UpgradeDeletedInlineObjectWorks,The following statement contains a magic number: wfd.C.Type = 2;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,DoubleRefsRelation,The following statement contains a magic number: value.Id = 2;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,DoubleDoubleRefsRelation,The following statement contains a magic number: value.Id = 2;
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,DoubleDoubleRefsRelation,The following statement contains a magic number: value = duoRefsRelation.FindById(2);
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,IterateNullableValues,The following statement contains a magic number: table.Insert(new WithNullable { FieldInt = 10 });
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,IterateRelationWithReusedObjects,The following statement contains a magic number: table.Insert(new WithReusedObjects { Id = 2' BlobsIDict = new Dictionary<Blob' Blob> { [new Blob()] = new Blob()' [new Blob { Name = "A" }] = new Blob() } });
Magic Number,BTDBTest,ODBIteratorTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ODBIteratorTest.cs,IterateRelationWithReusedObjects,The following statement contains a magic number: table.Insert(new WithReusedObjects { Id = 3' BlobsDict = new Dictionary<Blob' Blob> { [new Blob()] = new Blob()' [new Blob { Name = "A" }] = new Blob() } });
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,PackVUIntIsOrderableCore,The following statement contains a magic number: var buf1 = new byte[9];
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,PackVUIntIsOrderableCore,The following statement contains a magic number: var buf2 = new byte[9];
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GenerateULongs,The following statement contains a magic number: yield return 2;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GenerateULongs,The following statement contains a magic number: yield return 123456789UL;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GenerateULongs,The following statement contains a magic number: yield return 123456789123456789UL;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,PackVIntIsOrderableForPositiveCore,The following statement contains a magic number: var buf1 = new byte[9];
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,PackVIntIsOrderableForPositiveCore,The following statement contains a magic number: var buf2 = new byte[9];
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GeneratePositiveLongs,The following statement contains a magic number: yield return 2;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GeneratePositiveLongs,The following statement contains a magic number: yield return 123456789L;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GeneratePositiveLongs,The following statement contains a magic number: yield return 123456789123456789L;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,PackVIntIsOrderableForNegativeCore,The following statement contains a magic number: var buf1 = new byte[9];
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,PackVIntIsOrderableForNegativeCore,The following statement contains a magic number: var buf2 = new byte[9];
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GenerateNegativeLongs,The following statement contains a magic number: yield return -2;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GenerateNegativeLongs,The following statement contains a magic number: yield return -123456789L;
Magic Number,BTDBTest,PackUnpackTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PackUnpackTest.cs,GenerateNegativeLongs,The following statement contains a magic number: yield return -123456789123456789L;
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,EmptyExcludeIsNoop,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TwoDisconnectedIncludesMerge,The following statement contains a magic number: Assert.True(l.TryInclude(2' 1));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeIncludesMerge,The following statement contains a magic number: l.TryInclude(2' 1);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping1,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping1,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping1,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping1,The following statement contains a magic number: Assert.False(l.TryInclude(1' 3));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping2,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping2,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping2,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping2,The following statement contains a magic number: Assert.False(l.TryInclude(2' 3));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping2,The following statement contains a magic number: Assert.False(l.TryInclude(2' 3));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping3,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping3,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping3,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ThreeMergeOverlaping3,The following statement contains a magic number: Assert.False(l.TryInclude(1' 4));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithoutMerge,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithoutMerge,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithoutMerge,The following statement contains a magic number: l.TryInclude(8' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithoutMerge,The following statement contains a magic number: l.TryInclude(8' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithoutMerge,The following statement contains a magic number: Assert.True(l.TryInclude(0' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithMerge,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithMerge,The following statement contains a magic number: l.TryInclude(4' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithMerge,The following statement contains a magic number: l.TryInclude(8' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithMerge,The following statement contains a magic number: l.TryInclude(8' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertAtBeginingWithMerge,The following statement contains a magic number: Assert.True(l.TryInclude(0' 4));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertBeforeLastWithMerge,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertBeforeLastWithMerge,The following statement contains a magic number: l.TryInclude(8' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertBeforeLastWithMerge,The following statement contains a magic number: l.TryInclude(8' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertBeforeLastWithMerge,The following statement contains a magic number: Assert.False(l.TryInclude(4' 5));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,InsertBeforeLastWithMerge,The following statement contains a magic number: Assert.False(l.TryInclude(4' 5));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes,The following statement contains a magic number: Assert.False(l.TryInclude(5' 390));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes,The following statement contains a magic number: Assert.False(l.TryInclude(5' 390));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes2,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes2,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes2,The following statement contains a magic number: i < 100
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes2,The following statement contains a magic number: Assert.False(l.TryInclude(7' 388));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ALotsOfIncludes2,The following statement contains a magic number: Assert.False(l.TryInclude(7' 388));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromStart,The following statement contains a magic number: l.TryInclude(0' 4);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromStart,The following statement contains a magic number: Assert.True(l.TryExclude(0' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromStartOverlap,The following statement contains a magic number: l.TryInclude(1' 3);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromStartOverlap,The following statement contains a magic number: Assert.False(l.TryExclude(0' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromEnd,The following statement contains a magic number: l.TryInclude(0' 4);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromEnd,The following statement contains a magic number: Assert.True(l.TryExclude(2' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromEnd,The following statement contains a magic number: Assert.True(l.TryExclude(2' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromEndOverlap,The following statement contains a magic number: l.TryInclude(0' 3);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromEndOverlap,The following statement contains a magic number: Assert.False(l.TryExclude(2' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeFromEndOverlap,The following statement contains a magic number: Assert.False(l.TryExclude(2' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeSplitRange,The following statement contains a magic number: l.TryInclude(0' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeSplitRange,The following statement contains a magic number: Assert.True(l.TryExclude(3' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,ExcludeSplitRange,The following statement contains a magic number: Assert.True(l.TryExclude(3' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude,The following statement contains a magic number: i < 10
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude,The following statement contains a magic number: Assert.False(l.TryExclude(5' 30));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude,The following statement contains a magic number: Assert.False(l.TryExclude(5' 30));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude2,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude2,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude2,The following statement contains a magic number: i < 10
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude2,The following statement contains a magic number: Assert.False(l.TryExclude(24' 10));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude2,The following statement contains a magic number: Assert.False(l.TryExclude(24' 10));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude3,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude3,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude3,The following statement contains a magic number: i < 10
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude3,The following statement contains a magic number: Assert.False(l.TryExclude(24' 20));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude3,The following statement contains a magic number: Assert.False(l.TryExclude(24' 20));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude4,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude4,The following statement contains a magic number: Assert.True(l.TryInclude(i * 4' 2));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude4,The following statement contains a magic number: i < 10
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude4,The following statement contains a magic number: Assert.False(l.TryExclude(16' 17));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,SpanExclude4,The following statement contains a magic number: Assert.False(l.TryExclude(16' 17));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,CloneIsEqual,The following statement contains a magic number: l.TryInclude(10' 11);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,CloneIsEqual,The following statement contains a magic number: l.TryInclude(10' 11);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,CloneAndClearWorks,The following statement contains a magic number: l.TryInclude(10' 11);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,CloneAndClearWorks,The following statement contains a magic number: l.TryInclude(10' 11);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: l.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: l.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: l.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: l.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: Assert.False(l.TryFindLenAndRemove(15' out pos));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: Assert.True(l.TryFindLenAndRemove(5' out pos));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: Assert.Equal(5ul' pos);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: Assert.True(l.TryFindLenAndRemove(10' out pos));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: Assert.Equal(15ul' pos);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemoveWholeRange,The following statement contains a magic number: Assert.True(l.TryFindLenAndRemove(2' out pos));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: l.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: l.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: l.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: l.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: l.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: Assert.True(l.TryFindLenAndRemove(3' out pos));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: Assert.Equal(5ul' pos);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: Assert.True(l.TryFindLenAndRemove(3' out pos));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,TryFindAndRemovePartRange,The following statement contains a magic number: Assert.Equal(15ul' pos);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l1.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l1.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l1.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l1.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l1.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l2.TryInclude(6' 3);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l2.TryInclude(6' 3);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l2.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,UnmergeInPlaceWorks,The following statement contains a magic number: l2.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: l1.TryInclude(0' 2);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: l1.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: l1.TryInclude(5' 5);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: l1.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: l1.TryInclude(15' 10);
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(25u' l1.FindFreeSizeAfter(1' 6));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(25u' l1.FindFreeSizeAfter(1' 6));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(10u' l1.FindFreeSizeAfter(1' 4));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(10u' l1.FindFreeSizeAfter(1' 4));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(2u' l1.FindFreeSizeAfter(1' 3));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(2u' l1.FindFreeSizeAfter(1' 3));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(12u' l1.FindFreeSizeAfter(12' 1));
Magic Number,BTDBTest,PtrLenListTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\PtrLenListTest.cs,FindFreeSizeAfterWorks,The following statement contains a magic number: Assert.Equal(12u' l1.FindFreeSizeAfter(12' 1));
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var s = new byte[] { 1' 2' 3' 1' 2' 3' 1' 2' 3 };
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var s = new byte[] { 1' 2' 3' 1' 2' 3' 1' 2' 3 };
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var s = new byte[] { 1' 2' 3' 1' 2' 3' 1' 2' 3 };
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var s = new byte[] { 1' 2' 3' 1' 2' 3' 1' 2' 3 };
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var s = new byte[] { 1' 2' 3' 1' 2' 3' 1' 2' 3 };
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var s = new byte[] { 1' 2' 3' 1' 2' 3' 1' 2' 3 };
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: var t = new byte[10];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,Basic,The following statement contains a magic number: Assert.Equal(7' r);
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RandomData,The following statement contains a magic number: new Random(1234567).NextBytes(s);
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RepeatingData,The following statement contains a magic number: var s = new byte[len * 10];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RepeatingData,The following statement contains a magic number: s = new byte[len * 2];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RepeatingData,The following statement contains a magic number: s = new byte[len * 2 + len / 2];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RepeatingData,The following statement contains a magic number: s = new byte[len * 2 + len / 2];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RoundTrip,The following statement contains a magic number: var compressed = new byte[(long)source.Length * 6 / 5 + 32];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RoundTrip,The following statement contains a magic number: var compressed = new byte[(long)source.Length * 6 / 5 + 32];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RoundTrip,The following statement contains a magic number: var compressed = new byte[(long)source.Length * 6 / 5 + 32];
Magic Number,BTDBTest,SnappyTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\SnappyTest.cs,RoundTrip,The following statement contains a magic number: compressed = new byte[compressedLength / 2];
Magic Number,BTDBTest,StreamLayerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\StreamLayerTest.cs,StreamLayerTest,The following statement contains a magic number: s.WriteByte(11);
Magic Number,BTDBTest,StreamLayerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\StreamLayerTest.cs,ReadingStreamManaged,The following statement contains a magic number: Assert.Equal(11' buff[0]);
Magic Number,BTDBTest,StreamLayerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\StreamLayerTest.cs,ReadingStreamManaged,The following statement contains a magic number: Assert.Equal(0' p.Read(buff' 10));
Magic Number,BTDBTest,StreamLayerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\StreamLayerTest.cs,ReadingStreamNatively,The following statement contains a magic number: Assert.Equal(11' buff[0]);
Magic Number,BTDBTest,StreamLayerTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\StreamLayerTest.cs,ReadingStreamNatively,The following statement contains a magic number: Assert.Equal(0' p.Read(buff' 10));
Magic Number,BTDBTest,TcpipClientServerChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TcpipClientServerChannelTest.cs,ConnectNowhereFails,The following statement contains a magic number: Assert.True(e.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,BTDBTest,TcpipClientServerChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TcpipClientServerChannelTest.cs,ConnectClientToServerClientDisconnects,The following statement contains a magic number: Assert.True(e.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,BTDBTest,TcpipClientServerChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TcpipClientServerChannelTest.cs,ConnectClientToServerClientDisconnects,The following statement contains a magic number: Assert.True(e1.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,BTDBTest,TcpipClientServerChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TcpipClientServerChannelTest.cs,ConnectClientToServerClientDisconnects,The following statement contains a magic number: Assert.True(e2.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,BTDBTest,TcpipClientServerChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TcpipClientServerChannelTest.cs,ConnectClientToServerServerDisconnects,The following statement contains a magic number: Assert.True(e.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,BTDBTest,TcpipClientServerChannelTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TcpipClientServerChannelTest.cs,ConnectClientToServerServerDisconnects,The following statement contains a magic number: Assert.True(e2.WaitOne(TimeSpan.FromSeconds(10)));
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeInt,The following statement contains a magic number: var storedDescriptorCtx = _mapping.StoreNewDescriptors(writer' 12345);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeInt,The following statement contains a magic number: storedDescriptorCtx.StoreObject(writer' 12345);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeInt,The following statement contains a magic number: Assert.Equal(12345' obj);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue((byte)42);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue((sbyte)-20);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue((short)-1234);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue((ushort)1234);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue((uint)123456789);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue(-123456789012L);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue(123456789012UL);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue(new Version(4'3'2'1));
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue(new Version(4'3'2'1));
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleTypes,The following statement contains a magic number: CanSerializeSimpleValue(new Version(4'3'2'1));
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleDto,The following statement contains a magic number: var value = new SimpleDto { IntField = 42' StringField = "Hello" };
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeSimpleDtoWithoutDefaultConstructor,The following statement contains a magic number: var value = new SimpleDtoWithoutDefaultConstructor("Hello") { IntField = 42 };
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,ListCanHaveContent,The following statement contains a magic number: TestSerialization(new ClassWithList { List = new List<int> { 1' 2' 3 } });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,ListCanHaveContent,The following statement contains a magic number: TestSerialization(new ClassWithList { List = new List<int> { 1' 2' 3 } });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,DictionaryCanHaveContent,The following statement contains a magic number: TestSerialization(new ClassWithDict { Dict = new Dictionary<int' string> { { 1' "a" }' { 2' "b" }' { 3' "c" } } });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,DictionaryCanHaveContent,The following statement contains a magic number: TestSerialization(new ClassWithDict { Dict = new Dictionary<int' string> { { 1' "a" }' { 2' "b" }' { 3' "c" } } });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeSimpleDtoToDynamic,The following statement contains a magic number: var value = new SimpleDto { IntField = 42' StringField = "Hello" };
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeListToDynamic,The following statement contains a magic number: var value = new List<SimpleDto> { new SimpleDto { IntField = 42' StringField = "Hello" } };
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeDictionaryToDynamic,The following statement contains a magic number: var value = new Dictionary<int' SimpleDto> { { 10' new SimpleDto { IntField = 42' StringField = "Hello" } } };
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeDictionaryToDynamic,The following statement contains a magic number: var value = new Dictionary<int' SimpleDto> { { 10' new SimpleDto { IntField = 42' StringField = "Hello" } } };
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeDictionaryToDynamic,The following statement contains a magic number: Assert.Equal(value[10].IntField' obj[10].IntField);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeDictionaryToDynamic,The following statement contains a magic number: Assert.Equal(value[10].IntField' obj[10].IntField);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeDictionaryToDynamic,The following statement contains a magic number: Assert.Equal(value[10].StringField' obj[10].StringField);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanDeserializeDictionaryToDynamic,The following statement contains a magic number: Assert.Equal(value[10].StringField' obj[10].StringField);
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,DictionaryAsIfaceCanHaveContent,The following statement contains a magic number: TestSerialization(new ClassWithIDict             {                 Dict = new Dictionary<Guid' IList<SimpleDto>>                 {                     { Guid.NewGuid()' new List<SimpleDto> { new SimpleDto {IntField = 1'StringField = "a" } } }'                     { Guid.NewGuid()' new List<SimpleDto> { new SimpleDto {IntField = 2'StringField = "b" } } }'                     { Guid.NewGuid()' new List<SimpleDto> { new SimpleDto {IntField = 3'StringField = "c" } } }                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,DictionaryAsIfaceCanHaveContent,The following statement contains a magic number: TestSerialization(new ClassWithIDict             {                 Dict = new Dictionary<Guid' IList<SimpleDto>>                 {                     { Guid.NewGuid()' new List<SimpleDto> { new SimpleDto {IntField = 1'StringField = "a" } } }'                     { Guid.NewGuid()' new List<SimpleDto> { new SimpleDto {IntField = 2'StringField = "b" } } }'                     { Guid.NewGuid()' new List<SimpleDto> { new SimpleDto {IntField = 3'StringField = "c" } } }                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeGenericType,The following statement contains a magic number: TestSerialization(new GenericClass<int> { Value = 42 });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeIOrderedDictionaryType,The following statement contains a magic number: TestSerialization(new ClassWithIOrderedDictionary             {                 IOrderedDictionary = new DummyOrderedDictionary<int' int>                 {                     [1] = 2'                     [2] = 3'                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeIOrderedDictionaryType,The following statement contains a magic number: TestSerialization(new ClassWithIOrderedDictionary             {                 IOrderedDictionary = new DummyOrderedDictionary<int' int>                 {                     [1] = 2'                     [2] = 3'                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeIOrderedDictionaryType,The following statement contains a magic number: TestSerialization(new ClassWithIOrderedDictionary             {                 IOrderedDictionary = new DummyOrderedDictionary<int' int>                 {                     [1] = 2'                     [2] = 3'                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedList,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new List<int>                 {                     1'2'3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedList,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new List<int>                 {                     1'2'3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedDictionary,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new Dictionary<int' int>                 {                     [1] = 2'                     [2] = 3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedDictionary,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new Dictionary<int' int>                 {                     [1] = 2'                     [2] = 3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedDictionary,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new Dictionary<int' int>                 {                     [1] = 2'                     [2] = 3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedCustomList,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new MyList<int>                 {                     1'2'3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedCustomList,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new MyList<int>                 {                     1'2'3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedIOrderedDictionary,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new DummyOrderedDictionary<int' int>                 {                     [1] = 2'                     [2] = 3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedIOrderedDictionary,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new DummyOrderedDictionary<int' int>                 {                     [1] = 2'                     [2] = 3                 }             });
Magic Number,BTDBTest,TypeSerializersTest,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\TypeSerializersTest.cs,CanSerializeBoxedIOrderedDictionary,The following statement contains a magic number: TestSerialization(new ClassWithBoxedIEnumerable             {                 Value = new DummyOrderedDictionary<int' int>                 {                     [1] = 2'                     [2] = 3                 }             });
Magic Number,ARTLibTest,CursorTests12,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTests12.cs,GetSampleValue,The following statement contains a magic number: i < 12
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,InterestingValues,The following statement contains a magic number: j < 12
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,InterestingValues,The following statement contains a magic number: i < 12
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,CanChangeValues,The following statement contains a magic number: _cursor.Upsert(new byte[] { 2 }' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,CanInsertSecondKey,The following statement contains a magic number: var val2 = GetSampleValue(3).ToArray();
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,CanInsertSecondKey,The following statement contains a magic number: Assert.Equal(2' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SecondUpsertWithSameKeyJustOverwriteValue,The following statement contains a magic number: var val2 = GetSampleValue(3).ToArray();
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: i < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: key[0] = 20;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: Assert.Equal(20 + 1 + i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: Assert.Equal(256 + i + 1' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: i < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: i < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: key[0] = 20;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: Assert.Equal(256 + i + 1' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: i < 256
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: var key = new byte[10];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: var keyBuffer = new byte[20];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 10)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 1;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 4
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 4;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 4;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 2;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 2;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 5)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 2)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 16;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 16;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 8;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 8;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 32 + 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 32 + 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 240;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 240;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 42;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 42;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 255
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 24;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 24;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 100;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 100;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 5;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 5;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 2)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i >= 253
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i >= 230
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: var key = new byte[10];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: var keyBuffer = new byte[20];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 10)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[5] = 1;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[5] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 4
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 4;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 4;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 2;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 2;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 3;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 3;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 5)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 2)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 16;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 16;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 8;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 8;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 15;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 15;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 32 + 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 32 + 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 240;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 240;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 42;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 42;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 47;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 47;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 255
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 24;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 24;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 9)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 100;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 100;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.False(_cursor.FindLast(key.AsSpan(0' 8)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 254;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[6] = 254;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 6)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[5] = 5;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[5] = 5;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 2)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[5] = 0;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i >= 253
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i >= 230
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = (byte)i;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.True(_cursor.FindLast(key.AsSpan(0' 7)));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindExactSpecialCases,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindExactSpecialCases,The following statement contains a magic number: var keyBuffer = new byte[3];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,FindExactSpecialCases,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 41
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 40
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 80
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 74
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 4
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 41
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 41
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 80
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 75
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 2
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: Assert.Equal(13 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 14
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 41
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: Assert.Equal(38 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 39
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 80
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: Assert.Equal(73 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 74
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(2 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(14 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 41
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(39 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 40
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 80
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(74 - i' _cursor.CalcIndex());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 75
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 3
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 15
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 40
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 240
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,SingleOnlyKeyEraseWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: i < 2
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: i < 4
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: Assert.Equal(2' _cursor.EraseTo(c2));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: Assert.Equal(4' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: i < 2
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: i < 16
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: key[1] = 5;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: Assert.Equal(3' _cursor.EraseTo(c2));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: Assert.Equal(15' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: i < 2
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: key[1] = (byte)(i * 2);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: i < 48
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: key[1] = 8;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: Assert.Equal(3' _cursor.EraseTo(c2));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: Assert.Equal(47' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: i < 2
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: key[1] = (byte)(i * 2);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: i < 120
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: key[1] = 10;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: Assert.Equal(3' _cursor.EraseTo(c2));
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: Assert.Equal(119' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: var key = new byte[3];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[1] = (byte)(i * 2);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = (byte)(i + 5);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = (byte)(i + 5);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[1] = 2;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = 6;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = 6;
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: Assert.Equal(5' key[2]);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: Assert.Equal(5' key[2]);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[1] = (byte)(i * 2);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: Assert.Equal((count - 1) * 2' key[1]);
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,EraseToWithSnapshot,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: j <= 255
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: i <= 255
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: Assert.Equal(65792 - erased' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: Assert.Equal(65792' snapshot.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: j <= 255
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: i <= 255
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: j <= 40
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: i <= 40
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: Assert.Equal(992 - erased' _root.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: Assert.Equal(992' snapshot.GetCount());
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: j <= 40
Magic Number,ARTLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: i <= 40
Magic Number,ARTLibTest,CursorTestsV,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\CursorTestsV.cs,GetSampleValue,The following statement contains a magic number: len = 100;
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,HGlobalAllocatorReturnsPointerCanWriteInto,The following statement contains a magic number: var ptr = allocator.Allocate((IntPtr)4);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,MallocAllocatorReturnsPointerCanWriteInto,The following statement contains a magic number: var ptr = allocator.Allocate((IntPtr)4);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,LeakDetectorWorks,The following statement contains a magic number: var ptr1 = allocator.Allocate((IntPtr)4);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,LeakDetectorWorks,The following statement contains a magic number: var ptr2 = allocator.Allocate((IntPtr)8);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,LeakDetectorWorks,The following statement contains a magic number: var ptr3 = allocator.Allocate((IntPtr)16);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,LeakDetectorWorks,The following statement contains a magic number: Assert.Equal(2u' leaks.Count);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,LeakDetectorWorks,The following statement contains a magic number: Assert.Equal(20ul' leaks.Size);
Magic Number,ARTLibTest,OffHeapAllocatorTests,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\ARTLibTests\OffHeapAllocatorTests.cs,LeakDetectorDisposesLeaks,The following statement contains a magic number: allocator.Allocate((IntPtr)4);
Magic Number,BTreeLibTest,CursorTests12,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTests12.cs,GetSampleValue,The following statement contains a magic number: i < 12
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,InterestingValues,The following statement contains a magic number: j < 12
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,InterestingValues,The following statement contains a magic number: i < 12
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,CanChangeValues,The following statement contains a magic number: _cursor.Upsert(new byte[] {2}' val);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,CanInsertSecondKey,The following statement contains a magic number: var val2 = GetSampleValue(3).ToArray();
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,CanInsertSecondKey,The following statement contains a magic number: Assert.Equal(2' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SecondUpsertWithSameKeyJustOverwriteValue,The following statement contains a magic number: var val2 = GetSampleValue(3).ToArray();
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: i < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: key[0] = 20;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: Assert.Equal(256 + i + 1' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: Assert.Equal(20 + 1 + i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInSingleTransaction,The following statement contains a magic number: i < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: i < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: key[0] = 20;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: Assert.Equal(256 + i + 1' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: j < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MultipleInsertsInMultipleTransactions,The following statement contains a magic number: i < 256
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,ALotOfInsertsInIncreasingOrderWorks,The following statement contains a magic number: var key = new byte[4];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,ALotOfInsertsInIncreasingOrderWorks,The following statement contains a magic number: i < 100000
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,ALotOfInsertsInIncreasingOrderWorks,The following statement contains a magic number: i < 100000
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SomeInsertsInIncreasingOrderWithSnapshotWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SomeInsertsInIncreasingOrderWithSnapshotWorks,The following statement contains a magic number: i < 200
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: var key = new byte[10];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: var keyBuffer = new byte[20];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 10)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 1;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 0;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 4
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 4;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 4;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 2;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 2;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 5)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 2)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 16
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 16;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 16;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 8;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 8;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 32 + 16
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 32 + 16
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 240;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 240;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 42;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 42;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i < 255
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 24;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 24;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 9)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 100;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 100;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.False(_cursor.FindFirst(key.AsSpan(0' 8)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[6] = 0;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 6)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.Equal(key.AsSpan(0' 7).ToArray()' _cursor.FillByKey(keyBuffer).ToArray());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = 255;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 5;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 5;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[5] = 0;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 2)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i >= 253
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: i >= 230
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: key[9] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindFirstWorks,The following statement contains a magic number: Assert.True(_cursor.FindFirst(key.AsSpan(0' 7)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: var key = new byte[10];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[2] = (byte) (i / 400);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[2] = (byte) (i / 400);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[3] = (byte) (i / 20 % 20);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[3] = (byte) (i / 20 % 20);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[3] = (byte) (i / 20 % 20);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[4] = (byte) (i % 20);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[4] = (byte) (i % 20);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: _cursor.Upsert(key.AsSpan(0' 7)' val);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 8000
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: key[2] = (byte) i;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(i * 400 + 399' _cursor.FindLastWithPrefix(key.AsSpan(0' 3)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(i * 400 + 399' _cursor.FindLastWithPrefix(key.AsSpan(0' 3)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: Assert.Equal(i * 400 + 399' _cursor.FindLastWithPrefix(key.AsSpan(0' 3)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastWorks,The following statement contains a magic number: i < 20
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastPrefixBugFixed,The following statement contains a magic number: var key = new byte[10];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastPrefixBugFixed,The following statement contains a magic number: key[0] = 2;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastPrefixBugFixed,The following statement contains a magic number: i < 4
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindLastPrefixBugFixed,The following statement contains a magic number: Assert.Equal(1' _cursor.FindLastWithPrefix(key.AsSpan(0' 2)));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindExactSpecialCases,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,FindExactSpecialCases,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 41
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 40
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 80
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorks,The following statement contains a magic number: i < 74
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 4
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 16
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 41
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 41
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 80
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MoveNextWorksWithIsLeaf,The following statement contains a magic number: i < 75
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 2
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: Assert.Equal(13 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 14
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 41
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: Assert.Equal(38 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 39
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 80
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: Assert.Equal(73 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorks,The following statement contains a magic number: i < 74
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: var keyBuffer = new byte[4];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(2 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(14 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 41
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(39 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 40
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 80
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: Assert.Equal(74 - i' _cursor.CalcIndex());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,MovePreviousWorksWithIsLeaf,The following statement contains a magic number: i < 75
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 3
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 15
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 40
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SeekIndexWorks,The following statement contains a magic number: i < 240
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,SingleOnlyKeyEraseWorks,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: i < 2
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: i < 4
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: Assert.Equal(2' _cursor.EraseTo(c2));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle4Works,The following statement contains a magic number: Assert.Equal(4' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: i < 2
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: i < 16
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: key[1] = 5;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: Assert.Equal(3' _cursor.EraseTo(c2));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle16Works,The following statement contains a magic number: Assert.Equal(15' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: i < 2
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: key[1] = (byte) (i * 2);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: i < 48
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: key[1] = 8;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: Assert.Equal(3' _cursor.EraseTo(c2));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle48Works,The following statement contains a magic number: Assert.Equal(47' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: i < 2
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: key[1] = (byte) (i * 2);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: i < 120
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: key[1] = 10;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: Assert.Equal(3' _cursor.EraseTo(c2));
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseMiddle256Works,The following statement contains a magic number: Assert.Equal(119' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: var key = new byte[3];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[1] = (byte) (i * 2);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = (byte) (i + 5);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = (byte) (i + 5);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[1] = 2;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = 6;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[2] = 6;
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: Assert.Equal(5' key[2]);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: Assert.Equal(5' key[2]);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: key[1] = (byte) (i * 2);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToOneChild,The following statement contains a magic number: Assert.Equal((count - 1) * 2' key[1]);
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,EraseToWithSnapshot,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: j <= 255
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: i <= 255
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: Assert.Equal(65792 - erased' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: Assert.Equal(65792' snapshot.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: j <= 255
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase256Works,The following statement contains a magic number: i <= 255
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: var key = new byte[2];
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: j <= 40
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: i <= 40
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: Assert.Equal(992 - erased' _root.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: Assert.Equal(992' snapshot.GetCount());
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: j <= 40
Magic Number,BTreeLibTest,CursorTestsBase,D:\research\architectureSmells\repos\Bobris_BTDB\BTDBTest\BTreeLibTests\CursorTestsBase.cs,BigErase48Works,The following statement contains a magic number: i <= 40
