Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DBBenchmark,BtdbTimeTests,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\BTDBTimeTests.cs,Open,The following statement contains a magic number: return (openTime: stopwatch.Elapsed' memorySize: (memFinish - memStart) / 1024);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomData,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomData,The following statement contains a magic number: var key = new byte[rnd.Next(10' 50)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomData,The following statement contains a magic number: var key = new byte[rnd.Next(10' 50)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomData,The following statement contains a magic number: var value = new byte[rnd.Next(50' 500)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomData,The following statement contains a magic number: var value = new byte[rnd.Next(50' 500)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: const int keyCount = 100;
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: var key = new byte[100];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: var value = new byte[100000000];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: key[0] = (byte) (i / 100);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: key[1] = (byte) (i % 100);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: value[100] = (byte) (i / 100);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: value[100] = (byte) (i / 100);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: value[200] = (byte) (i % 100);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateHugeTestData,The following statement contains a magic number: value[200] = (byte) (i % 100);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomKeyValuePair,The following statement contains a magic number: var rnd = new Random(1234);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomKeyValuePair,The following statement contains a magic number: var key = new byte[rnd.Next(5' 20)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomKeyValuePair,The following statement contains a magic number: var key = new byte[rnd.Next(5' 20)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomKeyValuePair,The following statement contains a magic number: var value = new byte[rnd.Next(50' 500)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,CreateRandomKeyValuePair,The following statement contains a magic number: var value = new byte[rnd.Next(50' 500)];
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,OpenSpeedTest,The following statement contains a magic number: Console.WriteLine(                 $"Time to open DB : {statistics.openTime.TotalMilliseconds'15}ms Memory: {statistics.memorySize}KB");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,InsertDataByItemTest,The following statement contains a magic number: Console.WriteLine($"InsertDataByItem: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,InsertItemTest,The following statement contains a magic number: Console.WriteLine($"InsertItem: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,InsertDataTest,The following statement contains a magic number: Console.WriteLine($"InsertData: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,ReadAllDataTest,The following statement contains a magic number: Console.WriteLine($"ReadAllData: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,ReadItemTest,The following statement contains a magic number: Console.WriteLine($"ReadItem: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,HugeTest,The following statement contains a magic number: Console.WriteLine($"Time to create 10GB DB: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,HugeTest,The following statement contains a magic number: Console.WriteLine($"Time to read all values 10GB DB: {timeSpan.TotalMilliseconds'15}ms");
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,Run,The following statement contains a magic number: _testData = CreateRandomData(99999);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,Run,The following statement contains a magic number: ReadItemTest(db' _testData.ToArray()[9999].Key);
Magic Number,DBBenchmark,KeyValueSpeedTest,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\KeyValueSpeedTest.cs,Run,The following statement contains a magic number: ReadItemTest(db' _testData.ToArray()[9999].Key);
Magic Number,DBBenchmark,LightingDbTimeTests,D:\research\architectureSmells\repos\Bobris_BTDB\DBBenchmark\LightingDbTimeTests.cs,Open,The following statement contains a magic number: return (openTime: stopwatch.Elapsed' memorySize: memDif / 1024);
