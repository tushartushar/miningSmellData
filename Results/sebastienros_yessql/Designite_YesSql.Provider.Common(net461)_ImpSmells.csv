Implementation smell,Namespace,Class,File,Method,Description
Complex Method,YesSql.Sql,SqlBuilder,D:\research\architectureSmells\repos1\sebastienros_yessql\src\YesSql.Provider.Common\SqlBuilder.cs,ToSqlString,Cyclomatic complexity of the method is 20
Long Parameter List,YesSql.Provider,BaseDialect,D:\research\architectureSmells\repos1\sebastienros_yessql\src\YesSql.Provider.Common\BaseDialect.cs,GetAddForeignKeyConstraintString,The method has 5 parameters. Parameters: name' srcColumns' destTable' destColumns' primaryKey
Long Parameter List,YesSql.Sql,SqlBuilder,D:\research\architectureSmells\repos1\sebastienros_yessql\src\YesSql.Provider.Common\SqlBuilder.cs,InnerJoin,The method has 5 parameters. Parameters: table' onTable' onColumn' toTable' toColumn
Complex Conditional,YesSql.Provider,BaseDialect,D:\research\architectureSmells\repos1\sebastienros_yessql\src\YesSql.Provider.Common\BaseDialect.cs,GetDistinctOrderBySelectString,The conditional expression  "trimmed != "'" && trimmed != "DESC" && trimmed != "ASC" && !select.Contains(o)"  is complex.
Magic Number,YesSql.Provider,BaseDialect,D:\research\architectureSmells\repos1\sebastienros_yessql\src\YesSql.Provider.Common\BaseDialect.cs,GetAddForeignKeyConstraintString,The following statement contains a magic number: var res = new StringBuilder(200);
Missing Default,YesSql.Provider,BaseDialect,D:\research\architectureSmells\repos1\sebastienros_yessql\src\YesSql.Provider.Common\BaseDialect.cs,GetSqlValue,The following switch statement is missing a default case: switch (Convert.GetTypeCode(value))              {                  case TypeCode.Object:                  case TypeCode.String:                  case TypeCode.Char:                      return Quote(value.ToString());                  case TypeCode.Boolean:                      return (bool)value ? "1" : "0";                  case TypeCode.SByte:                  case TypeCode.Int16:                  case TypeCode.UInt16:                  case TypeCode.Int32:                  case TypeCode.UInt32:                  case TypeCode.Int64:                  case TypeCode.UInt64:                  case TypeCode.Single:                  case TypeCode.Double:                  case TypeCode.Decimal:                      return Convert.ToString(value' CultureInfo.InvariantCulture);                  case TypeCode.DateTime:                      return String.Concat("'"' Convert.ToString(value' CultureInfo.InvariantCulture)' "'");              }
