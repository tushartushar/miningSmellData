Implementation smell,Namespace,Class,File,Method,Description
Long Statement,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The length of the statement  "            //        .UsePostgreSql(@"Server=localhost;Port=5432;Database=yessql;User Id=root;Password=Password12!;Maximum Pool Size=1024;NoResetOnClose=true;Enlist=false;Max Auto Prepare=200") " is 182.
Empty Catch Block,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The method has an empty catch block.
Magic Number,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The following statement contains a magic number: i < 10000
Magic Number,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The following statement contains a magic number: Task.Run(async () =>                  {                      for (var i = 0; i < 500; i++)                      {                          await session.Query().For<Person>().With<PersonByName>(x => x.SomeName.StartsWith("Steve100")).ListAsync();                          await session.Query().For<Person>().With<PersonByName>(x => x.SomeName == "Steve200").ListAsync();                      }                  }).GetAwaiter().GetResult();
Magic Number,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The following statement contains a magic number: var concurrency = 20;
Magic Number,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The following statement contains a magic number: var MaxTransactions = 50000;
Magic Number,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The following statement contains a magic number: var tasks = Enumerable.Range(1' concurrency).Select(i => Task.Run(async () =>              {                  Console.WriteLine($"Starting thread {i}");                    await Task.Delay(100);                    while (!stopping && Interlocked.Add(ref counter' 1) < MaxTransactions)                  {                      using (var session = store.CreateSession())                      {                          await session.Query().For<Person>().With<PersonByName>(x => x.SomeName.StartsWith("Steve100")).ListAsync();                          await session.Query().For<Person>().With<PersonByName>(x => x.SomeName == "Steve").ListAsync();                          await session.Query().For<Person>().With<PersonByName>().Where(x => x.SomeName == "Steve").ListAsync();                      }                  }              })).ToList();
Magic Number,YesSql.Samples.Gating,Program,D:\research\architectureSmells\repos1\sebastienros_yessql\samples\YesSql.Samples.Gating\Program.cs,Main,The following statement contains a magic number: tasks.Add(Task.Delay(TimeSpan.FromSeconds(3)));
